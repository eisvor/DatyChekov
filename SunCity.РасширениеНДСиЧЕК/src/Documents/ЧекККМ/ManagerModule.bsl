


Функция Расш_ПечатьТоварногоЧекаДляПД(МассивОбъектов, ОбъектыПечати)

	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Чек ККМ'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЧекаККМ_ТоварныйЧекДляПД";

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	Документ.ВидОперации КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА Документ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозврат,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Документ.Организация)
	|		ИНАЧЕ &ТекстИП + ВЫБОР
	|				КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Фамилия, """") = """"
	|					ТОГДА """"
	|				ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Фамилия + &ТекстПробел + ВЫБОР
	|						КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Имя, """") = """"
	|							ТОГДА """"
	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Имя + &ТекстПробел
	|					КОНЕЦ + ВЫБОР
	|						КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Отчество, """") = """"
	|							ТОГДА """"
	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Отчество
	|					КОНЕЦ
	|			КОНЕЦ + """"
	|	КОНЕЦ КАК НаименованиеОрганизации,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Организация,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.КассаККМ,
	|	Документ.КассаККМ.ШиринаЛенты КАК ШиринаЛенты,
	|	Документ.Организация.ИНН КАК ИНН
	|ИЗ
	|	Документ.ЧекККМ КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(, ) КАК ФИОФизЛицСрезПоследнихИП
	|		ПО Документ.Организация = ФИОФизЛицСрезПоследнихИП.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОплата.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ТаблицаОплата.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаОплата.ВидОплаты.ТипОплаты) КАК ПредставлениеТипОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|					И ТаблицаОплата.ВидОплаты.ТипОплаты <> ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные)
	|				ТОГДА ТаблицаОплата.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезналичныхОплат,
	|	СУММА(ТаблицаОплата.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ТаблицаОплата
	|ГДЕ
	|	ТаблицаОплата.Ссылка В(&МассивОбъектов)
	|	И ТаблицаОплата.Ссылка.Проведен
	|	И (НЕ(ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				И ТаблицаОплата.ВидОплаты.ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОплата.Ссылка,
	|	ТаблицаОплата.ВидОплаты.ТипОплаты
	|
	|ИМЕЮЩИЕ
	|	(НЕ СУММА(ТаблицаОплата.Сумма) = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");


	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	УстановитьТекстовыеПараметрыЗапроса(Запрос);

	Результаты = Запрос.ВыполнитьПакет();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЧекККМ.ПФ_MXL_ТоварныйЧекДляПД");

	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнойЧастиОплата = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ПервыйДокумент = Истина;

	Пока ВыборкаПоДокументам.Следующий() Цикл

		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда

			Продолжить;

		КонецЕсли;

		ШиринаЛенты = ВыборкаПоДокументам.ШиринаЛенты;
		Если ШиринаЛенты = 0 Тогда

			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'У кассы %1 документ (%2) не задана ширина ленты'"),
			ВыборкаПоДокументам.КассаККМ,
			ВыборкаПоДокументам.Ссылка
			);

			ОбщегоНазначения.СообщитьПользователю(
			Текст);

			Продолжить;
		КонецЕсли;

		ОбластьШапкаЧека         = Макет.ПолучитьОбласть("ШапкаЧека|_"         + ШиринаЛенты);
		ОбластьТелоЧека          = Макет.ПолучитьОбласть("ТелоЧека|_"          + ШиринаЛенты);
		ОбластьТелоЧекаСкидка    = Макет.ПолучитьОбласть("ТелоЧекаСкидка|_"    + ШиринаЛенты);
		ОбластьТелоЧекаОтступ    = Макет.ПолучитьОбласть("ТелоЧекаОтступ|_"    + ШиринаЛенты);
		ОбластьПодвалЧека        = Макет.ПолучитьОбласть("ПодвалЧека|_"        + ШиринаЛенты);
		ОбластьПодвалЧекаОплата  = Макет.ПолучитьОбласть("ПодвалЧекаОплата|_"  + ШиринаЛенты);
		ОбластьПодвалЧекаОстаток = Макет.ПолучитьОбласть("ПодвалЧекаОстаток|_" + ШиринаЛенты);

		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Если НЕ ПервыйДокумент Тогда

			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		КонецЕсли;

		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Если ВыборкаПоДокументам.ЭтоВозврат Тогда
			СинонимДокумента   = НСтр("ru='Чек (возврат)'");
		Иначе
			СинонимДокумента   = НСтр("ru='Чек'");
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьШапкаЧека.Параметры.Заголовок = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		//#Удаление
		//ОбластьШапкаЧека.Параметры.Организация    = ВыборкаПоДокументам.НаименованиеОрганизации;
		//ОбластьШапкаЧека.Параметры.ИНН            = ВыборкаПоДокументам.ИНН;
		//#КонецУдаления
		//#Вставка
		
		ОбластьШапкаЧека.Параметры.Организация    = ЧекККМ_ПолучитьНаименованиеМагазина.ПолучитьНаименование(ВыборкаПоДокументам.НаименованиеОрганизации);
		//ОбластьШапкаЧека.Параметры.ИНН            = ВыборкаПоДокументам.ИНН;

		//#КонецВставки

		ТабличныйДокумент.Вывести(ОбластьШапкаЧека);

		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;

		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьТелоЧека.Параметры.НаименованиеТовара = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление)
			+ "(" + ВыборкаПоСтрокамТЧ.ЕдиницаИзмерения + ")";
			//#Удаление
			//ОбластьТелоЧека.Параметры.КоличествоЦена     = Формат( ВыборкаПоСтрокамТЧ.Количество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0")
			//+ " х "
			//+ Формат( ВыборкаПоСтрокамТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0"); 
			//#КонецУдаления
			//#Вставка
			ОбластьТелоЧека.Параметры.КоличествоЦена     = Формат( ВыборкаПоСтрокамТЧ.Количество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0")
			+ " х "
			+ Формат( ВыборкаПоСтрокамТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0")
			+ " = "
			+ Формат( ВыборкаПоСтрокамТЧ.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
			//#КонецВставки
			
			КонечнаяСкидка =  ВыборкаПоСтрокамТЧ.Количество *  ВыборкаПоСтрокамТЧ.Цена -  ВыборкаПоСтрокамТЧ.Сумма;
			ТабличныйДокумент.Вывести(ОбластьТелоЧека);
			
			Если КонечнаяСкидка <> 0 Тогда
				ОбластьТелоЧекаСкидка.Параметры.ЗагСкидка = ?(КонечнаяСкидка > 0, "Скидка:", "Надбавка:");
				ОбластьТелоЧекаСкидка.Параметры.Скидка    = Формат(?(КонечнаяСкидка > 0, КонечнаяСкидка, -КонечнаяСкидка), "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
				ТабличныйДокумент.Вывести(ОбластьТелоЧекаСкидка);
			КонецЕсли;
			
			//#Удаление
			//ТабличныйДокумент.Вывести(ОбластьТелоЧекаОтступ);
			//#КонецУдаления
			//#Вставка
			//#КонецВставки 
			
		КонецЦикла;

		// ПОДВАЛ
		ОбластьПодвалЧека.Параметры.Итог = Формат(ВыборкаПоДокументам.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
		ТабличныйДокумент.Вывести(ОбластьПодвалЧека);


		СуммаБезналичныхОплат = 0;
		СуммаОплат = 0;

		// Оплата
		Если ВыборкаПоТабличнойЧастиОплата.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда

			ВыборкаПоОплата = ВыборкаПоТабличнойЧастиОплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоОплата.Следующий() Цикл
				ОбластьПодвалЧекаОплата.Параметры.ТипОплаты = Строка(ВыборкаПоОплата.ПредставлениеТипОплаты) + ":";
				ОбластьПодвалЧекаОплата.Параметры.Оплата = Формат(ВыборкаПоОплата.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
				ТабличныйДокумент.Вывести(ОбластьПодвалЧекаОплата);
				СуммаБезналичныхОплат = СуммаБезналичныхОплат + ВыборкаПоОплата.СуммаБезналичныхОплат;
				СуммаОплат = СуммаОплат + ВыборкаПоОплата.Сумма;
			КонецЦикла;

			Если ВыборкаПоДокументам.ЭтоВозврат Тогда
				СуммаНаличных = ВыборкаПоДокументам.СуммаДокумента - СуммаБезналичныхОплат;
				Если СуммаНаличных > 0  Тогда
					ОбластьПодвалЧекаОплата.Параметры.ТипОплаты = "Наличные: ";
					ОбластьПодвалЧекаОплата.Параметры.Оплата = Формат(СуммаНаличных, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
					ТабличныйДокумент.Вывести(ОбластьПодвалЧекаОплата);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;


		// ПОДПИСИ
		Если ВыборкаПоДокументам.ЭтоВозврат Тогда
			ОбластьПодвалЧекаОстаток.Параметры.Сдача = "0.00";
		Иначе
			ОбластьПодвалЧекаОстаток.Параметры.Сдача = Формат(СуммаОплат - ВыборкаПоДокументам.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
		КонецЕсли;
		//#Удаление
		//ОбластьПодвалЧекаОстаток.Параметры.Сотрудник = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный); 	
		//#КонецУдаления
		//#Вставка
		//#КонецВставки 
		ТабличныйДокумент.Вывести(ОбластьПодвалЧекаОстаток);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);

	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Возврат ТабличныйДокумент;
КонецФункции


&ИзменениеИКонтроль("ТекстПечатиЧекаНаФР")
Функция Расш_ТекстПечатиЧекаНаФР(МассивОбъектов, ШиринаЛенты)
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	Документ.ВидОперации КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА Документ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозврат,
	|	ВЫБОР КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|		ТОГДА ПРЕДСТАВЛЕНИЕ(Документ.Организация)
	|		ИНАЧЕ &ТекстИП +
	|		    ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Фамилия, """") = """"
	|				ТОГДА """"
	|			ИНАЧЕ
	|				ФИОФизЛицСрезПоследнихИП.Фамилия + &ТекстПробел +
	|				ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Имя, """") = """"
	|						ТОГДА """"
	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Имя + &ТекстПробел
	|				КОНЕЦ
	|				+
	|				ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Отчество, """") = """"
	|						ТОГДА """"
	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Отчество
	|				КОНЕЦ
	|			КОНЕЦ
	|			+ """"
	|	КОНЕЦ КАК НаименованиеОрганизации,
	|	ВЫБОР КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Организация,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный
	|ИЗ
	|	Документ.ЧекККМ КАК Документ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних() КАК ФИОФизЛицСрезПоследнихИП
	|ПО
	|	Документ.Организация = ФИОФизЛицСрезПоследнихИП.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка, Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОплата.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ТаблицаОплата.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаОплата.ВидОплаты.ТипОплаты) КАК ПредставлениеТипОплаты,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			И ТаблицаОплата.ВидОплаты.ТипОплаты <> Значение(Перечисление.ТипыОплатЧекаККМ.Наличные)
	|			ТОГДА ТаблицаОплата.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаБезналичныхОплат,
	|	СУММА(ТаблицаОплата.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ТаблицаОплата
	|ГДЕ
	|	ТаблицаОплата.Ссылка В(&МассивОбъектов)
	|	И ТаблицаОплата.Ссылка.Проведен
	|	И НЕ (ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат) И ТаблицаОплата.ВидОплаты.ТипОплаты = Значение(Перечисление.ТипыОплатЧекаККМ.Наличные))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОплата.Ссылка,
	|	ТаблицаОплата.ВидОплаты.ТипОплаты
	|
	|	ИМЕЮЩИЕ
	|		(НЕ СУММА(ТаблицаОплата.Сумма) = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	УстановитьТекстовыеПараметрыЗапроса(Запрос);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ДокументЧекККМ  = Новый ТекстовыйДокумент();

	// Получение макета
	МакетЧекаККМ      = Документы.ЧекККМ.ПолучитьМакет("ЧекПокупателя");
	
	// макет существует только для ленты шириной: 24 32 36 40 48 64
	Если ШиринаЛенты = Неопределено Или ШиринаЛенты = 0 Тогда
		ШиринаЛенты = 32;
	ИначеЕсли ШиринаЛенты <= 24 Тогда
		ШиринаЛенты = 24;
	ИначеЕсли ШиринаЛенты <= 32 Тогда
		ШиринаЛенты = 32;
	ИначеЕсли ШиринаЛенты <= 36 Тогда
		ШиринаЛенты = 36;
	ИначеЕсли ШиринаЛенты <= 40 Тогда
		ШиринаЛенты = 40;
	ИначеЕсли ШиринаЛенты <= 48 Тогда
		ШиринаЛенты = 48;
	Иначе
		ШиринаЛенты = 64;
	КонецЕсли;

	ОбластьШапкаЧека  = МакетЧекаККМ.ПолучитьОбласть("ШапкаЧека"  + ШиринаЛенты);
	ОбластьТелоЧека   = МакетЧекаККМ.ПолучитьОбласть("ТелоЧека"   + ШиринаЛенты);
	ОбластьПодвалЧека = МакетЧекаККМ.ПолучитьОбласть("ПодвалЧека" + ШиринаЛенты);
	ОбластьРазрывЧека = МакетЧекаККМ.ПолучитьОбласть("РазрывЧека" + ШиринаЛенты);
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнойЧастиОплата = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ДокументЧекККМ.Вывести(ОбластьРазрывЧека);
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		Если ВыборкаПоДокументам.ЭтоВозврат Тогда
			СинонимДокумента   = НСтр("ru='Товарный чек (возврат)'");
		Иначе
			СинонимДокумента   = НСтр("ru='Товарный чек'");
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьШапкаЧека.Параметры.Заголовок = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		СведенияОПоставщике = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);
		#Удаление
		ОбластьШапкаЧека.Параметры.ИНН = СведенияОПоставщике.ИНН;
		ОбластьШапкаЧека.Параметры.Организация = ВыборкаПоДокументам.НаименованиеОрганизации; 	
		#КонецУдаления
		#Вставка 
		//ОбластьШапкаЧека.Параметры.ИНН = СведенияОПоставщике.ИНН;
		ОбластьШапкаЧека.Параметры.Организация    = ЧекККМ_ПолучитьНаименованиеМагазина.ПолучитьНаименование(ВыборкаПоДокументам.НаименованиеОрганизации);
	 	#КонецВставки 
		
		ДокументЧекККМ.Вывести(ОбластьШапкаЧека);
		
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьТелоЧека.Параметры.НаименованиеТовара = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			#Удаление 
			ОбластьТелоЧека.Параметры.КоличествоЦена     = Формат(ВыборкаПоСтрокамТЧ.Количество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0")
														+ " х "
														+ Формат(ВыборкаПоСтрокамТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");                                                  
		    #КонецУдаления
			#Вставка
			ОбластьТелоЧека.Параметры.КоличествоЦена     = Формат( ВыборкаПоСтрокамТЧ.Количество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0")
			+ " х "
			+ Формат( ВыборкаПоСтрокамТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0")
			+ " = "
			+ Формат( ВыборкаПоСтрокамТЧ.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
			#КонецВставки
			
			КонечнаяСкидка =  ВыборкаПоСтрокамТЧ.Количество *  ВыборкаПоСтрокамТЧ.Цена -  ВыборкаПоСтрокамТЧ.Сумма;

			Если КонечнаяСкидка <> 0 Тогда
				ОбластьТелоЧека.Параметры.ЗагСкидка = ?(КонечнаяСкидка > 0, НСтр("ru='Скидка:'"), НСтр("ru='Надбавка:'"));
				ОбластьТелоЧека.Параметры.Скидка    = Формат(?(КонечнаяСкидка > 0, КонечнаяСкидка, -КонечнаяСкидка), "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
			Иначе
				ОбластьТелоЧека.Параметры.ЗагСкидка = НСтр("ru=''");
				ОбластьТелоЧека.Параметры.Скидка    = НСтр("ru=''");
			КонецЕсли;
			
			ДокументЧекККМ.Вывести(ОбластьТелоЧека);
			
		КонецЦикла;
		ДокументЧекККМ.УдалитьСтроку(ДокументЧекККМ.КоличествоСтрок());
		
		ОбластьПодвалЧека.Параметры.Итог = Формат(ВыборкаПоДокументам.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
		
		#Удаление
		ОбластьПодвалЧека.Параметры.Сотрудник =  ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		#КонецУдаления
		#Вставка
		Попытка
			ОбластьПодвалЧека.Параметры.Сотрудник =  ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		Исключение	
		КонецПопытки;

		#КонецВставки
		
		ДокументЧекККМ.Вывести(ОбластьПодвалЧека);
		
	КонецЦикла;
	
	СтрокаВозврат = "";
	
	КоличествоСтрок = ДокументЧекККМ.КоличествоСтрок();
	
	Для Индекс = 1 По КоличествоСтрок Цикл
		СтрокаВозврат = СтрокаВозврат + ДокументЧекККМ.ПолучитьСтроку(Индекс); 
		
		Если НЕ Индекс = КоличествоСтрок Тогда
			СтрокаВозврат = СтрокаВозврат + Символы.ПС; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаВозврат
	
КонецФункции




//&ИзменениеИКонтроль("ТекстПечатиЧекаНаФР")
//Функция Расш_ТекстПечатиЧекаНаФР(МассивОбъектов, ШиринаЛенты)

//	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");

//	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	Документ.Ссылка КАК Ссылка,
//	|	Документ.Номер КАК Номер,
//	|	Документ.Дата КАК Дата,
//	|	Документ.Магазин КАК Магазин,
//	|	Документ.ВидОперации КАК ВидОперации,
//	|	ВЫБОР
//	|		КОГДА Документ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
//	|			ТОГДА ИСТИНА
//	|		ИНАЧЕ ЛОЖЬ
//	|	КОНЕЦ КАК ЭтоВозврат,
//	|	ВЫБОР КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
//	|		ТОГДА ПРЕДСТАВЛЕНИЕ(Документ.Организация)
//	|		ИНАЧЕ &ТекстИП +
//	|		    ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Фамилия, """") = """"
//	|				ТОГДА """"
//	|			ИНАЧЕ
//	|				ФИОФизЛицСрезПоследнихИП.Фамилия + &ТекстПробел +
//	|				ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Имя, """") = """"
//	|						ТОГДА """"
//	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Имя + &ТекстПробел
//	|				КОНЕЦ
//	|				+
//	|				ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Отчество, """") = """"
//	|						ТОГДА """"
//	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Отчество
//	|				КОНЕЦ
//	|			КОНЕЦ
//	|			+ """"
//	|	КОНЕЦ КАК НаименованиеОрганизации,
//	|	ВЫБОР КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
//	|		ТОГДА ИСТИНА
//	|		ИНАЧЕ ЛОЖЬ
//	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
//	|	Документ.Организация КАК Организация,
//	|	Документ.СуммаДокумента КАК СуммаДокумента,
//	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
//	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
//	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный
//	|ИЗ
//	|	Документ.ЧекККМ КАК Документ
//	|ЛЕВОЕ СОЕДИНЕНИЕ
//	|	РегистрСведений.ФИОФизЛиц.СрезПоследних() КАК ФИОФизЛицСрезПоследнихИП
//	|ПО
//	|	Документ.Организация = ФИОФизЛицСрезПоследнихИП.ФизЛицо
//	|ГДЕ
//	|	Документ.Ссылка В(&МассивОбъектов)
//	|	И Документ.Проведен
//	|УПОРЯДОЧИТЬ ПО
//	|	Ссылка, Дата
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	ТаблицаОплата.ВидОплаты.ТипОплаты КАК ТипОплаты,
//	|	ТаблицаОплата.Ссылка КАК Ссылка,
//	|	ПРЕДСТАВЛЕНИЕ(ТаблицаОплата.ВидОплаты.ТипОплаты) КАК ПредставлениеТипОплаты,
//	|	СУММА(ВЫБОР
//	|		КОГДА ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
//	|			И ТаблицаОплата.ВидОплаты.ТипОплаты <> Значение(Перечисление.ТипыОплатЧекаККМ.Наличные)
//	|			ТОГДА ТаблицаОплата.Сумма
//	|		ИНАЧЕ 0
//	|	КОНЕЦ) КАК СуммаБезналичныхОплат,
//	|	СУММА(ТаблицаОплата.Сумма) КАК Сумма
//	|ИЗ
//	|	Документ.ЧекККМ.Оплата КАК ТаблицаОплата
//	|ГДЕ
//	|	ТаблицаОплата.Ссылка В(&МассивОбъектов)
//	|	И ТаблицаОплата.Ссылка.Проведен
//	|	И НЕ (ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат) И ТаблицаОплата.ВидОплаты.ТипОплаты = Значение(Перечисление.ТипыОплатЧекаККМ.Наличные))
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	ТаблицаОплата.Ссылка,
//	|	ТаблицаОплата.ВидОплаты.ТипОплаты
//	|
//	|	ИМЕЮЩИЕ
//	|		(НЕ СУММА(ТаблицаОплата.Сумма) = 0)
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Ссылка
//	|ИТОГИ ПО
//	|	Ссылка
//	|
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
//	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
//	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
//	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
//	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
//	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
//	|	ВЫБОР
//	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
//	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
//	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
//	|	КОНЕЦ КАК ЕдиницаИзмерения,
//	|	ВЫБОР
//	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
//	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
//	|		ИНАЧЕ ТаблицаТовары.Количество
//	|	КОНЕЦ КАК Количество,
//	|	ТаблицаТовары.Цена КАК Цена,
//	|	ТаблицаТовары.Сумма КАК Сумма,
//	|	ТаблицаТовары.Ссылка КАК Ссылка
//	|ИЗ
//	|	Документ.ЧекККМ.Товары КАК ТаблицаТовары
//	|ГДЕ
//	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
//	|	И ТаблицаТовары.Ссылка.Проведен
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Ссылка,
//	|	НомерСтроки
//	|ИТОГИ ПО
//	|	Ссылка");


//	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
//	УстановитьТекстовыеПараметрыЗапроса(Запрос);

//	Результаты = Запрос.ВыполнитьПакет();

//	ДокументЧекККМ  = Новый ТекстовыйДокумент();

//	// Получение макета
//	МакетЧекаККМ      = Документы.ЧекККМ.ПолучитьМакет("ЧекПокупателя");
//	
//	// макет существует только для ленты шириной: 24 32 36 40 48 64
//	Если ШиринаЛенты = Неопределено Или ШиринаЛенты = 0 Тогда
//		ШиринаЛенты = 32;
//	ИначеЕсли ШиринаЛенты <= 24 Тогда
//		ШиринаЛенты = 24;
//	ИначеЕсли ШиринаЛенты <= 32 Тогда
//		ШиринаЛенты = 32;
//	ИначеЕсли ШиринаЛенты <= 36 Тогда
//		ШиринаЛенты = 36;
//	ИначеЕсли ШиринаЛенты <= 40 Тогда
//		ШиринаЛенты = 40;
//	ИначеЕсли ШиринаЛенты <= 48 Тогда
//		ШиринаЛенты = 48;
//	Иначе
//		ШиринаЛенты = 64;
//	КонецЕсли; 
//	
//	ОбластьШапкаЧека  = МакетЧекаККМ.ПолучитьОбласть("ШапкаЧека"  + ШиринаЛенты);
//	ОбластьТелоЧека   = МакетЧекаККМ.ПолучитьОбласть("ТелоЧека"   + ШиринаЛенты);
//	ОбластьПодвалЧека = МакетЧекаККМ.ПолучитьОбласть("ПодвалЧека" + ШиринаЛенты);
//	ОбластьРазрывЧека = МакетЧекаККМ.ПолучитьОбласть("РазрывЧека" + ШиринаЛенты);

//	ВыборкаПоДокументам = Результаты[0].Выбрать();
//	ВыборкаПоТабличнойЧастиОплата = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

//	ПервыйДокумент = Истина;

//	Пока ВыборкаПоДокументам.Следующий() Цикл

//		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда

//			Продолжить;

//		КонецЕсли;

//		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

//		Если НЕ ПервыйДокумент Тогда

//			ДокументЧекККМ.Вывести(ОбластьРазрывЧека);

//		КонецЕсли;

//		ПервыйДокумент = Ложь;

//		Если ВыборкаПоДокументам.ЭтоВозврат Тогда
//			СинонимДокумента   = НСтр("ru='Товарный чек (возврат)'");
//		Иначе
//			СинонимДокумента   = НСтр("ru='Товарный чек'");
//		КонецЕсли;

//		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
//		ОбластьШапкаЧека.Параметры.Заголовок = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
//		СведенияОПоставщике = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);
//		#Удаление
//		ОбластьШапкаЧека.Параметры.ИНН = СведенияОПоставщике.ИНН;
//		ОбластьШапкаЧека.Параметры.Организация = ВыборкаПоДокументам.НаименованиеОрганизации; 	
//		#КонецУдаления
//		#Вставка 
//		//ОбластьШапкаЧека.Параметры.ИНН = СведенияОПоставщике.ИНН;
//		ОбластьШапкаЧека.Параметры.Организация    = ЧекККМ_ПолучитьНаименованиеМагазина.ПолучитьНаименование(ВыборкаПоДокументам.НаименованиеОрганизации);
//	 	#КонецВставки 
//		
//		ДокументЧекККМ.Вывести(ОбластьШапкаЧека);

//		// СТРОКИ ТЧ
//		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
//			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
//				Продолжить;
//			КонецЕсли;
//			
//			ОбластьТелоЧека.Параметры.НаименованиеТовара = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
//			#Удаление 
//			ОбластьТелоЧека.Параметры.КоличествоЦена     = Формат(ВыборкаПоСтрокамТЧ.Количество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0")
//														+ " х "
//														+ Формат(ВыборкаПоСтрокамТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");                                                  
//		    #КонецУдаления
//			#Вставка
//			ОбластьТелоЧека.Параметры.КоличествоЦена     = Формат( ВыборкаПоСтрокамТЧ.Количество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0")
//			+ " х "
//			+ Формат( ВыборкаПоСтрокамТЧ.Цена, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0")
//			+ " = "
//			+ Формат( ВыборкаПоСтрокамТЧ.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
//			#КонецВставки

//			КонечнаяСкидка =  ВыборкаПоСтрокамТЧ.Количество *  ВыборкаПоСтрокамТЧ.Цена -  ВыборкаПоСтрокамТЧ.Сумма;

//			Если КонечнаяСкидка <> 0 Тогда
//				ОбластьТелоЧека.Параметры.ЗагСкидка = ?(КонечнаяСкидка > 0, "Скидка:", "Надбавка:");
//				ОбластьТелоЧека.Параметры.Скидка    = Формат(?(КонечнаяСкидка > 0, КонечнаяСкидка, -КонечнаяСкидка), "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0"); 
//		    Иначе
//				ОбластьТелоЧека.Параметры.ЗагСкидка = НСтр("ru=''");
//				ОбластьТелоЧека.Параметры.Скидка    = НСтр("ru=''");
//			КонецЕсли;

//			ДокументЧекККМ.Вывести(ОбластьТелоЧека);

//		КонецЦикла;
//		ДокументЧекККМ.УдалитьСтроку(ДокументЧекККМ.КоличествоСтрок());

//		ОбластьПодвалЧека.Параметры.Итог = Формат(ВыборкаПоДокументам.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");

//		#Удаление
//		ОбластьПодвалЧека.Параметры.Сотрудник =  ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
//		#КонецУдаления
//		#Вставка
//		Попытка
//			ОбластьПодвалЧека.Параметры.Сотрудник =  ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
//		Исключение	
//		КонецПопытки;

//		#КонецВставки

//		ДокументЧекККМ.Вывести(ОбластьПодвалЧека);

//	КонецЦикла;

//	СтрокаВозврат = "";

//	КоличествоСтрок = ДокументЧекККМ.КоличествоСтрок();

//	Для Индекс = 1 По КоличествоСтрок Цикл
//		СтрокаВозврат = СтрокаВозврат + ДокументЧекККМ.ПолучитьСтроку(Индекс); 

//		Если НЕ Индекс = КоличествоСтрок Тогда
//			СтрокаВозврат = СтрокаВозврат + Символы.ПС; 
//		КонецЕсли;
//	КонецЦикла;

//	Возврат СтрокаВозврат

//КонецФункции


&ИзменениеИКонтроль("ПечатьЧека")
Функция Расш_ПечатьЧека(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Чек ККМ'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЧекаККМ_ТоварныйЧек";

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	Документ.ВидОперации КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА Документ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозврат,
	|	ВЫБОР КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|		ТОГДА ПРЕДСТАВЛЕНИЕ(Документ.Организация)
	|		ИНАЧЕ &ТекстИП +
	|		    ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Фамилия, """") = """"
	|				ТОГДА """"
	|			ИНАЧЕ
	|				ФИОФизЛицСрезПоследнихИП.Фамилия + &ТекстПробел +
	|				ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Имя, """") = """"
	|						ТОГДА """"
	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Имя + &ТекстПробел
	|				КОНЕЦ
	|				+
	|				ВЫБОР	КОГДА ЕСТЬNULL(ФИОФизЛицСрезПоследнихИП.Отчество, """") = """"
	|						ТОГДА """"
	|						ИНАЧЕ ФИОФизЛицСрезПоследнихИП.Отчество
	|				КОНЕЦ
	|			КОНЕЦ
	|			+ """"
	|	КОНЕЦ КАК НаименованиеОрганизации,
	|	ВЫБОР КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Организация,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный
	|ИЗ
	|	Документ.ЧекККМ КАК Документ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних() КАК ФИОФизЛицСрезПоследнихИП
	|ПО
	|	Документ.Организация = ФИОФизЛицСрезПоследнихИП.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка, Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОплата.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ТаблицаОплата.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаОплата.ВидОплаты.ТипОплаты) КАК ПредставлениеТипОплаты,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			И ТаблицаОплата.ВидОплаты.ТипОплаты <> Значение(Перечисление.ТипыОплатЧекаККМ.Наличные)
	|			ТОГДА ТаблицаОплата.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаБезналичныхОплат,
	|	СУММА(ТаблицаОплата.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ТаблицаОплата
	|ГДЕ
	|	ТаблицаОплата.Ссылка В(&МассивОбъектов)
	|	И ТаблицаОплата.Ссылка.Проведен
	|	И НЕ (ТаблицаОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат) И ТаблицаОплата.ВидОплаты.ТипОплаты = Значение(Перечисление.ТипыОплатЧекаККМ.Наличные))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОплата.Ссылка,
	|	ТаблицаОплата.ВидОплаты.ТипОплаты
	|
	|	ИМЕЮЩИЕ
	|		(НЕ СУММА(ТаблицаОплата.Сумма) = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");


	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	УстановитьТекстовыеПараметрыЗапроса(Запрос);

	Результаты = Запрос.ВыполнитьПакет();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЧекККМ.ПФ_MXL_Накладная");

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
	ОбластьИНН       = Макет.ПолучитьОбласть("ИНН");
	ОбластьМагазин   = Макет.ПолучитьОбласть("Магазин");

	ОбластьШапкаНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьШапкаСкидок = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьШапкаСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");

	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
		                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьСтрокаНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСтрокаСкидок = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСтрокаСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");

	// Вывести Итого.
	ОбластьИтогоНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьИтогоСкидок = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьИтогоСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");

	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");

	ОбластьОплата = Макет.ПолучитьОбласть("Оплата");

	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнойЧастиОплата = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ПервыйДокумент = Истина;

	Пока ВыборкаПоДокументам.Следующий() Цикл

		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда

			Продолжить;

		КонецЕсли;

		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Если НЕ ПервыйДокумент Тогда

			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		КонецЕсли;

		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Если ВыборкаПоДокументам.ЭтоВозврат Тогда
			СинонимДокумента   = НСтр("ru='Товарный чек (возврат)'");
		Иначе
			СинонимДокумента   = НСтр("ru='Товарный чек'");
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
        #Удаление
		
		СведенияОПоставщике = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);

		Если ВыборкаПоДокументам.ОрганизацияЮридическоеЛицо Тогда
			ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		Иначе
			ОбластьПоставщик.Параметры.ПредставлениеПоставщика = ВыборкаПоДокументам.НаименованиеОрганизации;
		КонецЕсли;
		ОбластьПоставщик.Параметры.Поставщик = ВыборкаПоДокументам.Организация;
		ТабличныйДокумент.Вывести(ОбластьПоставщик);


		ОбластьИНН.Параметры.ИНН = СведенияОПоставщике.ИНН;
		ТабличныйДокумент.Вывести(ОбластьИНН);

		ОбластьМагазин.Параметры.ПредставлениеМагазина = ВыборкаПоДокументам.МагазинПредставление;
		ОбластьМагазин.Параметры.Магазин = ВыборкаПоДокументам.Магазин;   
		#КонецУдаления
		#Вставка
		НаименованиеМагазинаТекст =  ЧекККМ_ПолучитьНаименованиеМагазина.ПолучитьНаименование(ВыборкаПоДокументам.НаименованиеОрганизации);
		ОбластьМагазин.Параметры.ПредставлениеМагазина = НаименованиеМагазинаТекст;
		ОбластьМагазин.Параметры.Магазин = НаименованиеМагазинаТекст; 
		#КонецВставки
		ТабличныйДокумент.Вывести(ОбластьМагазин);

		// Шапка

		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		Если ВыводитьКоды Тогда
			ОбластьШапкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСкидок);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);


		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;

		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			Если ВыводитьКоды Тогда

				ОбластьСтрокаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);

			КонецЕсли;

			ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);

			Скидка = Окр(ВыборкаПоСтрокамТЧ.Цена * ВыборкаПоСтрокамТЧ.Количество, 2) - ВыборкаПоСтрокамТЧ.Сумма;
			ОбластьСтрокаСкидок.Параметры.Скидка         = Скидка;
			ОбластьСтрокаСкидок.Параметры.СуммаБезСкидки = ВыборкаПоСтрокамТЧ.Сумма + Скидка;
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидок);

			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);

			ВсегоНаименований = ВсегоНаименований + 1;

			Сумма          = Сумма + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + Скидка;
			ВсегоБезСкидок = Сумма + ВсегоСкидок;
		КонецЦикла;

		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		КонецЕсли;

		ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		ОбластьИтогоСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
		ОбластьИтогоСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСкидок);
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);

		// Вывести Сумму прописью.

		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");

		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));

		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);

		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);

		// Оплата
		Если ВыборкаПоТабличнойЧастиОплата.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда

			ОплатаДобавлена = Ложь;
			СтрокаОплаты = "";
			СуммаБезналичныхОплат = 0;
			СуммаОплат = 0;

			ВыборкаПоОплата = ВыборкаПоТабличнойЧастиОплата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоОплата.Следующий() Цикл
				Если ОплатаДобавлена Тогда
					СтрокаОплаты = СтрокаОплаты + Символы.ПС;
				КонецЕсли;
				ОплатаДобавлена = Истина;
				СтрокаОплаты = СтрокаОплаты + ВыборкаПоОплата.ПредставлениеТипОплаты + ": "  + Формат(ВыборкаПоОплата.Сумма, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
				СуммаБезналичныхОплат = СуммаБезналичныхОплат + ВыборкаПоОплата.СуммаБезналичныхОплат;
				СуммаОплат = СуммаОплат + ВыборкаПоОплата.Сумма;
			КонецЦикла;

			Если ВыборкаПоДокументам.ЭтоВозврат Тогда
				СуммаНаличных = ВыборкаПоДокументам.СуммаДокумента - СуммаБезналичныхОплат;
				Если СуммаНаличных > 0  Тогда
					Если ОплатаДобавлена Тогда
						СтрокаОплаты = СтрокаОплаты + Символы.ПС;
					КонецЕсли;
					СтрокаОплаты = СтрокаОплаты + НСтр("ru = 'Наличные:'") + " " + Формат(СуммаНаличных, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
				КонецЕсли;
				ОбластьОплата.Параметры.Сдача = "0.00";
			Иначе
				ОбластьОплата.Параметры.Сдача = Формат(СуммаОплат - ВыборкаПоДокументам.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0");
			КонецЕсли;

			ОбластьОплата.Параметры.Оплата = СтрокаОплаты;
			ТабличныйДокумент.Вывести(ОбластьОплата);
		КонецЕсли;


		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ФИО = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);

	КонецЦикла;

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Возврат ТабличныйДокумент;
КонецФункции


&Вместо("ПечатьТоварногоЧекаДляПД")
Функция Расш_ПечатьТоварногоЧекаДляПД1(МассивОбъектов, ОбъектыПечати)
	// Вставить содержимое метода.
	//Результат = ПродолжитьВызов(МассивОбъектов, ОбъектыПечати);
	Возврат Расш_ПечатьТоварногоЧекаДляПД(МассивОбъектов, ОбъектыПечати);
КонецФункции
 
