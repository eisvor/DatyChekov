
&Вместо("ЗарегистрироватьИзмененияСправочника")
Процедура EF_00_00060826_ЗарегистрироватьИзмененияСправочника(Источник, Отказ)
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ИспользоватьОбменСПодключаемымОборудованием") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТипИсточника = ТипЗнч(Источник);
	Если ТипИсточника = Тип("СправочникОбъект.Номенклатура") Тогда
		
		Запрос = Новый Запрос(   
		"ВЫБРАТЬ
		|	КодыТоваровSKU.SKU КАК SKU
		|ПОМЕСТИТЬ КодыSKU
		|ИЗ
		|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
		|ГДЕ
		|	КодыТоваровSKU.Номенклатура = &Значение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ПОМЕСТИТЬ ИспользуемыеПравилаОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU КАК КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|
		|СГРУППИРОВАТЬ ПО
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодключаемоеОборудование.УзелИнформационнойБазы КАК УзелИнформационнойБазы
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИспользуемыеПравилаОбмена КАК ИспользуемыеПравилаОбмена
		|		ПО ПодключаемоеОборудование.ПравилоОбмена = ИспользуемыеПравилаОбмена.ПравилоОбмена
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменСПодключаемымОборудованием КАК ОбменСПодключаемымОборудованием
		|		ПО ПодключаемоеОборудование.УзелИнформационнойБазы = ОбменСПодключаемымОборудованием.Ссылка");
		
		Запрос.УстановитьПараметр("Значение", Источник.Ссылка);
		
		Результат = Запрос.ВыполнитьПакет();
		УзлыДляЗаписи = Результат[3].Выгрузить();
		ДанныеДляРегистрации = Результат[2].Выгрузить();
		
		МассивУзлов = УзлыДляЗаписи.ВыгрузитьКолонку("УзелИнформационнойБазы");
		
		Набор = РегистрыСведений.КодыТоваровPLUНаОборудовании.СоздатьНаборЗаписей();
		Для Каждого Товар Из ДанныеДляРегистрации Цикл
			Набор.Отбор.ПравилоОбмена.Значение = Товар.ПравилоОбмена;
			Набор.Отбор.ПравилоОбмена.Использование = Истина;
			
			Набор.Отбор.КодТовараPLU.Значение = Товар.КодТовараPLU;
			Набор.Отбор.КодТовараPLU.Использование = Истина;
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Набор);
		КонецЦикла;
		
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.ХарактеристикиНоменклатуры") Тогда
		
		Запрос = Новый Запрос(   
		"ВЫБРАТЬ
		|	КодыТоваровSKU.SKU КАК SKU
		|ПОМЕСТИТЬ КодыSKU
		|ИЗ
		|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
		|ГДЕ
		|	КодыТоваровSKU.Характеристика = &Значение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ПОМЕСТИТЬ ИспользуемыеПравилаОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU КАК КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|
		|СГРУППИРОВАТЬ ПО
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодключаемоеОборудование.УзелИнформационнойБазы КАК УзелИнформационнойБазы
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИспользуемыеПравилаОбмена КАК ИспользуемыеПравилаОбмена
		|		ПО ПодключаемоеОборудование.ПравилоОбмена = ИспользуемыеПравилаОбмена.ПравилоОбмена
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменСПодключаемымОборудованием КАК ОбменСПодключаемымОборудованием
		|		ПО ПодключаемоеОборудование.УзелИнформационнойБазы = ОбменСПодключаемымОборудованием.Ссылка");
		
		Запрос.УстановитьПараметр("Значение", Источник.Ссылка);
		
		Результат = Запрос.ВыполнитьПакет();
		УзлыДляЗаписи = Результат[3].Выгрузить();
		ДанныеДляРегистрации = Результат[2].Выгрузить();
		
		МассивУзлов = УзлыДляЗаписи.ВыгрузитьКолонку("УзелИнформационнойБазы");
		
		Набор = РегистрыСведений.КодыТоваровPLUНаОборудовании.СоздатьНаборЗаписей();
		Для Каждого Товар Из ДанныеДляРегистрации Цикл
			Набор.Отбор.ПравилоОбмена.Значение = Товар.ПравилоОбмена;
			Набор.Отбор.ПравилоОбмена.Использование = Истина;
			
			Набор.Отбор.КодТовараPLU.Значение = Товар.КодТовараPLU;
			Набор.Отбор.КодТовараPLU.Использование = Истина;
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Набор);
		КонецЦикла;
		
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.УпаковкиНоменклатуры") Тогда
		
		Запрос = Новый Запрос(   
		"ВЫБРАТЬ
		|	КодыТоваровSKU.SKU КАК SKU
		|ПОМЕСТИТЬ КодыSKU
		|ИЗ
		|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
		|ГДЕ
		|	КодыТоваровSKU.Упаковка = &Значение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ПОМЕСТИТЬ ИспользуемыеПравилаОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU КАК КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|
		|СГРУППИРОВАТЬ ПО
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодключаемоеОборудование.УзелИнформационнойБазы КАК УзелИнформационнойБазы
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИспользуемыеПравилаОбмена КАК ИспользуемыеПравилаОбмена
		|		ПО ПодключаемоеОборудование.ПравилоОбмена = ИспользуемыеПравилаОбмена.ПравилоОбмена
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменСПодключаемымОборудованием КАК ОбменСПодключаемымОборудованием
		|		ПО ПодключаемоеОборудование.УзелИнформационнойБазы = ОбменСПодключаемымОборудованием.Ссылка");
		
		Запрос.УстановитьПараметр("Значение", Источник.Ссылка);
		
		Результат = Запрос.ВыполнитьПакет();
		УзлыДляЗаписи = Результат[3].Выгрузить();
		ДанныеДляРегистрации = Результат[2].Выгрузить();
		
		МассивУзлов = УзлыДляЗаписи.ВыгрузитьКолонку("УзелИнформационнойБазы");
		
		Набор = РегистрыСведений.КодыТоваровPLUНаОборудовании.СоздатьНаборЗаписей();
		Для Каждого Товар Из ДанныеДляРегистрации Цикл
			Набор.Отбор.ПравилоОбмена.Значение = Товар.ПравилоОбмена;
			Набор.Отбор.ПравилоОбмена.Использование = Истина;
			
			Набор.Отбор.КодТовараPLU.Значение = Товар.КодТовараPLU;
			Набор.Отбор.КодТовараPLU.Использование = Истина;
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Набор);
		КонецЦикла;
		
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.ВидыНоменклатуры") Тогда  
		
		Запрос = Новый Запрос(   
		"ВЫБРАТЬ
		|	КодыТоваровSKU.SKU КАК SKU
		|ПОМЕСТИТЬ КодыSKU
		|ИЗ
		|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
		|ГДЕ
		|	КодыТоваровSKU.Номенклатура В
		|			(ВЫБРАТЬ
		|				Номенклатура.Ссылка КАК Номенклатура
		|			ИЗ
		|				Справочник.Номенклатура КАК Номенклатура
		|			ГДЕ
		|				Номенклатура.ВидНоменклатуры = &Значение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ПОМЕСТИТЬ ИспользуемыеПравилаОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КодыТоваровPLUНаОборудовании.КодТовараPLU КАК КодТовараPLU,
		|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена
		|ИЗ
		|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КодыSKU КАК КодыSKU
		|		ПО КодыТоваровPLUНаОборудовании.КодТовараSKU = КодыSKU.SKU
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодключаемоеОборудование.УзелИнформационнойБазы КАК УзелИнформационнойБазы
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИспользуемыеПравилаОбмена КАК ИспользуемыеПравилаОбмена
		|		ПО ПодключаемоеОборудование.ПравилоОбмена = ИспользуемыеПравилаОбмена.ПравилоОбмена
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ОбменСПодключаемымОборудованием КАК ОбменСПодключаемымОборудованием
		|		ПО ПодключаемоеОборудование.УзелИнформационнойБазы = ОбменСПодключаемымОборудованием.Ссылка");
		
		Запрос.УстановитьПараметр("Значение",             Источник.Ссылка);
	
		Результат = Запрос.ВыполнитьПакет();
		УзлыДляЗаписи = Результат[3].Выгрузить();
		ДанныеДляРегистрации = Результат[2].Выгрузить();
		
		МассивУзлов = УзлыДляЗаписи.ВыгрузитьКолонку("УзелИнформационнойБазы");
		
		Набор = РегистрыСведений.КодыТоваровPLUНаОборудовании.СоздатьНаборЗаписей();
		Для Каждого Товар Из ДанныеДляРегистрации Цикл
			Набор.Отбор.ПравилоОбмена.Значение = Товар.ПравилоОбмена;
			Набор.Отбор.ПравилоОбмена.Использование = Истина;
			
			Набор.Отбор.КодТовараPLU.Значение = Товар.КодТовараPLU;
			Набор.Отбор.КодТовараPLU.Использование = Истина;
			
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Набор);
		КонецЦикла;
		
	ИначеЕсли ТипИсточника = Тип("СправочникОбъект.ПодключаемоеОборудование") Тогда
		
		Если  ЗначениеЗаполнено(Источник.УзелИнформационнойБазы)
			И ЗначениеЗаполнено(Источник.ПравилоОбмена)
			И Источник.ПравилоОбмена <> Источник.Ссылка.ПравилоОбмена
			И (Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток
			Или Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн) Тогда
			
			ПланыОбмена.УдалитьРегистрациюИзменений(Источник.УзелИнформационнойБазы);
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	КодыТоваровPLUНаОборудовании.ПравилоОбмена КАК ПравилоОбмена,
			|	КодыТоваровPLUНаОборудовании.КодТовараPLU  КАК КодТовараPLU
			|	&УзелИнформационнойБазы                    КАК УзелИнформационнойБазы
			|ИЗ
			|	РегистрСведений.КодыТоваровPLUНаОборудовании КАК КодыТоваровPLUНаОборудовании
			|ГДЕ
			|	КодыТоваровPLUНаОборудовании.ПравилоОбмена = &ПравилоОбмена");
			
			Запрос.УстановитьПараметр("ПравилоОбмена", Источник.ПравилоОбмена);
			Запрос.УстановитьПараметр("УзелИнформационнойБазы", Источник.УзелИнформационнойБазы);
			
			Запрос.УстановитьПараметр("Значение",             Источник.Ссылка);
	
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Набор = РегистрыСведений.КодыТоваровPLUНаОборудовании.СоздатьНаборЗаписей();
			Пока Выборка.Следующий() Цикл
				
				Набор.Отбор.ПравилоОбмена.Значение = Выборка.ПравилоОбмена;
				Набор.Отбор.ПравилоОбмена.Использование = Истина;
				
				Набор.Отбор.КодТовараPLU.Значение = Выборка.КодТовараPLU;
				Набор.Отбор.КодТовараPLU.Использование = Истина;
				
				ПланыОбмена.ЗарегистрироватьИзменения(Выборка.УзелИнформационнойБазы, Набор);
			
			КонецЦикла;
			
		Иначе
			Возврат;
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ЗарегистрироватьИзмененияПриСменеПравилаОбменаПодключаемогоОборудования")
Процедура EF_00_00060826_ЗарегистрироватьИзмененияПриСменеПравилаОбменаПодключаемогоОборудования(Источник, Отказ)
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("СправочникСсылка.ПодключаемоеОборудование") И Источник.ДополнительныеСвойства.ИзмененоПравилоОбмена Тогда
		Если Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток
			Или Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн Тогда
			УстановитьПривилегированныйРежим(Истина);
			ПланыОбмена.ЗарегистрироватьИзменения(Источник.УзелИнформационнойБазы, Метаданные.РегистрыСведений.КодыТоваровPLUНаОборудовании);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("СоздатьУзелОбменаСПодключаемымОборудованиемOffline")
Процедура EF_00_00060826_СоздатьУзелОбменаСПодключаемымОборудованиемOffline(Источник, Отказ)
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Источник.УзелИнформационнойБазы)
		И (Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн
		ИЛИ Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток
		ИЛИ Источник.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.УдалитьWebСервисОборудование) Тогда
		
		Источник.УзелИнформационнойБазы = ПолучитьУзелРИБ(Источник);
	КонецЕсли;
	
	Источник.ДополнительныеСвойства.Вставить("ИзмененоПравилоОбмена", Источник.ПравилоОбмена <> Источник.Ссылка.ПравилоОбмена);
	
КонецПроцедуры
