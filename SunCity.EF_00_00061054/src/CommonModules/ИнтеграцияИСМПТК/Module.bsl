
&Вместо("ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки_Общая")
Процедура EF_00_00061054_ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки_Общая(Форма, РезультатВыполнения, Направление, НеОтправлен)
	
	Объект = Форма.Объект;
	СоответствиеГрупповыхКМ = Новый Соответствие;
	МассивГрупповыхКМ		= Новый Массив;
	
	Если Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
		СтруктураОтбора   = Новый Структура("ВидУпаковки", Перечисления.ВидыУпаковокИСМПТК.Групповая);
		СтрокиГрупповыхКМ = Объект.Марки.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого ГрупповаяКМ Из СтрокиГрупповыхКМ Цикл 
			СоответствиеГрупповыхКМ.Вставить(Новый Структура("КИ, ВипУпаковки", ГрупповаяКМ.КодИдентификации, ГрупповаяКМ.ВидУпаковки), ГрупповаяКМ.ПолучитьИдентификатор());
			МассивГрупповыхКМ.Добавить(ГрупповаяКМ.КодИдентификации);
		КонецЦикла;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("ВидУпаковки", Перечисления.ВидыУпаковокИСМПТК.Логистическая);
	МассивЛогистическихКМ = Объект.Марки.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого ЛогистическаяКМ Из МассивЛогистическихКМ Цикл 
		Если Константы.ПоддержкаДвойногоФорматаТранспортныхКодовИСМПТК.Получить() Тогда
			//В этом случае придется проверять каждый транспортный код в нескольких форматах (с/без идентификатора 00)
			//Подготавливаем данные для проверки кода в разных форматах
			ИсходныйФормат = ЛогистическаяКМ.КодИдентификации;
			Если СтрДлина(ИсходныйФормат) = 20 Тогда
				ПреобразованныйКод = Сред(ИсходныйФормат, 3); //18-значный SSCC
				ДополнительныйКод  = Неопределено;
			ИначеЕсли СтрДлина(ИсходныйФормат) = 18 Тогда
				ПреобразованныйКод = "00"   + ИсходныйФормат;
				ДополнительныйКод  = "(00)" + ИсходныйФормат;
			Иначе
				ПреобразованныйКод = Неопределено;
				ДополнительныйКод  = Неопределено;
			КонецЕсли;
			
			МассивГрупповыхКМДляПроверки = Новый Массив();
			МассивГрупповыхКМДляПроверки.Добавить(ИсходныйФормат);
			Если НЕ ПреобразованныйКод = Неопределено Тогда
				МассивГрупповыхКМДляПроверки.Добавить(ПреобразованныйКод);
			КонецЕсли;
			Если НЕ ДополнительныйКод = Неопределено Тогда
				МассивГрупповыхКМДляПроверки.Добавить(ДополнительныйКод);
			КонецЕсли;
			
			//Начинаем опрос сервера по каждому из сформированных кодов для проверки наличия на сервере информации по составу
			Для Каждого КодSSCC Из МассивГрупповыхКМДляПроверки Цикл
				СтруктураЗапрос = Новый Структура("Штрихкод, ВидУпаковки, ВидПродукции, ФорматBase64", 
										КодSSCC, Перечисления.ВидыУпаковокИСМПТК.Логистическая, Перечисления.ВидыПродукцииИСМПТК.Обувная, Ложь); //общие параметры у кодов одинаковые
										
				ТокенАвторизации = ?(ЗначениеЗаполнено(РезультатВыполнения), РезультатВыполнения, Неопределено);
				ДанныеПоГрупповомуКоду = ИнтеграцияИСМПТКВызовСервера.ЗапроситьДанныеПоКодуАгрегации(СтруктураЗапрос, Объект.Организация, ТокенАвторизации, Ложь);	
				
				Если Не ЗначениеЗаполнено(ДанныеПоГрупповомуКоду.ТекстОшибки) Тогда
					
					Если Не КодSSCC = ИсходныйФормат Тогда
						//Нужно заменить исходное значение кода на тот, который вернул сервер
						СтрокаВДокументе = Объект.Марки.НайтиСтроки(Новый Структура("КодИдентификации", ИсходныйФормат));
						СтрокаВДокументе[0].КодИдентификации = КодSSCC;
						СтрокаВДокументе[0].КодМаркировки = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ШтрихкодВBase64(КодSSCC);
						СтрокаВДокументе[0].EAN = КодSSCC;
						СоответствиеГрупповыхКМ.Вставить(Новый Структура("КИ, ВипУпаковки", КодSSCC, ЛогистическаяКМ.ВидУпаковки), ЛогистическаяКМ.ПолучитьИдентификатор());
						МассивГрупповыхКМ.Добавить(КодSSCC);
					Иначе
						СоответствиеГрупповыхКМ.Вставить(Новый Структура("КИ, ВипУпаковки", ИсходныйФормат, ЛогистическаяКМ.ВидУпаковки), ЛогистическаяКМ.ПолучитьИдентификатор());
						МассивГрупповыхКМ.Добавить(ИсходныйФормат);
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			СоответствиеГрупповыхКМ.Вставить(Новый Структура("КИ, ВипУпаковки", ЛогистическаяКМ.КодИдентификации, ЛогистическаяКМ.ВидУпаковки), ЛогистическаяКМ.ПолучитьИдентификатор());
			МассивГрупповыхКМ.Добавить(ЛогистическаяКМ.КодИдентификации);
		КонецЕсли;		
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("ВидУпаковки", Перечисления.ВидыУпаковокИСМПТК.Неопределен);
	МассивНеопознанныхКМ = Объект.Марки.НайтиСтроки(СтруктураОтбора);
	Для Каждого НеопознанныйКМ Из МассивНеопознанныхКМ Цикл 
		СоответствиеГрупповыхКМ.Вставить(Новый Структура("КИ, ВипУпаковки", НеопознанныйКМ.КодИдентификации, НеопознанныйКМ.ВидУпаковки), НеопознанныйКМ.ПолучитьИдентификатор());
		МассивГрупповыхКМ.Добавить(НеопознанныйКМ.КодИдентификации);
	КонецЦикла;
		
	Если МассивГрупповыхКМ.Количество() = 0 Тогда
		Если Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
			ТекстОшибки = НСтр("ru = 'В табличной части ""Марки"" отсутствуют коды маркировки упаковок.'"); 
		Иначе
			ТекстОшибки = НСтр("ru = 'В табличной части ""Марки"" отсутствуют транспортные коды маркировки.'"); 
		КонецЕсли;
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
			
	ТокенАвторизации = ?(ЗначениеЗаполнено(РезультатВыполнения), РезультатВыполнения, Неопределено);
	СтруктураКодов   = Новый Структура("МассивКодов", МассивГрупповыхКМ);
	ДанныеПоГрупповомуКоду = ЗапроситьДанныеОбАгрегацииСпискаКМ(СтруктураКодов, Объект.Организация, ТокенАвторизации);
	
	Если ЗначениеЗаполнено(ДанныеПоГрупповомуКоду.ТекстОшибки) Тогда
		
		ТекстОшибки = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаЗапросаСоставаУпаковкиПоДаннымСервера();
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
		ОбщегоНазначенияИСМПТКВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ДанныеПоГрупповомуКоду.ТекстОшибки, , Объект.Ссылка);
		
	Иначе
		
		Для Каждого ОбновляемыйГрупповойКод Из СоответствиеГрупповыхКМ Цикл   //исходные КМ упаковок из таблицы документа
			
			//Получение вложенных позиций по КМ упаковки
			СтруктураКода = ИнтеграцияИСМПТКВызовСервера.ПолучитьИнформациюПоГрупповомуКоду(ДанныеПоГрупповомуКоду, ОбновляемыйГрупповойКод.Ключ.КИ, ОбновляемыйГрупповойКод.Ключ.ВипУпаковки);
			
			GTIN 			   = СтруктураКода.GTIN;
			GTINВерхнегоУровня = СтруктураКода.GTINВерхнегоУровня;
			EAN                = СтруктураКода.EAN;
			EANВерхнегоУровня  = СтруктураКода.EANВерхнегоУровня;
			Номенклатура       = СтруктураКода.Номенклатура;
			Характеристика 	   = СтруктураКода.Характеристика;
			ВидПродукции 	   = СтруктураКода.ВидПродукции;
			Количество		   = СтруктураКода.Количество;
			ЭтоГрупповаяУпаковка = ОбновляемыйГрупповойКод.Ключ.ВипУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИСМПТК.Групповая");
			
			Если ЗначениеЗаполнено(GTIN) Тогда
				
				СтрокаКМ = Объект.Марки.НайтиПоИдентификатору(ОбновляемыйГрупповойКод.Значение);
				Если НеОтправлен Тогда
					//Количество изменяем только у не отправленного документа. При уточнении номенклатуры у отправленного оставляем старое кол-во, т.к. оно уже ушло на сервер.
					СтрокаКМ.Количество = Количество;
				КонецЕсли;
				
				СтрокаКМ.GTIN = ?(ЗначениеЗаполнено(GTINВерхнегоУровня) И Не ЭтоГрупповаяУпаковка, GTINВерхнегоУровня, GTIN);  
				СтрокаКМ.EAN  = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(СтрокаКМ.GTIN);
				СтрокаКМ.GTINВерхнегоУровня = ?(ЭтоГрупповаяУпаковка, GTINВерхнегоУровня, "");
				СтрокаКМ.Номенклатура = Номенклатура;
				СтрокаКМ.ВидПродукции = ВидПродукции;
								
				Если НеОтправлен Тогда
					Форма.Модифицированность = Истина;
				Иначе
					Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") Тогда
						//В уже отправленном документе Уведомление о ввозе (Импорт) в ТЧ Товары также присутствует информация о вложенных позициях. Для документов, созданных и обновленных с сервера
						//в базе с версией БМ 1.0.4.4 и ниже номенклатура в ТЧ очищалась при обновлении документа, поэтому проверяем таблицу и восстанавливаем данные при необходимости.
						Для Каждого СтрокаТовар Из Объект.Товары Цикл
							Если Не ЗначениеЗаполнено(СтрокаТовар.Номенклатура) Тогда
								
								ДанныеНоменклатуры = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеНоменклатурыИзРегистраШтрихкодовПоШтрихкоду(, СтрокаТовар.EAN);
								Если ТипЗнч(ДанныеНоменклатуры) = Тип("Структура") Тогда
									Номенклатура   = ДанныеНоменклатуры.Номенклатура;
									Характеристика = ДанныеНоменклатуры.Характеристика;
								Иначе
									Номенклатура   = Неопределено;
									Характеристика = Неопределено;
								КонецЕсли;
								СтрокаТовар.Номенклатура   = Номенклатура;
								СтрокаТовар.Характеристика = Характеристика;
								
							Иначе
								Продолжить;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					Форма.Записать();
					
				КонецЕсли;
				
			Иначе
				
				//В полученном с сервера ответе по вложенности не поступило информации о составе упаковки
				Если Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
					ТекстОшибки = НСтр("ru = 'Для кода %1 не удалось получить данные с сервера. Возможно, у организации нет доступа к просмотру содержимого этой агрегации на стороне ИС МПТ или упаковка уже расформирована.'");
				Иначе
					Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.ОжидаетПриемку") Тогда
						ТекстОшибки = НСтр("ru = 'Для кода %1 не удалось получить данные с сервера. Информация о вложенности кода будет доступна только после приемки документа.'");
					Иначе
						ТекстОшибки = НСтр("ru = 'Для кода %1 не удалось получить данные с сервера. Возможно, упаковка уже расформирована.'");
					КонецЕсли;
				КонецЕсли;
				ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ОбновляемыйГрупповойКод.Ключ.КИ);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
				
			КонецЕсли;
			
		КонецЦикла;
	
		Форма.СформироватьДеревоКодовМаркировки();
		
	КонецЕсли;
	
КонецПроцедуры
