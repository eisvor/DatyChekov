
// Проверяет наличие выделенных в списке строк и возвращает массив их ссылок.
//
// Параметры:
//	Список - ДинамическийСписок - список, в котором осуществляется проверка на наличие выделенных строк.
//
// Возвращаемое значение:
//	Массив - массив ссылок выделенных в списке строк.
//	ПроверятьКоличество - Булево - признак необходимости проверки количества
//
Функция ПроверитьПолучитьВыделенныеВСпискеСсылки(Список, ПроверятьКоличество, ВСпискеСсылки) Экспорт
	
	МассивСсылок = Новый Массив;
	
	Для Итератор = 0 По Список.ВыделенныеСтроки.Количество() - 1 Цикл
		Если ТипЗнч(Список.ВыделенныеСтроки[Итератор]) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Если ВСпискеСсылки Тогда
				Ссылка = Список.ВыделенныеСтроки[Итератор];
			Иначе
				Ссылка = Клеверенс_ОбщегоНазначенияВызовСервера.ПолучитьСсылкуИзЗначенияСтрокиСписка(Список.ВыделенныеСтроки[Итератор]);
			КонецЕсли;
			МассивСсылок.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если ПроверятьКоличество И
		МассивСсылок.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Команда не может быть выполнена для указанного объекта!'"));
	КонецЕсли;
	
	Возврат МассивСсылок;
	
КонецФункции

// Проверяет, что в параметре команды Параметр передан объект ожидаемого типа ОжидаемыйТип.
// В противном случае, выдает стандартное сообщение и возвращает Ложь.
// Такая ситуация возможна, например, если в списке выделена строка группировки.
//
// Для использования в командах, работающих с элементами динамических списков в формах.
// 
// Параметры:
//  Параметр     - Массив, ЛюбаяСсылка - параметр команды.
//  ОжидаемыйТип - Тип                 - ожидаемый тип параметра.
//
// Возвращаемое значение:
//  Булево - Истина, если параметр ожидаемого типа.
//
// Пример:
// 
//   Если НЕ ПроверитьТипПараметраКоманды(Элементы.Список.ВыделенныеСтроки, 
//      Тип("ЗадачаСсылка.ЗадачаИсполнителя")) Тогда
//      Возврат;
//   КонецЕсли;
//   ...
Функция ПроверитьТипПараметраКоманды(Знач Параметр, Знач ОжидаемыйТип) Экспорт
	
	Если Параметр = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = Истина;
	
	Если ТипЗнч(Параметр) = Тип("Массив") Тогда
		// Если в массиве один элемент и он неправильного типа...
		Результат = НЕ (Параметр.Количество() = 1 И ТипЗнч(Параметр[0]) <> ОжидаемыйТип);
	Иначе
		Результат = ТипЗнч(Параметр) = ОжидаемыйТип;
	КонецЕсли;
	
	Если НЕ Результат Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Действие не может быть выполнено для выбранного элемента.'"));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Вызывает процедуру "ВыполнитьКоманду" из главной формы подключенной основной обработки
//
// Параметры:
//	ГлавнаяФормаОО 		- ФормаКлиентскогоПриложения - главная форма основной обработки
//  ИмяКоманды  		- Строка - имя выполняемой команды
//	ОбъектыНазначения  	- Массив - массив ссылок документов
//	ЭтоФормаСписка 		- Булево - признак формы списка
//	Форма 				- ФормаКлиентскогоПриложения - форма, из которой была вызвана команда
//
Процедура ВыполнитьКомандуКлеверенс(ГлавнаяФормаОО, ИмяКоманды, ОбъектыНазначения, ЭтоФормаСписка, Форма) Экспорт
	
	Если ИмяКоманды = "ЗагрузитьИзТСД" Тогда
		Если ЭтоФормаСписка Тогда
			ГлавнаяФормаОО.ВыполнитьКоманду("КлеверенсТСД_ЗагрузитьДокументы", ОбъектыНазначения[0]);
		Иначе
			ГлавнаяФормаОО.ВыполнитьКоманду("КлеверенсТСД_ЗагрузитьВТекущийДокумент", Форма);
		КонецЕсли;	
	ИначеЕсли ИмяКоманды = "ВыгрузитьДокумент" Тогда
		ГлавнаяФормаОО.ВыполнитьКоманду("КлеверенсТСД_ВыгрузитьДокумент", ОбъектыНазначения);
	ИначеЕсли ИмяКоманды = "ВыгрузитьВОдинДокумент" Тогда
		ГлавнаяФормаОО.ВыполнитьКоманду("КлеверенсТСД_ВыгрузитьДокументыВОдин", ОбъектыНазначения);
	ИначеЕсли ИмяКоманды = "ВыгрузитьСправочники" Тогда
		ГлавнаяФормаОО.ВыполнитьКоманду("КлеверенсТСД_ВыгрузитьСправочники");	
	КонецЕсли;	

КонецПроцедуры

// Получает главную форму основной обработки и выполняет дополнительные действия
//
// Параметры:
//  ИмяГлавнойФормыОО  - Строка - полное имя главной формы основной обработки
//  ТипОсновнойОбработки  - Строка - тип основной обработки
//	ОсновнаяОбработкаСсылка - СправочникСсылка.ДополнительныеОтчетыОбработки - ссылка на основную обработку в справочнике
//
// Возвращаемое значение:
//   ФормаКлиентскогоПриложения   - главная форма основной обработки
//
Функция ПолучитьГлавнуюФормуОО(ИмяГлавнойФормыОО, ТипОсновнойОбработки, ОсновнаяОбработкаСсылка) Экспорт
	
	ГлавнаяФормаОО = ПолучитьФорму(ИмяГлавнойФормыОО);
	Если ТипОсновнойОбработки = "СправочникСсылка" Тогда
		Если Клеверенс_ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ГлавнаяФормаОО, "ОбъектСсылка") Тогда		
			// Необходимо заполнить реквизит "ОбъектСсылка" для работы фоновых заданий 
			ГлавнаяФормаОО.ОбъектСсылка = ОсновнаяОбработкаСсылка;
		КонецЕсли;
	КонецЕсли;

	Возврат ГлавнаяФормаОО;

КонецФункции
