
// Выполняет инициализацию основного функционала расширения
//
Процедура Клеверенс_Инициализация() Экспорт
	
	//Получение из настроек
	ПараметрыПодключенияMS = ПолучитьПараметрыПодключенияMS();
	
	Если ТипЗнч(ПараметрыПодключенияMS) = Тип("Структура") Тогда

		ТипИнтеграционнойОбработки 		= Неопределено;
		ПутьИнтеграционнойОбработки		= Неопределено;
		
		ПараметрыПодключенияMS.Свойство("ТипОбработки", 				ТипИнтеграционнойОбработки);			
		ПараметрыПодключенияMS.Свойство("ПутьИнтеграционнойОбработки", 	ПутьИнтеграционнойОбработки);
			
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ПутьИнтеграционнойОбработки) Тогда
		
		ИнтеграционнаяОбработка = ПодключитьОбработкуНаСервере(ПутьИнтеграционнойОбработки, ТипИнтеграционнойОбработки);
		
		Если ИнтеграционнаяОбработка <> Неопределено Тогда
			//Запись в настройки имен объектов, участвующих в выгрузке/загрузке в MS
			Клеверенс_ОбщегоНазначенияСервер.СохранитьИменаОбъектовОбмена(ИнтеграционнаяОбработка, "ЗагрузкаДокументов");
			Клеверенс_ОбщегоНазначенияСервер.СохранитьИменаОбъектовОбмена(ИнтеграционнаяОбработка, "ВыгрузкаДокументов");
			Клеверенс_ОбщегоНазначенияСервер.СохранитьИменаОбъектовОбмена(ИнтеграционнаяОбработка, "ВыгрузкаСправочников");
			Клеверенс_ОбщегоНазначенияСервер.СохранитьИменаОбъектовОбмена(ИнтеграционнаяОбработка, "ИменаФормЗагрузкиДокументов");
			Клеверенс_ОбщегоНазначенияСервер.СохранитьИменаОбъектовОбмена(ИнтеграционнаяОбработка, "ИменаФормВыгрузкиДокументов");			
		КонецЕсли;		

	КонецЕсли;
	
	// Сохраним в хранилище пользователя структуру, которую будем использовать для хранения данных на время сеанса
	Клеверенс_ОбщегоНазначенияСервер.ЗаписатьНастройкуВХранилище("CleverenceButtonsExtension_КэшДанных", Новый Структура);	
	
КонецПроцедуры

// Получает параметры подключения MS из настроек
//
// Возвращаемое значение:
//   Структура   - параметры подключения MS
//
Функция ПолучитьПараметрыПодключенияMS() Экспорт

	ПользовательскиеПараметрыПодключенияMS = Клеверенс_ОбщегоНазначенияСервер.ПолучитьНастройкуОбщегоХранилища("Cleverence_ПараметрыПодключенияMS", Истина);
	Если ПользовательскиеПараметрыПодключенияMS = Неопределено Тогда
		ОбщиеПараметрыПодключенияMS = Клеверенс_ОбщегоНазначенияСервер.ПолучитьНастройкуОбщегоХранилища("Cleverence_ПараметрыПодключенияMS", Ложь);
		ПараметрыПодключенияMS = ОбщиеПараметрыПодключенияMS;
	Иначе
		ПараметрыПодключенияMS = ПользовательскиеПараметрыПодключенияMS;
	КонецЕсли;

	Возврат ПараметрыПодключенияMS;
	
КонецФункции

// Проверяет, существует ли объект метаданных
//
// Параметры:
//  ПолноеИмя  - Строка - полное имя объекта метаданных (например, Справочник.Номенклатура, Документ.ПриемНаРаботу.)
//
// Возвращаемое значение:
//   Булево   - признак наличия объекта метаданных
//
Функция ПроверитьОбъектМетаданныхСуществует(ПолноеИмя) Экспорт
	
	ОбъектСуществует = Метаданные.НайтиПоПолномуИмени(ПолноеИмя) <> Неопределено;
	
	Возврат ОбъектСуществует;
	
КонецФункции

Процедура ЗаписатьСобытиеВЖурналРегистрации(ИмяСобытия, УровеньСтрокой, Комментарий)  Экспорт
	
    Клеверенс_ОбщегоНазначенияСервер.ЗаписатьСобытиеВЖурналРегистрации(ИмяСобытия, УровеньСтрокой, Комментарий);
	
КонецПроцедуры

Функция ПолучитьСсылкуИзЗначенияСтрокиСписка(ЗначениеСтрокиСписка) Экспорт
    
	Попытка
		Ссылка = ЗначениеСтрокиСписка.Ссылка;
	Исключение
		Ссылка = Неопределено;
	КонецПопытки;
	
	Возврат Ссылка;
	
КонецФункции

Процедура ЗаписатьНастройкуВХранилище(КлючНастройки, Настройка) Экспорт
	
	Клеверенс_ОбщегоНазначенияСервер.ЗаписатьНастройкуВХранилище(КлючНастройки, Настройка);
	
КонецПроцедуры

Функция ПолучитьНастройкуОбщегоХранилища(КлючНастройки, ПользовательскаяНастройка = Ложь) Экспорт
	
	ДанныеИзХранилища = Клеверенс_ОбщегоНазначенияСервер.ПолучитьНастройкуОбщегоХранилища(КлючНастройки, ПользовательскаяНастройка);
	
	Возврат ДанныеИзХранилища;
	
КонецФункции

// См. Клеверенс_ОбщегоНазначенияСервер.ПодключитьОбработку()
Функция ПодключитьОбработкуНаСервере(ПутьОбработки, ТипОбработки) Экспорт
	Возврат Клеверенс_ОбщегоНазначенияСервер.ПодключитьОбработку(ПутьОбработки, ТипОбработки);
КонецФункции

// См. Клеверенс_ОбщегоНазначенияСервер.ПодключитьОбработку()
Процедура ПодключитьОбработку(ПутьОбработки, ТипОбработки) Экспорт
	Клеверенс_ОбщегоНазначенияСервер.ПодключитьОбработку(ПутьОбработки, ТипОбработки);
КонецПроцедуры