&НаКлиенте 
#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
	Перем _ЛокКонтекст Экспорт;
#КонецЕсли

&НаКлиенте
Перем ПереданнаяТаблица Экспорт;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимВыбора = Истина;
	
	ЗаполнитьТаблицуВыбора();
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ТаблицаВыбораВыгружать.Видимость = Ложь;
	#КонецЕсли
	
	НесколькоДокументов = КоличествоДокументов > 1;
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ТекущийДокумент.Видимость 	= НесколькоДокументов;
		Элементы.ВыбратьВсе.Видимость		= НесколькоДокументов;
		Элементы.ВыбратьВсе.Заголовок		= "Выбрать для всех оставшихся документов """ + ТипДокумента1С + """";
	#Иначе    
		Элементы.ТекущийДокументНадпись.Видимость 	= НесколькоДокументов;
		Элементы.ТекущийДокумент.Видимость 			= НесколькоДокументов;	
	#КонецЕсли
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуВыбора()
	
	МассивНевидимыхКолонок = Новый Массив;
	
	Если ИмяТаблицы = "БизнесПроцессыДляВыгрузки" Тогда
		
		Заголовок = "Клеверенс: Выбор бизнес-процесса";
		
		МассивНевидимыхКолонок.Добавить("ТипИсходногоДокумента1С");
		МассивНевидимыхКолонок.Добавить("ID_БизнесПроцесса");
		
		Если ПереданнаяТаблица = Неопределено Тогда
			ПереданнаяТаблица = Новый Массив;
			ПереданнаяТаблица.Добавить(Новый Структура("ЭтоТаблицаЗначений, КолонкиТаблицыЗначений", Истина, "Название,ТипИсходногоДокумента1С,ID_БизнесПроцесса,ТипИсходногоДокумента1С_Синоним"));
		
			ТаблицаНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("НастройкиБизнесПроцессов");
			Если НЕ ТаблицаНастроек = Ложь и ТипЗнч(ТаблицаНастроек) = Тип("Массив") Тогда
				Для Каждого СтрокаНастроек из ТаблицаНастроек Цикл
					Если СтрокаНастроек.Свойство("ЭтоТаблицаЗначений")
						ИЛИ НЕ СтрокаНастроек.Свойство("ТипИсходногоДокумента1С") 
						ИЛИ СтрокаНастроек.ТипИсходногоДокумента1С = "" Тогда
						Продолжить;
					КонецЕсли;
					НоваяСтруктура = _ЛокКонтекст.ЛокЯдро_СкопироватьСтруктуру(СтрокаНастроек,"Название,ТипИсходногоДокумента1С,ID_БизнесПроцесса"); 
					Если _ЛокКонтекст.СтруктураМетаданных.Документы1С.Свойство(СтрокаНастроек.ТипИсходногоДокумента1С) Тогда
						НоваяСтруктура.Вставить("ТипИсходногоДокумента1С_Синоним",_ЛокКонтекст.СтруктураМетаданных.Документы1С[СтрокаНастроек.ТипИсходногоДокумента1С].Синоним);
					КонецЕсли;
					ПереданнаяТаблица.Добавить(НоваяСтруктура);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда
		
		Заголовок = "Клеверенс: Выбор бизнес-процесса";
		
		МассивНевидимыхКолонок.Добавить("ТипРезультирующегоДокумента1С");
		МассивНевидимыхКолонок.Добавить("ТипДокументаMS");
		МассивНевидимыхКолонок.Добавить("ID_БизнесПроцесса");
		МассивНевидимыхКолонок.Добавить("ТипИсходногоДокумента1С");
		МассивНевидимыхКолонок.Добавить("ЗагружатьВТотЖе");
		
		Если ПереданнаяТаблица = Неопределено Тогда
			ПереданнаяТаблица = Новый Массив;
			ПереданнаяТаблица.Добавить(Новый Структура("ЭтоТаблицаЗначений, КолонкиТаблицыЗначений", Истина, "Название,ТипРезультирующегоДокумента1С,ТипДокументаMS,ID_БизнесПроцесса,ТипРезультирующегоДокумента1С_Синоним,ТипДокументаMS_Синоним"));
		
			
			ТаблицаНастроек = _ЛокКонтекст.ЛокЯдро_ПолучитьИзКэшаНастройкуSMARTS("НастройкиБизнесПроцессов");
			Если НЕ ТаблицаНастроек = Ложь Тогда
				Для Каждого СтрокаНастроек Из ПереданнаяТаблица Цикл
					Если СтрокаНастроек.Свойство("ЭтоТаблицаЗначений") Тогда
						Продолжить;
					КонецЕсли;
					НоваяСтруктура = _ЛокКонтекст.ЛокЯдро_СкопироватьСтруктуру(СтрокаНастроек,"Название,ТипРезультирующегоДокумента1С,ТипДокументаMS,ID_БизнесПроцесса"); 
					Если _ЛокКонтекст.СтруктураМетаданных.Документы1С.Свойство(НоваяСтруктура.ТипРезультирующегоДокумента1С) Тогда
						НоваяСтруктура.Вставить("ТипРезультирующегоДокумента1С_Синоним",_ЛокКонтекст.СтруктураМетаданных.Документы1С[СтрокаНастроек.ТипРезультирующегоДокумента1С].Синоним);
					КонецЕсли;
					Если _ЛокКонтекст.СтруктураМетаданных.Документы1С.Свойство(НоваяСтруктура.ТипДокументаMS) Тогда
						НоваяСтруктура.Вставить("ТипДокументаMS_Синоним",_ЛокКонтекст.СтруктураМетаданных.Документы1С[СтрокаНастроек.ТипДокументаMS].Синоним);
					КонецЕсли;
					ПереданнаяТаблица.Добавить(НоваяСтруктура);	
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли ИмяТаблицы = "ВыборДокументаТСД" Тогда
		Заголовок = "Клеверенс: Выбор завершенного документа для загрузки";
		
		МассивНевидимыхКолонок.Добавить("Ид");	
	КонецЕсли;
	
	ЗаполнитьТаблицуВыбораИсходнымиДанными();
	Для Каждого ИмяКолонки Из МассивНевидимыхКолонок Цикл
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если Элементы.ТаблицаВыбора.Колонки.Найти(ИмяКолонки) <> Неопределено Тогда
				Элементы.ТаблицаВыбора.Колонки[ИмяКолонки].Видимость = Ложь;
			КонецЕсли;
		#Иначе
			Если Элементы.Найти("ТаблицаВыбора"+ИмяКолонки) <> Неопределено Тогда
				Элементы["ТаблицаВыбора"+ИмяКолонки].Видимость = Ложь;
			КонецЕсли;
		#КонецЕсли
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуВыбораИсходнымиДанными()
	
	Если ПереданнаяТаблица <> Неопределено И ПереданнаяТаблица <> Ложь Тогда
		УстановитьВидТаблицыВыборки(ПереданнаяТаблица);
		Для Каждого СтрокаДанных Из ПереданнаяТаблица Цикл
			Если СтрокаДанных.Свойство("ЭтоТаблицаЗначений") Тогда
				Продолжить;
			КонецЕсли;
			Если ИмяТаблицы = "БизнесПроцессыДляВыгрузки" Тогда
				Если ЗначениеЗаполнено(СтрокаДанных.ТипИсходногоДокумента1С) Тогда
					ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаДанных);
				КонецЕсли;
			ИначеЕсли ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда	
				ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаДанных);
			ИначеЕсли ИмяТаблицы = "ВыборДокументаТСД" Тогда	
				ЗаполнитьЗначенияСвойств(ТаблицаВыбора.Добавить(), СтрокаДанных);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидТаблицыВыборки(ТЗ)
	
	Если ТипЗнч(ТЗ) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ТЗКолонки = Новый Массив;
	КолонкиСтрокой = ТЗ[0].КолонкиТаблицыЗначений;
	Пока 1 = 1 Цикл
		Поз = Найти(КолонкиСтрокой, ",");
		Если Поз = 0 Тогда
			Если (СокрЛП(КолонкиСтрокой) <> "") Тогда
				ТЗКолонки.Добавить(КолонкиСтрокой);
			КонецЕсли;
			Прервать;
		КонецЕсли;
		ТЗКолонки.Добавить(Лев(КолонкиСтрокой,Поз - 1));
		КолонкиСтрокой = Сред(КолонкиСтрокой, Поз + 1);
	КонецЦикла;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		
		Для Каждого Колонка Из ТЗКолонки Цикл
			
			НовыйЭлемент = ТаблицаВыбора.Колонки.Добавить(Колонка);
			
		КонецЦикла;
		
		НайденныйЭлемент = ТаблицаВыбора.Колонки.Найти("ТипИсходногоДокумента1С_Синоним");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Имя исходного документа 1С";			
		КонецЕсли; 
		
		// +++ временное решение
		НайденныйЭлемент = ТаблицаВыбора.Колонки.Найти("ТипРезультирующегоДокумента1С_Синоним");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Имя результирующего документа 1С";			
		КонецЕсли; 
		НайденныйЭлемент = ТаблицаВыбора.Колонки.Найти("ДатаЗавершения");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Дата завершения";			
		КонецЕсли;
		
		НайденныйЭлемент = ТаблицаВыбора.Колонки.Найти("ИмяПользователя");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Пользователь тсд";			
		КонецЕсли;
		
		НайденныйЭлемент = ТаблицаВыбора.Колонки.Найти("ИмяТипаДокумента");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Операция на тсд";			
		КонецЕсли;
		
		НайденныйЭлемент = ТаблицаВыбора.Колонки.Найти("СтрокиФактКоличество");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Количество (факт)";
		КонецЕсли;
		// --- временное решение
		
		Элементы.ТаблицаВыбора.СоздатьКолонки();
	#Иначе
		ТабВыборки = РеквизитФормыВЗначение("ТаблицаВыбора");	
		МассивРеквизитов = Новый Массив;
		МассивУдаляемыхРеквизитов = Новый Массив;
		
		Для Каждого Колонка Из ТабВыборки.Колонки Цикл
			Если Колонка.Имя = "Выгружать" Тогда
				Продолжить;
			КонецЕсли;
			ИмяЭлементы = Колонка.Имя;
			ЭлементФ = Элементы.Найти(ИмяЭлементы);
			Если ЭлементФ <> Неопределено Тогда 
				МассивУдаляемыхРеквизитов.Добавить("ТаблицаВыбора."+Колонка.Имя);
				Элементы.Удалить(ЭлементФ);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Колонка Из ТЗКолонки Цикл
			
			МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка, Новый ОписаниеТипов(),"ТаблицаВыбора"));
			
		КонецЦикла;
		ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);	
		ИзменитьРеквизиты(МассивРеквизитов);
		
		ТаблицаПолейВыбора = Элементы.ТаблицаВыбора;
		
		Для Каждого Колонка Из ТЗКолонки Цикл
			
			НовыйЭлемент = Элементы.Добавить("ТаблицаВыбора"+Колонка, Тип("ПолеФормы"), ТаблицаПолейВыбора);
			НовыйЭлемент.ПутьКДанным = "ТаблицаВыбора." + Колонка;
			
		КонецЦикла;
		
		// +++ временное решение
		НайденныйЭлемент = Элементы.Найти("ТаблицаВыбораТипИсходногоДокумента1С_Синоним");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Имя исходного документа 1С";			
		КонецЕсли; 
		
		НайденныйЭлемент = Элементы.Найти("ТаблицаВыбораТипРезультирующегоДокумента1С_Синоним");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Имя результирующего документа 1С";			
		КонецЕсли; 
		НайденныйЭлемент = Элементы.Найти("ТаблицаВыбораДатаЗавершения");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Дата завершения";			
		КонецЕсли;
		
		НайденныйЭлемент = Элементы.Найти("ТаблицаВыбораИмяПользователя");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Пользователь тсд";			
		КонецЕсли;
		
		НайденныйЭлемент = Элементы.Найти("ТаблицаВыбораИмяТипаДокумента");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Операция на тсд";			
		КонецЕсли;
		
		НайденныйЭлемент = Элементы.Найти("ТаблицаВыбораСтрокиФактКоличество");
		Если НайденныйЭлемент <> Неопределено Тогда
			НайденныйЭлемент.Заголовок = "Количество (факт)";			
		КонецЕсли;
		// --- временное решение
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВыбор();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыбор()
	
	ОбработатьВыборБизнесПроцесса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ОбработатьВыборБизнесПроцесса(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборБизнесПроцесса(ДляВсех = Ложь)
	
	ВыбраннаяСтрока = Элементы.ТаблицаВыбора.ТекущиеДанные;

	Если ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда
		Если НЕ ЗначениеЗаполнено(СокрЛП(ВыбраннаяСтрока.ТипРезультирующегоДокумента1С)) ИЛИ (ВыбраннаяСтрока.ЗагружатьВТотЖе И НЕ ЗначениеЗаполнено(СокрЛП(ВыбраннаяСтрока.ТипИсходногоДокумента1С))) Тогда
			Сообщить("Данный бизнес-процесс не подразумевает загрузку документа в 1С, т.к. у него не заполнен результирующий документ 1С");
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	

	РезультатВыбора = Новый Структура;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		СписокЭлементов = Элементы.ТаблицаВыбора.Колонки;
		ДлинаПрефикса = 0;
	#Иначе
		СписокЭлементов = Элементы.ТаблицаВыбора.ПодчиненныеЭлементы;
		ДлинаПрефикса = 13;
	#КонецЕсли
	
	Для Каждого КолонкаТЗ Из СписокЭлементов Цикл
		Колонка = Прав(КолонкаТЗ.Имя,СтрДлина(КолонкаТЗ.Имя)-ДлинаПрефикса);
		Если Колонка = "Выгружать" Тогда
			Продолжить;
		КонецЕсли;
		РезультатВыбора.Вставить(Колонка, ВыбраннаяСтрока[Колонка]);
	КонецЦикла;
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Данные", 	РезультатВыбора);
	СтруктураВыбора.Вставить("ДляВсех", ДляВсех);
	
	// Перенесено в ПриЗакрытии(), иначе отрабатывает не в том порядке
	//#Если ТолстыйКлиентОбычноеПриложение Тогда
	//	Если НЕ ОписаниеОповещенияОЗакрытии = Неопределено Тогда	
	//		ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии,СтруктураВыбора);
	//	КонецЕсли;
	//#КонецЕсли
	
	Закрыть(СтруктураВыбора);
	
КонецПроцедуры


#Если ТолстыйКлиентОбычноеПриложение Тогда
	
	Процедура ПриЗакрытии()
	
		// Обработка оповещения для обычных форм
		ВыбраннаяСтрока = Элементы.ТаблицаВыбора.ТекущиеДанные;

		Если ИмяТаблицы = "БизнесПроцессыДляЗагрузки" Тогда
			Если НЕ ЗначениеЗаполнено(СокрЛП(ВыбраннаяСтрока.ТипРезультирующегоДокумента1С)) ИЛИ (ВыбраннаяСтрока.ЗагружатьВТотЖе И НЕ ЗначениеЗаполнено(СокрЛП(ВыбраннаяСтрока.ТипИсходногоДокумента1С))) Тогда
				Сообщить("Данный бизнес-процесс не подразумевает загрузку документа в 1С, т.к. у него не заполнен результирующий документ 1С");
				Отказ = Истина;
			КонецЕсли;	
		КонецЕсли;	
	
		РезультатВыбора = Новый Структура;
		СписокЭлементов = Элементы.ТаблицаВыбора.Колонки;
		ДлинаПрефикса = 0;
	
		Для Каждого КолонкаТЗ Из СписокЭлементов Цикл
			Колонка = Прав(КолонкаТЗ.Имя,СтрДлина(КолонкаТЗ.Имя)-ДлинаПрефикса);
			Если Колонка = "Выгружать" Тогда
				Продолжить;
			КонецЕсли;
			РезультатВыбора.Вставить(Колонка, ВыбраннаяСтрока[Колонка]);
		КонецЦикла;
		СтруктураВыбора = Новый Структура;
		СтруктураВыбора.Вставить("Данные", РезультатВыбора);
		
		Если НЕ ОписаниеОповещенияОЗакрытии = Неопределено Тогда	
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии, СтруктураВыбора);
		КонецЕсли;
		//\\
	
	КонецПроцедуры	

	ПолноеИмяОбъекта = ЭтотОбъект.Метаданные().ПолноеИмя();
	Элементы = ЭлементыФормы;
	Объект = ЭтотОбъект;
#КонецЕсли