#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьПараметры(Форма, ПереданныеПараметры, ВидыОплат, Товары) Экспорт
	
	ЗаполнитьЗначенияСвойств(Форма, ПереданныеПараметры);
	
	Для Каждого Товар Из Товары Цикл
			
		НовыйТовар = Форма.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйТовар, Товар);
			
	КонецЦикла;
	
	Если ВидыОплат.Количество() > 0  Тогда
		
		ГруппаСтраницы = Форма.Элементы.ГруппаСтраницы;
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОсновнаяСтраница;
	
		Если НЕ Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
			Форма.Элементы.ИдентификаторОплаты.Видимость			= ?(ЗначениеЗаполнено(Форма.ДокументОплаты), Ложь, Истина);
		КонецЕсли;			
		
		Если ЗначениеЗаполнено(Форма.ВидОплатыПлатежнойСистемы) Тогда
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоВидуОплаты(Форма);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Функция ОпределитьВидОплатыПоОперациямДокумента(Форма, ДокументОперации) Экспорт
	
	ПараметрыОплаты	= Новый Структура("ВидОплаты, ПлатежнаяСистема");
	
	ТорговыеТочки 	= ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ТорговыеТочкиОперации(ДокументОперации);
	
	Для Каждого Интеграция ИЗ ТорговыеТочки Цикл
		
		СтрокиОплаты = Форма.ВидыОплат.НайтиСтроки(Новый Структура("Интеграция", Интеграция));
		
		Если СтрокиОплаты.Количество() Тогда
			ПараметрыОплаты.ВидОплаты		 = СтрокиОплаты[0].ВидОплаты;
			ПараметрыОплаты.ПлатежнаяСистема = СтрокиОплаты[0].ПлатежнаяСистема;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПараметрыОплаты;
	
КонецФункции

Функция ОпределитьПлатежнуюСистемуВидаОплаты(Форма, ВыбраннаяОрганизация = Неопределено) Экспорт
	
	Если ВыбраннаяОрганизация = Неопределено Тогда
		Ключ = Новый Структура("ВидОплаты", Форма.ВидОплатыПлатежнойСистемы);
	Иначе
		Ключ = Новый Структура("ВидОплаты, Организация", Форма.ВидОплатыПлатежнойСистемы, ВыбраннаяОрганизация)
	КонецЕсли;
	
	СтрокиОплаты = Форма.ВидыОплат.НайтиСтроки(Ключ);
		
	Если СтрокиОплаты.Количество() Тогда
		ПлатежнаяСистема = СтрокиОплаты[0].ПлатежнаяСистема;
	КонецЕсли;
	
	Возврат ПлатежнаяСистема;
	
КонецФункции

Функция ПараметрыИнициализации() Экспорт
	
	ПереданныеПараметры = Новый Структура;
	
	// обязательные параметры
	ПереданныеПараметры.Вставить("ДокументВозврата");
	ПереданныеПараметры.Вставить("ДокументОплаты");
	ПереданныеПараметры.Вставить("ИтогПоОрганизации");
	ПереданныеПараметры.Вставить("НомерДокумента");
	ПереданныеПараметры.Вставить("ВидОперации");
	ПереданныеПараметры.Вставить("Оплачивается");
	ПереданныеПараметры.Вставить("ВидОплатыПлатежнойСистемы");
	ПереданныеПараметры.Вставить("РазрешитьОплатуВозвратБезПодтвержденияОтПлатежнойСистемы");
	
	// параметры оплаты через чек ККМ
	ПереданныеПараметры.Вставить("Магазин");
	ПереданныеПараметры.Вставить("Организация");
	ПереданныеПараметры.Вставить("КассаККМ");
	ПереданныеПараметры.Вставить("КлючСвязиТПЧеков");
	
	// параметры возврата
	ПереданныеПараметры.Вставить("ИдентификаторОплаты");
	ПереданныеПараметры.Вставить("ВидОплатыВозврата");
	
	// интерфейс
	ПереданныеПараметры.Вставить("НадписьЗаголовок");
	ПереданныеПараметры.Вставить("ЦветТекстаЗаголовка");
	
	Возврат ПереданныеПараметры;	
	
КонецФункции

Функция СтрокаТоваров() Экспорт
	
	ТоварыУслуги = Новый Структура;
	ТоварыУслуги.Вставить("Артикул");
	ТоварыУслуги.Вставить("Наименование");
	ТоварыУслуги.Вставить("ЕдиницаИзмерения");
	ТоварыУслуги.Вставить("Количество");
	ТоварыУслуги.Вставить("Цена");
	ТоварыУслуги.Вставить("Сумма");
	ТоварыУслуги.Вставить("СуммаСкидки");
	
	Возврат ТоварыУслуги;	
	
КонецФункции

#Область ИнтерфейсФормы

Функция ТекущаяСтраница(Страница) Экспорт
	
	Возврат (Страница.Родитель.ТекущаяСтраница = Страница);
	
КонецФункции

Процедура УстановитьТекущуюСтраницу(Страница) Экспорт
	
	Страница.Родитель.ТекущаяСтраница = Страница;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура НастроитьФормуПоВидуОплаты(Форма) Экспорт
	
	ПараметрыВидаОплат 	= Новый Структура;
	ВидыОплат 			= Форма.ВидыОплат.НайтиСтроки(Новый Структура("ВидОплаты", Форма.ВидОплатыПлатежнойСистемы));
	
	ПараметрыВидаОплат.Вставить("Интеграция", 					ВидыОплат[0].Интеграция);
	ПараметрыВидаОплат.Вставить("ТипПлатежнойСистемы",			ВидыОплат[0].ПлатежнаяСистема);
	
	НастройкиИнтеграции = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.НастройкиТорговойТочки(ВидыОплат[0].Интеграция);
	
	ПараметрыВидаОплат.Вставить("НастройкиИнтеграции", НастройкиИнтеграции);
	
	ЗаполнитьЗначенияСвойств(Форма, ПараметрыВидаОплат);
	
	Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда
		
		Если НастройкиИнтеграции.ВыборПлатежнойСистемыВозврата Тогда
			
			Для Каждого КлючЗначение Из НастройкиИнтеграции.ПлатежныеСистемыВозврата Цикл
				
				Форма.Элементы.ПлатежнаяСистема.СписокВыбора.Добавить(
					КлючЗначение.Ключ,
					КлючЗначение.Значение);
					
				Форма.Элементы.ПлатежнаяСистема.СписокВыбора.СортироватьПоПредставлению();
				
			КонецЦикла;
			
		КонецЕсли;
		
		Форма.Элементы.ПлатежнаяСистема.Видимость 		= Форма.Элементы.ПлатежнаяСистема.СписокВыбора.Количество() > 0;
		
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
	
КонецПроцедуры

Процедура НастроитьФормуПоИнтеграции(Форма, ОписаниеОшибки = "", ТекстДлительнойОперации = "") Экспорт
	
	Элементы				= Форма.Элементы;
	НастройкиИнтеграции		= Форма.НастройкиИнтеграции;
	ЭтоПродажа 				= Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа");
	ЕстьКомандаОтложить		= Форма.Элементы.Найти("ФормаОтложить") <> Неопределено;
	ГруппаСтраницы			= Форма.Элементы.ГруппаСтраницы;
	
	Если ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОсновнаяСтраница Тогда
		
		Если Форма.Элементы.Найти("ИтогПоОрганизации") <> Неопределено Тогда
			Элементы.ИтогПоОрганизации.Заголовок = ?(ЭтоПродажа, НСтр("ru = 'К оплате'"), НСтр("ru = 'К возврату'"));
		КонецЕсли;
		
		Элементы.ГруппаВозврат.Видимость		 		= Не ЭтоПродажа;
		Элементы.ГруппаПродажа.Видимость		 		= ЭтоПродажа;
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость			= Ложь;
		КонецЕсли;
		
		Если Не ЭтоПродажа Тогда
			Элементы.ФормаЗавершитьОплату.Видимость		= Истина;
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Доступность		= Истина;
		Элементы.ФормаЗавершитьОплату.Заголовок  		= ?(ЭтоПродажа, НСтр("ru = 'Создать QR-код'"), НСтр("ru = 'Вернуть'"));
		Элементы.ФормаОтменитьОплату.Видимость  		= Ложь;
		
		Элементы.ФормаЗавершитьПринудительно.Видимость	= Ложь;
		
		Форма.ТекущийЭлемент 							= ?(ЗначениеЗаполнено(Форма.ВидОплатыПлатежнойСистемы), Форма.Элементы.ФормаЗавершитьОплату,
															?(ЭтоПродажа, Форма.Элементы.ВидыОплатПС, 
																Форма.Элементы.ВидОплатыПлатежнойСистемы));
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаДлительнаяОперация Тогда
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость			= Ложь;
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Доступность 		= Ложь;
		Элементы.ФормаЗавершитьПринудительно.Видимость	= Ложь;
		
		Если Форма.Оплачивается Тогда 
			Элементы.ДекорацияНадписьДлительнаяОперация.Заголовок = ?(ЭтоПродажа, 
																		НСтр("ru = 'Получение подтверждения оплаты. Пожалуйста, подождите...'"),
																		НСтр("ru = 'Получения подтверждения возврата. Пожалуйста, подождите...'"));
		Иначе
			Элементы.ДекорацияНадписьДлительнаяОперация.Заголовок = ?(ЭтоПродажа, 
																		НСтр("ru = 'Формирование QR-кода в платежной системе. Пожалуйста, подождите...'"),
																		НСтр("ru = 'Выполнение возврата в платежной системе. Пожалуйста, подождите...'"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстДлительнойОперации) Тогда
			Элементы.ДекорацияНадписьДлительнаяОперация.Заголовок = ТекстДлительнойОперации; 
		КонецЕсли;
		
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаQRКод Тогда
		
		ЕстьКомандаИнструкция	= Форма.Элементы.Найти("ФормаИнструкция") <> Неопределено;
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость		= Не ЕстьКомандаИнструкция;
			Элементы.ФормаОтложить.Заголовок 		= НСтр("ru = 'Инструкция'");
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Заголовок 		= НСтр("ru = 'Пречек'");
		Элементы.ФормаЗавершитьОплату.Видимость			= Истина;
		Элементы.ФормаЗавершитьОплату.Доступность 		= Истина;
		Элементы.ФормаЗавершитьПринудительно.Видимость	= Ложь;
		
		Форма.ТекущийЭлемент 							= Форма.Элементы.ФормаЗавершитьОплату;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаПодтверждение Тогда
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость			= Ложь;
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Видимость			= Истина;
		Элементы.ФормаЗавершитьОплату.Доступность		= Истина;
		Элементы.ФормаЗавершитьОплату.Заголовок 		= НСтр("ru = 'Подтв.'");
		
		Элементы.ФормаЗавершитьПринудительно.Видимость	= Ложь;
		
		Форма.ТекущийЭлемент 							= Форма.Элементы.ФормаЗавершитьОплату;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаВыполняется Тогда
		
		Элементы.ДекорацияНадписьВыполняется.Заголовок 	= ?(ЭтоПродажа, 
																НСтр("ru = 'Платежная система не подтвердила оплату.'"),
																НСтр("ru = 'Платежная система не подтвердила возврат.'"));
		
		
		Если ЕстьКомандаОтложить Тогда
			
			Элементы.ФормаОтложить.Видимость		= Не Форма.Оплачивается;
			Элементы.ФормаОтложить.Заголовок 		= НСтр("ru = 'Отлож. чек'");

		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Видимость			= Истина;
		Элементы.ФормаЗавершитьОплату.Доступность		= Истина;
		Элементы.ФормаЗавершитьОплату.Заголовок 		= НСтр("ru = 'Повтор'");
		
		Элементы.ФормаЗавершитьПринудительно.Видимость	= Форма.РазрешитьОплатуВозвратБезПодтвержденияОтПлатежнойСистемы;
		Элементы.ФормаЗавершитьПринудительно.Заголовок	= ?(ЭтоПродажа, НСтр("ru = 'Подтв. оплату'"), НСтр("ru = 'Подтв. возврат'"));
		
		Форма.ТекущийЭлемент 							= Форма.Элементы.ФормаЗавершитьОплату;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаЗавершение Тогда
		
		АвтоматическаяФискализация = Форма.Элементы.Найти("ДекорацияАвтоматическаяФискализация") <> Неопределено;
		
		Если НЕ Форма.БылоПодтверждениеПлатежнойСистемы Тогда
			Элементы.ДекорацияНадписьУспешноеЗавершение.Заголовок = ?(ЭтоПродажа, НСтр("ru = 'Ручное подтверждение оплаты.'"), НСтр("ru = 'Ручное подтверждение возврата.'"));
		Иначе
			Элементы.ДекорацияНадписьУспешноеЗавершение.Заголовок = ?(ЭтоПродажа, НСтр("ru = 'Оплата успешно выполнена.'"), НСтр("ru = 'Возврат успешно выполнен.'"));
		КонецЕсли;
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость			= Ложь;
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Видимость			= Не АвтоматическаяФискализация;
		Элементы.ФормаЗавершитьОплату.Доступность		= Истина;
		Элементы.ФормаЗавершитьОплату.Заголовок 		= НСтр("ru = 'Готово'");
		Элементы.ФормаЗавершитьПринудительно.Видимость	= Ложь;
		
		Элементы.ФормаОтменитьОплату.Видимость  		= Не АвтоматическаяФискализация 
															И НастройкиИнтеграции.ОтменаОплаты 
															И Форма.БылоПодтверждениеПлатежнойСистемы;
															
		Если Не АвтоматическаяФискализация Тогда
			Форма.ТекущийЭлемент 							= Форма.Элементы.ФормаЗавершитьОплату;
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибка Тогда
		
		ЕстьКомандаЗакрыть = Форма.Элементы.Найти("ДекорацияЗакрытьФормуПлатежныеСистемы") <> Неопределено;
		
		ЧастиСтрок = Новый Массив;
		ЧастиСтрок.Добавить(ОписаниеОшибки);
		ЧастиСтрок.Добавить(Символы.ПС);
		ЧастиСтрок.Добавить(Символы.ПС);
		
		Элементы.ДекорацияОписаниеОшибки.Заголовок		= Новый ФорматированнаяСтрока(ЧастиСтрок);
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость			= Ложь;
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Видимость			= НЕ ЕстьКомандаЗакрыть;
		Элементы.ФормаЗавершитьОплату.Доступность		= Истина;
		Элементы.ФормаЗавершитьОплату.Заголовок 		= НСтр("ru = 'Закрыть'");
		Элементы.ФормаЗавершитьПринудительно.Видимость 	= Ложь;
		
		Форма.ТекущийЭлемент 							= Форма.Элементы.ФормаЗавершитьОплату;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибкаПолученияСтатуса Тогда
		
		ЧастиСтрок = Новый Массив;
		ЧастиСтрок.Добавить(ОписаниеОшибки);
		ЧастиСтрок.Добавить(Символы.ПС);
		ЧастиСтрок.Добавить(Символы.ПС);
		
		Элементы.ДекорацияОписаниеОшибкиПолученияСтатуса.Заголовок 	= Новый ФорматированнаяСтрока(ЧастиСтрок);
		
		Если ЕстьКомандаОтложить Тогда
			Элементы.ФормаОтложить.Видимость		= Не Форма.Оплачивается;
			Элементы.ФормаОтложить.Заголовок 		= НСтр("ru = 'Отложить чек'");
		КонецЕсли;
		
		Элементы.ФормаЗавершитьОплату.Видимость			= Истина;
		Элементы.ФормаЗавершитьОплату.Доступность 		= Истина;
		Элементы.ФормаЗавершитьОплату.Заголовок 		= НСтр("ru = 'Повторить '");
		
		Элементы.ФормаЗавершитьПринудительно.Видимость 	= Форма.РазрешитьОплатуВозвратБезПодтвержденияОтПлатежнойСистемы;
		Элементы.ФормаЗавершитьПринудительно.Заголовок	= ?(ЭтоПродажа, НСтр("ru = 'Подтв. оплату'"), НСтр("ru = 'Подтв. возврат'"));
		
		Форма.ТекущийЭлемент 							= Форма.Элементы.ФормаЗавершитьОплату;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НоваяЗаявка(Форма) Экспорт 
	
	Заявка = Новый Структура;
	Заявка.Вставить("ДокументОплаты", 	   		Форма.ДокументОплаты);
	Заявка.Вставить("ИтогПоЧеку", 		   		Форма.ИтогПоОрганизации);
	Заявка.Вставить("НомерДокумента", 	   		Форма.НомерДокумента);
	Заявка.Вставить("Дата",				   		ТекущаяДата());
	Заявка.Вставить("Интеграция", 				Форма.Интеграция);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Организация") Тогда
		Заявка.Вставить("Организация",    	   		Форма.Организация);
	Иначе
		Заявка.Вставить("Организация",    	   		Форма.ВыбраннаяОрганизация);
	КонецЕсли;
	
	Если Не Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
		
		Заявка.Вставить("ДокументОплаты",		Форма.ДокументОплаты); 
		Заявка.Вставить("ДокументВозврата", 	Форма.ДокументВозврата);
		Заявка.Вставить("ИдентификаторОплаты", 	Форма.ИдентификаторОплаты);
		Заявка.Вставить("ПлатежнаяСистема",    	?(ЗначениеЗаполнено(Форма.ПлатежнаяСистема),
													Форма.ПлатежнаяСистема,
													Неопределено));
		
	Иначе
		
		Товары = Новый Массив;
		
		Для Каждого СтрокаТоваров ИЗ Форма.Товары Цикл
			
			СтруктураСтроки = Новый Структура("Артикул,Наименование,ЕдиницаИзмерения,Количество,Цена,Сумма,СуммаСкидки");
			ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТоваров);
			
			Товары.Добавить(СтруктураСтроки);
			
		КонецЦикла;
													
		Заявка.Вставить("Товары", Товары);
		
	КонецЕсли;
	
	Возврат Заявка;
	
КонецФункции

#КонецОбласти
