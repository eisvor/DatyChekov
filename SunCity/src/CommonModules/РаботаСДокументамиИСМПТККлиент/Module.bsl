
#Область ОтборПоОрганизации

Процедура ОткрытьФормуВыбораОрганизаций(Форма, Префикс, Префиксы = Неопределено, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Организации", Форма.Организации.ВыгрузитьЗначения());
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("Префикс",                 Префикс);
	ДополнительныеПараметры.Вставить("Префиксы",                Префиксы);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСпискаОрганизацийИСМПТК",
				 ПараметрыОткрытияФормы,
				 Форма,,,,
				 Новый ОписаниеОповещения("ПослеЗавершенияВыбораОрганизаций", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

Процедура ПослеЗавершенияВыбораОрганизаций(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма             = ДополнительныеПараметры.Форма;
	СписокОрганизаций = Результат.Организации;
	ПрименятьОтбор    = ДополнительныеПараметры.ОповещениеПриЗавершении = Неопределено;
	
	Если Результат.СохраненыНастройки Тогда
		Форма.ЗаполнитьСписокВыбораОрганизацииПоСохраненнымНастройкам();
	КонецЕсли;
	
	ОбработатьВыборОрганизаций(Форма, СписокОрганизаций, ПрименятьОтбор, ДополнительныеПараметры.Префикс, ДополнительныеПараметры.Префиксы);
	
	Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, СписокОрганизаций);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВыборОрганизаций(Форма, Результат, ПрименятьОтбор, Префикс = Неопределено, Префиксы = Неопределено) Экспорт
	
	НастроитьОтборПоОрганизации(Форма, Результат, Префикс, Префиксы);
	
	Если ПрименятьОтбор Тогда
		ОрганизацияОтборПриИзменении(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияОтборПриИзменении(Форма)
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Список") Тогда
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список,	"Организация", Форма.Организации, ВидСравненияКомпоновкиДанных.ВСписке,,Форма.Организации.Количество() > 0);
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СписокЗакрытые") Тогда
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокЗакрытые, "Организация", Форма.Организации, ВидСравненияКомпоновкиДанных.ВСписке,,Форма.Организации.Количество() > 0);
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СписокКОформлению") Тогда
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокКОформлению, "Организация", Форма.Организации, ВидСравненияКомпоновкиДанных.ВСписке,, Форма.Организации.Количество() > 0);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьОтборПоОрганизации(Форма, Результат, Префикс = Неопределено, Знач ЗначениеПрефиксы = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		Форма.Организации.ЗагрузитьЗначения(Результат);
	ИначеЕсли ТипЗнч(Результат) = Тип("СписокЗначений") Тогда
	ИначеЕсли Результат = Неопределено Тогда
		Форма.Организации.Очистить();
	Иначе
		Форма.Организации.Очистить();
		ЭлементСписка = Форма.Организации.Добавить();
		ЭлементСписка.Значение = Результат;
		Если Не(ЭлементСписка.Значение = Результат) Тогда
			Форма.Организации.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Организации.Количество() = 1 Тогда
		Форма.Организация = Форма.Организации.Получить(0).Значение;
		Форма.ОрганизацииПредставление = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(Форма.Организация, "Представление");
	ИначеЕсли Форма.Организации.Количество() = 0 Тогда
		Форма.Организация = Неопределено;
		Форма.ОрганизацииПредставление = "";
	Иначе
		Форма.Организация = Неопределено;
		Форма.ОрганизацииПредставление = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(Форма.Организация, "Представление");
	КонецЕсли;
	
	Если ЗначениеПрефиксы = Неопределено Тогда
		Префиксы = Новый Массив;
		Префиксы.Добавить("Оформлено");
		Префиксы.Добавить("КОформлению");
	Иначе
		Если ТипЗнч(ЗначениеПрефиксы) = Тип("Строка") Тогда
			Префиксы = Новый Массив();
			Префиксы.Добавить(ЗначениеПрефиксы);
		Иначе
			Префиксы = ЗначениеПрефиксы;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Значение Из Префиксы Цикл
		
		Если Форма.Организации.Количество() > 1 Тогда
			Окончание = "Организации";
		Иначе 
			Окончание = "Организация";
		КонецЕсли;
		
		Если Значение = "Отбор" Тогда
			Постфикс = Окончание;
		Иначе
			Постфикс = "Отбор" + Окончание;
		КонецЕсли;
		
		СтраницыОтбораОрганизация = Форма.Элементы.Найти("Страницы" + Значение + Постфикс);
		Если СтраницыОтбораОрганизация <> Неопределено Тогда
			СтраницыОтбораОрганизация.ТекущаяСтраница = Форма.Элементы["Страница" + Значение + Окончание];
		КонецЕсли;
	КонецЦикла;
	
	Если Префикс <> Неопределено Тогда
		ЭлементОтбораОрганизация = Форма.Элементы.Найти(Префикс + ?(Форма.Организации.Количество() > 1,
		                                                                "Организации",
		                                                                "Организация"));
		Если ЭлементОтбораОрганизация <> Неопределено Тогда
			Форма.ТекущийЭлемент = ЭлементОтбораОрганизация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьПервичныйДокумент(Знач Параметры) Экспорт
	
	Если Параметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметры) = Тип("Структура") Тогда 
		Параметр = Параметры.ИсходныйДокумент;
		ТипСоздаваемогоДокумента = Параметры.СоздаваемыйДокумент; 
	Иначе
		Параметр = Параметры;
	КонецЕсли;
	
	МассивИСМПТДляСозданияПервичныхДокументов = МассивДокументовИСМПТ(Параметр);
	
	Если МассивИСМПТДляСозданияПервичныхДокументов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураМассивИСМПТ = РаботаСДокументамиИСМПТКВызовСервера.МассивИСМПТСДокументомОснованияИБез(Параметр);
	МассивИСМПТСДокументомОснования  = СтруктураМассивИСМПТ.МассивИСМПТСДокументомОснования;
	МассивИСМПТБезДокументаОснования = СтруктураМассивИСМПТ.МассивИСМПТБезДокументаОснования;	
	
	Если МассивИСМПТДляСозданияПервичныхДокументов.Количество() > 1 Тогда 
		
		Если МассивИСМПТСДокументомОснования.Количество() <> 0 Тогда
			ТекстВопроса = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияУжеСозданыОснованияПоСпискуСоздатьНовыеДокументы();
			ТекстМассивИСМПТСДокументомОснования = "";
			Для Каждого СтрокаМассива Из МассивИСМПТСДокументомОснования Цикл
				ТекстМассивСДокументамиОснования = ТекстМассивИСМПТСДокументомОснования + ?(ТекстМассивИСМПТСДокументомОснования = "", "", "; 
				|") + СтрокаМассива;																									
			КонецЦикла;	
			ПодстрокаЗамены = Символы.ПС
			                + ТекстМассивСДокументамиОснования
							+ Символы.ПС;
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%СписокДокументов%", ТекстМассивСДокументамиОснования);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("МассивИСМПТДляСозданияПервичныхДокументов", МассивИСМПТДляСозданияПервичныхДокументов);
			ДополнительныеПараметры.Вставить("МассивИСМПТБезДокументаОснования", 		  МассивИСМПТБезДокументаОснования);
			ДополнительныеПараметры.Вставить("ТипСоздаваемогоДокумента", 		  		  ТипСоздаваемогоДокумента);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьСписокПервичныхДокументовЗавершение", ЭтотОбъект , ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ТекстВопроса = НСтр("ru = 'Для выделенных документов будут созданы и записаны первичные документы.'")
						 + Символы.ПС
						 + НСтр("ru = 'Продолжить?'");
			ТекстМассивИСМПТСДокументомОснования = "";
			
			ДополнительныеПараметры = Новый Структура("МассивИСМПТДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента", МассивИСМПТДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента);
			ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;	
		
	ИначеЕсли МассивИСМПТДляСозданияПервичныхДокументов.Количество() = 1 Тогда
		
		Если МассивИСМПТСДокументомОснования.Количество() <> 0  Тогда
			ТекстВопроса = НСтр("ru = 'На основании выбранного документа уже создан документ-основание.'")
						 + Символы.ПС
						 + НСтр("ru = 'Создать новый документ?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Для документа будет создан и записан первичный документ.'")
						 + Символы.ПС
						 + НСтр("ru = 'Продолжить?'");
		КонецЕсли;	
		
		ДополнительныеПараметры = Новый Структура("МассивИСМПТДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента", МассивИСМПТДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента);
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе	
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы один документ.'"));
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьСписокПервичныхДокументовЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры = Новый Структура("МассивИСМПТДляСозданияПервичныхДокументов", ДополнительныеПараметры.МассивИСМПТДляСозданияПервичныхДокументов);
	Иначе
		ДополнительныеПараметры = Новый Структура("МассивИСМПТДляСозданияПервичныхДокументов", ДополнительныеПараметры.МассивИСМПТБезДокументаОснования);
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Для выделенных документов будут созданы и записаны документы поступления.'")
				 + Символы.ПС
				 + НСтр("ru = 'Продолжить?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура СоздатьПервичныеДокументыЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
	 
		СписокПервичныхДокументов = РаботаСДокументамиИСМПТКВызовСервера.СоздатьСписокПервичныхДокументов(ДополнительныеПараметры);
		
		Если СписокПервичныхДокументов <> Неопределено И СписокПервичныхДокументов.Количество() > 0 Тогда
			
			ИмяТиповогоДокумента = ИнтеграцияИСМПТКВызовСервера.ПолучитьИмяДокументаПоСсылке(СписокПервичныхДокументов[0]);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьПервичногоДокументаПриСоздании(), ДополнительныеПараметры.МассивИСМПТДляСозданияПервичныхДокументов);
			
			Если СписокПервичныхДокументов.Количество() > 1 Тогда
				
				ПараметрыФормы = Новый Структура;	
				ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", Новый ФиксированныйМассив(СписокПервичныхДокументов)));
				ОткрытьФорму("Документ." + ИмяТиповогоДокумента + ".Форма.ФормаСписка", ПараметрыФормы,, Истина);
				
			Иначе 
				ПоказатьЗначение(, СписокПервичныхДокументов[0]);
			Конецесли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив документов ИСМПТ, полученный из формы документа или списка.
//
// Параметры:
//  Параметр - УправляемаяФорма, Форма, Массив, ВыделенныеСтрокиТабличногоПоля - 
//   Форма документа счета-фактуры или выделенные строки списка счетов-фактур.
//
// Возвращаемое значение:
//  Массив, Неопределено - Массив ссылок на СНТ.
//   Если форма документа модифицирована и пользователь отказался от записи, то Неопределено.
//
Функция МассивДокументовИСМПТ(Знач Параметр) Экспорт
	
	ЭтоФорма = Ложь;
	ЭтоКоллекция = Ложь;
	
	#Если ТолстыйКлиентУправляемоеПриложение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда
		Если ТипЗнч(Параметр) = Тип("ФормаКлиентскогоПриложения") ИЛИ ТипЗнч(Параметр) = Тип("Форма") Тогда
			ЭтоФорма = Истина;
		ИначеЕсли ТипЗнч(Параметр) = Тип("Массив") ИЛИ ТипЗнч(Параметр) = Тип("ВыделенныеСтрокиТабличногоПоля") Тогда
			ЭтоКоллекция = Истина;	
		КонецЕсли;
	#Иначе
		Если ТипЗнч(Параметр) = Тип("ФормаКлиентскогоПриложения") Тогда
			ЭтоФорма = Истина;	
		ИначеЕсли ТипЗнч(Параметр) = Тип("Массив") Тогда
			ЭтоКоллекция = Истина;	
		КонецЕсли;
	#КонецЕсли
	
	Если ЭтоФорма Тогда
		Форма = Параметр;
		// производим запись без вопроса
		Если ИнтеграцияИСМПТККлиент.ОбъектЗаписан(Форма) Тогда
			СсылкаДокументИСМПТ = ?(ОбщегоНазначенияИСМПТККлиентСервер.ЭтоОбычнаяФорма(Форма), Форма.Ссылка, Форма.Объект.Ссылка);
			МассивИСМПТ = Новый Массив;
			МассивИСМПТ.Добавить(СсылкаДокументИСМПТ);
		Иначе
			МассивИСМПТ = Неопределено;
		КонецЕсли;	
	ИначеЕсли ЭтоКоллекция Тогда
		КоллекцияИСМПТ = Параметр;
		МассивИСМПТ = Новый Массив;
		Для Каждого СсылкаДокументИСМПТ Из КоллекцияИСМПТ Цикл
			МассивИСМПТ.Добавить(СсылкаДокументИСМПТ);
		КонецЦикла;			
	КонецЕсли;
	
	Возврат МассивИСМПТ;
	
КонецФункции

// Проверяет корректность заполнения Документов ИСМПТ и показывает сообщения.
//
// Параметры:
//  МассивИсходящихДокументов - Массив - Массив документов, которые необходимо отправить в ИС МПТ.
//   Каждый элемент массива должен иметь тип ДокументСсылка./ИмяДокументаИСМПТ/.
//
Процедура ПроверитьИсходящиеДокументыИСМПТ(Знач МассивИсходящихДокументов) Экспорт
	
	РаботаСДокументамиИСМПТКВызовСервера.ПроверитьИсходящиеДокументыИСМПТ(МассивИсходящихДокументов);
		
КонецПроцедуры

Функция ПолучитьСписокДляОтбораМаркируемойПродукции() Экспорт
	
	Возврат ИнтеграцияИСМПТККлиентПереопределяемый.ПолучитьСписокДляОтбораМаркируемойПродукции();
	
КонецФункции

Функция ОпределитьТипДокументаПоСсылке(ДокументСсылка) Экспорт
	
	ТипДокумента = "";
	//ИСЦЭДМ
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктПриемаПередачиИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВводеВОборотИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВводеВОборотИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВыводеИзОборотаИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВыводеИзОборотаИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АгрегацияВнеПроизводстваИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАгрегацияВнеПроизводстваИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктВнутреннегоПеремещенияИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктВнутреннегоПеремещенияИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ(); 
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСЦЭДМ();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОРасхожденияхИСЦЭДМ") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОРасхожденияхИСЦЭДМ();
		
	//ИСМПТ	
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОРасхожденииИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОРасхожденииИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВводеВОборотИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВводеВОборотИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОВыводеИзОборотаИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВыводеИзОборотаИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОбЭкспортеЕАЭСИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОбЭкспортеЕАЭСИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОПриемкеЕАЭСИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОПриемкеЕАЭСИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.УведомлениеОбОтгрузкеЕАЭСИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОбОтгрузкеЕАЭСИСМПТК();
		
	//СУЗ
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказКодовМаркировкиСУЗИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаЗаказКодовМаркировкиСУЗИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АгрегацияКодовМаркировкиСУЗИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАгрегацияКодовМаркировкиСУЗИСМПТК();
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.НанесениеКодовМаркировкиСУЗИСМПТК") Тогда
		
		ТипДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаНанесениеКодовМаркировкиСУЗИСМПТК(); 

	КонецЕсли;
	
	Возврат ТипДокумента;
	
КонецФункции

#КонецОбласти

////////ВВОД ДОКУМЕНТОВ НА ОСНОВАНИИ////////
#Область ВводНаОснованииИСМПТ

Процедура ОткрытьДокументИСМПТ_ДокументОснование(Форма, ДанныеДокументИСМПТ) Экспорт
	
	ДокументИСМПТ	 = ДанныеДокументИСМПТ.ИСМПТ;
	ДокументИсточник = Форма.Объект.Ссылка;
	
	ТипДокументаИСМПТ = Неопределено;
	Если ЗначениеЗаполнено(ДокументИСМПТ) Тогда
		ТипДокументаИСМПТ = ТипЗнч(ДокументИСМПТ);
	КонецЕсли;
	
	ИмяФормыДокументаИСМПТ = РаботаСДокументамиИСМПТККлиентПереопределяемый.ПолучитьИмяФормыДокументаИСМПТ(ДокументИсточник, ТипДокументаИСМПТ);
	
	Если ТипЗнч(ДокументИСМПТ) <> Тип("СписокЗначений") И ЗначениеЗаполнено(ДокументИСМПТ) Тогда
		
		ПоказатьЗначение(,ДокументИСМПТ);
						
	ИначеЕсли ТипЗнч(ДокументИСМПТ) = Тип("СписокЗначений") И ЗначениеЗаполнено(ДокументИСМПТ) Тогда
		
		ТекстСообщения = НСтр("ru='Документы (%КоличествоДокументов%)'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоДокументов%", ДокументИСМПТ.Количество()); 
		
		ИмяОбщейФормы = РаботаСДокументамиИСМПТККлиентПереопределяемый.ПолучитьИмяОбщейФормыПросмотрСпискаДокументов();
		Если ДокументИСМПТ.Количество() > 1 Тогда
			СтандартнаяОбработка = Ложь;
			ОткрытьФорму(ИмяОбщейФормы,
			Новый Структура("СписокДокументов, Заголовок", ДокументИСМПТ, ТекстСообщения),
			Форма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
		
	Иначе
		
		ПараметрыФормы = Новый Структура("Основание", Форма.Параметры.Ключ);
		ОткрытьФорму(ИмяФормыДокументаИСМПТ, ПараметрыФормы, Форма);
		
	КонецЕсли;
	
КонецПроцедуры

#Область КомандыСоздания

Процедура СоздатьУведомлениеОВвозеЕАЭСИСМПТ(Знач Параметр, ДопПараметр) Экспорт
	
	СоздатьДокументИСМПТ(Параметр, ДопПараметр);
	
КонецПроцедуры

Процедура СоздатьУведомлениеОВвозеИмпортИСМПТ(Знач Параметр, ДопПараметр) Экспорт
	
	СоздатьДокументИСМПТ(Параметр, ДопПараметр);
	
КонецПроцедуры

Процедура СоздатьВводВОборотИСМПТ(Знач Параметр, ДопПараметр) Экспорт
	
	СоздатьДокументИСМПТ(Параметр, ДопПараметр);
	
КонецПроцедуры

Процедура СоздатьВыводИзОборотаИСМПТ(Знач Параметр, ДопПараметр) Экспорт
	
	СоздатьДокументИСМПТ(Параметр, ДопПараметр);
	
КонецПроцедуры

Процедура СоздатьАППИсходИСМПТ(Знач Параметр, ДопПараметры) Экспорт
	
	СоздатьДокументИСМПТ(Параметр, ДопПараметры);
	
КонецПроцедуры

Процедура СоздатьЭкспортЕАЭСИСМПТ(Знач Параметр, ДопПараметры) Экспорт
	
	СоздатьДокументИСМПТ(Параметр, ДопПараметры);	
	
КонецПроцедуры

Процедура СоздатьДокументИСМПТ(Знач Параметр, ДопПараметры = Неопределено) Экспорт
	
	МаркировкаДоступна = ОбщегоНазначенияИСМПТК.ПроверитьЗначениеОбщейФОМаркировки();
	Если Не МаркировкаДоступна Тогда
		ТекстСообщения = НСтр("ru='Не включен учет по товарным группам маркируемой продукции, создание документа невозможно.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
			
	МассивПервичныхДокументовИСМПТ = МассивДокументовИСМПТ(Параметр);
	Если МассивПервичныхДокументовИСМПТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДопПараметры = Неопределено Тогда
		ИмяКоманды = ДопПараметры.ТипКоманды;
	Иначе
		ИмяКоманды = "";
	КонецЕсли;
	
	Если ИмяКоманды = "СоздатьПриемкаЕАЭС" Тогда 
		ПродолжитьСозданиеСпискаДокументовИСМПТ(МассивПервичныхДокументовИСМПТ, Ложь, ИмяКоманды);
	    Возврат;
	КонецЕсли;
	
	// ШАГ 1. Выполняем проверки оснований

	// 1. Исключаем все основания, в которых не содаржатся маркируемые товары	
	ТекстСообщения = НСтр("ru='Для документов: %СписокДокументов% не может быть оформлен документ ИС МПТ, т.к. в них отсутствуют данные по подходящим маркируемым товарам.'");
	ПереченьДокументовБезТоваров = "";
	МассивДляУдаления = Новый Массив();
	
	Для Каждого ПервичныйДокумент Из МассивПервичныхДокументовИСМПТ Цикл
		
		ДокументСодержитТовары = РаботаСДокументамиИСМПТКПереопределяемый.ПроверитьНаличиеМаркированногоТовараДляВводаДокументаИСМПТ(ПервичныйДокумент, ИмяКоманды);
		
		Если Не ДокументСодержитТовары Тогда
			ПереченьДокументовБезТоваров = ПереченьДокументовБезТоваров + ПервичныйДокумент + "," + Символы.ПС;
			МассивДляУдаления.Добавить(ПервичныйДокумент);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПереченьДокументовБезТоваров) Тогда
		
		ПодстрокаПоиска = Символы.ПС + Лев(ПереченьДокументовБезТоваров, СтрДлина(ПереченьДокументовБезТоваров) - 2) + Символы.ПС;
		ТекстСообщения  = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", ПодстрокаПоиска); 
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
		Для Каждого Документ Из МассивДляУдаления Цикл
			МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(Документ));
		КонецЦикла;
		
	КонецЕсли;
	
	БылиДокументыБезТоваров = МассивДляУдаления.Количество() > 0;	
	
	// 2. Исключаем документы, для которых нужно не создавать, а выбирать связанный документ ИС ЦЭДМ (входящие)
	Для Каждого ПервичныйДокумент Из МассивПервичныхДокументовИСМПТ Цикл
		
		Если РаботаСДокументамиИСМПТКПереопределяемый.ДокументНеПоддерживаетСозданиеНовогоДляИСМПТ(ПервичныйДокумент) Тогда
			Если Не ИмяКоманды = "СоздатьВводВОборот" // Основание ПТУ, но создаем не АПП, поэтому разрешаем создание
				И Не ИмяКоманды = "СоздатьВвозЕАЭС" 
				И Не ИмяКоманды = "СоздатьВвозИмпорт" Тогда
			
				ТекстСообщенияНеобходимВыборИСМПТ = НСтр("ru='Из данного документа не может быть введен новый документ ИС МПТ, но его можно прикрепить к существующему входящему документу маркировки.'");
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияНеобходимВыборИСМПТ);
				
				МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(ПервичныйДокумент));
				БылиДокументыБезТоваров = Истина;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// 3. Исключаем документы, не проходящие по виду операции - не подходящие по ВО отметаем
	Если Не МассивПервичныхДокументовИСМПТ.Количество() = 0 Тогда
		
		ТипДокументаОснования 		= ТипЗнч(МассивПервичныхДокументовИСМПТ[0]);
		//Выполняем проверку, что в выбранных документах-основаниях вид операции соответствует вводимому документу маркировки
		ДокументыОснованияКУдалению = РаботаСДокументамиИСМПТКПереопределяемый.ПроверитьДокументыОснованияПриСозданииИСМПТ(
									  МассивПервичныхДокументовИСМПТ, ТипДокументаОснования,, ДопПараметры.ТипКоманды);
		
		ПереченьНеподходящихДокументовОснования = "";
		Если Не ДокументыОснованияКУдалению.Количество() = 0 Тогда
			
			Для Каждого Документ Из ДокументыОснованияКУдалению Цикл
				
				ПереченьНеподходящихДокументовОснования = ПереченьНеподходящихДокументовОснования + Документ + "," + Символы.ПС;
				МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(Документ));
				
			КонецЦикла;
			
			ТекстСообщения = НСтр("ru='Для документов: %СписокДокументов% не может быть введен указанный документ ИС МПТ. Возможно, выбран неподходящий вид операции.'");
			ПодстрокаПодстановки = Символы.ПС + Лев(ПереченьНеподходящихДокументовОснования, СтрДлина(ПереченьНеподходящихДокументовОснования) - 2) + Символы.ПС;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", ПодстрокаПодстановки);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
			БылиДокументыБезТоваров = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// 4. Выполняем проверку проведения оснований - непроведенные отметаем
	НепроведенныеПервичныеДокументы = РаботаСДокументамиИСМПТКВызовСервера.ПроверитьНепроведенныеПервичныеДокументы(МассивПервичныхДокументовИСМПТ);
	ПереченьНепроведенныхПервчиныхДокументов = "";
	ТекстСообщения = НСтр("ru='Документы: %СписокДокументов% не проведены. Провести документы?'");
	ДополнительныеПараметры	  = Новый Структура("МассивПервичныхДокументовИСМПТ, НепроведенныеПервичныеДокументы, БылиИсключенияИзМассива, ИмяКоманды", 
												 МассивПервичныхДокументовИСМПТ, НепроведенныеПервичныеДокументы, БылиДокументыБезТоваров, ИмяКоманды);
	
	Если НепроведенныеПервичныеДокументы.Количество() > 0 Тогда
		
		Для Каждого Документ Из МассивПервичныхДокументовИСМПТ Цикл
			ПереченьНепроведенныхПервчиныхДокументов = ПереченьНепроведенныхПервчиныхДокументов + Документ + "," + Символы.ПС;
		КонецЦикла;
		
		ПодстрокаПодстановки = Символы.ПС + Лев(ПереченьНепроведенныхПервчиныхДокументов, СтрДлина(ПереченьНепроведенныхПервчиныхДокументов) - 2) + Символы.ПС;
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", ПодстрокаПодстановки); 
		ОписаниеОповещения = Новый ОписаниеОповещения("СпроситьПользователяОПроведенииПервичныхДокументовЗавершение", 
													   ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		// ШАГ 2. Продолжаем создание после проверок
		ПродолжитьСозданиеСпискаДокументовИСМПТ(МассивПервичныхДокументовИСМПТ, БылиДокументыБезТоваров, ИмяКоманды);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПродолжитьСозданиеСпискаДокументовИСМПТ(МассивПервичныхДокументовИСМПТ, БылиИсключенияИзМассива, ИмяКоманды)
	
	Если МассивПервичныхДокументовИСМПТ.Количество() > 1 Тогда 
		
		//Если выбрали более одного подходящего дкокмуента-основания - отметаем, т.к. связь 1 к 1 на текущий момент
		ПоказатьПредупреждение(, НСтр("ru = 'Групповой ввод документов ИС МПТ не поддерживается.'"));
						
	ИначеЕсли МассивПервичныхДокументовИСМПТ.Количество() = 1 Тогда
		
		Если ИмяКоманды = "СоздатьПриемкаЕАЭС" Тогда
			РаботаСДокументамиИСМПТККлиентПереопределяемый.СоздатьДокументИСМПТПоОснованию(МассивПервичныхДокументовИСМПТ[0], ИмяКоманды);
		Иначе	
			
			//Проверяем наличие связанных ИС МПТ
			СписокСвязанныхДокументов = РаботаСДокументамиИСМПТКПереопределяемый.ПроверитьНаличиеСвязанногоДокументаИСМПТ(МассивПервичныхДокументовИСМПТ[0], Истина, ИмяКоманды);
			
			Если Не СписокСвязанныхДокументов = Неопределено Тогда
				ТекстВопроса = НСтр("ru = 'На основании выбранного документа уже создан документ ИС МПТ.'")
							 + Символы.ПС
							 + НСтр("ru = 'Создать новый документ маркировки?'");
				ДополнительныеПараметры = Новый Структура("ДокументОснование, ИмяКоманды", МассивПервичныхДокументовИСМПТ[0], ИмяКоманды);
				ОписаниеОповещения 		= Новый ОписаниеОповещения("СоздатьИСМПТЗавершение", ЭтотОбъект, ДополнительныеПараметры);
				ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Иначе
				РаботаСДокументамиИСМПТККлиентПереопределяемый.СоздатьДокументИСМПТПоОснованию(МассивПервичныхДокументовИСМПТ[0], ИмяКоманды);
			КонецЕсли;
			
		КонецЕсли;
				
	Иначе
		Если Не БылиИсключенияИзМассива Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы один документ.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СпроситьПользователяОПроведенииПервичныхДокументовЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	БылиИсключенияИзМассива 		= ДополнительныеПараметры.БылиИсключенияИзМассива;
	МассивПервичныхДокументовИСМПТ	= ДополнительныеПараметры.МассивПервичныхДокументовИСМПТ;
	НепроведенныеПервичныеДокументы = ДополнительныеПараметры.НепроведенныеПервичныеДокументы;
	ИмяКоманды 						= ДополнительныеПараметры.ИмяКоманды;
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		
		Для Каждого Документ Из НепроведенныеПервичныеДокументы Цикл
			МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(Документ));
		КонецЦикла;
		
		БылиИсключенияИзМассива = Истина;
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		
		ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		
		Для Каждого Документ Из НепроведенныеПервичныеДокументы Цикл
			Ключ 			= Новый Структура("Ключ", Документ);
			ИмяФормыОбъекта = "Документ." + ИнтеграцияИСМПТКВызовСервера.ПолучитьИмяДокументаПоСсылке(Документ) + ".ФормаОбъекта";
			Попытка // выполняем проведение документа
				Форма = ПолучитьФорму(ИмяФормыОбъекта, Ключ);
				Форма.Записать(ПараметрыЗаписи);
				
				//Проверка
				Если Не Форма.Объект.Проведен Тогда
					МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(Документ));
					БылиИсключенияИзМассива = Истина;
				КонецЕсли;
			Исключение
				Информация 	   = ИнформацияОбОшибке();
				ТекстСообщения = НСтр("ru='Не удалось провести документ по причине: %1'");
				ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, КраткоеПредставлениеОшибки(Информация));
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения,,,);
				Продолжить;
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
	ПродолжитьСозданиеСпискаДокументовИСМПТ(МассивПервичныхДокументовИСМПТ, БылиИсключенияИзМассива, ИмяКоманды);
		
КонецПроцедуры

Процедура СоздатьИСМПТЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ИмяКоманды = ДополнительныеПараметры.ИмяКоманды;
		РаботаСДокументамиИСМПТККлиентПереопределяемый.СоздатьДокументИСМПТПоОснованию(ДополнительныеПараметры.ДокументОснование, ИмяКоманды);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура ОткрытьФормуПросмотраСпискаДокументов(Форма, ДокументИСМПТ, КоличествоДокументов = 1) Экспорт
	
	ТекстСообщения = НСтр("ru='Документы (%КоличествоДокументов%)'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоДокументов%", КоличествоДокументов);
	
	ИмяОбщейФормы = РаботаСДокументамиИСМПТККлиентПереопределяемый.ПолучитьИмяОбщейФормыПросмотрСпискаДокументов();
	ОткрытьФорму(ИмяОбщейФормы, Новый Структура("СписокДокументов, Заголовок", ДокументИСМПТ, ТекстСообщения),
				Форма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти

#Область ВводНаОснованииИСЦЭДМ

Процедура ОткрытьДокументИСЦЭДМ_ДокументОснование(Форма, ДанныеДокументИСЦЭДМ) Экспорт
	
	ДокументИСЦЭДМ	 = ДанныеДокументИСЦЭДМ.ИСЦЭДМ;
	ДокументИсточник = Форма.Объект.Ссылка;

	ТипДокументаЦЭДМ = Неопределено;
	Если ЗначениеЗаполнено(ДокументИСЦЭДМ) Тогда
		ТипДокументаЦЭДМ = ТипЗнч(ДокументИСЦЭДМ);
	КонецЕсли;
	
	ИмяФормыДокументаИСЦЭДМ = РаботаСДокументамиИСМПТККлиентПереопределяемый.ПолучитьИмяФормыДокументаИСЦЭДМ(ДокументИсточник, ТипДокументаЦЭДМ);
	
	Если ЗначениеЗаполнено(ДокументИСЦЭДМ) 
		И ТипЗнч(ДокументИСЦЭДМ) <> Тип("СписокЗначений") Тогда
		
		ПоказатьЗначение(,ДокументИСЦЭДМ);
						
	ИначеЕсли ЗначениеЗаполнено(ДокументИСЦЭДМ) 
		И ТипЗнч(ДокументИСЦЭДМ) = Тип("СписокЗначений") Тогда
		
		Если ДокументИСЦЭДМ.Количество() > 1 Тогда
			СтандартнаяОбработка = Ложь;
			
			ТекстСообщения = НСтр("ru='Документы (%КоличествоДокументов%)'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоДокументов%", ДокументИСЦЭДМ.Количество());
			
			ИмяОбщейФормы = РаботаСДокументамиИСМПТККлиентПереопределяемый.ПолучитьИмяОбщейФормыПросмотрСпискаДокументов();
			ОткрытьФорму(ИмяОбщейФормы, 
						Новый Структура("СписокДокументов, Заголовок", ДокументИСЦЭДМ, ТекстСообщения),
						Форма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
		
	Иначе
		
		ПараметрыФормы = Новый Структура("Основание", Форма.Параметры.Ключ);
		ОткрытьФорму(ИмяФормыДокументаИСЦЭДМ, ПараметрыФормы, Форма);
		
	КонецЕсли;
	
КонецПроцедуры

#Область КомандыСоздания

Процедура СоздатьВводВОборотИСЦЭДМ(Знач Параметр, ДопПараметр) Экспорт
	
	СоздатьДокументИСЦЭДМ(Параметр, ДопПараметр);
	
КонецПроцедуры

Процедура СоздатьВыводИзОборотаИСЦЭДМ(Знач Параметр, ДопПараметр) Экспорт
	
	СоздатьДокументИСЦЭДМ(Параметр, ДопПараметр);
	
КонецПроцедуры

Процедура СоздатьАППИсходИСЦЭДМ(Знач Параметр, ДопПараметры) Экспорт
	
	СоздатьДокументИСЦЭДМ(Параметр, ДопПараметры);
	
КонецПроцедуры

Процедура СоздатьАктВнутреннегоПеремещенияИСЦЭДМ(Знач Параметр, ДопПараметры) Экспорт
	
	СоздатьДокументИСЦЭДМ(Параметр, ДопПараметры);
	
КонецПроцедуры

Процедура СоздатьДокументИСЦЭДМ(Знач Параметр, ДопПараметры = Неопределено) Экспорт
	
	МаркировкаДоступна = ОбщегоНазначенияИСМПТК.ПроверитьЗначениеОбщейФОМаркировки();
	Если Не МаркировкаДоступна Тогда
		ТекстСообщения = НСтр("ru='Не включен учет по товарным группам маркируемой продукции, создание документа невозможно.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;  
	
	//Доп.проверки
	Если ДопПараметры.ТипКоманды = "СоздатьАктыВнутреннегоПеремещения" 
		И НЕ ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ВестиУчетПоСкладамИСЦЭДМ") Тогда
		ТекстСообщения = НСтр("ru='Не включен учет по складам ИС ЦЭДМ, создание документа невозможно.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	МассивПервичныхДокументовИСЦЭДМ = МассивДокументовИСМПТ(Параметр);
	Если МассивПервичныхДокументовИСЦЭДМ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДопПараметры = Неопределено Тогда
		ИмяКоманды = ДопПараметры.ТипКоманды;
	Иначе
		ИмяКоманды = "";
	КонецЕсли;
	
	//////ШАГ 1. Проверки//////
	
	//1) Исключаем все основания, в которых не содаржатся маркируемые товары	
	ТекстСообщения = НСтр("ru='Для документов: %СписокДокументов% не может быть оформлен документ ИС ЦЭДМ, т.к. в них отсутствуют данные по маркируемой лекарственной продукции.'");
	ПереченьДокументовБезТоваров = "";
	МассивДляУдаления = Новый Массив();
	
	Для Каждого ПервичныйДокумент Из МассивПервичныхДокументовИСЦЭДМ Цикл
		
		Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ") Тогда 
			Продолжить; //Не проверяем, т.к. там точно есть фарма
		КонецЕсли;
		
		//Проверяем наличие лекарственных средств в ТЧ исходного документа
		ДокументСодержитТовары = РаботаСДокументамиИСМПТКПереопределяемый.ПроверитьНаличиеМаркированногоТовараДляВводаДокументаИСЦЭДМ(ПервичныйДокумент);
		
		Если Не ДокументСодержитТовары Тогда
			ПереченьДокументовБезТоваров = ПереченьДокументовБезТоваров + ПервичныйДокумент + "," + Символы.ПС;
			МассивДляУдаления.Добавить(ПервичныйДокумент);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПереченьДокументовБезТоваров) Тогда
		
		СтрокаПодстановки = Символы.ПС + Лев(ПереченьДокументовБезТоваров, СтрДлина(ПереченьДокументовБезТоваров) - 2) + Символы.ПС;
		ТекстСообщения 	  = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", СтрокаПодстановки); 
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
		Для Каждого Документ Из МассивДляУдаления Цикл
			МассивПервичныхДокументовИСЦЭДМ.Удалить(МассивПервичныхДокументовИСЦЭДМ.Найти(Документ));
		КонецЦикла;
		
	КонецЕсли;
	
	БылиДокументыБезТоваров = МассивДляУдаления.Количество() > 0;	
	
	//2) Исключаем документы, для которых нужно не создавать, а выбирать связанный документ ИС ЦЭДМ (входящие)
	Для Каждого ПервичныйДокумент Из МассивПервичныхДокументовИСЦЭДМ Цикл
		Если РаботаСДокументамиИСМПТКПереопределяемый.ДокументНеПоддерживаетСозданиеНовогоДляИСЦЭДМ(ПервичныйДокумент, ИмяКоманды) Тогда
			Если Не ИмяКоманды = "СоздатьВводВОборот" // Основание ПТУ, но создаем не АПП, поэтому разрешаем создание
				И Не ИмяКоманды = "СоздатьВвозЕАЭС_ЦЭДМ" 
				И Не ИмяКоманды = "СоздатьВвозИмпорт_ЦЭДМ" Тогда
				
				ТекстСообщенияНеобходимВыборИСЦЭДМ = НСтр("ru='Из данного документа не может быть введен новый документ ИС ЦЭДМ, но его можно прикрепить к существующему входящему документу маркировки.'");
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияНеобходимВыборИСЦЭДМ);
				
				МассивПервичныхДокументовИСЦЭДМ.Удалить(МассивПервичныхДокументовИСЦЭДМ.Найти(ПервичныйДокумент));
				БылиДокументыБезТоваров = Истина;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//3) Исключаем документы, не проходящие по виду операции - не подходящие по ВО отметаем
	Если Не МассивПервичныхДокументовИСЦЭДМ.Количество() = 0 Тогда
		
		ТипДокументаОснования 		= ТипЗнч(МассивПервичныхДокументовИСЦЭДМ[0]);
		//Выполняем проверку, что в выбранных документах-основаниях вид операции соответствует вводимому документу маркировки
		ДокументыОснованияКУдалению = РаботаСДокументамиИСМПТКПереопределяемый.ПроверитьДокументыОснованияПриСозданииИСЦЭДМ(
									  МассивПервичныхДокументовИСЦЭДМ, ТипДокументаОснования,, ДопПараметры.ТипКоманды);
		
		ПереченьНеподходящихДокументовОснования = "";
		Если Не ДокументыОснованияКУдалению.Количество() = 0 Тогда
			
			Для Каждого Документ Из ДокументыОснованияКУдалению Цикл
				
				ПереченьНеподходящихДокументовОснования = ПереченьНеподходящихДокументовОснования + Документ + "," + Символы.ПС;
				МассивПервичныхДокументовИСЦЭДМ.Удалить(МассивПервичныхДокументовИСЦЭДМ.Найти(Документ));
				
			КонецЦикла;
			
			ТекстСообщения = НСтр("ru='Для документов: %СписокДокументов% не может быть введен указанный документ ИС ЦЭДМ. Возможно, выбран неподходящий вид операции.'");
			СтрокаПодстановки = Символы.ПС + Лев(ПереченьНеподходящихДокументовОснования, СтрДлина(ПереченьНеподходящихДокументовОснования) - 2)  + Символы.ПС;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", СтрокаПодстановки);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
			БылиДокументыБезТоваров = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//4) Выполняем проверку проведения оснований - непроведенные отметаем
	Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ") Тогда
		НепроведенныеПервичныеДокументы = Новый Массив();
	Иначе
		НепроведенныеПервичныеДокументы 		 = РаботаСДокументамиИСМПТКВызовСервера.ПроверитьНепроведенныеПервичныеДокументы(МассивПервичныхДокументовИСЦЭДМ);
	КонецЕсли;
	ПереченьНепроведенныхПервчиныхДокументов = "";
	ТекстСообщения = НСтр("ru='Документы: %СписокДокументов% не проведены. Провести документы?'");
	ДополнительныеПараметры	= Новый Структура("МассивПервичныхДокументовИСЦЭДМ, НепроведенныеПервичныеДокументы, БылиИсключенияИзМассива, ИмяКоманды", 
								 			   МассивПервичныхДокументовИСЦЭДМ, НепроведенныеПервичныеДокументы, БылиДокументыБезТоваров, ИмяКоманды);
	
	Если НепроведенныеПервичныеДокументы.Количество() > 0 Тогда
		
		Для Каждого Документ Из МассивПервичныхДокументовИСЦЭДМ Цикл
			ПереченьНепроведенныхПервчиныхДокументов = ПереченьНепроведенныхПервчиныхДокументов + Документ + "," + Символы.ПС;
		КонецЦикла;
		
		СтрокаПодстановки = Символы.ПС + Лев(ПереченьНепроведенныхПервчиныхДокументов, СтрДлина(ПереченьНепроведенныхПервчиныхДокументов) - 2) + Символы.ПС;
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", СтрокаПодстановки);
		ОписаниеОповещения = Новый ОписаниеОповещения("СпроситьПользователяОПроведенииПервичныхДокументовИСЦЭДМЗавершение", 
													   ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		//////ШАГ 2. Продолжаем создание после проверок
		ПродолжитьСозданиеСпискаДокументовИСЦЭДМ(МассивПервичныхДокументовИСЦЭДМ, БылиДокументыБезТоваров, ИмяКоманды);
	КонецЕсли;
	
КонецПроцедуры

Процедура СпроситьПользователяОПроведенииПервичныхДокументовИСЦЭДМЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	БылиИсключенияИзМассива 		= ДополнительныеПараметры.БылиИсключенияИзМассива;
	МассивПервичныхДокументовИСМПТ	= ДополнительныеПараметры.МассивПервичныхДокументовИСЦЭДМ;
	НепроведенныеПервичныеДокументы = ДополнительныеПараметры.НепроведенныеПервичныеДокументы;
	ИмяКоманды 						= ДополнительныеПараметры.ИмяКоманды;
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		
		Для Каждого Документ Из НепроведенныеПервичныеДокументы Цикл
			МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(Документ));
		КонецЦикла;
		
		БылиИсключенияИзМассива = Истина;
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		
		ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		
		Попытка // выполняем проведение документа
			
			Для Каждого Документ Из НепроведенныеПервичныеДокументы Цикл
				Ключ 			= Новый Структура("Ключ", Документ);
				ИмяФормыОбъекта = "Документ." + ИнтеграцияИСМПТКВызовСервера.ПолучитьИмяДокументаПоСсылке(Документ) + ".ФормаОбъекта";
				Форма 			= ПолучитьФорму(ИмяФормыОбъекта, Ключ);
				Форма.Записать(ПараметрыЗаписи);
				
				//Проверка
				Если Не Форма.Объект.Проведен Тогда
					МассивПервичныхДокументовИСМПТ.Удалить(МассивПервичныхДокументовИСМПТ.Найти(Документ));
					БылиИсключенияИзМассива = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		Исключение
			
			Информация 	   = ИнформацияОбОшибке();
			ТекстСообщения = НСтр("ru='Не удалось провести документ по причине: %1'");
			ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, КраткоеПредставлениеОшибки(Информация));
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения,,,);
			
			Возврат;
			
		КонецПопытки;
		
	КонецЕсли;
	
	ПродолжитьСозданиеСпискаДокументовИСЦЭДМ(МассивПервичныхДокументовИСМПТ, БылиИсключенияИзМассива, ИмяКоманды);
		
КонецПроцедуры

Процедура СоздатьПервичныйДокументИСЦЭДМ(Знач Параметры) Экспорт
	
	Если Параметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметры) = Тип("Структура") Тогда 
		Параметр = Параметры.ИсходныйДокумент;
		ТипСоздаваемогоДокумента = Параметры.СоздаваемыйДокумент; 
	Иначе
		Параметр = Параметры;
	КонецЕсли;
	
	МассивИСЦЭДМДляСозданияПервичныхДокументов = МассивДокументовИСМПТ(Параметр);
	
	Если МассивИСЦЭДМДляСозданияПервичныхДокументов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураМассивИСЦЭДМ = РаботаСДокументамиИСМПТКВызовСервера.МассивИСМПТСДокументомОснованияИБез(Параметр);
	МассивИСЦЭДМСДокументомОснования  = СтруктураМассивИСЦЭДМ.МассивИСМПТСДокументомОснования;
	МассивИСЦЭДМБезДокументаОснования = СтруктураМассивИСЦЭДМ.МассивИСМПТБезДокументаОснования;	
	
	Если МассивИСЦЭДМДляСозданияПервичныхДокументов.Количество() > 1 Тогда 
		
		Если МассивИСЦЭДМСДокументомОснования.Количество() <> 0 Тогда
			ТекстВопроса = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияУжеСозданыОснованияПоСпискуСоздатьНовыеДокументы();
			ТекстМассивИСЦЭДМСДокументомОснования = "";
			Для Каждого СтрокаМассива Из МассивИСЦЭДМСДокументомОснования Цикл
				ТекстМассивСДокументамиОснования = ТекстМассивИСЦЭДМСДокументомОснования + ?(ТекстМассивИСЦЭДМСДокументомОснования = "", "", "; 
				|") + СтрокаМассива;																									
			КонецЦикла;	
			ПодстрокаЗамены = Символы.ПС
			                + ТекстМассивСДокументамиОснования
							+ Символы.ПС;
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%СписокДокументов%", ТекстМассивСДокументамиОснования);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("МассивИСЦЭДМДляСозданияПервичныхДокументов", МассивИСЦЭДМДляСозданияПервичныхДокументов);
			ДополнительныеПараметры.Вставить("МассивИСЦЭДМБезДокументаОснования", 		   МассивИСЦЭДМБезДокументаОснования);
			ДополнительныеПараметры.Вставить("ТипСоздаваемогоДокумента", 		  		   ТипСоздаваемогоДокумента);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьСписокПервичныхДокументовЗавершениеИСЦЭДМ", ЭтотОбъект , ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ТекстВопроса = НСтр("ru = 'Для выделенных документов будут созданы и записаны первичные документы.'")
			             + Символы.ПС
						 + НСтр("ru = 'Продолжить?'");
			ТекстМассивИСЦЭДМСДокументомОснования = "";
			
			ДополнительныеПараметры = Новый Структура("МассивИСЦЭДМДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента", МассивИСЦЭДМДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента);
			ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершениеИСЦЭДМ", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;	
		
	ИначеЕсли МассивИСЦЭДМДляСозданияПервичныхДокументов.Количество() = 1 Тогда
		
		Если МассивИСЦЭДМСДокументомОснования.Количество() <> 0  Тогда
			ТекстВопроса = НСтр("ru = 'На основании выбранного документа уже создан документ - основание.'")
			             + Символы.ПС
						 + НСтр("ru = 'Создать новый документ?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Для документа будет создан и записан первичный документ.'")
			             + Символы.ПС
						 + НСтр("ru = 'Продолжить?'");
		КонецЕсли;	
		
		ДополнительныеПараметры = Новый Структура("МассивИСЦЭДМДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента", МассивИСЦЭДМДляСозданияПервичныхДокументов, ТипСоздаваемогоДокумента);
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершениеИСЦЭДМ", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе	
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы один документ.'"));
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьСписокПервичныхДокументовЗавершениеИСЦЭДМ(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры = Новый Структура("МассивИСЦЭДМДляСозданияПервичныхДокументов", ДополнительныеПараметры.МассивИСЦЭДМДляСозданияПервичныхДокументов);
		СоздатьПервичныеДокументыОбработкаПослеВопросовИСЦЭДМ(ДополнительныеПараметры);
	Иначе
		ДополнительныеПараметры = Новый Структура("МассивИСЦЭДМБезДокументаОснования", ДополнительныеПараметры.МассивИСЦЭДМБезДокументаОснования);
		ТекстВопроса = НСтр("ru = 'Для выделенных документов сервиса маркировки, у которых нет связанных документов основания, будут созданы и записаны новые первичные документы.'")
					 + Символы.ПС
					 + НСтр("ru = 'Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершениеИСЦЭДМ", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Для выделенных документов будут созданы и записаны документы поступления.'")
				 + Символы.ПС
				 + НСтр("ru = 'Продолжить?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьПервичныеДокументыЗавершениеИСЦЭДМ", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура СоздатьПервичныеДокументыЗавершениеИСЦЭДМ(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СоздатьПервичныеДокументыОбработкаПослеВопросовИСЦЭДМ(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПервичныеДокументыОбработкаПослеВопросовИСЦЭДМ(ДополнительныеПараметры) Экспорт
	
	СписокПервичныхДокументов = РаботаСДокументамиИСМПТКВызовСервера.СоздатьСписокПервичныхДокументовИСЦЭДМ(ДополнительныеПараметры);
	
	Если СписокПервичныхДокументов <> Неопределено И СписокПервичныхДокументов.Количество() > 0 Тогда
		
		ИмяТиповогоДокумента = ИнтеграцияИСМПТКВызовСервера.ПолучитьИмяДокументаПоСсылке(СписокПервичныхДокументов[0]);
		ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьПервичногоДокументаПриСоздании(), ДополнительныеПараметры.МассивИСЦЭДМДляСозданияПервичныхДокументов);
		
		Если СписокПервичныхДокументов.Количество() > 1 Тогда
			
			ПараметрыФормы = Новый Структура;	
			ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", Новый ФиксированныйМассив(СписокПервичныхДокументов)));
			ОткрытьФорму("Документ." + ИмяТиповогоДокумента + ".Форма.ФормаСписка", ПараметрыФормы,, Истина);
			
		Иначе 
    			
			ПоказатьЗначение(, СписокПервичныхДокументов[0]);
			
		Конецесли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПродолжитьСозданиеСпискаДокументовИСЦЭДМ(МассивПервичныхДокументовИСЦЭДМ, БылиИсключенияИзМассива, ИмяКоманды)
	
	Если МассивПервичныхДокументовИСЦЭДМ.Количество() > 1 Тогда 
		
		//Если выбрали более одного подходящего дкокмуента-основания - отметаем, т.к. связь 1 к 1 на текущий момент
		ПоказатьПредупреждение(, НСтр("ru = 'Групповой ввод документов ИС ЦЭДМ не поддерживается.'"));
				
	ИначеЕсли МассивПервичныхДокументовИСЦЭДМ.Количество() = 1 Тогда
		
		//Проверяем наличие связанных ИС ЦЭДМ
		СписокСвязанныхДокументов = РаботаСДокументамиИСМПТКПереопределяемый.ПроверитьНаличиеСвязанногоДокументаИСЦЭДМ(МассивПервичныхДокументовИСЦЭДМ[0], Истина, ИмяКоманды);
		
		Если Не СписокСвязанныхДокументов = Неопределено Тогда
			ТекстВопроса = НСтр("ru = 'На основании выбранного документа уже создан документ ИС ЦЭДМ.'")
						 + Символы.ПС
						 + НСтр("ru = 'Создать новый документ маркировки?'");
			ДополнительныеПараметры = Новый Структура("ДокументОснование, ИмяКоманды", МассивПервичныхДокументовИСЦЭДМ[0], ИмяКоманды);
			ОписаниеОповещения 		= Новый ОписаниеОповещения("СоздатьИСЦЭДМЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			РаботаСДокументамиИСМПТККлиентПереопределяемый.СоздатьДокументИСЦЭДМПоОснованию(МассивПервичныхДокументовИСЦЭДМ[0], ИмяКоманды);	
		КонецЕсли;
				
	Иначе
		Если Не БылиИсключенияИзМассива Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы один документ.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьИСЦЭДМЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ИмяКоманды = ДополнительныеПараметры.ИмяКоманды;
		СозданиеДокументаИСЦЭДМПродолжение(ДополнительныеПараметры.ДокументОснование, ИмяКоманды);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СозданиеДокументаИСЦЭДМПродолжение(Основание, ИмяКоманды)

	РаботаСДокументамиИСМПТККлиентПереопределяемый.СоздатьДокументИСЦЭДМПоОснованию(Основание, ИмяКоманды);	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
///////////////////////////

#Область ПерезаполнениеДокументовИСМПТ

//Определяет имя события документа по типу
//
Функция ОпределитьИмяСобытияПоТипуДокумента(ТипДокументаИС) Экспорт
	
	ИмяСобытия = "";
	//ИСМПТК
	Если ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктПриемаПередачи();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОРасхожденииИСМПТК() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОРасхождении();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзЕАЭС();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСМПТК() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзТретьихСтран();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВводеВОборотИСМПТК() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВводеВОборот();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВыводеИзОборотаИСМПТК() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВыводеИзОборота();
		
	//ИСЦЭДМ
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктПриемаПередачиИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВыводеИзОборотаИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВыводеИзОборотаИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВводеВОборотИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВводеВОборотИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАгрегацияВнеПроизводстваИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАгрегацияВнеПроизводстваИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктВнутреннегоПеремещенияИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктВнутреннегоПеремещенияИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзЕАЭСИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзТретьихСтранИСЦЭДМ();
		
	ИначеЕсли ТипДокументаИС = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОРасхожденияхИСЦЭДМ() Тогда
		
		ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОРасхожденияхИСЦЭДМ();
	КонецЕсли;
	
	Возврат ИмяСобытия;
	
КонецФункции

Процедура ПерезаполнитьДокументИСМПТ(Знач Параметр) Экспорт
	
	Если ТипЗнч(Параметр) = Тип("Массив") Тогда
		ТипДокументаИСМПТ = ТипЗнч(Параметр[0]);
		
		//ИС МПТ
		Если ТипДокументаИСМПТ = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.АктПриемаПередачиИСМПТК.ПустаяСсылка")) Тогда
			ПерезаполнитьАПП(Параметр, "ИСМПТ");
			
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОРасхожденииИСМПТК")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОРасхожденииИСМПТК.ПустаяСсылка")) Тогда
			ПерезаполнитьУОР(Параметр, "ИСМПТ");
			
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВводеВОборотИСМПТК")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВводеВОборотИСМПТК.ПустаяСсылка")) Тогда
			ПерезаполнитьВводВОборот(Параметр, "ИСМПТ");
			
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВыводеИзОборотаИСМПТК")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВыводеИзОборотаИСМПТК.ПустаяСсылка")) Тогда
			ПерезаполнитьВыводИзОборота(Параметр, "ИСМПТ");
			
		ИначеЕсли (ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК")
				И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВвозеИзТретьихСтранИСМПТК.ПустаяСсылка")))
			ИЛИ (ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК")
				И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВвозеИзЕАЭСИСМПТК.ПустаяСсылка"))) Тогда
			ПерезаполнитьВвозТоваров(Параметр, "ИСМПТ");
			
		//ИС ЦЭДМ
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.АктПриемаПередачиИСЦЭДМ") 
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.АктПриемаПередачиИСЦЭДМ.ПустаяСсылка")) Тогда
			ПерезаполнитьАПП(Параметр, "ИСЦЭДМ"); 
			
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВыводеИзОборотаИСЦЭДМ")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВыводеИзОборотаИСЦЭДМ.ПустаяСсылка")) Тогда
			ПерезаполнитьВыводИзОборота(Параметр, "ИСЦЭДМ");
			
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВводеВОборотИСЦЭДМ")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВводеВОборотИСЦЭДМ.ПустаяСсылка")) Тогда
			ПерезаполнитьВводВОборот(Параметр, "ИСЦЭДМ");
			
		ИначеЕсли (ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ")
				И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВвозеИзЕАЭСИСЦЭДМ.ПустаяСсылка")))
			ИЛИ (ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ")
				И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ.ПустаяСсылка"))) Тогда
			ПерезаполнитьВвозТоваров(Параметр, "ИСЦЭДМ");
			
		ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.АктВнутреннегоПеремещенияИСЦЭДМ")
			И ОбщегоНазначенияИСМПТКВызовСервера.ЕстьПравоДоступа(
					"Изменение", ПредопределенноеЗначение("Документ.АктВнутреннегоПеремещенияИСЦЭДМ.ПустаяСсылка")) Тогда
			ПерезаполнитьАктПеремещения(Параметр, "ИСЦЭДМ");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПерезаполнитьОбшаяДляВсех(Знач Параметр, ИнфСистема, ИмяДокумента, ОписаниеОповещенияИмя) Экспорт
	
	МассивДокументовИС = МассивДокументовИСМПТ(Параметр);
	
	Если МассивДокументовИС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МассивДокументовИС.Количество() = 0 Тогда
		Если ИмяДокумента = "Акт" Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы один Акт.'"));
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы одно Уведомление.'"));
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ИнфСистема = "ИСМПТ" Тогда
		СоответствиеДляОбновленияАктуальныхОснований = РаботаСДокументамиИСМПТКВызовСервера.НовоеСоответствиеДляОбновленияАктуальныхОснований(МассивДокументовИС);
	Иначе
		СоответствиеДляОбновленияАктуальныхОснований = РаботаСДокументамиИСМПТКВызовСервера.НовоеСоответствиеДляОбновленияАктуальныхОснованийИСЦЭДМ(МассивДокументовИС);
	КонецЕсли;
	
	ЗавершениеПерезаполнения = Новый ОписаниеОповещения(ОписаниеОповещенияИмя, ЭтотОбъект, Новый Структура("СоответствиеДляОбновленияАктуальныхОснований, ИнфСистема", 
																								 СоответствиеДляОбновленияАктуальныхОснований, 
																								 ИнфСистема));
	
	Если СоответствиеДляОбновленияАктуальныхОснований.Количество() = МассивДокументовИС.Количество() Тогда
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			Если ИмяДокумента = "Акт" Тогда
				ПоказатьВопрос(ЗавершениеПерезаполнения, НСтр("ru = 'Перезаполнить Акты на основании документов-оснований (список кодов маркировки будет сохранен)?'"), РежимДиалогаВопрос.ОКОтмена);
			Иначе
				ПоказатьВопрос(ЗавершениеПерезаполнения, НСтр("ru = 'Перезаполнить Уведомления на основании документов-оснований (список кодов маркировки будет сохранен)?'"), РежимДиалогаВопрос.ОКОтмена);
			КонецЕсли;
			
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ТекстВопроса = НСтр("ru = 'Перезаполнить ""%Документ%"" на основании документа-основания (список кодов маркировки будет сохранен)?'");
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Документ%", МассивДокументовИС[0]);
			ПоказатьВопрос(ЗавершениеПерезаполнения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		КонецЕсли;
		
	ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() <> 0 Тогда
		
		Если ИмяДокумента = "Акт" Тогда
			ТекстВопроса = НСтр("ru = 'Невозможно перезаполнить все выделенные Акты.'")
	             		 + Символы.ПС + Символы.ПС
						 + НСтр("ru = 'Всего Актов: %ВсегоКоличество% шт.'")
						 + Символы.ПС
						 + НСтр("ru = 'Возможно перезаполнить: %ВозможноКоличество% шт.'")
						 + Символы.ПС + Символы.ПС
						 + НСтр("ru = 'Перезаполнить Акты, которые возможно перезаполнить?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Невозможно перезаполнить все выделенные Уведомления.'")
						 + Символы.ПС + Символы.ПС
						 + НСтр("ru = 'Всего Уведомлений: %ВсегоКоличество% шт.'")
						 + Символы.ПС
						 + НСтр("ru = 'Возможно перезаполнить: %ВозможноКоличество% шт.'")
						 + Символы.ПС + Символы.ПС
						 + НСтр("ru = 'Перезаполнить Уведомления, которые возможно перезаполнить?'");
		КонецЕсли;
		
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ВсегоКоличество%", 	 МассивДокументовИС.Количество());
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ВозможноКоличество%", СоответствиеДляОбновленияАктуальныхОснований.Количество());
		ПоказатьВопрос(ЗавершениеПерезаполнения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#Область АПП

Процедура ПерезаполнитьАПП(Знач Параметр, ИнфСистема) Экспорт

	ПерезаполнитьОбшаяДляВсех(Параметр, ИнфСистема, "Акт", "ПерезаполнитьАППЗавершение");
		
КонецПроцедуры

Процедура ПерезаполнитьАППЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИсключаемыеРеквизиты = "Идентификатор, ТипАкта, ЭтоКорректировка, Направление, Статус, Состояние, ИдентификаторАППИсправленный, ИдентификаторАПППервичный," + 
							   "РегистрационныйНомерСвязанногоАкта, ИдентификаторУведОРасхождениях, РегНомерНаБумажномНосителе, ДатаВыпискиНаБумажномНосителе, ЭтапОформления, ТоварнаяГруппа," + 
		                       "Комментарий, Автор, Проверен" + ПереопределяемыеРеквизиты;
			ИсключаемыеТЧ = "Марки, Итоги";			
		Иначе
			ИсключаемыеРеквизиты = "Идентификатор, ТипАкта, ВидОперации, Направление, Статус, РегНомерНаБумажномНосителе, ДатаВыпискиНаБумажномНосителе," + 
		                       "Комментарий, Автор, ИсходноеУведомлениеОРасхожденияхИдентификатор, СтатусСверкиТоваров, ЭтапОформления, ЦеныПереданыУспешно" + ПереопределяемыеРеквизиты; 
			ИсключаемыеТЧ = "Итоги, Марки";
		КонецЕсли; 
		
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИнтеграцияИСМПТКВызовСервера.ОбновитьАктуальныеДокументыИСМПТ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктПриемаПередачи());
		Иначе
			РаботаСДокументамиИСМПТКВызовСервера.ПерезаполнитьАктуальныеДокументыПоОснованиюИСЦЭДМ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктПриемаПередачиИСЦЭДМ());
		КонецЕсли;
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Акты приема/передачи успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Акт приема/передачи успешно перезаполнен.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область АВП

Процедура ПерезаполнитьАктПеремещения(Знач Параметр, ИнфСистема) Экспорт

	ПерезаполнитьОбшаяДляВсех(Параметр, ИнфСистема, "Акт", "ПерезаполнитьАктПеремещенияЗавершение");
		
КонецПроцедуры

Процедура ПерезаполнитьАктПеремещенияЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
		ИсключаемыеРеквизиты = "Идентификатор, ТипАкта, Статус," + 
							   "ИсходноеУведомлениеОРасхожденияхИдентификатор, РегНомерНаБумажномНосителе, ДатаВыпискиНаБумажномНосителе," + 
		                       "Комментарий, Автор, ЭтапОформления, СтатусСверкиТоваров" + ПереопределяемыеРеквизиты;
		ИсключаемыеТЧ = "Марки";		
		
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
		
		РаботаСДокументамиИСМПТКВызовСервера.ПерезаполнитьАктуальныеДокументыПоОснованиюИСЦЭДМ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
		ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктВнутреннегоПеремещенияИСЦЭДМ());
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Акты внутреннего перемещения успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Акт внутреннего перемещения успешно перезаполнен.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область УОР

Процедура ПерезаполнитьУОР(Знач Параметр, ИнфСистема) Экспорт
	
	ПерезаполнитьОбшаяДляВсех(Параметр, ИнфСистема, "Уведомление", "ПерезаполнитьУОРЗавершение");
	
КонецПроцедуры

Процедура ПерезаполнитьУОРЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
		ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, Состояние, ИдентификаторАПППервичный, ИдентификаторАППИсправленный," +
							   "РегистрационныйНомерСвязанногоАкта, РегНомерНаБумажномНосителе, ДатаВыпискиНаБумажномНосителе, Комментарий, Автор"
							   + ПереопределяемыеРеквизиты;   
							   
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИнтеграцияИСМПТКВызовСервера.ОбновитьАктуальныеДокументыИСМПТ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОРасхождении());
		КонецЕсли;
				
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомления успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомление успешно перезаполнено.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область ВводВОборот

Процедура ПерезаполнитьВводВОборот(Знач Параметр, ИнфСистема) Экспорт
	
	ПерезаполнитьОбшаяДляВсех(Параметр, ИнфСистема, "Уведомление", "ПерезаполнитьВводВОборотЗавершение");
	
КонецПроцедуры

Процедура ПерезаполнитьВводВОборотЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
        Если ИнфСистема = "ИСМПТ" Тогда 
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, Состояние, ПричинаВводаВОборот, ЭтапОформления" + 
							   		"Комментарий, Автор" + ПереопределяемыеРеквизиты;
			ИсключаемыеТЧ = "Марки";
		Иначе
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, ПричинаВводаВОборот," + 
							   		"Комментарий, Автор, ЦеныПереданыУспешно, ЭтапОформления" + ПереопределяемыеРеквизиты;
			ИсключаемыеТЧ = "Марки, Итоги";
		КонецЕсли;
		
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИнтеграцияИСМПТКВызовСервера.ОбновитьАктуальныеДокументыИСМПТ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВводеВОборот());
		Иначе
			РаботаСДокументамиИСМПТКВызовСервера.ПерезаполнитьАктуальныеДокументыПоОснованиюИСЦЭДМ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВводеВОборотИСЦЭДМ());
		КонецЕсли;
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомления успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомление успешно перезаполнено.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ВыводИзОборота

Процедура ПерезаполнитьВыводИзОборота(Знач Параметр, ИнфСистема) Экспорт
	
	ПерезаполнитьОбшаяДляВсех(Параметр, ИнфСистема, "Уведомление", "ПерезаполнитьВыводИзОборотаЗавершение");
	
КонецПроцедуры

Процедура ПерезаполнитьВыводИзОборотаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, Состояние, ПричинаВыводаИзОборота, ЭтапОформления" + 
							   		"Комментарий, Автор" + ПереопределяемыеРеквизиты;
			ИсключаемыеТЧ = "Марки";
		Иначе
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, ПричинаВыводаИзОборота," + 
							   		"Комментарий, Автор, ЦеныПереданыУспешно, ЭтапОформления" + ПереопределяемыеРеквизиты;
		 	ИсключаемыеТЧ = "Марки, Итоги";
		КонецЕсли;
		
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИнтеграцияИСМПТКВызовСервера.ОбновитьАктуальныеДокументыИСМПТ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВыводеИзОборота());
		Иначе
			РаботаСДокументамиИСМПТКВызовСервера.ПерезаполнитьАктуальныеДокументыПоОснованиюИСЦЭДМ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТЧ);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВыводеИзОборотаИСЦЭДМ());
		КонецЕсли;
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомления успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомление успешно перезаполнено.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

Процедура ПерезаполнитьВвозТоваров(Знач Параметр, ИнфСистема) Экспорт
	
	МассивИСМПТ = МассивДокументовИСМПТ(Параметр);
	
	Если МассивИСМПТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МассивИСМПТ.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите хотя бы один документ.'"));
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(МассивИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК")
		Или ТипЗнч(МассивИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ") Тогда
		
		ИмяОповещения = "ПерезаполнитьВвозТоваровЕАЭСЗавершение";
		
	ИначеЕсли ТипЗнч(МассивИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") 
		Или ТипЗнч(МассивИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ") Тогда
		
		ИмяОповещения = "ПерезаполнитьВвозТоваровТретьиСтраныЗавершение";
		
	КонецЕсли;
	
	ПерезаполнитьОбшаяДляВсех(Параметр, ИнфСистема, "Уведомление", ИмяОповещения);
	
КонецПроцедуры

Процедура ПерезаполнитьВвозТоваровЕАЭСЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, Состояние, ТипУведомления, ЭтоКорректировка, ИдентификаторВвозПервичный, ИдентификаторВвозИсправленный," +
		                       "РегистрационныйНомерСвязанногоУведомления, ДатаСвязанногоУведомления, ДатаВыпискиНаБумажномНосителе, РегНомерНаБумажномНосителе," +   
							   "ДатаУплатыАкциза, НомерКвитанцииАкциза, СуммаАкциза, Комментарий, Автор"
							   + ПереопределяемыеРеквизиты;
			ИсключаемыеТабличныеЧасти = "ДокументыСоответствия, Марки";
		Иначе
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, ТипУведомления, ИсходноеУведомлениеОРасхожденияхИдентификатор," +
		                       "ДатаВыпискиНаБумажномНосителе, РегНомерНаБумажномНосителе," +   
							   "Комментарий, Автор"
							   + ПереопределяемыеРеквизиты;
			ИсключаемыеТабличныеЧасти = "Марки, Итоги";
		КонецЕсли;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИнтеграцияИСМПТКВызовСервера.ОбновитьАктуальныеДокументыИСМПТ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТабличныеЧасти);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзЕАЭС());
		Иначе
			РаботаСДокументамиИСМПТКВызовСервера.ПерезаполнитьАктуальныеДокументыПоОснованиюИСЦЭДМ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТабличныеЧасти);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзЕАЭСИСЦЭДМ());
		КонецЕсли;
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомления успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомление успешно перезаполнено.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПерезаполнитьВвозТоваровТретьиСтраныЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ИнфСистема = ДополнительныеПараметры.ИнфСистема;
		ПереопределяемыеРеквизиты = "Номер" + ИнфСистема + ", ДатаВ" + ИнфСистема;
		
		СоответствиеДляОбновленияАктуальныхОснований = ДополнительныеПараметры.СоответствиеДляОбновленияАктуальныхОснований;
	    Если ИнфСистема = "ИСМПТ" Тогда 
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, Состояние, ТипУведомления, ДатаВыпискиНаБумажномНосителе, РегНомерНаБумажномНосителе," + 
							   "ТипДокументаТаможенногоОформления, НомерДокументаТаможенногоОформления, ДатаДокументаТаможенногоОформления, КодТаможенногоОргана," +
							   "КодРешенияТаможенногоОргана, ДатаВремяПринятияРешения, Комментарий, Автор"
							   + ПереопределяемыеРеквизиты;
			ИсключаемыеТабличныеЧасти = "ДокументыСоответствия, Марки, Товары";
		Иначе
			ИсключаемыеРеквизиты = "Идентификатор, Направление, Статус, ДатаВыпискиНаБумажномНосителе, РегНомерНаБумажномНосителе," + 
							   "ТипДокументаТаможенногоОформления, НомерДокументаТаможенногоОформления, ДатаДокументаТаможенногоОформления, КодТаможенногоОргана," +
							   "КодРешенияТаможенногоОргана, ДатаВремяПринятияРешения, Комментарий, Автор"
							   + ПереопределяемыеРеквизиты;
			ИсключаемыеТабличныеЧасти = "ДокументыСоответствия, Марки, Итоги";
		КонецЕсли;
		
		Если ИнфСистема = "ИСМПТ" Тогда 
			ИнтеграцияИСМПТКВызовСервера.ОбновитьАктуальныеДокументыИСМПТ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТабличныеЧасти);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзТретьихСтран());
		Иначе
			РаботаСДокументамиИСМПТКВызовСервера.ПерезаполнитьАктуальныеДокументыПоОснованиюИСЦЭДМ(СоответствиеДляОбновленияАктуальныхОснований, ИсключаемыеРеквизиты, ИсключаемыеТабличныеЧасти);
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВвозеИзТретьихСтранИСЦЭДМ());
		КонецЕсли;
		
		Если СоответствиеДляОбновленияАктуальныхОснований.Количество() > 1 Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомления успешно перезаполнены.'"));
		ИначеЕсли СоответствиеДляОбновленияАктуальныхОснований.Количество() = 1 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Уведомление успешно перезаполнено.'"));
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область КомандыОткрытияФорм

Процедура ОткрытьФормуСпискаВходящихАПП() Экспорт
	
	ОткрытьФорму("Документ.АктПриемаПередачиИСМПТК.Форма.ФормаСпискаВходящих");
		
КонецПроцедуры

Процедура ОткрытьФормуСпискаИсходящихАПП() Экспорт
	
	ОткрытьФорму("Документ.АктПриемаПередачиИСМПТК.Форма.ФормаСпискаИсходящих");
		
КонецПроцедуры

Процедура ОткрытьФормуСпискаВходящихУОР() Экспорт
	
	ОткрытьФорму("Документ.УведомлениеОРасхожденииИСМПТК.Форма.ФормаСпискаВходящих");
		
КонецПроцедуры

Процедура ОткрытьФормуСпискаИсходящихУОР() Экспорт
	
	ОткрытьФорму("Документ.УведомлениеОРасхожденииИСМПТК.Форма.ФормаСпискаИсходящих");
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаИсходящихУвВвозИзЕАЭС() Экспорт
	
	ОткрытьФорму("Документ.УведомлениеОВвозеИзЕАЭСИСМПТК.Форма.ФормаСпискаИсходящих");
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаИсходящихУвВвозИзТретьихСтран() Экспорт
	
	ОткрытьФорму("Документ.УведомлениеОВвозеИзТретьихСтранИСМПТК.Форма.ФормаСпискаИсходящих");
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаИсходящихВВО() Экспорт
	
	ОткрытьФорму("Документ.УведомлениеОВводеВОборотИСМПТК.Форма.ФормаСпискаИсходящих");
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаИсходящихВИО() Экспорт
	
	ОткрытьФорму("Документ.УведомлениеОВыводеИзОборотаИСМПТК.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область РазбитьДокументНаЧасти

Процедура РазбитьДокументЗаказКМ(ДокументЗаказКМ) Экспорт
	
	//Предварительная проверка данных документа
	МожноПродолжитьРазбитие = РаботаСДокументамиИСМПТКВызовСервера.ВыполнитьПроверкуДанныхЗаказаПередРазбитием(ДокументЗаказКМ);
	Если Не МожноПродолжитьРазбитие Тогда
		ТекстСообщения = НСтр("ru = 'В таблице ""Товары"" присутствуют строки с незаполненной номенклатурой: для них невозможно определить вид продукции и выполнить проверку необходимости разделения Заказа.'");
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Данный документ будет разбит на несколько Заказов.'")
				 + Символы.ПС
				 + НСтр("ru = 'Продолжить?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("РазбитьДокументЗаказКМЗавершение", ЭтотОбъект, ДокументЗаказКМ);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура РазбитьДокументЗаказКМЗавершение(Ответ, ДокументЗаказКМ) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		МассивДокументовЗаказКМ = Новый Массив;
		МассивДокументовЗаказКМ.Добавить(ДокументЗаказКМ);
		
		ПараметрыСоздания = Новый Структура;
		ПараметрыСоздания.Вставить("МассивДокументовЗаказКМ", МассивДокументовЗаказКМ);
		
		СписокЗаказКМ = РаботаСДокументамиИСМПТКВызовСервера.РазбитьДокументыЗаказКМ(ПараметрыСоздания);
		
		Если СписокЗаказКМ <> Неопределено И СписокЗаказКМ.Количество() > 0 Тогда
			
			ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьЗаказНаЭмиссию(), СписокЗаказКМ);
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	  Новый Структура("Ссылка", Новый ФиксированныйМассив(СписокЗаказКМ)));
			ПараметрыФормы.Вставить("Заголовок",  НСтр("ru = 'Сформированные Заказы на эмиссию кодов маркировки'"));
			
			ОткрытьФорму("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.Форма.ФормаСписка", ПараметрыФормы,, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РазбитьДокументИСМПТ(ДокументЗаказКМ) Экспорт
	
	ТекстВопроса = НСтр("ru = 'Данный документ будет разбит на несколько отдельных документов по товарным группам.'")
				 + Символы.ПС
				 + НСтр("ru = 'Продолжить?'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("РазбитьДокументИСМПТЗавершение", ЭтотОбъект, ДокументЗаказКМ);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура РазбитьДокументИСМПТЗавершение(Ответ, ДокументИСМПТ) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		МассивДокументовИСМПТ = Новый Массив;
		МассивДокументовИСМПТ.Добавить(ДокументИСМПТ);
		
		ПараметрыСоздания = Новый Структура;
		ПараметрыСоздания.Вставить("МассивДокументовИСМПТ" , МассивДокументовИСМПТ);
		
		Если ТипЗнч(МассивДокументовИСМПТ[0]) = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК") Тогда 
			ИмяСобытия   = "ИмяСобытияЗаписьАктПриемаПередачи";
			Заголовок    = НСтр("ru='Сформированные Акты приема/передачи'");
			ИмяДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК();
			
		ИначеЕсли ТипЗнч(МассивДокументовИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВводеВОборотИСМПТК") Тогда 
			ИмяСобытия   = "ИмяСобытияЗаписьУведомлениеОВводеВОборот";
			Заголовок    = НСтр("ru='Сформированные Уведомления о вводе в оборот'");
			ИмяДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВводеВОборотИСМПТК();
			
		ИначеЕсли ТипЗнч(МассивДокументовИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВыводеИзОборотаИСМПТК") Тогда 
			ИмяСобытия   = "ИмяСобытияЗаписьУведомлениеОВыводеИзОборота";
			Заголовок    = НСтр("ru='Сформированные Уведомления о выводе из оборота'");
			ИмяДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВыводеИзОборотаИСМПТК();
			
		ИначеЕсли ТипЗнч(МассивДокументовИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") Тогда 
			ИмяСобытия   = "ИмяСобытияЗаписьУведомлениеОВвозеИзТретьихСтран";
			Заголовок    = НСтр("ru='Сформированные Уведомления о ввозе (Импорт)'");
			ИмяДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСМПТК();
			
		ИначеЕсли ТипЗнч(МассивДокументовИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК") Тогда 
			ИмяСобытия   = "ИмяСобытияЗаписьУведомлениеОВвозеИзЕАЭС";
			Заголовок    = НСтр("ru='Сформированные Уведомления о ввозе (ЕАЭС)'");
			ИмяДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК();
			
		ИначеЕсли ТипЗнч(МассивДокументовИСМПТ[0]) = Тип("ДокументСсылка.УведомлениеОбЭкспортеЕАЭСИСМПТК") Тогда 
			ИмяСобытия   = "ИмяСобытияЗаписьУведомлениеОбЭкспортеЕАЭС";
			Заголовок    = НСтр("ru='Сформированные Уведомления об экспорте (ЕАЭС)'");
			ИмяДокумента = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОбЭкспортеЕАЭСИСМПТК();
		КонецЕсли;
					
		СписокДокументИСМПТ = РаботаСДокументамиИСМПТКВызовСервера.РазбитьДокументыИСМПТ(ПараметрыСоздания, ИмяДокумента);
		
		Если СписокДокументИСМПТ <> Неопределено И СписокДокументИСМПТ.Количество() > 0 Тогда
			
			Выполнить("ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер." + ИмяСобытия +"(), СписокДокументИСМПТ)");
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", Новый ФиксированныйМассив(СписокДокументИСМПТ)));
			ПараметрыФормы.Вставить("Заголовок", Заголовок);
			
			ОткрытьФорму("Документ." + ИмяДокумента + ".Форма.ФормаСпискаИсходящих", ПараметрыФормы,, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
