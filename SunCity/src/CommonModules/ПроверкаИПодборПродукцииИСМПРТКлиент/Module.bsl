#Область СлужебныйПрограммныйИнтерфейс

#Область СерииНоменклатуры

// Заполняет структуру, массив которых в дальнейшем будет передан в процедуру генерации серий.
//
// Параметры:
//  * ДанныеДляГенерацииСерии - Структура - Описание:
//  ** Номенклатура - ОпределяемыйТип.Номенклатура - Номенклатура, для которой будет генерироваться серия.
//  ** Серия        - ОпределяемыйТип.СерияНоменклатуры - В данное значение будет записана сгенерированная серия.
//  ** ЕстьОшибка   - Булево - Будет установлено в Истина, если по каким то причинам серия сгенерирована не будет.
//  ** ТекстОшибки  - Строка - причина, по которой серия не генерировалась.
//  ** МРЦ          - Число - только для табачной продукции, максимальная розничная цена.
//  * ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции, для которой получается структура данных
Процедура ПолучитьДанныеДляГенерацииСерии(ДанныеДляГенерацииСерии, ВидМаркируемойПродукции) Экспорт
	
	ДанныеДляГенерацииСерии = ИнтеграцияИСМПРТКлиентСервер.СтруктураДанныхДляГенерацииСерии(ВидМаркируемойПродукции);
	
КонецПроцедуры

#КонецОбласти

#Область ОткрытиеФормыПроверкиИПодбора

// Заполняет специфичные параметры открытия форм проверки и подбора маркируемой продукции в зависимости от точки вызова
//
// Параметры:
//  Форма - УправляемаяФорма - форма из которой происходит открытие формы проверки и подбора
//  Параметры - (См. ПроверкаИПодборПродукцииИСМПКлиент.ПараметрыОткрытияФормыПроверкиИПодбора)
//
Процедура ПриУстановкеПараметровОткрытияФормыПроверкиИПодбора(Форма, Параметры) Экспорт

	Если ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РеализацияТоваров")
		ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровПоставщику")
		ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровОтПокупателя")
		ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПоступлениеТоваров") Тогда
		
		Параметры.ИмяРеквизитаДокументОснование = "";
		Параметры.ИмяРеквизитаКонтрагент = "Контрагент";
		
	ИначеЕсли ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ЧекККМ")
		Или Форма.ИмяФормы = "Обработка.РМКУправляемыйРежим.Форма.Форма" Тогда
		
		Параметры.ИмяРеквизитаДокументОснование = "";
		Параметры.ПроверятьМодифицированность   = Ложь;
		Параметры.ИмяРеквизитаСклад = "";
		Параметры.ИмяРеквизитаКонтрагент = "Контрагент";
		
		ПараметрыОповещенияПриЗакрытии = Новый Структура;
		ПараметрыОповещенияПриЗакрытии.Вставить("Форма", Форма);
		ПараметрыОповещенияПриЗакрытии.Вставить("ВидПродукции", Параметры.ВидМаркируемойПродукции);
		
		Параметры.ОписаниеОповещенияПриЗакрытии = Новый ОписаниеОповещения("ПриЗакрытииФормыПроверкиИПодбора",ПроверкаИПодборПродукцииИСМПРТКлиент, ПараметрыОповещенияПриЗакрытии);
		
		Параметры.АдресПроверяемыхДанных = ПроверкаИПодборПродукцииИСМПРТВызовСервера.АдресДанныхПроверкиМаркируемойПродукцииЧекККМ(
			ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования(Форма,, Параметры.ВидМаркируемойПродукции),
			Форма.Объект,
			Форма.УникальныйИдентификатор,
			Параметры.ВидМаркируемойПродукции);
		
	ИначеЕсли ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПеремещениеТоваров") Тогда
		
		Параметры.ИмяРеквизитаДокументОснование = "";
		Параметры.ИмяРеквизитаСклад = "СкладОтправитель";
		Параметры.ИмяРеквизитаКонтрагент = "";
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"ПараметрыИнтеграцииГосИС") Тогда
		
		НастройкиИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить(Параметры.ВидМаркируемойПродукции);
		Если ТипЗнч(НастройкиИнтеграции) = Тип("Массив") Тогда
			НастройкиИнтеграции = НастройкиИнтеграции[0];
		КонецЕсли;
		Если Не (НастройкиИнтеграции = Неопределено) Тогда
			Параметры.ПроверкаЭлектронногоДокумента = НастройкиИнтеграции.ЕстьЭлектронныйДокумент;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Выполняет специфичные действия после закрытия форм проверки и подбора маркируемой продукции в зависимости от точки вызова
//
// Параметры:
//  РезультатЗакрытия - Произвольный - результат закрытия формы проверки и подбора
//  ДополнительныеПараметры - Структура с реквизитом Форма (управляемая форма из которой происходил вызов)
//
Процедура ПриЗакрытииФормыПроверкиИПодбора(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Форма.ИмяФормы = "Документ.РеализацияТоваров.Форма.ФормаДокумента"
		ИЛИ Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента"
		ИЛИ Форма.ИмяФормы = "Обработка.РМКУправляемыйРежим.Форма.Форма" Тогда
		
		Если Не ЭтоАдресВременногоХранилища(Результат) Тогда
			Возврат;
		КонецЕсли;
		Событие = СтрШаблон("ЗакрытиеФормыПроверкиИПодбораГосИС%1", ОбщегоНазначенияИСКлиентСервер.ИндексВидаПродукцииИС(ДополнительныеПараметры.ВидПродукции));
		Оповестить(Событие, Результат, Форма.УникальныйИдентификатор);
	Иначе
		Форма.Прочитать();
	КонецЕсли;
	
КонецПроцедуры

// Выполняет специфичные действия перед открытием форм проверки и подбора маркируемой продукции в зависимости от точки вызова
//
// Параметры:
//  Форма - УправляемаяФорма       - форма из которой происходит открытие формы проверки и подбора
//  ПараметрыОткрытияФормыПроверки - Структура - параметры открытия формы проверки и подбора для формы-источника
//  ПараметрыФормыПроверки         - Структура - подготовленные параметры открытия формы проверки и подбора
//  Отказ                          - Булево    - отказ от открытия формы
//
Процедура ПередОткрытиемФормыПроверкиПодбора(Форма, ПараметрыОткрытияФормыПроверки, ПараметрыФормыПроверки, Отказ) Экспорт
	
	Если ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РеализацияТоваров")
		ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровПоставщику")
		ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровОтПокупателя")
		ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПоступлениеТоваров") Тогда
		
		ПараметрыИнтеграцииФормыПроверки = Форма.ПараметрыИнтеграцииГосИС.Получить(ПараметрыОткрытияФормыПроверки.ВидМаркируемойПродукции);
		
		Если ТипЗнч(ПараметрыИнтеграцииФормыПроверки) = Тип("Массив") Тогда
			ПараметрыИнтеграцииФормыПроверки = ПараметрыИнтеграцииФормыПроверки[0];
		КонецЕсли;
		
		СерииИспользуются = ПараметрыИнтеграцииФормыПроверки.СерииИспользуются;
		
		Если СерииИспользуются И (НЕ ЗначениеЗаполнено(ПараметрыФормыПроверки.Склад)
			ИЛИ ТипЗнч(ПараметрыФормыПроверки.Склад) <> Тип("СправочникСсылка.Склады")) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Для проверки и подбора маркируемой продукции укажите склад';
			|en = 'Для проверки и подбора маркируемой продукции укажите склад'"),,
			ПараметрыОткрытияФормыПроверки.ИмяРеквизитаСклад,
			ПараметрыОткрытияФормыПроверки.ИмяРеквизитаФормыОбъект,
			Отказ);
		КонецЕсли;
		
		Если ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РеализацияТоваров")
			ИЛИ ИнтеграцияИСМПРТКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПоступлениеТоваров") Тогда
			Если СерииИспользуются И Форма.СкладГруппа Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для проверки и подбора маркируемой продукции укажите склад, а не группу';
				|en = 'Для проверки и подбора маркируемой продукции укажите склад, а не группу'"),,
				ПараметрыОткрытияФормыПроверки.ИмяРеквизитаСклад,
				ПараметрыОткрытияФормыПроверки.ИмяРеквизитаФормыОбъект,
				Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
