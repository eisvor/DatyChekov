#Область ПрограммныйИнтерфейс

// Процедура вызывается при загрузке после записи алкогольной продукции в базу.
//
// Параметры:
//  АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС - загружаемая алкогольная продукция,
//  ЕстьИзменения - Булево - признак наличия изменений.
Процедура ПриЗагрузкеАлкогольнойПродукции(АлкогольнаяПродукция, ЕстьИзменения) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Процедура вызывается при загрузке ТТН входящей ЕГАИС (перед записью).
//
//Параметры:
//  ТТНВходящаяОбъект - ДокументОбъект.ТТНВходящаяЕГАИС - загружаемая ТТН.
Процедура ПриЗагрузкеТТНВходящаяЕГАИС(ТТНВходящаяОбъект) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриЗагрузкеТТНВходящаяЕГАИС(ТТНВходящаяОбъект);
	
КонецПроцедуры

// Процедура вызывается при изменении статуса обработки документа.
//
// Параметры:
//  ДокументСсылка          - ДокументСсылка     - ссылка на документ.
//  ПредыдущийСтатус        - ПеречислениеСсылка - предыдущий статус обработки (СтатусыОбработки*).
//  НовыйСтатус             - ПеречислениеСсылка - новый статус обработки (СтатусыОбработки*).
//  ДополнительныеПараметры - См. ОбменДаннымиЕГАИС.ПараметрыОбновленияСтатуса - дополнительные параметры обновления статуса.
Процедура ПриИзмененииСтатусаДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НовыйСтатус = Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.ОшибкаПередачи
		ИЛИ НовыйСтатус = Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.ОшибкаПроведенияЕГАИС
		ИЛИ НовыйСтатус = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачи Тогда
		
		ИнтеграцияЕГАИСРТ.ОтменитьПроведениеСвязанныхДокументов(ДокументСсылка);
		
	КонецЕсли;
	
КонецПроцедуры

//Возвращает признак разрешения розничной продажи без сопоставления с классификатором ЕГАИС.
//
//Параметры:
//   Разрешать - Булево - если Истина, продажа разрешена, иначе - Ложь.
//
Процедура РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС(Разрешать) Экспорт
	
	Разрешать = Истина;
	
КонецПроцедуры

// Процедура инициализирует общие структуры, используемые при проведении документов.
// Вызывается из модуля документов при проведении.
Процедура ИнициализироватьДополнительныеСвойстваДляПроведенияЧеков(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Возврат;
	
КонецПроцедуры

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа в форме,
// а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	ИнтеграцияЕГАИСРТ.ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Вызывается при проведении документа. Выполняется в транзакции записи.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проводимый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения.
Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт
	
	ИнтеграцияЕГАИСРТ.ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

// Возникает перед выполнением записи документа. Вызывается после начала транзакции записи, но до начала записи документа.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - записываемый документ,
//  Отказ - Булево - признак отказа от записи,
//  РежимЗаписи - РежимЗаписиДокумента - текущий режим записи документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения документа.
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

//Формирует временную таблицу организаций ЕГАИС (с настроенным обменом) использующих регистр №2
//
// Параметры:
//   ТекстЗапроса        - Строка - заполняемый текст запроса.
//   ИмяВременнойТаблицы - Строка - имя создаваемой временной таблицы.
//   ИмяПоляОрганизация  - Строка - поле с организацией ЕГАИС в создаваемой таблице.
//
Процедура ТекстЗапросаОрганизацииЕГАИСИспользующиеРегистр2(ТекстЗапроса, ИмяВременнойТаблицы, ИмяПоляОрганизация) Экспорт
	
	ИнтеграцияЕГАИСРТ.ТекстЗапросаОрганизацииЕГАИСИспользующиеРегистр2(ТекстЗапроса, ИмяВременнойТаблицы, ИмяПоляОрганизация);
	
КонецПроцедуры

#Область СопоставлениеКлассификаторовЕГАИС

// Процедура определяет текст запроса сопоставления организаций ЕГАИС из входящих ТТН контрагентам 
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &СписокТТН
//    * В последнем запросе пакета возвращается таблица организаций ЕГАИС без найденных сопоставлений
//    * В предпоследнем запросе пакета возвращается таблица найденных сопоставлений
//    * В предпредпоследнем запросе пакета возвращается таблица контрагентов для сопоставления.
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоТТН(ТекстЗапроса) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоТТН(ТекстЗапроса);
	
КонецПроцедуры

// Процедура определяет текст запроса сопоставления алкогольной продукции ЕГАИС из входящих ТТН номенклатуре
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &СписокТТН
//    * В предпоследнем запросе пакета возвращается таблица алкогольной продукции с колонками
//     ** АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукции - ссылка на алкогольную продукцию,
//     ** Наименование         - Строка                                             - ее наименование.
//    * В последнем запросе пакета возвращается таблица номенклатуры с колонками
//     ** Номенклатура         - ОпределяемыйТип.Номенклатура - ссылка на номенклатуру алкогольной продукции,
//     ** Наименование         - Строка                       - ее наименование.
//    * В одном из запросов пакета создается временная таблица втНоменклатура с колонками
//     ** Номенклатура,
//     ** Наименование,
//     ** ВидАлкогольнойПродукции,
//     ** ПроизводительИмпортерКонтрагент,
//     ** ОбъемДАЛ,
//     ** Крепость.
//    * В одном из запросов пакета создается временная таблица втДанныеТТН с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Количество,
//     ** Номенклатура,
//     ** Характеристика,
//     ** Серия,
//     ** Наименование,
//     ** НаименованиеПолное,
//     ** Объем,
//     ** Крепость,
//     ** Производитель,
//     ** Импортер,
//     ** ПроизводительИБ,
//     ** ИмпортерИБ.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриЗаполненииТекстаЗапросаСопоставленияНоменклатурыПоТТН(ТекстЗапроса) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриЗаполненииТекстаЗапросаСопоставленияНоменклатурыПоТТН(ТекстЗапроса);
	
КонецПроцедуры

// Процедура определяет текст запроса сопоставления организаций ЕГАИС из входящих данных (товаров и организаций) контрагентам 
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &Товары: таблица с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Номенклатура,
//     ** Характеристика.
//    * Используется входящий параметр &ОрганизацииЕГАИС: таблица с колонками
//     ** ОрганизацияЕГАИС
//    * В последнем запросе пакета возвращается таблица организаций ЕГАИС без найденных сопоставлений
//    * В предпоследнем запросе пакета возвращается таблица найденных сопоставлений
//    * В предпредпоследнем запросе пакета возвращается таблица контрагентов для сопоставления.
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоВходящимДанным(ТекстЗапроса) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоВходящимДанным(ТекстЗапроса);
	
КонецПроцедуры

// Процедура определяет текст запроса сопоставления алкогольной продукции ЕГАИС из входящих данных номенклатуре
//   Ожидаемые свойства текста запроса:
//    * Используется входящий параметр &Товары: таблица с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Номенклатура,
//     ** Характеристика,
//     ** Серия.
//    * В предпоследнем запросе пакета возвращается таблица алкогольной продукции с колонками
//     ** АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукции - ссылка на алкогольную продукцию,
//     ** Наименование         - Строка                                             - ее наименование.
//    * В последнем запросе пакета возвращается таблица номенклатуры с колонками
//     ** Номенклатура         - ОпределяемыйТип.Номенклатура - ссылка на номенклатуру алкогольной продукции,
//     ** Наименование         - Строка                       - ее наименование.
//    * В одном из запросов пакета создается временная таблица втНоменклатура с колонками
//     ** Номенклатура,
//     ** Наименование,
//     ** ВидАлкогольнойПродукции,
//     ** ПроизводительИмпортерКонтрагент,
//     ** ОбъемДАЛ,
//     ** Крепость.
//    * В одном из запросов пакета создается временная таблица втДанныеТТН с колонками
//     ** АлкогольнаяПродукция,
//     ** ИдентификаторУпаковки,
//     ** Количество,
//     ** Номенклатура,
//     ** Характеристика,
//     ** Серия,
//     ** Наименование,
//     ** НаименованиеПолное,
//     ** Объем,
//     ** Крепость,
//     ** Производитель,
//     ** Импортер,
//     ** ПроизводительИБ,
//     ** ИмпортерИБ.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным(ТекстЗапроса) Экспорт
	
	ИнтеграцияЕГАИСРТ.ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

// Заполняет таблицу алкогольной продукции документа-основания с колонками:
//   * Номенклатура
//   * Характеристика
//   * Серия
//   * Количество.
// 
// Параметры:
//  ДокументОснование - ДокументСсылка                 - документ-основание.
//  ДокументЕГАИС     - ОпределяемыйТип.ДокументыЕГАИС - документ по которому требуется получить данные документа-основания.
//  ТаблицаДанных     - ТаблицаЗначений                - заполняемые данные основания
Процедура СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных) Экспорт
	
	ИнтеграцияЕГАИСРТ.СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
	
КонецПроцедуры

#Область ПанельОбменСЕГАИС

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса
//
Процедура ТекстЗапросаАктПостановкиНаБалансЕГАИСОформите(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ПОМЕСТИТЬ
	|	ВремТаблВРегистры1И2
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.АктПостановкиНаБалансЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И ((%УсловиеОрганизация%) ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаПересортицаТоваров   = ПравоДоступа("Чтение", Метаданные.Документы.ПересортицаТоваров);
	ПравоДоступаОприходованиеТоваров = ПравоДоступа("Чтение", Метаданные.Документы.ОприходованиеТоваров);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаПересортицаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПересортицаТоваров КАК ДокументПересортицаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументПересортицаТоваров.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаОприходованиеТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ОприходованиеТоваров КАК ДокументОприходованиеТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументОприходованиеТоваров.Ссылка
		|";
	КонецЕсли;
	
	Если ПравоДоступаПересортицаТоваров
		Или ПравоДоступаОприходованиеТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ПО
		|	КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаПересортицаТоваров
		И ПравоДоступаОприходованиеТоваров Тогда

		УсловиеСсылка = "(ДокументПересортицаТоваров.Ссылка ЕСТЬ НЕ NULL ИЛИ ДокументОприходованиеТоваров.Ссылка ЕСТЬ НЕ NULL)";
		УсловиеОрганизация = "ДокументПересортицаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент ИЛИ ДокументОприходованиеТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	ИначеЕсли ПравоДоступаПересортицаТоваров Тогда
		
		УсловиеСсылка = "ДокументПересортицаТоваров.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ДокументПересортицаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	ИначеЕсли ПравоДоступаОприходованиеТоваров Тогда
		
		УсловиеСсылка = "ДокументОприходованиеТоваров.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ДокументОприходованиеТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РАЗЛИЧНЫЕ 0.5 КАК КоличествоДокументов
	|ПОМЕСТИТЬ
	|	ВремТаблВРегистр3
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|ГДЕ
	|	АкцизныеМаркиЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс)
	|	И (АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС В(&ОрганизацияЕГАИС) ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|	И НЕ АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС.Ссылка ЕСТЬ NULL
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВРегистры1И2.КоличествоДокументов, 0) + ЕСТЬNULL(ВРегистр3.КоличествоДокументов, 0) КАК КоличествоДокументов
	|ИЗ
	|	ВремТаблВРегистры1И2 КАК ВРегистры1И2
	|	ПОЛНОЕ СОЕДИНЕНИЕ ВремТаблВРегистр3 КАК ВРегистр3
	|	ПО ИСТИНА
	//|;
	//|/////////////////////////////////////////////////////////////////////////////
	|";
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктПостановкиНаБалансЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктПостановкиНаБалансЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктСписанияЕГАИСОформите(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.АктСписанияЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И (%УсловиеОрганизация% ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|";
	
	ПравоДоступаСписаниеТоваров         = ПравоДоступа("Чтение", Метаданные.Документы.СписаниеТоваров);
	ПравоДоступаПересортицаТоваров      = ПравоДоступа("Чтение", Метаданные.Документы.ПересортицаТоваров);
	ПравоДоступаОтчетОРозничныхПродажах = ПравоДоступа("Чтение", Метаданные.Документы.ОтчетОРозничныхПродажах);
	ПравоДоступаСборкаТоваров           = ПравоДоступа("Чтение", Метаданные.Документы.СборкаТоваров);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	Если ПравоДоступаСписаниеТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СписаниеТоваров КАК ДокументСписаниеТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументСписаниеТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументСписаниеТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументСписаниеТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаПересортицаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПересортицаТоваров КАК ДокументПересортицаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументПересортицаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументПересортицаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументПересортицаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаОтчетОРозничныхПродажах Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ОтчетОРозничныхПродажах КАК ДокументОтчетОРозничныхПродажах
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументОтчетОРозничныхПродажах.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументОтчетОРозничныхПродажах.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументОтчетОРозничныхПродажах.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаСборкаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СборкаТоваров КАК ДокументСборкаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументСборкаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументСборкаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументСборкаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЛевоеСоединение) Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ПО
		|	КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрСоединить(УсловияСсылка, " ИЛИ "));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрСоединить(УсловияОрганизация, " ИЛИ "));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "");
	КонецЕсли;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктСписанияЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаАктСписанияЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса
//
Процедура ТекстЗапросаВозвратИзРегистра2ЕГАИСОформите(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ВозвратИзРегистра2ЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И (%УсловиеОрганизация% ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ПравоДоступаТТНИсходящаяЕГАИС = ПравоДоступа("Чтение", Метаданные.Документы.ТТНИсходящаяЕГАИС);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаТТНИсходящаяЕГАИС Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ТТНИсходящаяЕГАИС КАК ДокументТТНИсходящаяЕГАИС
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументТТНИсходящаяЕГАИС.Ссылка
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ПО
		|	КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаТТНИсходящаяЕГАИС Тогда
		
		УсловиеСсылка = "ДокументТТНИсходящаяЕГАИС.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ДокументТТНИсходящаяЕГАИС.Грузоотправитель = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаВозвратИзРегистра2ЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаВозвратИзРегистра2ЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаПередачаВРегистр2ЕГАИСОформите(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаПередачаВРегистр2ЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаПередачаВРегистр2ЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//  ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаТТНИсходящаяЕГАИСОформите(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ТТНИсходящаяЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И (%УсловиеОрганизация% ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|";
	
	ПравоДоступаВозвратТоваровПоставщику          = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	ПравоДоступаПеремещениеТоваров                = ПравоДоступа("Чтение", Метаданные.Документы.ПеремещениеТоваров);
	ПравоДоступаПередачаТоваровМеждуОрганизациями = ПравоДоступа("Чтение", Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	Если ПравоДоступаВозвратТоваровПоставщику Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровПоставщику КАК ДокументВозвратТоваровПоставщику
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументВозвратТоваровПоставщику.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументВозвратТоваровПоставщику.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументВозвратТоваровПоставщику.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаПеремещениеТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПеремещениеТоваров КАК ДокументПеремещениеТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументПеремещениеТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументПеремещениеТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументПеремещениеТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаПередачаТоваровМеждуОрганизациями Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументПередачаТоваровМеждуОрганизациями
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументПередачаТоваровМеждуОрганизациями.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументПередачаТоваровМеждуОрганизациями.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументПередачаТоваровМеждуОрганизациями.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЛевоеСоединение) Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ПО
		|	КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрСоединить(УсловияСсылка, " ИЛИ "));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрСоединить(УсловияОрганизация, " ИЛИ "));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "");
	КонецЕсли;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаТТНИсходящаяЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаТТНИсходящаяЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСОформите(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ЧекЕГАИС.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И (%УсловиеОрганизация% ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|";
	
	ПравоДоступаРеализацияТоваров = ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваров);
	ПравоДоступаСборкаТоваров     = ПравоДоступа("Чтение", Метаданные.Документы.СборкаТоваров);
	
	УсловияСсылка = Новый Массив;
	УсловияОрганизация = Новый Массив;
	
	ЛевоеСоединение = "";
	Если ПравоДоступаРеализацияТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.РеализацияТоваров КАК ДокументРеализацияТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументРеализацияТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументРеализацияТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументРеализацияТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ПравоДоступаСборкаТоваров Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.СборкаТоваров КАК ДокументСборкаТоваров
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументСборкаТоваров.Ссылка
		|";
		УсловияСсылка.Добавить("ДокументСборкаТоваров.Ссылка ЕСТЬ НЕ NULL");
		УсловияОрганизация.Добавить("ДокументСборкаТоваров.Организация = КлассификаторОрганизацийЕГАИС.Контрагент");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЛевоеСоединение) Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ПО
		|	КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", СтрСоединить(УсловияСсылка, " ИЛИ "));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", "");
	КонецЕсли;
	
	Если УсловияОрганизация.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", СтрСоединить(УсловияОрганизация, " ИЛИ "));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", "");
	КонецЕсли;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСВозвратОформите(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Документ)
	|	* КОЛИЧЕСТВО (РАЗЛИЧНЫЕ СтатусыОформленияДокументовЕГАИС.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовЕГАИС КАК СтатусыОформленияДокументовЕГАИС
	|%ЛевоеСоединение%
	|ГДЕ
	|	(%УсловиеСсылка%)
	|	И СтатусыОформленияДокументовЕГАИС.Документ = ЗНАЧЕНИЕ(Документ.ЧекЕГАИСВозврат.ПустаяСсылка)
	|	И СтатусыОформленияДокументовЕГАИС.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ОформленоЧастично),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.ТребуетсяСопоставлениеНоменклатуры)
	|	)
	|	И (%УсловиеОрганизация% ИЛИ &БезОтбораПоОрганизацииЕГАИС)
	|";
	
	ПравоДоступаВозвратТоваровОтПокупателя = ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтПокупателя);
	
	ЛевоеСоединение = "";
	Если ПравоДоступаВозвратТоваровОтПокупателя Тогда
		ЛевоеСоединение = ЛевоеСоединение + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Документ.ВозвратТоваровОтПокупателя КАК ДокументВозвратТоваровОтПокупателя
		|ПО
		|	СтатусыОформленияДокументовЕГАИС.Основание = ДокументВозвратТоваровОтПокупателя.Ссылка
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|ПО
		|	КлассификаторОрганизацийЕГАИС.Ссылка В(&ОрганизацияЕГАИС)
		|";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ЛевоеСоединение%", ЛевоеСоединение);
	
	УсловиеСсылка = "";
	УсловиеОрганизация = "";
	
	Если ПравоДоступаВозвратТоваровОтПокупателя Тогда
		
		УсловиеСсылка = "ДокументВозвратТоваровОтПокупателя.Ссылка ЕСТЬ НЕ NULL";
		УсловиеОрганизация = "ДокументВозвратТоваровОтПокупателя.Организация = КлассификаторОрганизацийЕГАИС.Контрагент";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеСсылка%", УсловиеСсылка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеОрганизация%", УсловиеОрганизация);
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
//Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСВозвратОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаЧекЕГАИСВозвратОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаУведомлениеОПланируемомИмпортеЕГАИСОформите(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаУведомлениеОПланируемомИмпортеЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаУведомлениеОПланируемомИмпортеЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОбИмпортеЕГАИСОформите(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОбИмпортеЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОбИмпортеЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОПроизводствеЕГАИСОформите(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОПроизводствеЕГАИСОтработайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

//Переопределяет текст запроса для отображения требующих действий документов в основной панели ЕГАИС
//   Возвращаемое поле результата запроса: КоличествоДокументов.
//
// Параметры:
//   ТекстЗапроса - Строка - заполняемый текст запроса.
//
Процедура ТекстЗапросаОтчетОПроизводствеЕГАИСОжидайте(ТекстЗапроса) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Статусы

// Устанавливает признак "Не используется" для обрабатываемых статусов в обработчике заполнения регистра
// СтатусыДокументовЕГАИС на основании данных в документах ЕГАИС.
// (Обработчик обновления: Переход от хранения статусов в документе к хранению в регистре сведений).
//
// Параметры:
//  НеИспользуется - Булево - Значение статуса не используется
//  Статус         - ПеречислениеСсылка.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС - проверяемый статус
//                 - ПеречислениеСсылка.СтатусыИнформированияЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиАктаСписанияЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиВозвратаИзРегистра2ЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиЗапросаАкцизныхМарокЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиОстатковЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиОтчетаЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиПередачиВРегистр2ЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиТТНВходящейЕГАИС -
//                 - ПеречислениеСсылка.СтатусыОбработкиТТНИсходящейЕГАИС -
Процедура ПриОпределенииИспользуемыхСтатусовДокумента(НеИспользуется, Статус) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

//Заполняет, при необходимости создает серии в документе ЕГАИС или его выделенных строках.
//
//Параметры:
//  Контекст  - См. ИнтеграцияЕГАИС.КонтекстЗаполненияСерий - место заполнения серий.
//  Результат - См. ИнтеграцияЕГАИС.РезультатЗаполненияСерий - результат заполнения.
//
Процедура ЗаполнитьСгенерироватьСерии(Контекст, Результат) Экспорт
	
	ПараметрыЗаполнения = Неопределено;
	ПараметрыЗаполнения = ИнтеграцияЕГАИСРТ.ПараметрыЗаполненияСерий();
	ПараметрыЗаполнения.ОрганизацияЕГАИС = Контекст.Объект.Грузополучатель;
	ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок = Контекст.ЗаполнятьБезЗапросаСправок;
	ПараметрыЗаполнения.ПараметрыУказанияСерий = Контекст.ПараметрыУказанияСерий;
	
	Если ТипЗнч(Контекст.Объект.ТорговыйОбъект) = ТипЗнч(Контекст.СобственныйТорговыйОбъектЗначениеПоУмолчанию) Тогда
		ИнтеграцияЕГАИСРТ.ЗаполнитьПараметрЗаполненияСклад(Контекст.Объект, ПараметрыЗаполнения);
	КонецЕсли;
	
	СтруктураДействий = Контекст.СтруктураДействий;
	Если (СтруктураДействий = Неопределено) Тогда
		СтруктураДействий = Новый Структура;
	КонецЕсли;
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",
		Новый Структура("ПараметрыУказанияСерий, Склад", Контекст.ПараметрыУказанияСерий, ПараметрыЗаполнения.Склад));
		
	РезультатЗаполнения = ИнтеграцияЕГАИСРТ.ЗаполнитьСгенерироватьСерии( 
		Контекст.Объект.Товары,
		Контекст.МассивСтрок,
		ПараметрыЗаполнения,
		СтруктураДействий);
		
	ЗаполнитьЗначенияСвойств(Результат, РезультатЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Формирует гиперссылку на документ библиотеки в журналах документов УТ
// 
// Параметры:
//  Параметры        - Структура                           - параметры формирования гиперссылки
//  ОбъектМетаданных - ОбъектМетаданныхДокумент            - тип метаданных для гиперссылки
//  Гиперссылка      - ФорматированнаяСтрока, Неопределено - результат формирования гиперссылки
Процедура СформироватьГиперссылкуСмТакжеВРаботе(Параметры, ОбъектМетаданных, Гиперссылка) Экспорт
	
	ИнтеграцияЕГАИСРТ.СформироватьГиперссылкуСмТакжеВРаботе(Параметры, ОбъектМетаданных, Гиперссылка);
	
КонецПроцедуры

// Процедура вызывается при загрузке акта подтверждения ТТН.
//
// Параметры:
//  ТТНИсходящаяОбъект - ДокументОбъект.ТТНИсходящаяЕГАИС - подтверждаемая ТТН,
//  ОтказОтТТН         - Булево                           - признак загрузки акта отказа от ТТН,
//  ЕстьРасхождения    - Булево                           - признак загрузки акта расхождений.
Процедура ПриЗагрузкеАктаПодтвержденияТТН(ТТНИсходящаяОбъект, ОтказОтТТН, ЕстьРасхождения) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриЗагрузкеАктаПодтвержденияТТН(ТТНИсходящаяОбъект, ОтказОтТТН, ЕстьРасхождения);
	
КонецПроцедуры

// Процедура вызывается при загрузке подтверждения акта расхождений ТТН.
//
// Параметры:
//  ТТНВходящаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - подтверждаемая ТТН,
//  ОтказОтАкта - Булево - признак загрузки отказа от акта расхождений ТТН.
//
Процедура ПриЗагрузкеПодтвержденияАктаРасхожденийТТН(ТТНВходящаяЕГАИС, ОтказОтАкта) Экспорт
	
	Если ОтказОтАкта Тогда
		ИнтеграцияЕГАИСРТ.ОтменитьПроведениеСвязанныхДокументов(ТТНВходящаяЕГАИС);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при отказе от входящей ТТН. Нужно реализовать алгоритм отмены проведения связанных поступлений.
//
// Параметры:
//  ТТНВходящаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - ссылка на документ.
Процедура ОтменитьПроведениеПоступленияТоваровПриОтказеОтТТН(ТТНВходящаяЕГАИС) Экспорт
	
	ИнтеграцияЕГАИСРТ.ОтменитьПроведениеПоступленияТоваровПриОтказеОтТТН(ТТНВходящаяЕГАИС);
	
КонецПроцедуры

// Заполняет таблицу штрихкодов алкогольной продукции входящей ТТН.
//
// Параметры:
//  ДокументСсылка     - ДокументСсылка.ТТНВходящаяЕГАИС - ссылка на документ.
//  ЗаполняемаяТаблица - ТаблицаЗначений - заполняемая таблица.
Процедура ЗаполнитьТаблицуШтрихкодовНеМаркируемойПродукцииТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица) Экспорт
	
	ИнтеграцияЕГАИСРТ.ЗаполнитьТаблицуШтрихкодовНеМаркируемойПродукцииТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица);
	
КонецПроцедуры

// Заполняет таблицу сопоставленных справок 2 документа документа ТТН входящая.
//
// Параметры:
//  ДокументСсылка     - ДокументСсылка.ТТНВходящаяЕГАИС - ссылка на документ.
//  ЗаполняемаяТаблица - ТаблицаЗначений - заполняемая таблица.
Процедура ЗаполнитьТаблицуСопоставленныхСправок2ТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица) Экспорт
	
	ИнтеграцияЕГАИСРТ.ЗаполнитьТаблицуСопоставленныхСправок2ТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица);
	
КонецПроцедуры

// Получить представление валюты регламентированного учета.
// 
// Параметры:
//  Представление - Строка - Возвращаемое значение, представление валюты.
Процедура ПредставлениеВалютыРегламентированногоУчета(Представление) Экспорт
	
	Представление = НСтр("ru='руб.'");
	
КонецПроцедуры

// Процедура проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//   ДокументСсылка      - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН.
//   ДокументПоступления - ДокументСсылка                  - проверяемое поступление товаров.
//   ЕстьРасхождения      - Булево                         - возвращаемое значение: Истина если есть расхождения.
Процедура ПриОпределенииРасхожденийСТТНВходящейЕГАИС(ДокументСсылка, ДокументПоступления, ЕстьРасхождения) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриОпределенииРасхожденийСТТНВходящейЕГАИС(ДокументСсылка, ДокументПоступления, ЕстьРасхождения);
	
КонецПроцедуры

// Переопределяет текст запроса списка остатков к оформлению документа передача в регистр №2 ЕГАИС.
// 
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
Процедура ПриОпределенииТекстаЗапросаОстатковКПередачеВРегистр2ЕГАИС(ТекстЗапроса) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриОпределенииТекстаЗапросаОстатковКПередачеВРегистр2ЕГАИС(ТекстЗапроса);
	
КонецПроцедуры

// Определяет текст запроса для движений по регистру Серии номенклатуры.
// 
// Параметры:
//  ТекстЗапроса - Строка - текст запроса.
//  ИмяТаблицы   - Строка - имя метаданных документа из которого выполняется заполнение.
Процедура ПриЗаполненииТекстаЗапросаДвижениеСерийТоваров(ТекстЗапроса, ИмяТаблицы) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриЗаполненииТекстаЗапросаДвижениеСерийТоваров(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

// Получить количество возможных документов поступления товаров для сопоставления.
//
// Параметры:
//  Количество     - Число                                      - количество документов
//  Организация    - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на собственную организацию,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС        - ссылка на торговый объект,
//  Контрагент     - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - поставщик.
Процедура ПолучитьКоличествоВозможныхДокументовПоступленияТоваров(Количество, Организация, ТорговыйОбъект, Контрагент) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПолучитьКоличествоВозможныхДокументовПоступленияТоваров(Количество, Организация, ТорговыйОбъект, Контрагент);
	
КонецПроцедуры

// Проверяет возможность использования регистр №2 для организации.
//
// Параметры:
//  Использовать     - Булево - Истина, если для организации можно использовать регистр №2.
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - ссылка на организацию в классификаторе ЕГАИС.
Процедура ИспользоватьРегистр2(Использовать, ОрганизацияЕГАИС) Экспорт
	
	ИнтеграцияЕГАИСРТ.ИспользоватьРегистр2(Использовать, ОрганизацияЕГАИС);
	
КонецПроцедуры

// Заполняет таблицу данными о действующих лицензиях на продажу алкогольной продукции.
//
// Параметры:
//  ТаблицаЛицензий - ТаблицаЗначений - таблица для заполнения. Колонки:
//   * Лицензиат     - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - контрагент, для которого нужно получить лицензию,
//   * ДатаТТН       - Дата - дата документа, на которую нужно получить действующую лицензию,
//   * Наименование  - Строка - представление лицензии,
//   * ДатаНачала    - Дата - дата начала действия лицензии,
//   * ДатаОкончания - Дата - дата окончания действия лицензии,
//   * КемВыдана     - Строка - наименование организации, выдавшей лицензию.
Процедура ЗаполнитьТаблицуЛицензийНаАлкоголь(ТаблицаЛицензий) Экспорт
	
	ИнтеграцияЕГАИСРТ.ЗаполнитьТаблицуЛицензийНаАлкоголь(ТаблицаЛицензий);
	
КонецПроцедуры

// Проверить сопоставление классификаторов, заполнить входящую структуру "РезультатПроверки" значениями:
//   * ЕстьНеСопоставленныеТовары - Булево - Признак наличия несопоставленных товаров.
//   * НеСопоставленныеТовары     - Строка - Адрес по временном хранилище.
//
// Параметры:
//  РезультатПроверки       - Структура      - Результат проверки документа на несопоставленные товары.
//  ДокументСсылка          - ДокументСсылка - Документ, для которого необходимо проверить соответствие классификаторов.
//  УникальныйИдентификатор - УникальныйИдентификатор - Идентификатор формы открытого документа.
Процедура ПроверитьСопоставлениеКлассификаторовПрикладногоДокумента(РезультатПроверки, ДокументСсылка, УникальныйИдентификатор) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПроверитьСопоставлениеКлассификаторовПрикладногоДокумента(РезультатПроверки, ДокументСсылка, УникальныйИдентификатор);
	
КонецПроцедуры

// Заполняет текст запроса ТТН входящих динамического списка, отображаемого в форме списка документов.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса динамического списка,
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - организация, по которой нужно отобрать документы,
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - торговый объект, по которому нужно отобрать документы,
//  ОжидаетсяОформление- Булево - если Истина, будут отобраны только документы, ожидающие оформления.
Процедура ТекстЗапросаТТН(ТекстЗапроса, Организация = Неопределено, ТорговыйОбъект = Неопределено, ОжидаетсяОформление = Ложь) Экспорт
	
	ИнтеграцияЕГАИСРТ.ТекстЗапросаТТН(ТекстЗапроса, Организация, ТорговыйОбъект, ОжидаетсяОформление);
	
КонецПроцедуры

//Заполняет текст запроса для формирования временной таблицы коэффициентов пересчета базовых единиц измерения
//   номенклатуры в единицы ЕГАИС:
//   - для упакованного товара: коэффициент пересчета в штуки (бутылки)
//   - для неупакованного товара: коэффициент пересчета в декалитры.
// Временная таблица используется при проведении документов по регистру ОстаткиЕГАИС и при передаче данных в УТМ.
//
// Параметры:
//  ТекстЗапроса        - Строка - Заполняемый текст запроса.
//  ИмяТаблицыТовары    - Строка - Имя таблицы с колонками: АлкогольнаяПродукция, Номенклатура, Характеристика, Серия.
//  ИмяВременнойТаблицы - Строка - Имя результирующей временной таблицы.
Процедура ТекстЗапросаВТКоэффициентыПересчетаВЕдиницыЕГАИС(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы) Экспорт
	
	ИнтеграцияЕГАИСРТ.ТекстЗапросаВТКоэффициентыПересчетаВЕдиницыЕГАИС(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы);
	
КонецПроцедуры

//Заполняет текст запроса для формирования временной таблицы коэффициентов пересчета базовых единиц измерения
//   номенклатуры в объем ЕГАИС (декалитры).
//
//Параметры:
//  ТекстЗапроса        - Строка - Заполняемый текст запроса.
//  ИмяТаблицыТовары    - Строка - Имя таблицы с колонками: Номенклатура, Характеристика.
//  ИмяВременнойТаблицы - Строка - Имя результирующей временной таблицы.
Процедура ТекстЗапросаВТОбъемДАЛЕдиницыНоменклатуры(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы) Экспорт
	
	ИнтеграцияЕГАИСРТ.ТекстЗапросаВТОбъемДАЛЕдиницыНоменклатуры(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы);
	
КонецПроцедуры

// Заполняет в переданной таблице значений реквизиты: Крепость, ВидПродукции и Объем.
//
// Параметры:
//  ТаблицаНоменклатуры - ТаблицаЗначений - таблица номенклатуры с колонками: НомерСтроки, Номенклатура.
Процедура ЗаполнитьРеквизитыАлкогольнойПродукции(ТаблицаНоменклатуры) Экспорт
	
	ИнтеграцияЕГАИСРТ.ЗаполнитьРеквизитыАлкогольнойПродукции(ТаблицаНоменклатуры);
	
КонецПроцедуры

// Обрабатывает таблицу штриховых кодов и получает для каждого из них данные в информационной базе.
//   На входе имеется таблица, в которой заполнены только колонки "Номер строки", "Штриховой код" и "Количество", опционально заполнена 
//   колонка "Родитель".
//   В процедуре устанавливается значение "Истина" в одной из других колонок.
//
// Параметры:
//  ТаблицаНеАкцизныеМарки               - ТаблицаЗначений - имеет следующие колонки:
//   * ШтриховойКод                      - Строка                              - штриховой код полученный с ТСД.
//   * Количество                        - Число                               - сколько раз был считан данный штрихкод.
//   * ШтрихКодУпаковки                  - СправочникСсылка.ШтрихкодыУпаковокТоваров - ссылка на имеющуюся в базе упаковку.
//   * ЭтоИмеющаясяВБазеУпаковка         - Булево                              - если это имеющаяся в базе упаковка.
//   * ЭтоПартионнаяАлкогольнаяПродукция - Булево                              - если это штрихкод партионной алкогольной продукции
//   * ЭтоПрочаяНоменклатура             - Булево                              - если это штрихкод не идентифицирует алкогольную продукцию.
//   * Родитель                          - Строка                              - штрихкод внешней упаковки.
//   * НомерСтроки                       - Число                               - номер строки таблицы
//
Процедура ОпределитьТипыШтриховыхКодовНеМаркируемойПродукцииТСД(ТаблицаНеАкцизныеМарки) Экспорт
	
	ИнтеграцияЕГАИСРТ.ОпределитьТипыШтриховыхКодовНеМаркируемойПродукцииТСД(ТаблицаНеАкцизныеМарки);

КонецПроцедуры

// Определяет значение организации ЕГАИС для переданного документа.
//
// Параметры:
//  ОрганизацияЕГАИС - СправочникСсылка.КлассификаторОрганизацийЕГАИС - определяемая организация ЕГАИС.
//  Документ - ДокументСсылка - документ, по данным которого определяется организация ЕГАИС
Процедура ПриОпределенииОрганизацииЕГАИСпоДокументу(ОрганизацияЕГАИС, Документ) Экспорт
	
	ИнтеграцияЕГАИСРТ.ПриОпределенииОрганизацииЕГАИСпоДокументу(ОрганизацияЕГАИС, Документ);
	
КонецПроцедуры
