
#Область ПрограммныйИнтерфейс

#Область НастройкиПрофилейДоступа

// Дополняет профиль ролями ЕГАИС для выполнения базовых функций работы с РТ
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильОбязательнымиРолямиЕГАИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеАкцизныхМарокЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКлассификатораАлкогольнойПродукцииЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКлассификатораОрганизацийЕГАИС"); 
	ОписаниеПрофиля.Роли.Добавить("ЧтениеШтрихкодовУпаковокТоваров");
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС для чтения и просмотра документов и журналов ЕГАИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиЧтенияДокументовЕГАИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеАктовПостановкиНаБалансЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеАктовСписанияЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВозвратовИзРегистра2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВходящихТТНЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗагрузкиОстатковЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗапросовАкцизныхМарокЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеИсходящихТТНЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтчетовЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПередачВРегистр2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеТранспортныхНакладныхЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЧековЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЧековЕГАИСНаВозврат");
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС для чтения и просмотра справочников и регистров ЕГАИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиЧтенияСправочнойИнформацииЕГАИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСправокЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОстатковАлкогольнойПродукции");
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС для создания и изменения настроек ЕГАИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиНастройкиЕГАИС(ОписаниеПрофиля)Экспорт
	
	Возврат;
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС для создания документов и выполнения обменов ЕГАИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиОбменаЕГАИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеАктовПостановкиНаБалансЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеАктовСписанияЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВозвратовИзРегистра2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВходящихТТНЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗагрузкиОстатковЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗапросовАкцизныхМарокЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеИсходящихТТНЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОтчетовЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПередачВРегистр2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеТранспортныхНакладныхЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЧековЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЧековЕГАИСНаВозврат");
	
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС для добавления и изменения справочников и регистров ЕГАИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиСправочнойИнформацииЕГАИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВидовАлкогольнойПродукцииЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКлассификатораАлкогольнойПродукцииЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКлассификатораОрганизацийЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСправокЕГАИС");
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС для работы с отчетами ЕГАИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиПросмотраОтчетовЕГАИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаАнализРасхожденийПриПоступленииАлкогольнойПродукции");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаАнализРасхожденийПриОтгрузкеАлкогольнойПродукции");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаДвиженияМеждуРегистрамиЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаДвиженияПоСправке2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаИнформацияОбОрганизацииЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаИсторияСправок2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаНеобработанныеТТНЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаОбработанныеЧекиЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаОстаткиАкцизныхМарокЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаОстаткиАлкогольнойПродукцииЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаСводныйОтчетЕГАИС");
	
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПанельОбменЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПомощникКорректировкиОстатковЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиСопоставлениеКлассификаторовЕГАИС");
	
КонецПроцедуры

// Дополняет профиль ролями ЕГАИС РТ
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильРолямиЕГАИСРТ(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеАктовЕГАИСРТ");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовЕГАИСРТ");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПередачВРегистр2ЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЧековЕГАИСРТ");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовЕГАИСРТ");
	ОписаниеПрофиля.Роли.Добавить("СопоставлениеНоменклатурыЕГАИС");
	ОписаниеПрофиля.Роли.Добавить("СопоставлениеОрганизацийЕГАИС");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаПроверкиЗаполнения

// Проверить корректность заполнения алкогольной продукции
//
// Параметры:
//  ДанныеДляЕГАИС - Массив - Данные для ЕГАИС
//  Объект - ДокументОбъект - Проверяемый объект
//  Отказ - Булево - Признак отказа
//
Процедура ПроверитьЗаполнениеДокумента(Объект, Отказ) Экспорт
	
	ИмяТаблицыАкцизныеМарки = "АкцизныеМарки";
	ПолеТаблицыАкцизныеМарки = "АкцизнаяМарка";
	
	Если ИнтеграцияИС.ЕстьРеквизитТабЧастиОбъекта("ЧастичноеВыбытиеКоличество", Объект.Ссылка.Метаданные(), ИмяТаблицыАкцизныеМарки) Тогда
		АкцизныеМарки = Объект.АкцизныеМарки.Выгрузить(,
			"АкцизнаяМарка, ЧастичноеВыбытиеКоличество, ЧастичноеВыбытиеВариантУчета, ЧастичноеВыбытиеНоменклатура, ЧастичноеВыбытиеХарактеристика, Справка2");
	Иначе
		АкцизныеМарки = Объект.АкцизныеМарки.Выгрузить(,
			"АкцизнаяМарка, Справка2");
		АкцизныеМарки.Колонки.Добавить("ЧастичноеВыбытиеКоличество", ОбщегоНазначения.ОписаниеТипаЧисло(18, 8));
		АкцизныеМарки.Колонки.Добавить("ЧастичноеВыбытиеВариантУчета", Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыУчетаЧастичногоВыбытияИС"));
		АкцизныеМарки.Колонки.Добавить("ЧастичноеВыбытиеНоменклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		АкцизныеМарки.Колонки.Добавить("ЧастичноеВыбытиеХарактеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары",        Объект.Товары.Выгрузить(, "Номенклатура, Характеристика, Количество, НомерСтроки"));
	Запрос.УстановитьПараметр("АкцизныеМарки", АкцизныеМарки);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка,
	|	АкцизныеМарки.ЧастичноеВыбытиеВариантУчета КАК ЧастичноеВыбытиеВариантУчета,
	|	АкцизныеМарки.ЧастичноеВыбытиеКоличество КАК ЧастичноеВыбытиеКоличество,
	|	АкцизныеМарки.ЧастичноеВыбытиеНоменклатура КАК ЧастичноеВыбытиеНоменклатура,
	|	АкцизныеМарки.ЧастичноеВыбытиеХарактеристика КАК ЧастичноеВыбытиеХарактеристика,
	|	АкцизныеМарки.Справка2 КАК Справка2
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	РеквизитыНоменклатуры.ОбъемДАЛ КАК Объем,
	|	ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК Маркируемый,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|				ТОГДА Товары.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Количество,
	|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК РеквизитыНоменклатуры
	|		ПО Товары.Номенклатура = РеквизитыНоменклатуры.Ссылка
	|ГДЕ
	|	РеквизитыНоменклатуры.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ЕСТЬNULL(РеквизитыНоменклатуры.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ),
	|	РеквизитыНоменклатуры.ОбъемДАЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.ЧастичноеВыбытиеВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.НастроеннаяНоменклатура)
	|			ТОГДА АкцизныеМарки.ЧастичноеВыбытиеНоменклатура
	|		ИНАЧЕ Штрихкоды.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.ЧастичноеВыбытиеВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.НастроеннаяНоменклатура)
	|			ТОГДА АкцизныеМарки.ЧастичноеВыбытиеХарактеристика
	|		ИНАЧЕ Штрихкоды.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	МИНИМУМ(ЕСТЬNULL(Справки2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК НоменклатураЕГАИС,
	|	СУММА(ВЫБОР
	|			КОГДА АкцизныеМарки.ЧастичноеВыбытиеВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ОписаниеНоменклатурыИС.КоличествоВПотребительскойУпаковке, 1)
	|			ИНАЧЕ АкцизныеМарки.ЧастичноеВыбытиеКоличество
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ МаркиПоТоварам
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды
	|		ПО АкцизныеМарки.АкцизнаяМарка = Штрихкоды.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2
	|		ПО АкцизныеМарки.Справка2 = Справки2.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
	|		ПО (Штрихкоды.Номенклатура = ОписаниеНоменклатурыИС.Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.ЧастичноеВыбытиеВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.НастроеннаяНоменклатура)
	|			ТОГДА АкцизныеМарки.ЧастичноеВыбытиеНоменклатура
	|		ИНАЧЕ Штрихкоды.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.ЧастичноеВыбытиеВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.НастроеннаяНоменклатура)
	|			ТОГДА АкцизныеМарки.ЧастичноеВыбытиеХарактеристика
	|		ИНАЧЕ Штрихкоды.Характеристика
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.НомерСтроки КАК НомерСтроки,
	|	АлкогольнаяПродукция.Номенклатура КАК Номенклатура,
	|	МаркиПоТоварам.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	АлкогольнаяПродукция.Количество КАК Количество,
	|	ЕСТЬNULL(МаркиПоТоварам.Количество, 0) КАК КоличествоМарок
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаркиПоТоварам КАК МаркиПоТоварам
	|		ПО АлкогольнаяПродукция.Номенклатура = МаркиПоТоварам.Номенклатура
	|			И АлкогольнаяПродукция.Характеристика = МаркиПоТоварам.Характеристика";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	БезСопоставления = ИнтеграцияЕГАИСВызовСервера.РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не БезСопоставления И Не ЗначениеЗаполнено(Выборка.НоменклатураЕГАИС) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Позиция номенклатуры %1 не сопоставлена с элементом классификатора алкогольной продукции ЕГАИС в строке %2 списка ""Товары"".';
						|en = 'Products item %1 is not mapped with the item of the USAIS classifier of alcoholic products in line %2 of the Goods list.'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Выборка.Количество <> Выборка.КоличествоМарок Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.';
								|en = 'There must be %3 excise stamps in line %1 for %2. Value specified: %4.'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
				Выборка.НомерСтроки,
				Выборка.Номенклатура,
				Выборка.Количество,
				Выборка.КоличествоМарок);
			
			ОбщегоНазначения.СообщитьПользователю(
					ТекстОшибки,
					Объект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
					Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	ИмяРеквизитаФормыОбъект = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС").ИмяРеквизитаФормыОбъект;
	
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС.ДокументОснование");
	Если ПараметрыИнтеграции <> Неопределено И ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяЭлементаФормы) Тогда
		
		ЭлементИнтерфейса  = Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы];
		Объект = Форма[ИмяРеквизитаФормыОбъект];
		
		Если Форма.ИмяФормы = "Документ.ПоступлениеТоваров.Форма.ФормаДокумента" Тогда
			ТекстГиперссылки = ИнтеграцияЕГАИСРТВызовСервера.ТекстДокументаЕГАИСВПоступленииТоваров(Объект, Объект.ТТНВходящаяЕГАИС);
		Иначе
			ТекстГиперссылки = ИнтеграцияЕГАИСВызовСервера.ТекстДокументаЕГАИС(Объект.Ссылка);
		КонецЕсли;
		
		ЭлементИнтерфейса.Видимость = ЗначениеЗаполнено(ТекстГиперссылки);
		Форма[ПараметрыИнтеграции.ИмяРеквизитаФормы] = ТекстГиперссылки;
		
	КонецЕсли;
	
КонецПроцедуры

// Копирует связь между номенклатурой и алкогольной продукцией
// для новой позиции номенклатуры
//
// Параметры:
//  Источник						 - СправочникСсылка.Номенклатура - Номенклатура для которой существует связь.
//  Приемник						 - СправочникСсылка.Номенклатура - Номенклатура, для которой копируется связь.
//  УстановитьСвязиДляХарактеристик	 - Булево - Требуется ли задать связь для характеристик номенклатуры-приемника
//
Процедура КопироватьСвязьСКлассификаторомАлкогольнойПродукцииЕГАИС(Источник, Приемник, УстановитьСвязиДляХарактеристик) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТХарактеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &НоменклатураПриемник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(ВТХарактеристики.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХарактеристики КАК ВТХарактеристики
	|		ПО (&УстановитьСвязиДляХарактеристик)
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &НоменклатураИсточник";
	
	Запрос.УстановитьПараметр("НоменклатураИсточник", Источник);
	Запрос.УстановитьПараметр("НоменклатураПриемник", Приемник);
	Запрос.УстановитьПараметр("УстановитьСвязиДляХарактеристик", УстановитьСвязиДляХарактеристик);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Приемник);
	
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура         = Приемник;
		НоваяЗапись.Характеристика       = Выборка.Характеристика;
		НоваяЗапись.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеСправок2(Объект, МассивНепроверяемыхРеквизитов, Отказ) Экспорт
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Справка2");
	
	Если НЕ НужноРаботатьСЕГАИС(Объект.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", Объект.Товары.Выгрузить(,"НомерСтроки, Номенклатура, Справка2"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.Номенклатура
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаТоваров.Номенклатура.АлкогольнаяПродукция, ЛОЖЬ)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='В строке %1 не заполнено значение поля ""Справка 2""'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.НомерСтроки);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Справка2");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, Поле, "Объект", Отказ);
	КонецЦикла;
	
КонецПроцедуры

// Проверят использование механизма регистрации складских операций в ЕГАИС.
//
// Параметры:
//  ДатаПроверки  - Дата - дата, на которую нужно проверить использование функций интеграции с ЕГАИС.
//                        Если не указана, то проверяться будет текущая дата сеанса.
//
// Возвращаемое значение:
//   Булево   - признак использования функций интеграции с ЕГАИС.
//
Функция НужноРаботатьСЕГАИС(Знач ДатаПроверки = Неопределено) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПроверки) Тогда
		ДатаПроверки = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ДатаНачалаРегистрации = Константы.ДатаНачалаПримененияПриказа164.Получить();
	
	РезультатПроверки = ДатаПроверки >= ДатаНачалаРегистрации И ЗначениеЗаполнено(ДатаНачалаРегистрации);
	
	Возврат РезультатПроверки;

КонецФункции

// Найти, а при необходимости, создать поступление товаров на основании ТТН.
//
// Параметры:
//  ТТНВходящаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС.
//  ТолькоПоиск - Булево
//  ЗаказПоставщику
//
// Возвращаемое значение
//  Неопределено, ДокументССылка.ПоступлениеТоваров
Функция СоздатьНайтиПоступление(ТТНВходящаяЕГАИС, ТолькоПоиск, ЗаказПоставщику = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС";
	
	Запрос.УстановитьПараметр("ТТНВходящаяЕГАИС", ТТНВходящаяЕГАИС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Если ТолькоПоиск Тогда
		Возврат Неопределено
	КонецЕсли;
	
	ПоступлениеТоваровОбъект = Документы.ПоступлениеТоваров.СоздатьДокумент();
	ПоступлениеТоваровОбъект.Дата = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.НомерТТН КАК НомерВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.ДатаТТН КАК ДатаВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.Ссылка КАК ТТНВходящаяЕГАИС,
	|	ТТНВходящаяЕГАИС.Грузополучатель.ТорговыйОбъект КАК Магазин,
	|	ТТНВходящаяЕГАИС.Грузополучатель.Контрагент КАК Организация,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик
	|	КОНЕЦ КАК Поставщик
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.НомерВходящегоДокумента,
	|	ТаблицаВЗапросе.ДатаВходящегоДокумента,
	|	ТаблицаВЗапросе.ТТНВходящаяЕГАИС,
	|	ТаблицаВЗапросе.Магазин,
	|	ТаблицаВЗапросе.Организация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаВЗапросе.Поставщик.Сопоставлено, ЛОЖЬ)
	|				И НЕ ТаблицаВЗапросе.Поставщик.СоответствуетОрганизации
	|			ТОГДА ТаблицаВЗапросе.Поставщик.Контрагент
	|		ИНАЧЕ &КонтрагентЗаказа
	|	КОНЕЦ КАК Контрагент
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе";
	
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Если ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		Запрос.УстановитьПараметр("КонтрагентЗаказа", ЗаказПоставщику.Контрагент);
	Иначе
		Запрос.УстановитьПараметр("КонтрагентЗаказа", Справочники.Контрагенты.ПустаяСсылка());
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПоступлениеТоваровОбъект, Выборка);
	КонецЕсли;
	
	ПоступлениеТоваровОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ПоступлениеТоваровОбъект.Склад         = ЗначениеНастроекПовтИсп.СкладПоступленияПоУмолчанию(
											 ПоступлениеТоваровОбъект.Магазин,,, 
											 ПоступлениеТоваровОбъект.Ответственный);
	ПоступлениеТоваровОбъект.БанковскийСчетОрганизации = ЗначениеНастроекПовтИсп.БанковскийСчетОрганизацииПоУмолчанию(
														 ПоступлениеТоваровОбъект.Организация,,);
											 
											 
	ПоступлениеТоваровОбъект.Контрагент    = ЗначениеНастроекПовтИсп.ПоставщикПоУмолчанию(
											 ПоступлениеТоваровОбъект.Ответственный, 
											 ПоступлениеТоваровОбъект.Контрагент);
	ПоступлениеТоваровОбъект.БанковскийСчетКонтрагента = ЗначениеНастроекПовтИсп.БанковскийСчетКонтрагентаПоУмолчанию(
														 ПоступлениеТоваровОбъект.Контрагент);
	ПоступлениеТоваровОбъект.УчитыватьНДС    = Истина;
	ПоступлениеТоваровОбъект.ЦенаВключаетНДС = Истина;
	ПоступлениеТоваровОбъект.ЗаказПоставщику = ЗаказПоставщику;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.Количество КАК Количество,
	|	ТТНВходящаяЕГАИСТовары.Количество КАК КоличествоУпаковок,
	|	ТТНВходящаяЕГАИСТовары.Сумма КАК Сумма,
	|	ТТНВходящаяЕГАИСТовары.Цена КАК Цена,
	|	ТТНВходящаяЕГАИСТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТТНВходящаяЕГАИСТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаЕГАИС
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЕГАИС.Количество КАК Количество,
	|	ТаблицаЕГАИС.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаЕГАИС.Сумма КАК Сумма,
	|	ТаблицаЕГАИС.Цена КАК Цена,
	|	ТаблицаЕГАИС.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТаблицаЕГАИС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Номенклатура
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Характеристика
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Характеристика
	|	КОНЕЦ КАК Характеристика
	|ИЗ
	|	ТаблицаЕГАИС КАК ТаблицаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЕГАИС.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И (СоответствиеНоменклатурыЕГАИС.Порядок = 1)";
	
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = ПоступлениеТоваровОбъект.ТоварыПоДаннымПоставщика.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
	КонецЦикла;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПараметровСтавкиНДСУчитыватьНДС(ПоступлениеТоваровОбъект));
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПересчетаСуммыНДСВТЧ(ПоступлениеТоваровОбъект));
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , ПоступлениеТоваровОбъект.ТоварыПоДаннымПоставщика);
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);
	
	ПоступлениеТоваровОбъект.Записать();
	
	Возврат ПоступлениеТоваровОбъект.Ссылка;
	
КонецФункции

// Проверить возможность ввода поступления на основании ТТН с учетом заказа
//
// Параметры:
//  ЗаказПоставщику - ДокументССылка.ЗаказПоставщику
//  ПараметрыФормы - параметры формы выбора ТТН
//  ТекстСообщения - текст причины почему нельзя выбрать ТТН
//
// Возвращаемое значение:
//  Булево
// 
Функция ВозможностьВводаПоступленияНаОснованииТТН(ЗаказПоставщику, ПараметрыФормы, ТекстСообщения) Экспорт
	
	Если НЕ ЗаказПоставщику.Проведен Тогда
		ТекстСообщения = НСтр("ru = 'Документ %1 не проведен'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ЗаказПоставщику);
		Возврат Ложь;
	КонецЕсли;
	
	Если ЗаказПоставщику.Закрыт Тогда
		ТекстСообщения = НСтр("ru = 'Документ %1 закрыт'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ЗаказПоставщику);
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПоступлениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.ЗаказПоставщику = &ЗаказПоставщику";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекстСообщения = НСтр("ru = 'По документу %1 уже существуют поступления товаров. Ввод на основании документа не возможен.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Ссылка);
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаказПоставщикуТовары.Ссылка
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику
	|	И ЗаказПоставщикуТовары.Номенклатура.АлкогольнаяПродукция";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'В документе %1 нет алкогольной продукции'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Ссылка);
		Возврат Ложь;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаказПоставщику.Магазин,
	|	ЗаказПоставщику.Организация
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Ссылка = &ЗаказПоставщику";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ПараметрыФормы.Вставить("Магазин"             , Неопределено);
	ПараметрыФормы.Вставить("Организация"         , Неопределено);
	ПараметрыФормы.Вставить("ПроверитьПоступление", Истина);
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ПараметрыФормы, Выборка);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ВозможностьВвоодаТТН()

//
Функция НайтиПеремещениеПоВходящейТТН(ТТН) Экспорт
	
	ИдентификаторПеремещения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТН, "Идентификатор");
	ПеремещениеСсылка = НайтиПеремещениеПоИдентификатору(ИдентификаторПеремещения, ТТН);
	
	Возврат ПеремещениеСсылка;
	
КонецФункции

//
Функция НайтиПеремещениеПоИдентификатору(ИдентификаторПеремещения, ТТН = Неопределено) Экспорт
	
	ПеремещениеСсылка = Неопределено;
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(ИдентификаторПеремещения) Тогда
		Если СтрДлина(ИдентификаторПеремещения) = 36 Тогда
			НовыйИдентификатор = Новый УникальныйИдентификатор(ИдентификаторПеремещения);
			СсылкаДляЗапроса = Документы.ПеремещениеТоваров.ПолучитьСсылку(НовыйИдентификатор);
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Док.Ссылка КАК Ссылка,
			|	Док.ТТНВходящаяЕГАИС КАК ТТН
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК Док
			|ГДЕ
			|	Док.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", СсылкаДляЗапроса);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Если ЗначениеЗаполнено(ТТН) Тогда
					Если Выборка.ТТН <> ТТН Тогда
						ПеремещениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
						Если ПеремещениеОбъект <> Неопределено Тогда
							ПеремещениеОбъект.ОбменДанными.Загрузка = Истина;
							ПеремещениеОбъект.ТТНВходящаяЕГАИС = ТТН;
							ПеремещениеОбъект.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ПеремещениеСсылка = Выборка.Ссылка;
			КонецЕсли;
		Иначе
			ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Возврат ПеремещениеСсылка;
	
КонецФункции

//
Функция НайтиТТНПоИдентификаторуПеремещения(ИдентификаторПеремещения) Экспорт
	
	ТТНСсылка = Неопределено;
	ТекстОшибки = "";
	Если ЗначениеЗаполнено(ИдентификаторПеремещения) Тогда
		Если СтрДлина(ИдентификаторПеремещения) = 36 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	Док.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ТТНВходящаяЕГАИС КАК Док
			|ГДЕ
			|	Док.Идентификатор = &ИдентификаторПеремещения";
			Запрос.УстановитьПараметр("ИдентификаторПеремещения", ИдентификаторПеремещения);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ТТНСсылка = Выборка.Ссылка;
			КонецЕсли;
		Иначе
			ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Некорректный идентификатор перемещения'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Возврат ТТНСсылка;
	
КонецФункции

//
Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	
	Возврат ИнтеграцияИСРТ.ДанныеМаркированнойПродукции(Номенклатура);
	
КонецФункции

//
Процедура ОтменитьПроведениеСвязанныхДокументов(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
		
		Запрос.УстановитьПараметр("АктСписанияЕГАИС", ДокументСсылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СписаниеТоваров.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СписаниеТоваров КАК СписаниеТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
		|		ПО СписаниеТоваров.Ссылка = АктСписанияЕГАИС.ДокументОснование
		|ГДЕ
		|	СписаниеТоваров.Проведен
		|	И АктСписанияЕГАИС.Ссылка = &АктСписанияЕГАИС";
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Запрос.УстановитьПараметр("ТТНВходящаяЕГАИС", ДокументСсылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоступлениеТоваров.Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
		|ГДЕ
		|	ПоступлениеТоваров.Проведен
		|	И ПоступлениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПеремещениеТоваров.Ссылка
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.Проведен
		|	И ПеремещениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС";
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		Запрос.УстановитьПараметр("ТТНИсходящаяЕГАИС", ДокументСсылка);
		
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ВидОперации");
		
		Если ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ВозвратТоваровПоставщику.Ссылка
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
			|ГДЕ
			|	ВозвратТоваровПоставщику.ТТНИсходящаяЕГАИС = &ТТНИсходящаяЕГАИС
			|	И ВозвратТоваровПоставщику.Проведен";
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПеремещениеТоваров.Ссылка
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
			|ГДЕ
			|	ПеремещениеТоваров.ТТНИсходящаяЕГАИС = &ТТНИсходящаяЕГАИС
			|	И ПеремещениеТоваров.Проведен";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		Док.ДополнительныеСвойства.Вставить("ЗагрузкаДанныхИзЕГАИС");
		Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает список складов, для которых нужно создать акт списания ЕГАИС
//
// Параметры:
//  
//
// Возвращаемое значение:
//   Массив элементов СправочникаСсылка.Склады
//
Функция СписокСкладовДляКоторыхНужноСоздаватьАктыСписания(СсылкаНаОтчет, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию) Экспорт
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОтчет, "Организация, Магазин");
	
	Если НЕ ИнтеграцияЕГАИСВызовСервера.ИспользуетсяРегистрацияРозничныхПродажВЕГАИС(ЗначенияРеквизитов.Организация, ЗначенияРеквизитов.Магазин, СсылкаНаОтчет.Дата) Тогда
		
		Возврат Новый Массив;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОтчетОРозничныхПродажахТовары.Склад КАК Склад
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахТовары.Номенклатура.АлкогольнаяПродукция
	|	И (НЕ ОтчетОРозничныхПродажахТовары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|				И &ДобавитьНеМаркируемуюПродукцию
	|				И НЕ ЕСТЬNULL(ОтчетОРозничныхПродажахТовары.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|				И &ДобавитьМаркируемуюПродукцию)";
	Запрос.УстановитьПараметр("ДобавитьМаркируемуюПродукцию", ДобавитьМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("ДобавитьНеМаркируемуюПродукцию", ДобавитьНеМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОтчет);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Склад");
	
КонецФункции // СписокСкладовДляКоторыхНужноСоздаватьАктыСписания()

#Область ПроцедурыСопоставления

Функция АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Импортер
	|ПОМЕСТИТЬ ТаблицаАлкогольнойПродукции
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка В(&МассивАлкогольнойПродукции)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подзапрос.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаАлкогольнойПродукции.Производитель КАК ОрганизацияЕГАИС
	|	ИЗ
	|		ТаблицаАлкогольнойПродукции КАК ТаблицаАлкогольнойПродукции
	|	ГДЕ
	|		ТаблицаАлкогольнойПродукции.Производитель <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаАлкогольнойПродукции.Импортер
	|	ИЗ
	|		ТаблицаАлкогольнойПродукции КАК ТаблицаАлкогольнойПродукции
	|	ГДЕ
	|		ТаблицаАлкогольнойПродукции.Импортер <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Поставщик
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		&Ссылка <> НЕОПРЕДЕЛЕНО
	|		И ТТН.Ссылка = &Ссылка
	|		И ТТН.Поставщик <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Грузоотправитель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		&Ссылка <> НЕОПРЕДЕЛЕНО
	|		И ТТН.Ссылка = &Ссылка
	|		И ТТН.Грузоотправитель <> &ПустаяОрганизация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТН.Грузополучатель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТН
	|	ГДЕ
	|		&Ссылка <> НЕОПРЕДЕЛЕНО
	|		И ТТН.Ссылка = &Ссылка
	|		И ТТН.Грузополучатель <> &ПустаяОрганизация) КАК Подзапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	Подзапрос.ОрганизацияЕГАИС";
	
	Запрос.УстановитьПараметр("МассивАлкогольнойПродукции", МассивАлкогольнойПродукции);
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Результат = Запрос.Выполнить();
	ТаблицаКонтрагентов = Результат.Выгрузить();
	
	МассивКонтрагентов = ТаблицаКонтрагентов.ВыгрузитьКолонку("ОрганизацияЕГАИС");
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ОрганизацииЕГАИС", МассивКонтрагентов);
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификатор);
	
	Возврат АдресВХранилище;
	
КонецФункции

Функция АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Производитель,
	|	Номенклатура.ПроизводительИмпортерАлкогольнойПродукции
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В (&МассивНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.Производитель КАК Контрагент
	|ПОМЕСТИТЬ ТаблицаКонтрагентов
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	ТаблицаВЗапросе.Производитель <> &ПустойКонтрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.ПроизводительИмпортерАлкогольнойПродукции
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	ТаблицаВЗапросе.ПроизводительИмпортерАлкогольнойПродукции <> &ПустойКонтрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаКонтрагентов.Контрагент
	|ИЗ
	|	ТаблицаКонтрагентов КАК ТаблицаКонтрагентов";
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	Результат = Запрос.Выполнить();
	ТаблицаКонтрагентов = Результат.Выгрузить();
	
	МассивКонтрагентов = ТаблицаКонтрагентов.ВыгрузитьКолонку("Контрагент");
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контрагенты", МассивКонтрагентов);
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификатор);
	
	Возврат АдресВХранилище;
	
КонецФункции

Функция ДанныеНоменклатурыПоСправке2(Справка2) Экспорт
	
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("АлкогольнаяПродукция", Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка());
	СтруктураРезультат.Вставить("Номенклатура"        , Справочники.Номенклатура.ПустаяСсылка());
	СтруктураРезультат.Вставить("Характеристика"      , Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	СтруктураРезультат.Вставить("Упаковка"            , Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	СтруктураРезультат.Вставить("Справка2"            , Справка2);
	СтруктураРезультат.Вставить("Уникальность"        , Ложь);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
	               |	СоответствиеНоменклатуры.АлкогольнаяПродукция,
	               |	СоответствиеНоменклатуры.Номенклатура,
	               |	СоответствиеНоменклатуры.Характеристика
	               |ИЗ
	               |	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатуры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2
	               |		ПО СоответствиеНоменклатуры.АлкогольнаяПродукция = Справки2.АлкогольнаяПродукция
	               |ГДЕ
	               |	Справки2.Ссылка = &Справка2";
	
	Запрос.УстановитьПараметр("Справка2", Справка2);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Результат);
		
		Если Не Результат.Следующий() Тогда
			
			СтруктураРезультат.Уникальность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

// Получаем контрагента по ИНН и КПП
// Параметры:
//  ИНН - Строка
//  КПП - Строка
//
// Возвращаемое значение:
//  Справочники.Контрагенты.Ссылка
//
Функция КонтрагентПоИННКПП(ИНН, КПП) Экспорт;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	
КонецФункции // КонтрагентПоИННКПП()

//Формирует временную таблицу организаций ЕГАИС (с настроенным обменом) использующих регистр №2
//
// Параметры:
//   ТекстЗапроса        - Строка - заполняемый текст запроса.
//   ИмяВременнойТаблицы - Строка - имя создаваемой временной таблицы.
//   ИмяПоляОрганизация  - Строка - поле с организацией ЕГАИС в создаваемой таблице.
//
Процедура ТекстЗапросаОрганизацииЕГАИСИспользующиеРегистр2(
	ТекстЗапроса,
	ИмяВременнойТаблицы = "РозничныеОрганизацииЕГАИС",
	ИмяПоляОрганизация = "Ссылка") Экспорт
	
	ТекстЗапроса = СтрШаблон(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОрганизацииЕГАИС.Ссылка КАК %1
		|ПОМЕСТИТЬ %2
		|ИЗ
		|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК ОрганизацииЕГАИС
		|		ПО ОрганизацииЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
		|		ПО ОрганизацииЕГАИС.ТорговыйОбъект = Магазины.Ссылка
		|ГДЕ
		|	Магазины.СкладПродажи.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
		|",
		ИмяПоляОрганизация,
		ИмяВременнойТаблицы);
	
КонецПроцедуры

#КонецОбласти

// Процедура возвращает необходимость формирования напоминаний пользователю
// о создании документов ЕГАИС
Функция ПолучитьНапоминаниеЕГАИС(Объект) Экспорт
	
	/// нужно ли проверять
	ПроверкаВключена = ИнтеграцияЕГАИСРТПовтИсп.ПроверятьНеобходимостьСозданияДокументовЕГАИС();
	
	Если Не ПроверкаВключена Тогда
		Возврат "";
	КонецЕсли;
	
	/// используется ли егаис
	ИспользуетсяЕГАИС = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции");
	
	Если не ИспользуетсяЕГАИС Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли товары в ТЧ
	Если Объект.Товары.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли движение по складам продажи
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ОтправкаСоСкладаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Склад, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОтправкаСоСкладаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СкладОтправитель, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		ОтправкаСоСкладаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СкладОтправитель, "ТипСклада") = Перечисления.ТипыСкладов.ТорговыйЗал;
	Иначе
		ОтправкаСоСкладаПродажи = Ложь;
	КонецЕсли;
	
	Если Не ОтправкаСоСкладаПродажи Тогда
		Возврат "";
	КонецЕсли;
	
	Если ОтправкаСоСкладаПродажи и ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли созданный документ егаис
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.ВозвратИзРегистра2ЕГАИС) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ОтправкаСоСкладаПродажи Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(1) КАК Количество
		|ИЗ
		|	Документ.ВозвратИзРегистра2ЕГАИС КАК ВозвратИзРегистра2ЕГАИС
		|ГДЕ
		|	ВозвратИзРегистра2ЕГАИС.Проведен
		|	И ВозвратИзРегистра2ЕГАИС.ДокументОснование = &ПроверяемыйДокумент";
		Запрос.УстановитьПараметр("ПроверяемыйДокумент", Объект.Ссылка);
		Результат = Запрос.Выполнить().Выбрать();
		Результат.Следующий();
		СозданВозвратИзТЗ = не Результат.Количество = 0;
	КонецЕсли;
	
	Если Не ОтправкаСоСкладаПродажи или (ОтправкаСоСкладаПродажи И СозданВозвратИзТЗ) Тогда
		Возврат "";
	КонецЕсли;
	
	/// есть ли алкоголь в документе
	ЕстьАлкогольВДокументе = Ложь;
	Если Объект.Товары[0].Свойство("НеобходимостьВводаСправкиНаАлкоголь") Тогда /// сначала проверим по маркам
		Для Каждого СтрокаТовары Из Объект.Товары Цикл
			Если СтрокаТовары.НеобходимостьВводаСправкиНаАлкоголь Тогда
				ЕстьАлкогольВДокументе = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ЕстьАлкогольВДокументе Тогда // если в документе нет марочного алкоголя, возможно ведется передача пива
		
		МассивНоменклатуры = Объект.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура");
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(1) КАК Количество
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&МассивНоменклатуры)
		|	И Номенклатура.АлкогольнаяПродукция";
		Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
		Результат = Запрос.Выполнить().Выбрать();
		Результат.Следующий();
		
		ЕстьАлкогольВДокументе = не Результат.Количество = 0;
		
	КонецЕсли;
	
	Если Не ЕстьАлкогольВДокументе Тогда
		Возврат "";
	КонецЕсли;
	
	// если дошли сюда - нужно сформировать уведомление
	ТекстСообщения = "";
	Если ОтправкаСоСкладаПродажи Тогда
		ТекстСообщения = НСтр("ru = 'Товары отправляются из торгового зала. Возможно, следует оформить передачу на регистр учета товаров №1 ЕГАИС'");
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

// Проверяет есть ли в таблице товары алкогольная продукция ЕГАИС по реквизиту НеобходимостьВводаАкцизнойМарки
//
Функция ЕстьАлкогольнаяПродукцияЕГАИС(ТаблицаТовары) Экспорт
	
	ЕстьАлкогольнаяПродукцияЕГАИС = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.НеобходимостьВводаАкцизнойМарки КАК НеобходимостьВводаАкцизнойМарки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	СпрНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И ТаблицаТовары.НеобходимостьВводаАкцизнойМарки";
	
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		ЕстьАлкогольнаяПродукцияЕГАИС = Истина;
	КонецЕсли;;
	
	Возврат ЕстьАлкогольнаяПродукцияЕГАИС;
	
КонецФункции

// Проверяет заполнение реквизита ОбъемДАЛ для продукции, продаваемой в розлив.
//
Функция ПроверитьКоэффициентПересчетаВДАЛ(Форма, ТаблицаТоваров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(СпрНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|	И СпрНоменклатура.ОбъемДАЛ = 0";
	
	Отказ = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru='В строке %1 у номенклатуры %2 не заполнен объем в декалитрах'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(Выборка.НомерСтроки, "ЧГ=0"), СокрЛП(Выборка.Номенклатура));
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения,
			Форма.Объект.Ссылка,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
			"Объект",
			Отказ);
	КонецЦикла;
	
	Возврат НЕ Отказ;
	
КонецФункции

#Область ОбработкаЭлементовЕГАИСвТЧ

Процедура УстановитьВидимостьКолонкиАкцизныхМарок(КолонкаСтатусУказанияАкцизныхМарок, УчетАлкогольнойПродукции) Экспорт
	
	КолонкаСтатусУказанияАкцизныхМарок.Видимость = УчетАлкогольнойПродукции;
	
КонецПроцедуры

#КонецОбласти

Функция ОбработатьНеобходимостьВводаАкцизнойМарки(СтруктураПараметров, Объект, ТекущаяСтрока, РеквизитМагазина = "Магазин") Экспорт
	
	Если СтруктураПараметров.Свойство("ШтрихкодУпаковкиЕГАИС")
		И СтруктураПараметров.Свойство("ТипУпаковки") Тогда
		Если СтруктураПараметров.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("КодАкцизнойМарки", СтруктураПараметров.Штрихкод);
			НайденныеСтроки = Объект.АкцизныеМарки.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяАкцизнаяСтрока = Объект.АкцизныеМарки.Добавить();
				НоваяАкцизнаяСтрока.КлючСвязи = ТекущаяСтрока.КлючСвязи;
				НоваяАкцизнаяСтрока.КодАкцизнойМарки = СтруктураПараметров.ШтрихКод;
				Если ЗначениеЗаполнено(СтруктураПараметров.ШтрихкодУпаковкиЕГАИС) Тогда
					НоваяАкцизнаяСтрока.АкцизнаяМарка = СтруктураПараметров.ШтрихкодУпаковкиЕГАИС;
					
					ЗапросСправка = Новый Запрос;
					ЗапросСправка.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
					|	АкцизныеМаркиЕГАИС.Справка2 КАК Справка2
					|ИЗ
					|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
					|ГДЕ
					|	АкцизныеМаркиЕГАИС.АкцизнаяМарка = &АкцизнаяМарка
					|	И АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС.Контрагент = &Организация
					|	И АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС.ТорговыйОбъект = &Магазин";
					ЗапросСправка.УстановитьПараметр("АкцизнаяМарка", СтруктураПараметров.ШтрихкодУпаковкиЕГАИС);
					ЗапросСправка.УстановитьПараметр("Организация", Объект.Организация);
					ЗапросСправка.УстановитьПараметр("Магазин", Объект[РеквизитМагазина]);
					Выборка = ЗапросСправка.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						НоваяАкцизнаяСтрока.Справка2 = Выборка.Справка2;
					КонецЕсли;
				Иначе
					УстановитьПривилегированныйРежим(Истина);
					ШтрихкодУпаковкиЕГАИС = ШтрихкодированиеЕГАИС.ПолучитьСгенерироватьАкцизнуюМарку(
												СтруктураПараметров.Штрихкод,
												ТекущаяСтрока.Номенклатура,
												ТекущаяСтрока.Характеристика);
					НоваяАкцизнаяСтрока.АкцизнаяМарка = ШтрихкодУпаковкиЕГАИС;
				КонецЕсли;
			КонецЕсли;
				
			ИнтеграцияЕГАИСРТКлиентСервер.ЗаполнитьКоличествоАкцизныхМарокВСтроке(ТекущаяСтрока, Объект.АкцизныеМарки);
			ИнтеграцияЕГАИСРТКлиентСервер.УстановитьЗначениеСтатусАкцизныхМарокВСтроке(ТекущаяСтрока);
			
		Иначе
			СтруктураПараметров.Вставить("НеобходимостьВводаАкцизнойМарки", Истина);
		КонецЕсли;
	Иначе
		СтруктураПараметров.Вставить("НеобходимостьВводаАкцизнойМарки", Истина);
	КонецЕсли;
	
КонецФункции

// Проверяет штрихкод акцизной марки
//
// Параметры:
//  Штрихкод - Строка - проверяемый штрихкод.
//  ТипШтрихКода - Перечисление.ТипыШтрихКодов - тип штрихкода акцизной марки (PDF417 или DataMatrix) (возвращаемое значение)
// 
// Возвращаемое значение:
//   Булево - признак штрихкод является акцизной маркой.
Функция ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкода = Неопределено) Экспорт
	
	ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЧекККМ;
	ТипШтрихкодМарки = ФабрикаXDTO.Тип(
		Перечисления.ВидыДокументовЕГАИС.ПространствоИмен(
			ВидДокумента, Перечисления.ФорматыОбменаЕГАИС.ПустаяСсылка()), "BK");
	
	Попытка
		ТипШтрихкодМарки.Проверить(Штрихкод);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Если СтрДлина(Штрихкод) = 150 Тогда
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
	Иначе 
		ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Проверяет необходимость блокировки формы документа при наличии подчиненных документов ЕГАИС.
//
// Параметры:
//  ТекущийДокумент - ДокументСсылка - документ, блокировку формы которого необходимо проверить;
//  ИмяСобытия - Строка - имя события из обработки оповещения, по которому необходимо проверить блокировку формы;
//  Параметр - Структура, Неопределено - параметры обработки оповещения.
//
// Возвращаемое значение:
//  ТребуетсяБлокировкаФормы - Булево.
//
Функция ТребуетсяБлокировкаФормыПоПодчиненным(ТекущийДокумент, ИмяСобытия = "", Параметр = Неопределено) Экспорт
	
	ТребуетсяБлокировкаФормы = Ложь;
	
	Если Не ЗначениеЗаполнено(ТекущийДокумент) Тогда
		Возврат ТребуетсяБлокировкаФормы;
	КонецЕсли;
	
	ТребуетсяПроверкаПодчиненных = Ложь;
	
	Если (ИмяСобытия = "Запись_ЧекЕГАИС"
			ИЛИ ИмяСобытия = "Запись_ЧекЕГАИСВозврат"
			ИЛИ ИмяСобытия = "ИзменениеСостоянияЕГАИС")
				И Параметр.Основание = ТекущийДокумент Тогда
		
		ТребуетсяПроверкаПодчиненных = Истина;
		
	ИначеЕсли ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусЕГАИСВФормахДокументов)) Тогда
		
		ТребуетсяПроверкаПодчиненных = Истина;
		
	ИначеЕсли ИмяСобытия = "" Тогда
		
		ТребуетсяПроверкаПодчиненных = Истина;
	КонецЕсли;
	
	Если Не ТребуетсяПроверкаПодчиненных Тогда
		Возврат ТребуетсяБлокировкаФормы;
	КонецЕсли;
	
	ТребуетсяБлокировкаФормы = ЕстьПереданныеЧекиЕГАИС(ТекущийДокумент);
	
	Возврат ТребуетсяБлокировкаФормы;
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.СформироватьГиперссылкуСмТакжеВРаботе
//
Процедура СформироватьГиперссылкуСмТакжеВРаботе(Параметры, ОбъектМетаданных, Гиперссылка) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.ТТНВходящаяЕГАИС) Тогда
		Возврат;
	КонецЕсли;
	
	Организация    = Параметры.Организация;
	ТорговыйОбъект = Параметры.Склад;
	
	ТекстЗапроса = "";
	ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаТТН(ТекстЗапроса, Организация, ТорговыйОбъект, Истина);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1");
	
	ПустыеЗначенияДокументаОснования = Новый Массив;
	ПустыеЗначенияДокументаОснования.Добавить(Неопределено);
	Для Каждого ТипыДокументаПоступления Из Метаданные.ОпределяемыеТипы.ОснованиеТТНВходящаяЕГАИС.Тип.Типы() Цикл
		ПустыеЗначенияДокументаОснования.Добавить(Документы[Метаданные.НайтиПоТипу(ТипыДокументаПоступления).Имя].ПустаяСсылка());
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация",                      Организация);
	Запрос.УстановитьПараметр("ТорговыйОбъект",                   ТорговыйОбъект);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументаОснования", ПустыеЗначенияДокументаОснования);
	Запрос.УстановитьПараметр("ТребующиеДействия",                Документы.ТТНВходящаяЕГАИС.ВсеТребующиеДействия());
	
	ТекстГиперссылки = НСтр("ru = 'ТТН ЕГАИС (входящие)'");
	Если Запрос.Выполнить().Пустой() Тогда
		Гиперссылка = Новый ФорматированнаяСтрока(
			ТекстГиперссылки,,
			ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИнтеграцияЕГАИСКлиентСервер.ИмяФормыРабочегоМестаПоОформлениюДокументаТТНВходящаяЕГАИС());
	Иначе
		Гиперссылка = Новый ФорматированнаяСтрока(
			ТекстГиперссылки,,,,
			ИнтеграцияЕГАИСКлиентСервер.ИмяФормыРабочегоМестаПоОформлениюДокументаТТНВходящаяЕГАИС());
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗагрузкеОрганизации
//
Процедура ПриЗагрузкеОрганизации(Организация) Экспорт
	
	Если ЗначениеЗаполнено(Организация.ИНН) И Не Организация.Сопоставлено Тогда
		Контрагент = ИнтеграцияЕГАИСРТ.КонтрагентПоИННКПП(Организация.ИНН, Организация.КПП);
		
		Если ЗначениеЗаполнено(Контрагент) Тогда
			
			Организация.Контрагент     = Контрагент;
			Организация.ТорговыйОбъект = ПараметрыСеанса.ТекущийМагазин;
			Организация.Сопоставлено   = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗагрузкеТТНВходящаяЕГАИС
//
Процедура ПриЗагрузкеТТНВходящаяЕГАИС(ТТНВходящаяОбъект) Экспорт
	
	// Заполнение склада и организации
	РеквизитыОрганизацииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТТНВходящаяОбъект.Грузополучатель, "Контрагент, ТорговыйОбъект");
	
	ТТНВходящаяОбъект.Организация = РеквизитыОрганизацииЕГАИС.Контрагент;
	ТТНВходящаяОбъект.ТорговыйОбъект = РеквизитыОрганизацииЕГАИС.ТорговыйОбъект;
	
	// Заполнение документа основания
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТТНИсходящаяЕГАИС.Ссылка            КАК Ссылка,
	|	ТТНИсходящаяЕГАИС.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.Идентификатор = &Идентификатор");
	
	Запрос.УстановитьПараметр("Идентификатор", ТТНВходящаяОбъект.Идентификатор);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТТНИсходящая = Неопределено;
	
	Если Выборка.Следующий() Тогда
		ТТНИсходящая = Выборка.Ссылка;
		Если ЗначениеЗаполнено(Выборка.ДокументОснование) Тогда
			ТТНВходящаяОбъект.ДокументОснование = Выборка.ДокументОснование;
		КонецЕсли;
	КонецЕсли;
	
	// Заполнение серий
	ПараметрыУказанияСерий = ИнтеграцияИС.ПараметрыУказанияСерийФормыОбъекта(ТТНВходящаяОбъект, Документы.ТТНВходящаяЕГАИС);;
	
	Если ЗначениеЗаполнено(ТТНВходящаяОбъект.ДокументОснование) Тогда // скопировать ТЧ из ТТНИсходящая
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТТНИсходящаяЕГАИСТовары.НомерСтроки                   КАК НомерСтроки,
		|	ТТНИсходящаяЕГАИСТовары.АлкогольнаяПродукция          КАК АлкогольнаяПродукция,
		|	ТТНИсходящаяЕГАИСТовары.Номенклатура                  КАК Номенклатура,
		|	ТТНИсходящаяЕГАИСТовары.Характеристика                КАК Характеристика,
		|	ТТНИсходящаяЕГАИСТовары.Серия                         КАК Серия,
		|	ТТНИсходящаяЕГАИСТовары.ИдентификаторУпаковки         КАК ИдентификаторУпаковки,
		|	ТТНИсходящаяЕГАИСТовары.Количество                    КАК Количество,
		|	ТТНИсходящаяЕГАИСТовары.Сумма                         КАК Сумма,
		|	ТТНИсходящаяЕГАИСТовары.Цена                          КАК Цена,
		|	ТТНИсходящаяЕГАИСТовары.НомерПартии                   КАК НомерПартии,
		|	ТТНИсходящаяЕГАИСТовары.Справка2.РегистрационныйНомер КАК НомерСправки2Поставщика
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
		|ГДЕ
		|	ТТНИсходящаяЕГАИСТовары.Ссылка = &Ссылка
		|";
		Запрос.УстановитьПараметр("Ссылка", ТТНИсходящая);
		Результат = Запрос.Выполнить();
		
		ТаблицаТТН = ТТНВходящаяОбъект.Товары.Выгрузить(, "НомерСправки2Поставщика,ИдентификаторСтроки,Справка2");
		
		ТТНВходящаяОбъект.Товары.Загрузить(Результат.Выгрузить());
		
		Для Каждого СтрокаТТН Из ТаблицаТТН Цикл
			СтруктураПоиска = Новый Структура("НомерСправки2Поставщика", СтрокаТТН.НомерСправки2Поставщика);
			СтрокиТовары = ТТНВходящаяОбъект.Товары.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаТовары Из СтрокиТовары Цикл
				СтрокаТовары.ИдентификаторСтроки = СтрокаТТН.ИдентификаторСтроки;
				СтрокаТовары.Справка2            = СтрокаТТН.Справка2;
			КонецЦикла;
		КонецЦикла;
		
		//пересчитываем количество и цену, если алкогольная продукция неупакованная
		Для каждого СтрокаТТНВходящая Из ТТНВходящаяОбъект.Товары Цикл
			Если СтрокаТТНВходящая.АлкогольнаяПродукция.ТипПродукции = Перечисления.ТипыПродукцииЕГАИС.Неупакованная Тогда
				Если СтрокаТТНВходящая.Номенклатура.ОбъемДАЛ <> 0 Тогда
					СтрокаТТНВходящая.Количество = СтрокаТТНВходящая.Количество * СтрокаТТНВходящая.Номенклатура.ОбъемДАЛ;
					СтрокаТТНВходящая.Цена       = СтрокаТТНВходящая.Цена / СтрокаТТНВходящая.Номенклатура.ОбъемДАЛ;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	Иначе // сгенерировать новые серии
		
		СобственныйТорговыйОбъектЗначениеПоУмолчанию = "";
		ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(, СобственныйТорговыйОбъектЗначениеПоУмолчанию);
		
		КонтекстЗаполненияСерий = ИнтеграцияЕГАИС.КонтекстЗаполненияСерий();
		КонтекстЗаполненияСерий.Объект =                                       ТТНВходящаяОбъект;
		КонтекстЗаполненияСерий.Товары =                                       ТТНВходящаяОбъект.Товары;
		КонтекстЗаполненияСерий.ЗаполнятьБезЗапросаСправок =                   Истина;
		КонтекстЗаполненияСерий.СобственныйТорговыйОбъектЗначениеПоУмолчанию = СобственныйТорговыйОбъектЗначениеПоУмолчанию;
		КонтекстЗаполненияСерий.ПараметрыУказанияСерий =                       ПараметрыУказанияСерий;
		
		ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьСгенерироватьСерии(КонтекстЗаполненияСерий, Новый Структура);
			
	КонецЕсли;
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерий(ТТНВходящаяОбъект, ПараметрыУказанияСерий);
	
	Возврат;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗагрузкеАктаПодтвержденияТТН
//
Процедура ПриЗагрузкеАктаПодтвержденияТТН(ТТНИсходящаяОбъект, ОтказОтТТН, ЕстьРасхождения) Экспорт
	
	Если ОтказОтТТН И Не ТТНИсходящаяОбъект = Неопределено Тогда
		ИнтеграцияЕГАИСРТ.ОтменитьПроведениеСвязанныхДокументов(ТТНИсходящаяОбъект.Ссылка);
	КонецЕсли;
	
	Если ЕстьРасхождения Тогда
		
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТНИсходящаяОбъект.Ссылка, "ВидОперации");
		
		Если ВидОперации <> Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику Тогда
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТТНИсходящаяЕГАИС", ТТНИсходящаяОбъект.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТТНИсходящаяЕГАИСТовары.КоличествоФакт,
		|	ТТНИсходящаяЕГАИСТовары.Справка2 КАК Справка2
		|ПОМЕСТИТЬ ТоварыПоФакту
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТТНИсходящаяЕГАИСТовары
		|ГДЕ
		|	ТТНИсходящаяЕГАИСТовары.Ссылка = &ТТНИсходящаяЕГАИС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВозвратТоваровПоставщикуТовары.Ссылка КАК Ссылка,
		|	ВозвратТоваровПоставщикуТовары.НомерСтроки,
		|	ТоварыПоФакту.КоличествоФакт
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыПоФакту КАК ТоварыПоФакту
		|		ПО ВозвратТоваровПоставщикуТовары.Справка2 = ТоварыПоФакту.Справка2
		|ГДЕ
		|	ВозвратТоваровПоставщикуТовары.Ссылка.ТТНИсходящаяЕГАИС = &ТТНИсходящаяЕГАИС
		|	И ВозвратТоваровПоставщикуТовары.КоличествоФакт <> ТоварыПоФакту.КоличествоФакт
		|	И НЕ ВозвратТоваровПоставщикуТовары.Ссылка.ПометкаУдаления
		|ИТОГИ ПО
		|	Ссылка";
		
		ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДокумент.Следующий() Цикл
			Док = ВыборкаДокумент.Ссылка.ПолучитьОбъект();
			Выборка = ВыборкаДокумент.Выбрать();
			Пока Выборка.Следующий() Цикл
				Док.Товары[Выборка.НомерСтроки - 1].КоличествоФакт = Выборка.КоличествоФакт;
			КонецЦикла;
			
			Док.ДополнительныеСвойства.Вставить("ЗагрузкаДанныхИзЕГАИС");
			Если Док.Проведен Тогда
				Док.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Док.Записать();
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ОтменитьПроведениеПоступленияТоваровПриОтказеОтТТН
//
Процедура ОтменитьПроведениеПоступленияТоваровПриОтказеОтТТН(ТТНВходящаяЕГАИС) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.ТТНВходящаяЕГАИС = &ТТНВходящаяЕГАИС";
	
	Запрос.УстановитьПараметр("ТТНВходящаяЕГАИС", ТТНВходящаяЕГАИС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ПоступлениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ПоступлениеОбъект.Проведен Тогда
			ПоступлениеОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			ПоступлениеОбъект.Записать();
		КонецЕсли;
		
		ПоступлениеОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьТаблицуШтрихкодовНеМаркируемойПродукцииТТН_ЕГАИС
//
Процедура ЗаполнитьТаблицуШтрихкодовНеМаркируемойПродукцииТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО (КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции = ВидыАлкогольнойПродукции.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
	|		ПО ТТНВходящаяЕГАИСТовары.Номенклатура = ШтрихкодыНоменклатуры.Владелец
	|			И ТТНВходящаяЕГАИСТовары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|			И (ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаИзмерения = ШтрихкодыНоменклатуры.Упаковка
	|				ИЛИ ШтрихкодыНоменклатуры.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка))
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументСсылка
	|	И НЕ ВидыАлкогольнойПродукции.Маркируемый";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗаполняемаяТаблица.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьТаблицуШтрихкодовНеМаркируемойПродукцииТТН_ЕГАИС
//
Процедура ЗаполнитьТаблицуСопоставленныхСправок2ТТН_ЕГАИС(ДокументСсылка, ЗаполняемаяТаблица) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТТНВходящаяЕГАИСТовары.Справка2 КАК Справка2,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументСсылка
	|	И ТТНВходящаяЕГАИСТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ТТНВходящаяЕГАИСТовары.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗаполняемаяТаблица.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриОпределенииРасхожденийСТТНВходящейЕГАИС
//
Процедура ПриОпределенииРасхожденийСТТНВходящейЕГАИС(ДокументСсылка, ДокументПоступления, ЕстьРасхождения) Экспорт
	
	Если ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ЕстьРасхождения = ИнтеграцияЕГАИСРТ.ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ДокументСсылка, ДокументПоступления);
	ИначеЕсли ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ЕстьРасхождения = ИнтеграцияЕГАИСРТ.ЕстьРасхожденияМеждуДокументомПоступлениеТоваровИТТНЕГАИС(ДокументСсылка, ДокументПоступления);
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриОпределенииТекстаЗапросаОстатковКПередачеВРегистр2ЕГАИС
//
Процедура ПриОпределенииТекстаЗапросаОстатковКПередачеВРегистр2ЕГАИС(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	АкцизныеМарки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	АкцизныеМарки.Справка2 КАК Справка2,
	|	КОЛИЧЕСТВО(АкцизныеМарки.АкцизнаяМарка) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ВНаличии), ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс))
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ОрганизацияЕГАИС,
	|	АкцизныеМарки.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2 КАК Справка2,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток - ЕСТЬNULL(АкцизныеМарки.Количество, 0) КАК КПередаче
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(
	|			,
	|			ОрганизацияЕГАИС.ТорговыйОбъект.СкладПродажи.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
	|				И НЕ Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|				И НЕ Справка2.Поштучная) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ПО ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМарки КАК АкцизныеМарки
	|		ПО (АкцизныеМарки.ОрганизацияЕГАИС = ОстаткиАлкогольнойПродукцииЕГАИСОстатки.ОрганизацияЕГАИС)
	|			И (АкцизныеМарки.Справка2 = ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2)
	|ГДЕ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток - ЕСТЬNULL(АкцизныеМарки.Количество, 0) > 0";
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаДвижениеСерийТоваров
//
Процедура ПриЗаполненииТекстаЗапросаДвижениеСерийТоваров(ТекстЗапроса, ИмяТаблицы) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура                                     КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                                   КАК Характеристика,
	|	ТаблицаСерии.Серия                                            КАК Серия,
	|	ТаблицаСерии.Количество                                       КАК Количество
	|ИЗ
	|	Документ.%ИмяТаблицы%.Товары КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТаблицы%", ИмяТаблицы);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПолучитьКоличествоВозможныхДокументовПоступленияТоваров
//
Процедура ПолучитьКоличествоВозможныхДокументовПоступленияТоваров(Количество, Организация, ТорговыйОбъект, Контрагент) Экспорт
	
	КоличествоНакладных = 0;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(ПоступлениеТоваровТовары.Ссылка) КАК Количество
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|		ПО ТТНВходящаяЕГАИС.ДокументОснование = ПоступлениеТоваровТовары.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровТовары.Ссылка.Организация = &Организация
	|	И ПоступлениеТоваровТовары.Ссылка.Магазин = &ТорговыйОбъект
	|	И ПоступлениеТоваровТовары.Ссылка.ТТНВходящаяЕГАИС = ЗНАЧЕНИЕ(Документ.ТТНВходящаяЕГАИС.ПустаяСсылка)
	|	И ПоступлениеТоваровТовары.Ссылка.Контрагент = &Контрагент
	|	И ПоступлениеТоваровТовары.Номенклатура.АлкогольнаяПродукция
	|	И ТТНВходящаяЕГАИС.Ссылка ЕСТЬ NULL");
	
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("ТорговыйОбъект", ТорговыйОбъект);
	Запрос.УстановитьПараметр("Контрагент",     Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийДокументов

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ОбработкаЗаполненияДокумента
//
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		Если ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1 Тогда
			Документы.АктСписанияЕГАИС.ПодобратьСправки2(ДокументОбъект);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияВозвратаИзРегистра2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОстаткиЕГАИС") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияОстатковЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		Документы.ТТНИсходящаяЕГАИС.ПодобратьСправки2(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
		
		ИнтеграцияЕГАИСРТ.ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "СтатусПроверкиИПодбора") Тогда
		ДокументОбъект.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.НеВыполнялось;
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроверкиЗаполнения
//
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗапросАкцизныхМарокЕГАИС") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		СтатусЕГАИС = Неопределено;
		Если ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СтатусыДокументовЕГАИС.Статус КАК Статус
			|ИЗ
			|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
			|ГДЕ
			|	СтатусыДокументовЕГАИС.Документ = &Ссылка");
			Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СтатусЕГАИС = Выборка.Статус;
			КонецЕсли;
			
		КонецЕсли;
		
		РедактированиеФормыДоступно = СтатусЕГАИС = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Черновик
		                            Или СтатусЕГАИС = Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачи
		                            Или СтатусЕГАИС = Неопределено;
		
		Если РедактированиеФормыДоступно Тогда
			
			КлючевыеРеквизитыТабличнойЧасти = Новый Массив;
			КлючевыеРеквизитыТабличнойЧасти.Добавить("АлкогольнаяПродукция");
			КлючевыеРеквизитыТабличнойЧасти.Добавить("Справка2");
			ОбщегоНазначенияРТ.ПроверитьНаличиеДублейСтрокТЧ(
				ДокументОбъект,
				"Товары",
				КлючевыеРеквизитыТабличнойЧасти,
				Отказ);
			
			ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
			
			ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
			
		Иначе
			
			МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУпаковок");
			МассивНепроверяемыхРеквизитов.Добавить("Товары.Номенклатура");
			МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		
		Если ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары Тогда
			МассивНепроверяемыхРеквизитов.Добавить("НомерЧекаККМ");
		КонецЕсли;
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ДокументОбъект, ПроверяемыеРеквизиты, Отказ);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ОбработкаПроведения
//
Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт
	
	Возврат;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПередЗаписью
//
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Отказ ИЛИ ДокументОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС")
		ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктСписанияЕГАИС")
		ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС")
		ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОстаткиЕГАИС")
		ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС") Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ОрганизацияЕГАИС, "Контрагент, ТорговыйОбъект");
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.Контрагент) Тогда
			ДокументОбъект.Организация = ЗначенияРеквизитов.Контрагент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.ТорговыйОбъект) Тогда
			ДокументОбъект.ТорговыйОбъект = ЗначенияРеквизитов.ТорговыйОбъект;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Грузополучатель, "Контрагент, ТорговыйОбъект");
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.Контрагент) Тогда
			ДокументОбъект.Организация = ЗначенияРеквизитов.Контрагент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.ТорговыйОбъект) Тогда
			ДокументОбъект.ТорговыйОбъект = ЗначенияРеквизитов.ТорговыйОбъект;
		КонецЕсли;
		
		Если ДокументОбъект.СтатусПроверкиИПодбора = Перечисления.СтатусыПроверкиИПодбораИС.Завершено Тогда
			ЕстьРасхождения    = Ложь;
			ТоварыКоличество   = ДокументОбъект.Товары.Количество();
			ИндексСтрокиТовары = 0;
			
			Пока НЕ ЕстьРасхождения И (ИндексСтрокиТовары < ТоварыКоличество) Цикл
				СтрокаТовары = ДокументОбъект.Товары[ИндексСтрокиТовары];
				ЕстьРасхождения = (СтрокаТовары.Количество <> СтрокаТовары.КоличествоФакт);
				ИндексСтрокиТовары = ИндексСтрокиТовары + 1;
			КонецЦикла;
			
			ДокументОбъект.ЕстьРасхождения = ЕстьРасхождения;
			
		Иначе
			
			ДокументОбъект.ЕстьРасхождения = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Грузоотправитель, "Контрагент, ТорговыйОбъект");
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.Контрагент) Тогда
			ДокументОбъект.Организация = ЗначенияРеквизитов.Контрагент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.ТорговыйОбъект) Тогда
			ДокументОбъект.ТорговыйОбъект = ЗначенияРеквизитов.ТорговыйОбъект;
		КонецЕсли;
		
		Если (ТипЗнч(ДокументОбъект.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипЗнч(ДокументОбъект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров"))
			И ЗначениеЗаполнено(ДокументОбъект.ДокументОснование) Тогда
			Если ДокументОбъект.Ссылка.Пустая() Тогда
				ТТНСсылка = Документы.ТТНИсходящаяЕГАИС.ПолучитьСсылку();
				ДокументОбъект.УстановитьСсылкуНового(ТТНСсылка);
			Иначе
				ТТНСсылка = ДокументОбъект.Ссылка;
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Истина);
			
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДокументОснование, "ТТНИсходящаяЕГАИС") <> ТТНСсылка Тогда
				ДокументОснование = ДокументОбъект.ДокументОснование.ПолучитьОбъект();
				ДокументОснование.ТТНИсходящаяЕГАИС = ТТНСсылка;
				ДокументОснование.Записать();
			КонецЕсли;
			
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
		
		Если ДокументОбъект.НомерЧекаККМ = 0 И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары Тогда
			Если ПустаяСтрока(ДокументОбъект.Номер) Тогда
				ДокументОбъект.УстановитьНовыйНомер("");
			КонецЕсли;
			ДокументОбъект.НомерЧекаККМ = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.Номер, Истина, Истина));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2
//
Процедура ИспользоватьРегистр2(Использовать, ОрганизацияЕГАИС) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОрганизацииЕГАИС.ТорговыйОбъект.СкладПродажи.ТипСклада КАК ТипСклада
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК ОрганизацииЕГАИС
	|		ПО (ОрганизацииЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР)
	|ГДЕ
	|	ОрганизацииЕГАИС.Ссылка = &ОрганизацияЕГАИС");
	
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Использовать = Выборка.ТипСклада = ПредопределенноеЗначение("Перечисление.ТипыСкладов.ТорговыйЗал");
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьТаблицуЛицензийНаАлкоголь
//
Процедура ЗаполнитьТаблицуЛицензийНаАлкоголь(ТаблицаЛицензий) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаЛицензий", ТаблицаЛицензий);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЛицензий.Лицензиат КАК Лицензиат,
	|	ТаблицаЛицензий.ДатаТТН КАК ДатаТТН
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	&ТаблицаЛицензий КАК ТаблицаЛицензий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.Лицензиат КАК Лицензиат,
	|	ИсходныеДанные.ДатаТТН КАК ДатаТТН,
	|	МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ ДатыОкончанияЛицензий
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ПО ИсходныеДанные.Лицензиат = ЛицензииПоставщиковАлкогольнойПродукции.Владелец
	|			И (ИсходныеДанные.ДатаТТН МЕЖДУ ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала И ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсходныеДанные.Лицензиат,
	|	ИсходныеДанные.ДатаТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыОкончанияЛицензий.Лицензиат КАК Лицензиат,
	|	ДатыОкончанияЛицензий.ДатаТТН КАК ДатаТТН,
	|	МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.Ссылка) КАК Лицензия
	|ПОМЕСТИТЬ ЛицензииНаАлкоголь
	|ИЗ
	|	Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатыОкончанияЛицензий КАК ДатыОкончанияЛицензий
	|		ПО ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания = ДатыОкончанияЛицензий.ДатаОкончания
	|			И ЛицензииПоставщиковАлкогольнойПродукции.Владелец = ДатыОкончанияЛицензий.Лицензиат
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыОкончанияЛицензий.Лицензиат,
	|	ДатыОкончанияЛицензий.ДатаТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛицензииНаАлкоголь.Лицензиат КАК Лицензиат,
	|	ЛицензииНаАлкоголь.ДатаТТН КАК ДатаТТН,
	|	ЛицензииНаАлкоголь.Лицензия.Наименование КАК Наименование,
	|	ЛицензииНаАлкоголь.Лицензия.ДатаНачала КАК ДатаНачала,
	|	ЛицензииНаАлкоголь.Лицензия.ДатаОкончания КАК ДатаОкончания,
	|	ЛицензииНаАлкоголь.Лицензия.КемВыдана КАК КемВыдана
	|ИЗ
	|	ЛицензииНаАлкоголь КАК ЛицензииНаАлкоголь";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Лицензиат", Выборка.Лицензиат);
		ПараметрыОтбора.Вставить("ДатаТТН", Выборка.ДатаТТН);
		
		МассивСтрок = ТаблицаЛицензий.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗначенияПоУмолчаниюНеСопоставленныхОбъектов
//
Процедура ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(
		СобственнаяОрганизация    = Неопределено,
		СобственныйТорговыйОбъект = Неопределено,
		СторонняяОрганизация      = Неопределено,
		СтороннийТорговыйОбъект   = Неопределено) Экспорт
	
	СобственнаяОрганизация    = Справочники.Организации.ПустаяСсылка();
	СобственныйТорговыйОбъект = Справочники.Магазины.ПустаяСсылка();
	СторонняяОрганизация      = Справочники.Контрагенты.ПустаяСсылка();
	СтороннийТорговыйОбъект   = Неопределено;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.КонтрагентТорговыйОбъектПоИННКПП
//
Процедура КонтрагентТорговыйОбъектПоИННКПП(ВозвращаемоеЗначение, ИНН, КПП) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.КПП = &КПП
	|	И НЕ Контрагенты.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ВозвращаемоеЗначение = Неопределено;
	Иначе
		ВозвращаемоеЗначение = Новый Структура;
		ВозвращаемоеЗначение.Вставить("Контрагент", РезультатЗапроса.Выгрузить()[0].Ссылка);
		ВозвращаемоеЗначение.Вставить("ТорговыйОбъект");
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.КонтрагентТорговогоОбъекта
//
Процедура КонтрагентТорговогоОбъекта(Контрагент, ТорговыйОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТорговыйОбъект", ТорговыйОбъект);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Контрагент КАК Контрагент
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &ТорговыйОбъект
	|	И НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Сопоставлено";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Контрагент = РезультатЗапроса.Выгрузить()[0].Контрагент;
	Иначе
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТорговыйОбъектКонтрагента
//
Процедура ТорговыйОбъектКонтрагента(ТорговыйОбъект, Контрагент) Экспорт
	
	ТорговыйОбъект = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Контрагент = &Контрагент
	|	И НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Сопоставлено";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТорговыйОбъект = РезультатЗапроса.Выгрузить()[0].ТорговыйОбъект;
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.АдресТорговогоОбъекта
//
Процедура АдресТорговогоОбъекта(Адрес, ТорговыйОбъект) Экспорт
	
	Адрес = ОбщегоНазначенияРТ.АдресМагазина(ТорговыйОбъект);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ИспользоватьТорговыеОбъектыКонтрагентов
//
Процедура ИспользоватьТорговыеОбъектыКонтрагентов(Использовать) Экспорт
	
	Использовать = Ложь;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ОпределитьДокументПоступлениеТоваров
//
Процедура ОпределитьДокументПоступлениеТоваров(ОбъектМетаданных) Экспорт
	
	ОбъектМетаданных = Метаданные.Документы.ПоступлениеТоваров;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПроверитьСопоставлениеКлассификаторовПрикладногоДокумента
//
Процедура ПроверитьСопоставлениеКлассификаторовПрикладногоДокумента(РезультатПроверки, ДокументСсылка, УникальныйИдентификатор) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьНеСопоставленныеТовары", Ложь);
	Результат.Вставить("НеСопоставленныеТовары", "");
	
	ИмяДокумента = ДокументСсылка.Метаданные().Имя;
	Если ИмяДокумента = "СборкаТоваров" Тогда
		ИмяТаблицы = "Документ" + "." + ДокументСсылка.Метаданные().Имя;
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	1 КАК НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ИмяТаблицы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура   = Товары.Номенклатура
		|		 И СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL");
	Иначе
		ИмяТаблицы = "Документ" + "." + ДокументСсылка.Метаданные().Имя + "." + "Товары";
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ИмяТаблицы КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
		|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Характеристика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура   = Товары.Номенклатура
		|		 И СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL");
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ИмяТаблицы);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	НеСопоставленныеТовары = Запрос.Выполнить().Выгрузить();
	Результат.ЕстьНеСопоставленныеТовары = НеСопоставленныеТовары.Количество() > 0;
	
	Если Результат.ЕстьНеСопоставленныеТовары Тогда
		Результат.НеСопоставленныеТовары = ПоместитьВоВременноеХранилище(НеСопоставленныеТовары, УникальныйИдентификатор);
	КонецЕсли;
		
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаТТН
//
Процедура ТекстЗапросаТТН(ТекстЗапроса, Организация = Неопределено, ТорговыйОбъект = Неопределено, ОжидаетсяОформление = Ложь) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументТТНВходящаяЕГАИС.Ссылка,
	|	ДокументТТНВходящаяЕГАИС.ПометкаУдаления,
	|	ДокументТТНВходящаяЕГАИС.Номер,
	|	ДокументТТНВходящаяЕГАИС.Дата,
	|	ДокументТТНВходящаяЕГАИС.Проведен,
	|	ДокументТТНВходящаяЕГАИС.ТорговыйОбъект,
	|	ДокументТТНВходящаяЕГАИС.Организация,
	|	ДокументТТНВходящаяЕГАИС.Идентификатор,
	|	ДокументТТНВходящаяЕГАИС.ИдентификаторЕГАИС,
	|	ДокументТТНВходящаяЕГАИС.Упакована,
	|	ДокументТТНВходящаяЕГАИС.НомерТТН,
	|	ДокументТТНВходящаяЕГАИС.ДатаТТН,
	|	ДокументТТНВходящаяЕГАИС.ДатаОтгрузки,
	|	ДокументТТНВходящаяЕГАИС.Грузоотправитель,
	|	ДокументТТНВходящаяЕГАИС.Грузополучатель,
	|	ДокументТТНВходящаяЕГАИС.Поставщик,
	|	ЕСТЬNULL(ДокументТТНВходящаяЕГАИС.Поставщик.Контрагент, ДокументТТНВходящаяЕГАИС.Грузоотправитель.Контрагент) КАК ПоставщикКонтрагент,
	|	ДокументТТНВходящаяЕГАИС.Основание,
	|	ДокументТТНВходящаяЕГАИС.Комментарий,
	|	ДокументТТНВходящаяЕГАИС.ТипДоставки,
	|	ДокументТТНВходящаяЕГАИС.Перевозчик,
	|	ДокументТТНВходящаяЕГАИС.НомерТранспортногоСредства,
	|	ДокументТТНВходящаяЕГАИС.Прицеп,
	|	ДокументТТНВходящаяЕГАИС.Заказчик,
	|	ДокументТТНВходящаяЕГАИС.Водитель,
	|	ДокументТТНВходящаяЕГАИС.ПунктПогрузки,
	|	ДокументТТНВходящаяЕГАИС.ПунктРазгрузки,
	|	ДокументТТНВходящаяЕГАИС.Перенаправление,
	|	ДокументТТНВходящаяЕГАИС.Экспедитор,
	|	ДокументТТНВходящаяЕГАИС.СуммаДокумента,
	|	ДокументТТНВходящаяЕГАИС.МоментВремени,
	|	ДокументТТНВходящаяЕГАИС.ЕстьРасхождения,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваров.Ссылка ЕСТЬ NULL И ПеремещениеТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВведеноПоступление,
	|	ВЫБОР
	|		КОГДА НЕ ПеремещениеТоваров.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Ссылка
	|		КОГДА НЕ ПоступлениеТоваров.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПоступлениеТоваров.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ПоступлениеТоваров,
	|	ДокументТТНВходящаяЕГАИС.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА НЕ ПеремещениеТоваров.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Номер
	|		КОГДА НЕ ПоступлениеТоваров.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПоступлениеТоваров.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПоступлениеТоваровПредставление,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваров.Ссылка ЕСТЬ NULL И ПеремещениеТоваров.Ссылка ЕСТЬ NULL
	|			И НЕ СтатусыДокументовЕГАИС.Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаКПередаче),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаПереданВУТМ),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОбрабатываетсяЕГАИС),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОшибка))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеОформлено)
	|		КОГДА (НЕ ПоступлениеТоваров.Ссылка ЕСТЬ NULL ИЛИ НЕ ПеремещениеТоваров.Ссылка ЕСТЬ NULL)
	|			И НЕ СтатусыДокументовЕГАИС.Статус В(
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаКПередаче),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаПереданВУТМ),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОбрабатываетсяЕГАИС),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.АктОтказаОшибка))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.Оформлено)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовЕГАИС.НеТребуется)
	|	КОНЕЦ КАК ОформлениеПоступления,
	|	ВЫБОР
	|		КОГДА СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиТТНВходящейЕГАИС.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПустойСтатус,
	|
	|	СтатусыДокументовЕГАИС.Статус              КАК СтатусЕГАИС,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие1 КАК ДальнейшееДействиеЕГАИС1,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие2 КАК ДальнейшееДействиеЕГАИС2,
	|	СтатусыДокументовЕГАИС.ДальнейшееДействие3 КАК ДальнейшееДействиеЕГАИС3
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ДокументТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|		ПО ДокументТТНВходящаяЕГАИС.ДокументОснование = ПоступлениеТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО ДокументТТНВходящаяЕГАИС.ДокументОснование = ПеремещениеТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ДокументТТНВходящаяЕГАИС.Ссылка)
	|ГДЕ
	|	&УсловиеОтбора";
	
	УсловиеОтбора = "";
	Если ЗначениеЗаполнено(Организация) Тогда
		УсловиеОтбора = УсловиеОтбора + "ДокументТТНВходящаяЕГАИС.Организация = &Организация";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТорговыйОбъект) Тогда
		Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
			УсловиеОтбора = УсловиеОтбора + " И ";
		КонецЕсли;
		УсловиеОтбора = УсловиеОтбора + "ДокументТТНВходящаяЕГАИС.ТорговыйОбъект = &ТорговыйОбъект";
	КонецЕсли;
	
	Если ОжидаетсяОформление Тогда
		Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
			УсловиеОтбора = УсловиеОтбора + " И ";
		КонецЕсли;
		УсловиеОтбора = УсловиеОтбора +
		"(СтатусыДокументовЕГАИС.ДальнейшееДействие1 В(&ТребующиеДействия))";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловиеОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбора", УсловиеОтбора);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеОтбора", "ИСТИНА");
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаВТКоэффициентыПересчетаВЕдиницыЕГАИС
//
Процедура ТекстЗапросаВТКоэффициентыПересчетаВЕдиницыЕГАИС(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Таблица.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПроверятьОбъемДАЛ,
	|	МАКСИМУМ(ЕСТЬNULL(Таблица.Номенклатура.ОбъемДАЛ, 0)) КАК ОбъемДАЛ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Таблица.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА 1
	|			КОГДА ЕСТЬNULL(Таблица.Номенклатура.ОбъемДАЛ, 0) = 0
	|				ТОГДА 1
	|			ИНАЧЕ Таблица.Номенклатура.ОбъемДАЛ
	|		КОНЕЦ) КАК Коэффициент
	|ПОМЕСТИТЬ ШаблонИмяВременнойТаблицы
	|ИЗ
	|	ШаблонТаблицаТовары КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.АлкогольнаяПродукция,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ШаблонТаблицаТовары",       ИмяТаблицыТовары);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ШаблонИмяВременнойТаблицы", ИмяВременнойТаблицы);
		
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаВТОбъемДАЛЕдиницыНоменклатуры
//
Процедура ТекстЗапросаВТОбъемДАЛЕдиницыНоменклатуры(ТекстЗапроса, ИмяТаблицыТовары, ИмяВременнойТаблицы) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура          КАК Номенклатура,
	|	Таблица.Характеристика        КАК Характеристика,
	|	ЕСТЬNULL(Таблица.Номенклатура.ОбъемДАЛ, 0) КАК ОбъемДАЛ
	|ПОМЕСТИТЬ ШаблонИмяВременнойТаблицы
	|ИЗ
	|	ШаблонТаблицаТовары КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	ЕСТЬNULL(Таблица.Номенклатура.ОбъемДАЛ, 0)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ШаблонТаблицаТовары",       ИмяТаблицыТовары);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ШаблонИмяВременнойТаблицы", ИмяВременнойТаблицы);

	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьРеквизитыАлкогольнойПродукции
//
Процедура ЗаполнитьРеквизитыАлкогольнойПродукции(ТаблицаНоменклатуры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ
	|	Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТь
	|	Товары.НомерСтроки                                          КАК НомерСтроки,
	|	Товары.Номенклатура.Крепость                                КАК Крепость,
	|	Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС            КАК ВидПродукции,
	|	ВЫРАЗИТЬ(Товары.Номенклатура.ОбъемДАЛ * 10 КАК Число(10,3)) КАК Объем
	|ИЗ
	|	Товары КАК Товары
	|");
	
	Запрос.УстановитьПараметр("Товары", ТаблицаНоменклатуры);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = ТаблицаНоменклатуры.Найти(Выборка.НомерСтроки, "НомерСтроки");
		Если СтрокаТаблицы <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка, "Крепость, ВидПродукции, Объем");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


#Область СопоставлениеКлассификаторовЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоТТН
//
Процедура ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоТТН(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ИНН КАК ИНН,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.КПП КАК КПП,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Наименование КАК Наименование,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Контрагент КАК Контрагент,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Сопоставлено КАК Сопоставлено
	|ПОМЕСТИТЬ ВтОрганизацииЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Грузоотправитель КАК ОрганизацияЕГАИС
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Грузополучатель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Поставщик
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Импортер = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|				ТОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Производитель
	|			ИНАЧЕ ТабличнаяЧасть.АлкогольнаяПродукция.Импортер
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка В(&СписокТТН)) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ ВложенныйЗапрос.ОрганизацияЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|	И НЕ ВложенныйЗапрос.ОрганизацияЕГАИС.СоответствуетОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВтОрганизацииЕГАИС.Наименование КАК НаименованиеЕГАИС,
	|	Контрагенты1.Ссылка КАК Контрагент1,
	|	НЕОПРЕДЕЛЕНО КАК ТорговыйОбъект1,
	|	Контрагенты2.Ссылка КАК Контрагент2,
	|	НЕОПРЕДЕЛЕНО КАК ТорговыйОбъект2
	|ПОМЕСТИТЬ ВтСопоставления
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ВтОрганизацииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты1
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты1.ИНН
	|			И ВтОрганизацииЕГАИС.КПП = Контрагенты1.КПП
	|			И (НЕ Контрагенты1.ИНН = """")
	|			И (НЕ Контрагенты1.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты2
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты2.ИНН
	|			И (НЕ Контрагенты2.ИНН = """")
	|			И (НЕ Контрагенты2.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОрганизацииЕГАИС.Наименование КАК Наименование,
	|	ОрганизацииЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект,
	|	ОрганизацииЕГАИС.Контрагент КАК Контрагент,
	|	ОрганизацииЕГАИС.Сопоставлено КАК Сопоставлено,
	|	ОрганизацииЕГАИС.ИНН КАК ИНН,
	|	ОрганизацииЕГАИС.КПП КАК КПП,
	|	ОрганизацииЕГАИС.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ЕСТЬNULL(Сопоставления.Контрагент1, Сопоставления.Контрагент2) КАК Контрагент,
	|	ЕСТЬNULL(Сопоставления.ТорговыйОбъект1, Сопоставления.ТорговыйОбъект2) КАК ТорговыйОбъект
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	Сопоставления.НаименованиеЕГАИС КАК НаименованиеЕГАИС
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ NULL";
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаСопоставленияНоменклатурыПоТТН
//
Процедура ПриЗаполненииТекстаЗапросаСопоставленияНоменклатурыПоТТН(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.Номенклатура          КАК Номенклатура,
	|	Товары.Характеристика        КАК Характеристика,
	|	Товары.Серия                 КАК Серия
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&СписокТТН)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ втАлкогольнаяПродукция
	|ИЗ
	|	втТовары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втАлкогольнаяПродукция.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Количество
	|ПОМЕСТИТЬ СопоставленоПозиций
	|ИЗ
	|	втАлкогольнаяПродукция КАК втАлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = втАлкогольнаяПродукция.АлкогольнаяПродукция)
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	втАлкогольнаяПродукция.АлкогольнаяПродукция
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ИдентификаторУпаковки                                      КАК ИдентификаторУпаковки,
	|	Товары.АлкогольнаяПродукция                                       КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Объем                                 КАК Объем,
	|	ЕСТЬNULL(СопоставленоПозиций.Количество, 0)                       КАК Количество,
	|	Товары.АлкогольнаяПродукция.Крепость                              КАК Крепость,
	|	Товары.АлкогольнаяПродукция.Наименование                          КАК Наименование,
	|	ПОДСТРОКА(Товары.АлкогольнаяПродукция.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	Товары.АлкогольнаяПродукция.ВидПродукции                          КАК ВидПродукции,
	|	Товары.АлкогольнаяПродукция.Производитель.Контрагент              КАК ПроизводительИБ,
	|	Товары.АлкогольнаяПродукция.Импортер.Контрагент                   КАК ИмпортерИБ,
	|	Товары.АлкогольнаяПродукция.Производитель                         КАК Производитель,
	|	Товары.АлкогольнаяПродукция.Импортер                              КАК Импортер,
	|	Товары.Номенклатура                                               КАК Номенклатура,
	|	Товары.Характеристика                                             КАК Характеристика,
	|	Товары.Серия                                                      КАК Серия
	|ПОМЕСТИТЬ втДанныеТТН
	|ИЗ
	|	втТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленоПозиций КАК СопоставленоПозиций
	|		ПО (СопоставленоПозиций.АлкогольнаяПродукция = Товары.АлкогольнаяПродукция)
	|		
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка                                 КАК Номенклатура,
	|	СправочникНоменклатура.Наименование                           КАК Наименование,
	|	СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС           КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ПроизводительИмпортерАлкогольнойПродукции КАК ПроизводительИмпортер,
	|	СправочникНоменклатура.ОбъемДАЛ                               КАК ОбъемДАЛ,
	|	СправочникНоменклатура.Крепость                               КАК Крепость
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втДанныеТТН.Наименование         КАК Наименование
	|ИЗ
	|	втДанныеТТН КАК втДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура КАК Номенклатура,
	|	втНоменклатура.Наименование КАК Наименование
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|";
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоВходящимДанным
//
Процедура ПриЗаполненииТекстаЗапросаСопоставленияОрганизацийЕГАИСПоВходящимДанным(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(Товары.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втТаблицаТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|ПОМЕСТИТЬ втТаблицаОрганизацииЕГАИС
	|ИЗ
	|	&ОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ИНН КАК ИНН,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.КПП КАК КПП,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.Адрес, 1, 1000) КАК Адрес,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.ПредставлениеАдреса, 1, 1000) КАК ПредставлениеАдреса,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Наименование КАК Наименование,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Контрагент КАК Контрагент,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Сопоставлено КАК Сопоставлено
	|ПОМЕСТИТЬ ВтОрганизацииЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС
	|	ИЗ
	|		втТаблицаОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Импортер = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|				ТОГДА ТабличнаяЧасть.АлкогольнаяПродукция.Производитель
	|			ИНАЧЕ ТабличнаяЧасть.АлкогольнаяПродукция.Импортер
	|		КОНЕЦ
	|	ИЗ
	|		втТаблицаТовары КАК ТабличнаяЧасть) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ ВложенныйЗапрос.ОрганизацияЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|	И НЕ ВложенныйЗапрос.ОрганизацияЕГАИС.СоответствуетОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВтОрганизацииЕГАИС.Наименование КАК НаименованиеЕГАИС,
	|	Контрагенты1.Ссылка КАК Контрагент1,
	|	НЕОПРЕДЕЛЕНО КАК ТорговыйОбъект1,
	|	Контрагенты2.Ссылка КАК Контрагент2,
	|	НЕОПРЕДЕЛЕНО КАК ТорговыйОбъект2
	|ПОМЕСТИТЬ ВтСопоставления
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ВтОрганизацииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты1
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты1.ИНН
	|			И ВтОрганизацииЕГАИС.КПП = Контрагенты1.КПП
	|			И (НЕ Контрагенты1.ИНН = """")
	|			И (НЕ Контрагенты1.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты2
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты2.ИНН
	|			И (НЕ Контрагенты2.ИНН = """")
	|			И (НЕ Контрагенты2.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОрганизацииЕГАИС.Наименование КАК Наименование,
	|	ОрганизацииЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект,
	|	ОрганизацииЕГАИС.Контрагент КАК Контрагент,
	|	ОрганизацииЕГАИС.Сопоставлено КАК Сопоставлено,
	|	ОрганизацииЕГАИС.ИНН КАК ИНН,
	|	ОрганизацииЕГАИС.КПП КАК КПП,
	|	ОрганизацииЕГАИС.Адрес КАК Адрес,
	|	ОрганизацииЕГАИС.ПредставлениеАдреса КАК ПредставлениеАдреса,
	|	ОрганизацииЕГАИС.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ЕСТЬNULL(Сопоставления.Контрагент1, Сопоставления.Контрагент2) КАК Контрагент,
	|	ЕСТЬNULL(Сопоставления.ТорговыйОбъект1, Сопоставления.ТорговыйОбъект2) КАК ТорговыйОбъект
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	Сопоставления.НаименованиеЕГАИС КАК НаименованиеЕГАИС
	|ИЗ
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент2 ЕСТЬ NULL";
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным
//
Процедура ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(Товары.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ втАлкогольнаяПродукция
	|ИЗ
	|	втТовары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втАлкогольнаяПродукция.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ СопоставленоПозиций
	|ИЗ
	|	втАлкогольнаяПродукция КАК втАлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = втАлкогольнаяПродукция.АлкогольнаяПродукция)
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	втАлкогольнаяПродукция.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Объем КАК Объем,
	|	Товары.АлкогольнаяПродукция.Крепость КАК Крепость,
	|	Товары.АлкогольнаяПродукция.Наименование КАК Наименование,
	|	ПОДСТРОКА(Товары.АлкогольнаяПродукция.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	Товары.АлкогольнаяПродукция.ВидПродукции КАК ВидПродукции,
	|	Товары.АлкогольнаяПродукция.Производитель.Контрагент КАК ПроизводительИБ,
	|	Товары.АлкогольнаяПродукция.Импортер.Контрагент КАК ИмпортерИБ,
	|	Товары.АлкогольнаяПродукция.Производитель КАК Производитель,
	|	Товары.АлкогольнаяПродукция.Импортер КАК Импортер,
	|	ЕСТЬNULL(СопоставленоПозиций.Количество, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура
	|		ИНАЧЕ Товары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Товары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СоответствиеНоменклатурыЕГАИС.Характеристика
	|		ИНАЧЕ Товары.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ТОГДА СоответствиеНоменклатурыЕГАИС.Серия
	|		ИНАЧЕ Товары.Серия
	|	КОНЕЦ КАК Серия
	|ПОМЕСТИТЬ втДанныеТТН
	|ИЗ
	|	втТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленоПозиций КАК СопоставленоПозиций
	|		ПО (СопоставленоПозиций.АлкогольнаяПродукция = Товары.АлкогольнаяПродукция)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И (СопоставленоПозиций.Количество = 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	СправочникНоменклатура.Наименование КАК Наименование,
	|	СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ПроизводительИмпортерАлкогольнойПродукции КАК ПроизводительИмпортер,
	|	СправочникНоменклатура.ОбъемДАЛ КАК ОбъемДАЛ,
	|	СправочникНоменклатура.Крепость КАК Крепость
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	втДанныеТТН.Наименование КАК Наименование
	|ИЗ
	|	втДанныеТТН КАК втДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатура.Номенклатура КАК Номенклатура,
	|	втНоменклатура.Наименование КАК Наименование
	|ИЗ
	|	втНоменклатура КАК втНоменклатура";
	
КонецПроцедуры

#КонецОбласти

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным
//
Процедура ОпределитьТипыШтриховыхКодовНеМаркируемойПродукцииТСД(ТаблицаНеАкцизныеМарки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ШтриховыеКоды.ШтриховойКод КАК ШтриховойКод,
	|	ШтриховыеКоды.Количество КАК Количество,
	|	ШтриховыеКоды.ШтрихКодУпаковки КАК ШтрихКодУпаковки,
	|	ШтриховыеКоды.ЭтоУпаковка КАК ЭтоУпаковка,
	|	ШтриховыеКоды.ЭтоИмеющаясяВБазеУпаковка КАК ЭтоИмеющаясяВБазеУпаковка,
	|	ШтриховыеКоды.ЭтоПартионнаяАлкогольнаяПродукция КАК ЭтоПартионнаяАлкогольнаяПродукция,
	|	ШтриховыеКоды.ЭтоПрочаяНоменклатура КАК ЭтоПрочаяНоменклатура,
	|	ШтриховыеКоды.Родитель КАК Родитель
	|ПОМЕСТИТЬ ШтриховыеКоды
	|ИЗ
	|	&ШтриховыеКоды КАК ШтриховыеКоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ШтриховыеКоды.ШтриховойКод КАК ШтриховойКод,
	|	ШтриховыеКоды.Количество КАК Количество,
	|	ЕСТЬNULL(ШтрихкодыУпаковокТоваров.Ссылка, ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)) КАК ШтрихКодУпаковки,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.Ссылка ЕСТЬ NULL
	|				И ШтрихкодыУпаковокТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУпаковка,
	|	ВЫБОР
	|		КОГДА ШтрихкодыУпаковокТоваров.ТипУпаковки <> ЗНАЧЕНИЕ(Перечисление.ТипыУпаковок.МаркированныйТовар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоИмеющаясяВБазеУпаковка,
	|	ВЫБОР
	|		КОГДА ВидыАлкогольнойПродукции.Маркируемый = ЛОЖЬ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПартионнаяАлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.АлкогольнаяПродукция = ЛОЖЬ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПрочаяНоменклатура,
	|	ШтриховыеКоды.Родитель КАК Родитель
	|ИЗ
	|	ШтриховыеКоды КАК ШтриховыеКоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
	|		ПО ШтриховыеКоды.ШтриховойКод = ШтрихкодыНоменклатуры.Штрихкод
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (ШтрихкодыНоменклатуры.Владелец = СправочникНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = ВидыАлкогольнойПродукции.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ШтриховыеКоды.ШтриховойКод = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода";
	
	Запрос.УстановитьПараметр("ШтриховыеКоды", ТаблицаНеАкцизныеМарки);
	
	ТаблицаНеАкцизныеМарки = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаСопоставлениеНоменклатурыПоВходящимДанным
//
Процедура ПриОпределенииОрганизацииЕГАИСпоДокументу(ОрганизацияЕГАИС, Документ) Экспорт
	
	Если Не Документ = Неопределено И ЗначениеЗаполнено(Документ) Тогда 
		Если СтрНайти(Документ.Метаданные().Имя, "ЕГАИС") Тогда 
			ОрганизацияЕГАИС = Документ.ОрганизацияЕГАИС;
		Иначе 
			ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
							Документ.Организация, Документ.Магазин);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаЗаполнения

#Область АктПостановкиНаБалансЕГАИС

Процедура ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.Организация               = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект            = РеквизитыОснования.Магазин;
		ДокументОбъект.ДокументОснование         = ДанныеЗаполнения;
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
		ЗаполнитьТоварыАктаПостановкиНаБалансПоОприходованиюТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.Организация               = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект            = РеквизитыОснования.Магазин;
		ДокументОбъект.ДокументОснование         = ДанныеЗаполнения;
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	АктСписанияЕГАИС.Ссылка КАК АктСписанияЕГАИС
		|ИЗ
		|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
		|ГДЕ
		|	АктСписанияЕГАИС.ДокументОснование = &ДокументОснование
		|	И АктСписанияЕГАИС.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричиныСписанийЕГАИС.Пересортица)";
		
		ВыборкаАктыСписания = Запрос.Выполнить().Выбрать();
		Если ВыборкаАктыСписания.Количество() = 1 Тогда
			ВыборкаАктыСписания.Следующий();
			ДокументОбъект.АктСписанияЕГАИС = ВыборкаАктыСписания.АктСписанияЕГАИС;
		КонецЕсли;
		
		ЗаполнитьТоварыАктаПостановкиНаБалансПоПересортицеТоваров(ДокументОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("АкцизныеМаркиВРегистр3") Тогда
		
		ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
		ДокументОбъект.ВидДокумента     = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
		
		ТаблицаТовары = Новый ТаблицаЗначений;
		ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
		ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
		
		Для Каждого ДанныеАкцизнойМарки Из ДанныеЗаполнения.АкцизныеМарки Цикл
			НоваяСтрока = ДокументОбъект.АкцизныеМарки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеАкцизнойМарки);
			НоваяСтрока.Количество = 1;
			
			НоваяСтрокаТовары = ТаблицаТовары.Добавить();
			НоваяСтрокаТовары.АлкогольнаяПродукция = ДанныеАкцизнойМарки.АлкогольнаяПродукция;
			НоваяСтрокаТовары.Справка2             = ДанныеАкцизнойМарки.Справка2;
		КонецЦикла;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	Т.Справка2 КАК Справка2,
		|	1 КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2 КАК Справка2,
		|	СУММА(Т.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	втТовары КАК Т
		|СГРУППИРОВАТЬ ПО
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2 КАК Справка2,
		|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
		|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
		|ПОМЕСТИТЬ СопоставленыеПозиции
		|ИЗ
		|	Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
		|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
		|ГДЕ
		|	Не СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
		|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СопоставленыеПозиции.Номенклатура   КАК Номенклатура,
		|	СопоставленыеПозиции.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2             КАК Справка2,
		|	ТабличнаяЧасть.Количество           КАК Количество,
		|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
		|ИЗ
		|	Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
		|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленыеПозиции.АлкогольнаяПродукция
		|			И ТабличнаяЧасть.Справка2 = СопоставленыеПозиции.Справка2
		|			И НЕ СопоставленыеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
		|");
		Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьОсновныеРеквизитыОбъекта(ДокументОбъект);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары акта постановки на баланс по оприходованию товаров.
//
Процедура ЗаполнитьТоварыАктаПостановкиНаБалансПоОприходованиюТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СопоставленыеПозиции.Номенклатура КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика
	|ИЗ
	|	СопоставленыеПозиции КАК СопоставленыеПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Имя));
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 1].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 2].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0 Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет товары акта постановки на баланс по пересортице товаров.
//
Процедура ЗаполнитьТоварыАктаПостановкиНаБалансПоПересортицеТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ПересортицаТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НоменклатураОприходование КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаОприходование КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СопоставленыеПозиции.Номенклатура КАК Номенклатура,
	|	СопоставленыеПозиции.Характеристика КАК Характеристика
	|ИЗ
	|	СопоставленыеПозиции КАК СопоставленыеПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСоответствий = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаДокумента    = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0 Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область АктСписанияЕГАИС

Процедура ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ПроверитьВозможностьВводаНаОсновании = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ПроверитьВозможностьВводаНаОсновании") Тогда
			ПроверитьВозможностьВводаНаОсновании = ДанныеЗаполнения.ПроверитьВозможностьВводаНаОсновании;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		Если ПроверитьВозможностьВводаНаОсновании Тогда
			ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ВидДокумента) Тогда
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "ОрганизацияЕГАИС, ТорговыйОбъект, Организация");
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыОснования);
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ВидДокумента      = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Склад");
		ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		
		Если ДанныеЗаполнения.АкцизныеМарки.Количество() <> 0 Тогда // Подарки
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.ИныеЦели;
		Иначе
			ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Недостача;
		КонецЕсли;

		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Недостача;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Склад");
		ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Пересортица;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Склад");
		ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Склад, "ТипСклада");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, МагазинОтправитель");
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.МагазинОтправитель;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
		ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ЗаполнитьОсновныеРеквизитыОбъекта(ДокументОбъект);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары акта списания по передаче в регистр №2.
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПередачиВРегистр2(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	ДокументОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
		СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения акта списания на основании отчета о розничных продажах
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка "ОтчетОРозничныхПродажах"
//
Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ДобавитьМаркируемуюПродукцию = Неопределено, ДобавитьНеМаркируемуюПродукцию = Истина) Экспорт
	
	ДокументОбъект.ПричинаСписания   = Перечисления.ПричиныСписанийЕГАИС.Реализация;
	ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
	ДокументОбъект.Дата              = НачалоДня(ДанныеЗаполнения.Дата);
	ДокументОбъект.Ответственный     = Пользователи.ТекущийПользователь();
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ДанныеЗаполнения.Организация, ДанныеЗаполнения.Магазин);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
	КонецЕсли;
	
	Если ДобавитьМаркируемуюПродукцию = Неопределено Тогда
		ДобавитьМаркируемуюПродукцию = Ложь;
		
		Если ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
			НаходитсяВСельскойМестности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЕГАИС, "НаходитсяВСельскойМестности");
			Если НаходитсяВСельскойМестности
				И Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() > ДокументОбъект.Дата Тогда
				ДобавитьМаркируемуюПродукцию = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию);
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ДобавитьМаркируемуюПродукцию, ДобавитьНеМаркируемуюПродукцию = Истина)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование"             , ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"               , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ДобавитьМаркируемуюПродукцию"  , ДобавитьМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("ДобавитьНеМаркируемуюПродукцию", ДобавитьНеМаркируемуюПродукцию);
	Запрос.УстановитьПараметр("ЭтаСсылка"                     , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Цена КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (&ДобавитьМаркируемуюПродукцию
	|				И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|			ИЛИ &ДобавитьНеМаркируемуюПродукцию
	|				И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|				И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.Цена,
	|	-ОформленныеТовары.Сумма,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	ТоварыКОформлению.Цена КАК Цена,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Цена КАК Цена,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.ИдентификаторСтроки
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	ТоварыКОформлению.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.КлючСвязи
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок,
	|	ТаблицаЗаполнения.КлючСвязи КАК КлючСвязи
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ТабличнаяЧастьАкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка,
	|	ТабличнаяЧастьАкцизныеМарки.Справка2 КАК Справка2,
	|	ТабличнаяЧастьАкцизныеМарки.АкцизнаяМарка КАК ШтрихкодУпаковки,
	|	1 КАК Количество,
	|	ТабличнаяЧастьАкцизныеМарки.АкцизнаяМарка.ЗначениеШтрихкода КАК КодАкцизнойМарки
	|ИЗ
	|	Документ.СписаниеТоваров.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 3].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 2].Выгрузить();
	
	ТаблицаАкцизныхМарок  = Результат[Результат.Количество() - 1].Выгрузить(); 
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		Если НЕ СтрокаТЧ.Количество = 0 Тогда
			СтрокаТЧ.Цена = СтрокаТЧ.Сумма / СтрокаТЧ.Количество;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда 
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаДокумента.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧАкцизныеМарки, СтрокаАкцизныеМарки);
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
				
				Если ЗначениеЗаполнено(СтрокаТЧАкцизныеМарки.Справка2) Тогда
					Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Справка2) Тогда
						СтрокаТЧ.Справка2 = СтрокаТЧАкцизныеМарки.Справка2;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Цена КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок,
	|	ОформленныеТовары.Цена,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ТоварыКОформлению.Цена КАК Цена,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Упаковка КАК Упаковка,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаЗаполнения.Цена КАК Цена,
	|	ТаблицаЗаполнения.Сумма КАК Сумма
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|		ИЛИ НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование"              , ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС"        , Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"                      , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	СборкаТоваров.Номенклатура КАК Номенклатура,
	|	СборкаТоваров.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаАлкогольнаяПродукция
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СборкаТоваров.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И СборкаТоваров.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|ГДЕ
	|	СборкаТоваров.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ЕСТЬNULL(ТаблицаАлкогольнаяПродукция.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАлкогольнаяПродукция КАК ТаблицаАлкогольнаяПродукция
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаАлкогольнаяПродукция.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаАлкогольнаяПродукция.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.АлкогольнаяПродукция
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.АлкогольнаяПродукция
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАлкогольнаяПродукция.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаАлкогольнаяПродукция.Номенклатура КАК Номенклатура,
	|	ТаблицаАлкогольнаяПродукция.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаАлкогольнаяПродукция КАК ТаблицаАлкогольнаяПродукция";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения ТЧ Товары акта списания на основании документа
// 
// Параметры:
//  ДокументОбъект - Документ объект "АктСписанияЕГАИС"
//  ДанныеЗаполнения - Документ ссылка
//
Процедура ЗаполнитьТоварыАктаСписанияЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Цена КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Упаковка,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок,
	|	ОформленныеТовары.Цена,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ТоварыКОформлению.Цена КАК Цена,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Упаковка КАК Упаковка,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаЗаполнения.Цена КАК Цена,
	|	ТаблицаЗаполнения.Сумма КАК Сумма
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратИзРегистра2ЕГАИС

Процедура ОбработкаЗаполненияВозвратаИзРегистра2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
	КонецЕсли;
	
	Если ДокументОбъект.Метаданные().Реквизиты["ДокументОснование"].Тип.СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, МагазинОтправитель");
		
		ДокументОбъект.Организация = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект = РеквизитыОснования.МагазинОтправитель;
		
		ЗаполнитьТоварыВозвратаИзРегистра2ПоПеремещению(ДокументОбъект);
		
	КонецЕсли;
	
	ЗаполнитьОсновныеРеквизитыОбъекта(ДокументОбъект);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС =
			Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
				ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

// Заполняет товары возврата из регистра №2 по перемещению товаров.
//
Процедура ЗаполнитьТоварыВозвратаИзРегистра2ПоПеремещению(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
		
		МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
			
			СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОстаткиЕГАИС

Процедура ОбработкаЗаполненияОстатковЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ЗаполнитьОсновныеРеквизитыОбъекта(ДокументОбъект);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ОрганизацияЕГАИС) Тогда
		ДокументОбъект.ОрганизацияЕГАИС =
			Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
				ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТТНИсходящаяЕГАИС

Процедура ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Магазин") Тогда
			ДокументОбъект.ТорговыйОбъект = ДанныеЗаполнения.Магазин;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеТранспортногоРаздела = Неопределено;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер, Дата, Контрагент, ДанныеТранспортногоРаздела, ЦенаВключаетНДС");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
		                                   РеквизитыОснования.Контрагент,
		                                   ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.ТорговыйОбъектЕГАИС.Имя),
		                                   Ложь);
		
		ЗаполнитьТоварыТТНИсходящейПоВозвратуПоставщику(ДокументОбъект, РеквизитыОснования);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ОрганизацияПолучатель, МагазинОтправитель, МагазинПолучатель, Номер, Дата, ДанныеТранспортногоРаздела");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.МагазинОтправитель;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.ОрганизацияПолучатель, РеквизитыОснования.МагазинПолучатель);
		
		ЗаполнитьТоварыТТНИсходящейПоПеремещениюТоваров(ДокументОбъект);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, ОрганизацияПолучатель, Магазин, Номер, Дата");
		
		ДанныеТранспортногоРаздела = РеквизитыОснования.ДанныеТранспортногоРаздела.Получить();
		
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ДокументОбъект.Организация       = РеквизитыОснования.Организация;
		ДокументОбъект.ТорговыйОбъект    = РеквизитыОснования.Магазин;
		ДокументОбъект.ВидОперации       = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		ДокументОбъект.Идентификатор     = Строка(ДанныеЗаполнения.УникальныйИдентификатор());
		ДокументОбъект.НомерТТН          = СформироватьНомерИсходящейТТН(РеквизитыОснования.Номер, РеквизитыОснования.Дата);
		ДокументОбъект.ДатаОтгрузки      = РеквизитыОснования.Дата;
		ДокументОбъект.ДатаТТН           = РеквизитыОснования.Дата;
		ДокументОбъект.Упакована         = Истина;
		ДокументОбъект.Грузополучатель   = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.ОрганизацияПолучатель, РеквизитыОснования.Магазин);
		
		ЗаполнитьТоварыТТНИсходящейПоПередачеТоваровМеждуОрганизациями(ДокументОбъект);
		
	КонецЕсли;
	
	Если ДанныеТранспортногоРаздела <> Неопределено Тогда
		ДокументОбъект.ТипДоставки                = ДанныеТранспортногоРаздела.ВидПеревозки;
		ДокументОбъект.Перевозчик                 = ДанныеТранспортногоРаздела.Перевозчик;
		ДокументОбъект.НомерТранспортногоСредства = ДанныеТранспортногоРаздела.МаркаАвтомобиля + " " + ДанныеТранспортногоРаздела.ГосНомерАвтомобиля;
		ДокументОбъект.Прицеп                     = ДанныеТранспортногоРаздела.МаркаПрицепа    + " " + ДанныеТранспортногоРаздела.ГосНомерПрицепа;
		ДокументОбъект.Заказчик                   = ДанныеТранспортногоРаздела.Заказчик;
		ДокументОбъект.Водитель                   = ДанныеТранспортногоРаздела.Водитель;
		ДокументОбъект.ПунктПогрузки              = ДанныеТранспортногоРаздела.ПунктПогрузки;
		ДокументОбъект.ПунктРазгрузки             = ДанныеТранспортногоРаздела.ПунктРазгрузки;
	КонецЕсли;
	
	ЗаполнитьОсновныеРеквизитыОбъекта(ДокументОбъект);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Грузоотправитель) Тогда
		ДокументОбъект.Грузоотправитель =
			Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
				ДокументОбъект.Организация, ДокументОбъект.ТорговыйОбъект);
	КонецЕсли;
	
	ДокументОбъект.Поставщик = ДокументОбъект.Грузоотправитель;
	ДокументОбъект.СуммаДокумента = ДокументОбъект.Товары.Итог("Сумма");
	
	ОбщегоНазначенияРТ.ПроверитьИспользованиеОрганизации(,, ДокументОбъект.Организация);
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоВозвратуПоставщику(ДокументОбъект, РеквизитыОснования)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТабличнаяЧасть.Справка2.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТабличнаяЧасть.СуммаНДС / ТабличнаяЧасть.КоличествоУпаковок
	|	КОНЕЦ КАК ЦенаНДС,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма,
	|	0,
	|	NULL
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	СУММА(ТоварыКОформлению.ЦенаНДС) КАК ЦенаНДС,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Справка2 КАК Справка2,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ТаблицаЗаполнения.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив,
	|	ТаблицаЗаполнения.ЦенаНДС КАК ЦенаНДС,
	|	ТаблицаЗаполнения.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
		Если РеквизитыОснования.ЦенаВключаетНДС Тогда
			Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
				СтрокаТЧ.Цена = СтрокаДокумента.Сумма;
			Иначе
				СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4);
			КонецЕсли;
		Иначе
			Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
				СтрокаТЧ.Цена = СтрокаДокумента.Сумма + СтрокаДокумента.ЦенаНДС;
			Иначе
				СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4) + СтрокаДокумента.ЦенаНДС;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДокумента.ПродаетсяВРозлив Тогда
			ДокументОбъект.Упакована = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоПеремещениюТоваров(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Штрихкод КАК Штрихкод,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи,
	|	ТабличнаяЧасть.Цена КАК Цена
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ ЕСТЬNULL(СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Порядок КАК Порядок,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Штрихкод КАК Штрихкод,
	|	ТаблицаДокумента.КлючСвязи КАК КлючСвязи,
	|	ТаблицаДокумента.Цена КАК Цена
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК АкцизнаяМарка,
	|	1 КАК Количество,
	|	Справка2 КАК Справка2,
	|	ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ИЗ
	|	Документ.ПеремещениеТоваров.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ТабличнаяЧастьАкцизныеМарки.КодАкцизнойМарки = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаДокумента.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаДокумента.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваров                            = МассивРезультатов[МассивРезультатов.Количество() - 3].Выгрузить();
	ТаблицаАкцизныхМарок                      = МассивРезультатов[МассивРезультатов.Количество() - 2].Выгрузить();
	ДополнительнаяТаблицаАлкогольнойПродукции = МассивРезультатов[МассивРезультатов.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаТовары Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТовары);
		
		Если НЕ СтрокаТЧ.Количество = 0 Тогда
			СтрокаТЧ.Цена = СтрокаТЧ.Сумма / СтрокаТЧ.Количество;
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
				ЗаполнитьЗначенияСвойств(СтрокаТЧАкцизныеМарки, СтрокаАкцизныеМарки);
				
				Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
					СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТовары);
					
					МассивСтрокПоАлкогольнойПродукции = ДополнительнаяТаблицаАлкогольнойПродукции.НайтиСтроки(СтруктураПоиска);
					
					Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
						
						СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТЧАкцизныеМарки.Справка2) Тогда
					Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Справка2) Тогда
						СтрокаТЧ.Справка2 = СтрокаТЧАкцизныеМарки.Справка2;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
						СтрокаТЧ.АлкогольнаяПродукция = СтрокаТЧАкцизныеМарки.Справка2.АлкогольнаяПродукция;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыТТНИсходящейПоПередачеТоваровМеждуОрганизациями(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы"  , Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТабличнаяЧасть.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаЗаполнения
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаполнения.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаполнения.Характеристика КАК Характеристика,
	|	ТаблицаЗаполнения.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаЗаполнения.Количество КАК Количество,
	|	ТаблицаЗаполнения.Количество КАК КоличествоУпаковок,
	|	ТаблицаЗаполнения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ТаблицаЗаполнения.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив, ЛОЖЬ) КАК ПродаетсяВРозлив
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ТаблицаЗаполнения КАК ТаблицаЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЗаполнения.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТаблицаЗаполнения.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента    = Результат[Результат.Количество() - 2].Выгрузить();
	ТаблицаСоответствий = Результат[Результат.Количество() - 1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаДокумента);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.АлкогольнаяПродукция) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДокумента);
			
			МассивСтрокПоАлкогольнойПродукции = ТаблицаСоответствий.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрокПоАлкогольнойПродукции.Количество() > 0  Тогда
				
				СтрокаТЧ.АлкогольнаяПродукция = МассивСтрокПоАлкогольнойПродукции[0].АлкогольнаяПродукция;
				
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДокумента.КоличествоУпаковок = 0 Тогда
			СтрокаТЧ.Цена = СтрокаДокумента.Сумма;
		Иначе
			СтрокаТЧ.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.КоличествоУпаковок, 4);
		КонецЕсли;
		
		Если СтрокаДокумента.ПродаетсяВРозлив Тогда
			ДокументОбъект.Упакована = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЧекЕГАИС

Процедура ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
	КонецЕсли;
	
	РеквизитыОснования = Неопределено;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("ВидОперации") И ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары Тогда
			Если ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
				ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло("1" + Формат(ДокументОбъект.Дата, "ДФ=yyyyMMdd"));
			Иначе
				ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло("1" + Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd"));
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер");
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.РеализацияЮридическомуЛицуСБезналичнойОплатой;
		ДокументОбъект.НомерЧекаККМ = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина));
		ДокументОбъект.НомерСмены   = ДокументОбъект.НомерЧекаККМ;
		
		ЗаполнитьТоварыЧекаЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, МагазинОтправитель, Номер");
		РеквизитыОснования.Вставить("Магазин"    , РеквизитыОснования.МагазинОтправитель);
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.РеализацияЮридическомуЛицуСБезналичнойОплатой;
		ДокументОбъект.НомерЧекаККМ = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина));
		ДокументОбъект.НомерСмены   = ДокументОбъект.НомерЧекаККМ;
		
		ЗаполнитьТоварыЧекаЕГАИСНаОснованииПеремещениеТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин");
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
		ЗаполнитьТоварыЧекаЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если РеквизитыОснования <> Неопределено Тогда
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.Магазин);
		ДокументОбъект.СерийныйНомерККМ = СерийныйНомерККМ(РеквизитыОснования.Магазин);
	Иначе
		ДокументОбъект.СерийныйНомерККМ = СерийныйНомерККМ();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Штрихкод КАК Штрихкод,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи,
	|	ТабличнаяЧасть.Цена КАК Цена
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК АкцизнаяМарка,
	|	ТабличнаяЧастьАкцизныеМарки.Справка2 КАК Справка2
	|ИЗ
	|	Документ.РеализацияТоваров.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ТабличнаяЧастьАкцизныеМарки.КодАкцизнойМарки = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваров = МассивРезультатов[0].Выгрузить();
	ТаблицаАкцизныхМарок = МассивРезультатов[1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаТовары Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТовары);
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда 
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		Если НЕ СтрокаТЧ.Количество = 0 Тогда
			СтрокаТЧ.Цена = СтрокаТЧ.Сумма / СтрокаТЧ.Количество;
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧАкцизныеМарки, СтрокаАкцизныеМарки);
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка <> &ЭтаСсылка
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Порядок КАК Порядок,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Порядок,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество";
	
	ДокументОбъект.Товары.Очистить();
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Магазин", "Магазин");
	СтруктураРеквизитов.Вставить("Номер", "Номер");
	СтруктураРеквизитов.Вставить("Дата", "Дата");
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтруктураРеквизитов);
	
	ДокументОбъект.НомерЧекаККМ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина);
	ДокументОбъект.НомерСмены = "1" + Формат(РеквизитыОснования.Дата, "ДФ=yyyyMMdd");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
		СтрокаТЧ.Цена = ЗапасыСервер.ЦенаПродажи(РеквизитыОснования.Магазин, ТекущаяДатаСеанса(), СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика, СтрокаТЧ.Упаковка, Истина);
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.КоличествоУпаковок;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСНаОснованииПеремещениеТоваров(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Штрихкод КАК Штрихкод,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи,
	|	ТабличнаяЧасть.Цена КАК Цена
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК АкцизнаяМарка
	|ИЗ
	|	Документ.ПеремещениеТоваров.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ТабличнаяЧастьАкцизныеМарки.КодАкцизнойМарки = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваров = МассивРезультатов[0].Выгрузить();
	ТаблицаАкцизныхМарок = МассивРезультатов[1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаТовары Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТовары);
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда 
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		Если НЕ СтрокаТЧ.Количество = 0 Тогда
			СтрокаТЧ.Цена = СтрокаТЧ.Сумма / СтрокаТЧ.Количество;
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
				СтрокаТЧАкцизныеМарки.АкцизнаяМарка		  = СтрокаАкцизныеМарки.АкцизнаяМарка;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЧекЕГАИСВозврат

Процедура ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) И Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения)) Тогда
		ДокументОбъект.ДокументОснование = ДанныеЗаполнения;
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Организация, Магазин, Номер, Дата, ДокументОснование");
		
		ДокументОбъект.ВидОперации      = Перечисления.ВидыОперацийЧекаЕГАИСВозврат.ВозвратОтЮридическогоЛицаСБезналичнойОплатой;
		ДокументОбъект.ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(РеквизитыОснования.Организация, РеквизитыОснования.Магазин);
		ДокументОбъект.НомерЧекаККМ     = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОснования.Номер, Истина, Истина));
		ДокументОбъект.СерийныйНомерККМ = СерийныйНомерККМ(РеквизитыОснования.Магазин);
		
		Если ЗначениеЗаполнено(РеквизитыОснования.ДокументОснование) Тогда
			НомерНакладной = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.ДокументОснование, "Номер");
			ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерНакладной, Истина, Истина));
		КонецЕсли;
		
		ЗаполнитьТоварыЧекаЕГАИСВозвратНаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения);
		
		Если ДокументОбъект.НомерСмены = 0 Тогда
			ДокументОбъект.НомерСмены = ДокументОбъект.НомерЧекаККМ;
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ЗаполнитьТоварыЧекаЕГАИСВозвратНаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЭтаСсылка"        , ДокументОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки КАК Порядок,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка КАК Упаковка,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Количество КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Цена КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.Штрихкод КАК Штрихкод,
	|	ТабличнаяЧасть.ДокументПродажи КАК ДокументПродажи,
	|	ТабличнаяЧасть.КлючСвязи КАК КлючСвязи,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))) КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТабличнаяЧасть.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Ссылка <> &ЭтаСсылка
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.Количество,
	|	ТабличнаяЧасть.Цена,
	|	ТабличнаяЧасть.Сумма,
	|	ТабличнаяЧасть.Штрихкод,
	|	ТабличнаяЧасть.ДокументПродажи,
	|	ТабличнаяЧасть.КлючСвязи
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьАкцизныеМарки.КлючСвязи КАК КлючСвязи,
	|	ШтрихкодыУпаковокТоваров.Ссылка КАК АкцизнаяМарка
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.АкцизныеМарки КАК ТабличнаяЧастьАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	|		ПО ТабличнаяЧастьАкцизныеМарки.КодАкцизнойМарки = ШтрихкодыУпаковокТоваров.ЗначениеШтрихкода
	|ГДЕ
	|	ТабличнаяЧастьАкцизныеМарки.Ссылка = &ДокументОснование";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаТоваров = МассивРезультатов[0].Выгрузить();
	ТаблицаАкцизныхМарок = МассивРезультатов[1].Выгрузить();
	
	ДокументОбъект.Товары.Очистить();
	
	Для Каждого СтрокаТовары Из ТаблицаТоваров Цикл
		
		СтрокаТЧ = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТовары);
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда 
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) Тогда
			ТипШтрихкодаТовара = МенеджерОборудованияКлиентСервер.ОпределитьТипШтрихкода(СтрокаТовары.Штрихкод);
			Если НЕ (ТипШтрихкодаТовара = "EAN13"
						ИЛИ ТипШтрихкодаТовара = "ITF14"
						ИЛИ ТипШтрихкодаТовара = "EAN8") Тогда
				СтрокаТЧ.Штрихкод = "";
			КонецЕсли;
		КонецЕсли;
		
		АкцизныеМарки = ТаблицаАкцизныхМарок.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТовары.КлючСвязи));
		
		Если АкцизныеМарки.Количество() <> 0 Тогда
			Для Каждого СтрокаАкцизныеМарки Из АкцизныеМарки Цикл
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧ.ИдентификаторСтроки;
				СтрокаТЧАкцизныеМарки.АкцизнаяМарка		  = СтрокаАкцизныеМарки.АкцизнаяМарка;
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТовары.ДокументПродажи) И ДокументОбъект.НомерСмены = 0 Тогда
			НомерНакладной = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовары.ДокументПродажи, "Номер");
			ДокументОбъект.НомерСмены = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НомерНакладной, Истина, Истина));
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДокументОбъект.Товары.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Нет данных для заполнения документа'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьОснованиеТТНВходящейЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВходящаяТТН.Ссылка КАК ТТН,
	|	ВходящаяТТН.ВерсияДанных КАК ТТНВерсияДанных,
	|	ПоступлениеТоваров.Ссылка КАК ДокументОснование,
	|	ПоступлениеТоваров.ВерсияДанных КАК ДокументОснованиеВерсияДанных
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ВходящаяТТН
	|		ПО ПоступлениеТоваров.ТТНВходящаяЕГАИС = ВходящаяТТН.Ссылка
	|ГДЕ
	|	ВходящаяТТН.ДокументОснование = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВходящаяТТН.Ссылка,
	|	ВходящаяТТН.ВерсияДанных,
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.ВерсияДанных
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ВходящаяТТН
	|		ПО ПеремещениеТоваров.ТТНВходящаяЕГАИС = ВходящаяТТН.Ссылка
	|ГДЕ
	|	ВходящаяТТН.ДокументОснование = НЕОПРЕДЕЛЕНО";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНВходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ТТН);
			Блокировка.Заблокировать();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ." + Выборка.ДокументОснование.Метаданные().Имя);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ДокументОснование);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.ТТН.ПолучитьОбъект();
			
			Если ДокументОбъект = Неопределено Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Если ДокументОбъект.ВерсияДанных <> Выборка.ТТНВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ДокументОснованиеОбъект = Выборка.ДокументОснование.ПолучитьОбъект();
			
			Если ДокументОснованиеОбъект.ВерсияДанных <> Выборка.ДокументОснованиеВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ДокументОбъект.ДокументОснование = Выборка.ДокументОснование;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.ТТН);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ТТНВходящаяЕГАИС,
				Выборка.ТТН,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруТТНИсходящейЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТИсходящиеТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	(ТабличнаяЧасть.Номенклатура = &Номенклатура
	|			ИЛИ ТабличнаяЧасть.КоличествоУпаковок = 0
	|			ИЛИ ТабличнаяЧасть.КоличествоФакт <> 0
	|				И НЕ ТабличнаяЧасть.Ссылка.ЕстьРасхождения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИсходящиеТТН.Ссылка КАК Ссылка,
	|	ВТИсходящиеТТН.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	УдалитьСоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	УдалитьСоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	ВТИсходящиеТТН КАК ВТИсходящиеТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ПО ВТИсходящиеТТН.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьСоответствиеНоменклатурыЕГАИС КАК УдалитьСоответствиеНоменклатурыЕГАИС
	|		ПО (ТабличнаяЧасть.АлкогольнаяПродукция = УдалитьСоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция)
	|ИТОГИ ПО
	|	Ссылка";
	
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ТТНИсходящаяЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект.ВерсияДанных <> ВыборкаПоДокументам.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ЕстьРасхождения = Ложь;
			Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
				Если СтрокаТЧ.КоличествоФакт <> 0 Тогда
					ЕстьРасхождения = Истина;
				КонецЕсли;
			КонецЦикла;
			
			ДокументОбъект.ЕстьРасхождения = ЕстьРасхождения;
			
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				СтрокаТЧ = ДокументОбъект.Товары[ВыборкаПоТоварам.НомерСтроки - 1];
				СтрокаТЧ.Номенклатура       = ВыборкаПоТоварам.Номенклатура;
				СтрокаТЧ.Характеристика     = ВыборкаПоТоварам.Характеристика;
				СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ТТНИсходящаяЕГАИС,
				ВыборкаПоДокументам.Ссылка,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьПорядокВСопоставленииНоменклатурыЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Порядок = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Порядок) КАК Порядок
	|ПОМЕСТИТЬ МаксимальныйПорядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ИсходныеДанные.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходныеДанные.Номенклатура КАК Номенклатура,
	|	ИсходныеДанные.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(МаксимальныйПорядок.Порядок, 0) КАК Порядок
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныйПорядок КАК МаксимальныйПорядок
	|		ПО ИсходныеДанные.АлкогольнаяПродукция = МаксимальныйПорядок.АлкогольнаяПродукция";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
		
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствиеНоменклатурыЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура"  , Выборка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Выборка.Характеристика);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Запись = НаборЗаписей[0];
			Запись.Порядок = Выборка.Порядок + 1;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать запись регистра сведений ""СоответствиеНоменклатурыЕГАИС""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС,
			                         Выборка.Основание,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок,
	|	КОЛИЧЕСТВО(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК КоличествоЗаписей
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(СоответствиеНоменклатурыЕГАИС.Номенклатура) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ИсходныеДанные.АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|ИТОГИ ПО
	|	АлкогольнаяПродукция";
	
	ВыборкаИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтог.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
		
			Порядок = 0;
			
			Отказ = Ложь;
			
			Выборка = ВыборкаИтог.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствиеНоменклатурыЕГАИС");
				ЭлементБлокировки.УстановитьЗначение("Номенклатура"  , Выборка.Номенклатура);
				ЭлементБлокировки.УстановитьЗначение("Характеристика", Выборка.Характеристика);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				
				НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
				НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
				НаборЗаписей.Прочитать();
				
				Если НаборЗаписей.Количество() = 0 Тогда
					Отказ = Истина;
					Прервать;
				КонецЕсли;
				
				Порядок = Порядок + 1;
				
				Запись = НаборЗаписей[0];
				Запись.Порядок = Порядок;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЦикла;
			
			Если Отказ Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать запись регистра сведений ""СоответствиеНоменклатурыЕГАИС""
			                            |по причине %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС,
			                         Выборка.Основание,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюСоответствиеНоменклатуры(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.УдалитьНоменклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|");
	
	ЭлементыКлассификатора = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ЭлементыКлассификатора);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюСоответствиеНоменклатуры(Параметры) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "Документ.ТТНИсходящаяЕГАИС") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ПолноеИмяОбъекта = "Справочник.КлассификаторАлкогольнойПродукцииЕГАИС";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка              КАК Ссылка,
	|	ДанныеДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	ВтСсылкиДляОбработки КАК ДанныеДляОбработки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтСсылкиДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СправочникОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				
				ЗафиксироватьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Если СправочникОбъект.ВерсияДанных <> Выборка.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура.Установить(СправочникОбъект.УдалитьНоменклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(СправочникОбъект.УдалитьХарактеристика);
			НаборЗаписей.Отбор.АлкогольнаяПродукция.Установить(Выборка.Ссылка);
			
			ЗаписьНабора = НаборЗаписей.Добавить();
			ЗаписьНабора.АлкогольнаяПродукция = Выборка.Ссылка;
			ЗаписьНабора.Номенклатура         = СправочникОбъект.УдалитьНоменклатура;
			ЗаписьНабора.Характеристика       = СправочникОбъект.УдалитьХарактеристика;
			ЗаписьНабора.Порядок              = 1;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			СправочникОбъект.УдалитьНоменклатура   = Неопределено;
			СправочникОбъект.УдалитьХарактеристика = Неопределено;
			СправочникОбъект.УдалитьСопоставлено   = Ложь;
			СправочникОбъект.УдалитьУпаковки.Очистить();
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент справочника: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.КлассификаторАлкогольнойПродукцииЕГАИС,
				Выборка.Ссылка,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсиюТТНИсходящаяЕГАИС(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.Номенклатура.Имя));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	(ТабличнаяЧасть.Номенклатура = &Номенклатура
	|	ИЛИ ТабличнаяЧасть.КоличествоУпаковок = 0
	|	ИЛИ (ТабличнаяЧасть.КоличествоФакт <> 0 И НЕ ТабличнаяЧасть.Ссылка.ЕстьРасхождения))
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюТТНИсходящаяЕГАИС(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ТТНИсходящаяЕГАИС";
	МетаданныеОбъекта = Метаданные.Документы.ТТНИсходящаяЕГАИС;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка                                    КАК Ссылка,
	|	ДанныеДляОбработки.Ссылка.ВерсияДанных                       КАК ВерсияДанных,
	|	ТабличнаяЧасть.НомерСтроки                                   КАК НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция                          КАК АлкогольнаяПродукция,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.УдалитьНоменклатура   КАК Номенклатура,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.УдалитьХарактеристика КАК Характеристика
	|ИЗ
	|	ВтСсылкиДляОбработки КАК ДанныеДляОбработки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ПО ТабличнаяЧасть.Ссылка = ДанныеДляОбработки.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|	
	|ИТОГИ ПО
	|	ДанныеДляОбработки.Ссылка
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтСсылкиДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоДокументам.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоДокументам.Ссылка);
				
				ЗафиксироватьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			Если ДокументОбъект.ВерсияДанных <> ВыборкаПоДокументам.ВерсияДанных Тогда
				
				ОтменитьТранзакцию();
				Продолжить;
				
			КонецЕсли;
			
			ЕстьРасхождения = Ложь;
			Для Каждого СтрокаТЧ Из ДокументОбъект.Товары Цикл
				Если СтрокаТЧ.КоличествоФакт <> 0 Тогда
					ЕстьРасхождения = Истина;
				КонецЕсли;
			КонецЦикла;
			
			ДокументОбъект.ЕстьРасхождения = ЕстьРасхождения;
			
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				СтрокаТЧ = ДокументОбъект.Товары[ВыборкаПоТоварам.НомерСтроки - 1];
				СтрокаТЧ.Номенклатура       = ВыборкаПоТоварам.Номенклатура;
				СтрокаТЧ.Характеристика     = ВыборкаПоТоварам.Характеристика;
				СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  ВыборкаПоДокументам.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ТТНИсходящаяЕГАИС,
				ВыборкаПоДокументам.Ссылка,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПоступлениеТоваров - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПоступлениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	&ПустаяСерия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваров.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И (Сопоставлено.Серия <> &ПустаяСерия)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПоступлениеТоваров", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяСерия", 
		ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Имя));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Функция проверяет наличие расхождений между ТТН и товарами перемещения.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПеремещениеТоваров - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И (Сопоставлено.Серия <> &ПустаяСерия)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	&ПустаяСерия,
	|	СУММА(ТабличнаяЧасть.Количество * ВЫБОР
	|			КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|				ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПеремещениеТоваров", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяСерия",
		ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа(Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Имя));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

Функция ЕстьМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура", ПродаетсяВРозлив = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|");
	
	Если ПродаетсяВРозлив <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ТабличнаяЧасть." + ИмяКолонки + ".ВидНоменклатуры.ПродаетсяВРозлив = &ПродаетсяВРозлив";
		Запрос.УстановитьПараметр("ПродаетсяВРозлив", ПродаетсяВРозлив);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьНеМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура", ПродаетсяВРозлив = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И НЕ ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|");
	
	Если ПродаетсяВРозлив <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ТабличнаяЧасть." + ИмяКолонки + ".ВидНоменклатуры.ПродаетсяВРозлив = &ПродаетсяВРозлив";
		Запрос.УстановитьПараметр("ПродаетсяВРозлив", ПродаетсяВРозлив);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьПереданныеЧекиЕГАИС(ДокументОснование, ЧекНаВозврат = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЧекЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекЕГАИС" + ?(ЧекНаВозврат, "Возврат", "") + " КАК ЧекЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ЧекЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ЧекЕГАИС.ДокументОснование = &ДокументОснование
	|	И СтатусыДокументовЕГАИС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияЕГАИС.ПереданВУТМ)";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция СерийныйНомерККМ(Магазин = Неопределено)
	
	Если Магазин = Неопределено Тогда
		УстановитьПривилегированныйРежим(Истина);
		Магазин = ПараметрыСеанса.ТекущийМагазин;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Результат = "";
	
	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключаемоеОборудованиеПараметрыРегистрации.Ссылка КАК Ссылка,
	|	ПодключаемоеОборудованиеПараметрыРегистрации.НомерСтроки КАК НомерСтроки,
	|	ПодключаемоеОборудованиеПараметрыРегистрации.НаименованиеПараметра КАК НаименованиеПараметра,
	|	ПодключаемоеОборудованиеПараметрыРегистрации.ЗначениеПараметра КАК ЗначениеПараметра
	|ИЗ
	|	Справочник.ПодключаемоеОборудование.ПараметрыРегистрации КАК ПодключаемоеОборудованиеПараметрыРегистрации
	|ГДЕ
	|	ПодключаемоеОборудованиеПараметрыРегистрации.Ссылка.РабочееМесто = &РабочееМесто
	|	И ПодключаемоеОборудованиеПараметрыРегистрации.НаименованиеПараметра = ""ЗаводскойНомерФН""";
	
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		Результат = Выборка.ЗначениеПараметра;
		Если ЗначениеЗаполнено(Результат) Тогда
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	НЕ КассыККМ.ПометкаУдаления
	|	И НЕ КассыККМ.Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|	И НЕ КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ККМOffline)
	|	И КассыККМ.РабочееМесто = &РабочееМестоККМ
	|	И КассыККМ.Магазин = &Магазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассыККМ.Наименование";
	
	Запрос.УстановитьПараметр("Магазин"        , Магазин);
	Запрос.УстановитьПараметр("РабочееМестоККМ", РабочееМесто);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить()[0].СерийныйНомер;
	КонецЕсли;
	
	Возврат ?(ПустаяСтрока(Результат), "1", Результат);
	
КонецФункции

Функция СформироватьНомерИсходящейТТН(Номер, Дата)
	
	НомерБезПрефиксов = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(Номер, Истина, Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаТТН", НачалоДня(Дата));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТТНИсходящаяЕГАИС.НомерТТН КАК НомерТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТТНИсходящаяЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО ТТНИсходящаяЕГАИС.Ссылка = СтатусыДокументовЕГАИС.Документ
	|ГДЕ
	|	ТТНИсходящаяЕГАИС.ДатаТТН = &ДатаТТН
	|	И НЕ ТТНИсходящаяЕГАИС.ПометкаУдаления";
	
	НомераТТН = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерТТН");
	
	Результат = НомерБезПрефиксов;
	
	Сч = 0;
	Пока НомераТТН.Найти(Результат) <> Неопределено Цикл
		Сч = Сч + 1;
		Результат = НомерБезПрефиксов + "-" + Формат(Сч, "ЧГ=0");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьДанныеПоАкцизнымМаркам(СтруктураДанных) Экспорт 
	
	Организация    = СтруктураДанных.Организация;
	Магазин        = СтруктураДанных.Магазин;
	Штрихкод       = СтруктураДанных.Штрихкод;
	КлючСвязи      = СтруктураДанных.КлючСвязи;
	Номенклатура   = СтруктураДанных.Номенклатура;
	Характеристика = СтруктураДанных.Характеристика;
	
	ЭтоАлкогольнаяПродукция = Номенклатура.АлкогольнаяПродукция;
	Если ЭтоАлкогольнаяПродукция Тогда 
		ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
							Организация,
							Магазин);
		
		Если ОрганизацияЕГАИС = Неопределено Тогда 
			ВызватьИсключение НСтр("ru='Не найдена сопоставленная организация ЕГАИС'");	
		КонецЕсли;
	КонецЕсли;

	МассивШтрихкодов = Новый Массив;
	МассивШтрихкодов.Добавить(Штрихкод);
	
	ШтрихкодыУпаковок = ШтрихкодированиеИС.ШтрихкодыУпаковок(МассивШтрихкодов);
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("КодАкцизнойМарки", 	Штрихкод);
	СтруктураЗаполнения.Вставить("КлючСвязи", 			КлючСвязи);
	
	Если ШтрихкодыУпаковок.Количество() = 0 Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ШтрихкодУпаковкиЕГАИС = ШтрихкодированиеЕГАИС.ПолучитьСгенерироватьАкцизнуюМарку(
									Штрихкод,
									Номенклатура,
									Характеристика);
		СтруктураЗаполнения.Вставить("АкцизнаяМарка", 		ШтрихкодУпаковкиЕГАИС);
		СтруктураЗаполнения.Вставить("ШтрихкодУпаковки", 	ШтрихкодУпаковкиЕГАИС);
	Иначе
		ШтрихкодУпаковкиЕГАИС = ШтрихкодыУпаковок[0].Ссылка;
		СтруктураЗаполнения.Вставить("АкцизнаяМарка", 		ШтрихкодУпаковкиЕГАИС);
		СтруктураЗаполнения.Вставить("ШтрихкодУпаковки", 	ШтрихкодУпаковкиЕГАИС);
	КонецЕсли;
	
	Если ЭтоАлкогольнаяПродукция Тогда
		Справка2 = Справка2АкцизнойМарки(ШтрихкодУпаковкиЕГАИС, ОрганизацияЕГАИС);
	Иначе 
		Справка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
	КонецЕсли;
	СтруктураЗаполнения.Вставить("Справка2", Справка2);
	
	Возврат СтруктураЗаполнения;
	
КонецФункции

Функция Справка2АкцизнойМарки(АкцизнаяМарка, ОрганизацияЕГАИС)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	АкцизныеМаркиЕГАИС.Справка2 КАК Справка2
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|ГДЕ
	|	АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС = &ОрганизацияЕГАИС
	|	И АкцизныеМаркиЕГАИС.АкцизнаяМарка = &АкцизнаяМарка");
	Запрос.УстановитьПараметр("АкцизнаяМарка",    АкцизнаяМарка);
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Справки2ЕГАИС.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Справка2;
	
КонецФункции

// Заполняет реквизит "Серия" в товарной табличной части
//
// Параметры:
// 		ТабличнаяЧасть - ДанныеФормыКоллекция, ТабличнаяЧасть - Товарная табличная часть документа
// 		ВыделенныеСтроки - Массив - Массив выделенных строк
// 		ПараметрыЗаполнения - Структура - Структура параметров заполнения
// 			Обязательные поля:
// 				"ОрганизацияЕГАИС" - СправочникСсылка.КлассификаторОрганизацийЕГАИС - Организация
// 				"ЗаполнятьБезЗапросаСправок" - Булево - Принудительное заполнение серий без запроса справок 1
// 			Необязательные поля:
// 				"ПоляЗаполнения" - Строка - Строка с перечислением заполняемых полей в таблице. Значение по умолчанию: "Серия".
// 				"КолонкиПоЗначению" - Структура - Структура для передачи в качестве параметра "КолонкиПоЗначению" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений"
// 				"ДругиеИменаКолонок" - Структура - Структура для передачи в качестве параметра "НовыеИменаКолонок" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений"
// 		СтруктураДействий - Структура - Стандартная структура действий со строками для вызова "ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ"
// 		
// Возвращаемое значение:
//   Структура - Структура с результатом выполнения функции.
//
Функция ЗаполнитьСгенерироватьСерии(ТабличнаяЧасть, ВыделенныеСтроки = Неопределено, ПараметрыЗаполнения = Неопределено, СтруктураДействий = Неопределено) Экспорт
	
	// Инициализация результирующей структуры
	Результат = Новый Структура("АдресМассиваЗапросов, ЗаполнениеЗавершено, СписокОшибок",
	Неопределено,
	Ложь,
	Неопределено);
	
	ДополнительныеКолонки = "";
	
	// Получение структуры параметров по умолчанию
	Параметры = Новый Структура(
	"ПоляЗаполнения, КолонкиПоЗначению, ДругиеИменаКолонок",
	"Серия", Новый Структура, Новый Структура);
	ОбщегоНазначенияРТКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыЗаполнения, Истина);
	
	// Получение выгрузки по табличной части
	Таблица = ОбщегоНазначенияРТ.ТаблицаЗначений(
	ТабличнаяЧасть,
	ВыделенныеСтроки,
	"НомерСтроки, Номенклатура, Характеристика, АлкогольнаяПродукция, Серия, Справка2" + ДополнительныеКолонки,
	Параметры.КолонкиПоЗначению,
	Параметры.ДругиеИменаКолонок);
	
	СтрокиБезНоменклатуры = Таблица.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого СтрокаБезНоменклатуры Из СтрокиБезНоменклатуры Цикл
		
		ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаБезНоменклатуры.НомерСтроки);
		
		Результат.ЗаполнениеЗавершено = Ложь;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
		"Объект.Товары.Номенклатура",
		ТекстСообщения, 
		Неопределено);
		
	КонецЦикла;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Получение запроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	Таблица.Справка2 КАК Справка2
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВидыНоменклатуры.АвтоматическиГенерироватьСерии КАК АвтоматическиГенерироватьСерии,
	|	ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВидыНоменклатуры.СрокГарантии КАК СрокГодности,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ЕСТЬNULL(ВидыНоменклатуры.ТочностьУказанияСрокаГодностиСерии, ЗНАЧЕНИЕ(Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоДней)) КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ВтВидыНоменклатуры
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ГДЕ
	|	ВидыНоменклатуры.АвтоматическиГенерироватьСерии = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	Справки2ЕГАИС.НомерСправки1 КАК НомерСправки1,
	|	ЕСТЬNULL(Справки1ЕГАИС.Ссылка, ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)) КАК Справка1,
	|	Справки1ЕГАИС.ДатаРозлива КАК Справка1ДатаРозлива,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК Производитель,
	|	ВтВидыНоменклатуры.СрокГодности КАК СрокГодности,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмеренияСрокаГодности,
	|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтВидыНоменклатуры.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ТаблицаТоварыПолная
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО ВтТовары.Справка2 = Справки2ЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ВтТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ВтТовары.Номенклатура = СпрНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки1ЕГАИС КАК Справки1ЕГАИС
	|		ПО (Справки2ЕГАИС.НомерСправки1 = Справки1ЕГАИС.РегистрационныйНомер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Характеристика,
	|	ВтТовары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|ГДЕ
	|	ВидыНоменклатуры.АвтоматическиГенерироватьСерии = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоварыПолная.НомерСправки1 КАК НомерСправки1
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ТаблицаТоварыПолная.Справка1 = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|	И (ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|			ИЛИ ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА)";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-1].Пустой() И НЕ ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок Тогда
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-1].Выбрать();
		
		МассивЗапросовСправок1 = Новый Массив;
		Пока Выборка.Следующий() Цикл
			
			ПараметрыЗапроса = Новый Структура;
			ПараметрыЗапроса.Вставить("Операция"         , Перечисления.ВидыДокументовЕГАИС.ЗапросСправки1);
			ПараметрыЗапроса.Вставить("ИмяПараметра"     , "");
			ПараметрыЗапроса.Вставить("ЗначениеПараметра", Выборка.НомерСправки1);
			ПараметрыЗапроса.Вставить("ОрганизацияЕГАИС" , ПараметрыЗаполнения.ОрганизацияЕГАИС);
			
			МассивЗапросовСправок1.Добавить(ПараметрыЗапроса);
			
		КонецЦикла;
		Результат.АдресМассиваЗапросов = ПоместитьВоВременноеХранилище(МассивЗапросовСправок1);
		Результат.ЗаполнениеЗавершено = Ложь;
		Возврат Результат
	КонецЕсли;
	
	Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-2].Пустой() Тогда
		Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-2].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = НСтр("ru = 'Для номенклатуры %Номенклатура% автоматическая генерация серий не настроена.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", Выборка.Номенклатура);
			
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Номенклатура",
			ТекстСообщения, 
			Неопределено);
			
		КонецЦикла;
		Результат.ЗаполнениеЗавершено = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
	|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаТоварыПолная.СрокГодности КАК СрокГодностиНоменклатуры,
	|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
	|	ТаблицаТоварыПолная.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтВидыНоменклатуры.ВидНоменклатуры,
	|	ТаблицаТоварыПолная.АлкогольнаяПродукция,
	|	ТаблицаТоварыПолная.Номенклатура,
	|	ТаблицаТоварыПолная.Характеристика,
	|	ТаблицаТоварыПолная.Справка2,
	|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива,
	|	ТаблицаТоварыПолная.СрокГодности,
	|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности,
	|	ТаблицаТоварыПолная.ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|ГДЕ
	|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА
	|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)";
	
	ТаблицаСрокиГодности = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСрокиГодности", ТаблицаСрокиГодности);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСрокиГодности.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаСрокиГодности.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТаблицаСрокиГодности.Номенклатура КАК Номенклатура,
	|	ТаблицаСрокиГодности.Характеристика КАК Характеристика,
	|	ТаблицаСрокиГодности.Справка2 КАК Справка2,
	|	ТаблицаСрокиГодности.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	|	ТаблицаСрокиГодности.СрокГодностиНоменклатуры КАК СрокГодностиНоменклатуры,
	|	ТаблицаСрокиГодности.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
	|	ТаблицаСрокиГодности.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ВТГоденДо
	|ИЗ
	|	&ТаблицаСрокиГодности КАК ТаблицаСрокиГодности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаСрокиГодности.Номенклатура,
	|	ТаблицаСрокиГодности.Характеристика,
	|	ТаблицаСрокиГодности.АлкогольнаяПродукция,
	|	ТаблицаСрокиГодности.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВЫБОР
	|		КОГДА ВтТовары.Справка1ДатаРозлива = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
	|			ТОГДА ВТГоденДо.Справка1ДатаРозлива
	|		ИНАЧЕ ВтТовары.Справка1ДатаРозлива
	|	КОНЕЦ КАК Справка1ДатаРозлива,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтТовары.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ПОМЕСТИТЬ ВтТоварыКонечная
	|ИЗ
	|	ТаблицаТоварыПолная КАК ВтТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
	|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоденДо КАК ВТГоденДо
	|		ПО ВтТовары.Номенклатура = ВТГоденДо.Номенклатура
	|			И ВтТовары.Характеристика = ВТГоденДо.Характеристика
	|			И ВтТовары.АлкогольнаяПродукция = ВТГоденДо.АлкогольнаяПродукция
	|			И ВтТовары.Справка2 = ВТГоденДо.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтроки,
	|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВтТовары.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтТовары.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ВтТоварыКонечная КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|				ТОГДА ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтТовары.Справка2 КАК Справка2,
	|	ВтТовары.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
	|	ВтТовары.Производитель КАК Производитель,
	|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
	|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
	|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
	|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВтТовары.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	ВтТоварыКонечная КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА
	|					ТОГДА СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	СерииНоменклатуры.Ссылка ЕСТЬ NULL
	|	И ВЫБОР
	|			КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА
	|				ТОГДА ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаГенерацияСерий = ПакетРезультатов[ПакетРезультатов.Количество()-1].Выгрузить();
	ТаблицаГенерацияСерий.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацияСерий.Индексы.Добавить("ВидНоменклатуры, Справка2, Справка1ДатаРозлива, Производитель");
	Для Каждого ТекСтрока Из ТаблицаГенерацияСерий Цикл
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(ТекСтрока);
		Попытка
			НоваяСерия.Записать();
			ТекСтрока.Серия = НоваяСерия.Ссылка;
			Результат.ЗаполнениеЗавершено = Истина;
		Исключение
			Результат.ЗаполнениеЗавершено = Ложь;
			
			ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.СерииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Серия",
			ТекстСообщения, 
			Неопределено);
		КонецПопытки;
	КонецЦикла;
	
	ВыборкаЗаполнениеСерий = ПакетРезультатов[ПакетРезультатов.Количество()-2].Выбрать();
	Пока ВыборкаЗаполнениеСерий.Следующий() Цикл
		СтрокаТовары = ТабличнаяЧасть[ВыборкаЗаполнениеСерий.НомерСтроки-1];
		Если ЗначениеЗаполнено(ВыборкаЗаполнениеСерий.Серия) Тогда
			СтрокаТовары.Серия = ВыборкаЗаполнениеСерий.Серия;
			Результат.ЗаполнениеЗавершено = Истина;
		Иначе
			ПараметрыПоиска = Новый Структура("ВидНоменклатуры", ВыборкаЗаполнениеСерий.ВидНоменклатуры);
			Если ВыборкаЗаполнениеСерий.ИспользоватьДатуПроизводстваСерии Тогда
				ПараметрыПоиска.Вставить("Справка1ДатаРозлива", ВыборкаЗаполнениеСерий.Справка1ДатаРозлива);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьПроизводителяЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Производитель", ВыборкаЗаполнениеСерий.Производитель);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСправку2ЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Справка2", ВыборкаЗаполнениеСерий.Справка2);
			КонецЕсли;
			НайденныеСтроки = ТаблицаГенерацияСерий.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаТовары.Серия = НайденныеСтроки[0].Серия;
				Результат.ЗаполнениеЗавершено = Истина;
			Иначе
				Результат.ЗаполнениеЗавершено = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(СтрокаТовары, СтруктураДействий, Неопределено);
		
	КонецЦикла;
	
	Возврат Результат
	
КонецФункции

// Функция - Годен до по дате производства
//
// Параметры:
//  ДатаПрозводства					 - Дата 
//  СрокГодности					 - Число 
//  ЕдиницаИзмеренияСрокаГодности	 - ПеречислениеСсылка.ЕдиницыИзмеренияВремени 
// 
// Возвращаемое значение:
//  Дата 
//
Функция ГоденДоПоДатеПроизводства(ДатаПроизводства, СрокГодности, ЕдиницаИзмеренияСрокаГодности) Экспорт
	
	ГоденДо = '00010101';
	
	Если Не ЗначениеЗаполнено(ДатаПроизводства)
		Или Не ЗначениеЗаполнено(СрокГодности) Тогда
		Возврат ГоденДо;
	КонецЕсли;
		
	Возврат ГоденДо;
	
КонецФункции

// Заполняет служебные реквизиты в табличной части "Товары" в процедурах ПриСозданииНаСервере
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма
//  ИмяКолонкиКоличество - Строка - Имя колонки "Количество"
//
Процедура АкцизныеМаркиЗаполнитьСлужебныеРеквизиты(Форма, ИмяКолонкиКоличество = "Количество") Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Товары = Источник.Товары.Выгрузить();
	ДополнениеКИндексу = 0;
	Если Товары.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		
		ДополнениеКИндексу = 1;
		Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		
		КоличествоСтрок = Товары.Количество() - 1;
		Для НомерСтроки = 0 По КоличествоСтрок Цикл
			Товары[НомерСтроки].НомерСтроки = НомерСтроки;
		КонецЦикла;
		
	КонецЕсли;
	
	ОрганизацияЕГАИС = Источник.ОрганизацияЕГАИС;
	
	ШтрихкодыУпаковок = АкцизныеМаркиЕГАИС.ШтрихкодыУпаковок(Источник, ОрганизацияЕГАИС, "НоменклатураЕГАИС");
	ШтрихкодыУпаковок.МаркированныеТовары.Индексы.Добавить("ИдентификаторСтроки");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.НоменклатураЕГАИС КАК АлкогольнаяПродукция,
	|	Т.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ) КАК МаркируемаяАлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = Источник.Товары[Выборка.НомерСтроки - 1 + ДополнениеКИндексу];
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
		КоличествоАкцизныхМарок = ШтрихкодыУпаковок.МаркированныеТовары.НайтиСтроки(ПараметрыОтбора).Количество();
		
		СтрокаТЧ.МаркируемаяАлкогольнаяПродукция = Выборка.МаркируемаяАлкогольнаяПродукция;
		СтрокаТЧ.КоличествоАкцизныхМарок = КоличествоАкцизныхМарок;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(СтрокаТЧ, ИмяКолонкиКоличество);
		
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "АдресСоответствияАкцизныхМарок") Тогда
		
		ВложенныеШтрихкоды = Новый Соответствие;
		АкцизныеМаркиЕГАИС.ПроверитьИЗаполнитьВложенныеШтрихкоды(ШтрихкодыУпаковок.ДеревоУпаковок.Строки, ВложенныеШтрихкоды, Новый Соответствие);
		
		Если ЭтоАдресВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок) Тогда
			ПоместитьВоВременноеХранилище(ВложенныеШтрихкоды, Форма.АдресСоответствияАкцизныхМарок);
		Иначе
			Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(ВложенныеШтрихкоды, Форма.УникальныйИдентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЧека(ДокументСсылка) Экспорт
	
	СтруктураКассыККМ = Новый Структура;
	СтруктураКассыККМ.Вставить("ИспользоватьБезПодключенияОборудования");
	СтруктураКассыККМ.Вставить("ТипОборудования");
	СтруктураКассыККМ.Вставить("ПодключаемоеОборудование");
	
	ПараметрыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка.КассаККМ, СтруктураКассыККМ);
	ПараметрыУстройства = МенеджерОборудованияВызовСервера.ПолучитьПараметрыУстройства(ПараметрыКассыККМ.ПодключаемоеОборудование);
	Если ПараметрыУстройства = Неопределено Тогда
		НомерЧека     = ДокументСсылка.НомерЧекаККМ;
		НомерСмены    = ДокументСсылка.НомерСменыККМ;
		СерийныйНомер = ПараметрыКассыККМ.ПодключаемоеОборудование.СерийныйНомер;
	Иначе
		НомерЧека     = ДокументСсылка.НомерЧекаККМ;
		НомерСмены    = ДокументСсылка.НомерСменыККМ;
		СерийныйНомер = ПараметрыУстройства.ЗаводскойНомерФН;
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомерЧека",     НомерЧека);
	ВозвращаемоеЗначение.Вставить("НомерСмены",    НомерСмены);
	ВозвращаемоеЗначение.Вставить("СерийныйНомер", СерийныйНомер);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура ОтменитьСтатусыУпаковок(ДокументСсылка) Экспорт 
	
	Для Каждого СтрокаТЧ Из ДокументСсылка.АкцизныеМарки Цикл
		
		ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
						ДокументСсылка.Организация,
						ДокументСсылка.Магазин);
		
		ДанныеЗаписиСтатуса = РегистрыСведений.АкцизныеМаркиЕГАИС.ПоляЗаписиСтатусаУпаковки();
		ДанныеЗаписиСтатуса.ОрганизацияЕГАИС     = ОрганизацияЕГАИС;
		ДанныеЗаписиСтатуса.АкцизнаяМарка        = СтрокаТЧ.АкцизнаяМарка;
		ДанныеЗаписиСтатуса.Справка2             = СтрокаТЧ.Справка2;
		ДанныеЗаписиСтатуса.АлкогольнаяПродукция = СтрокаТЧ.Справка2.АлкогольнаяПродукция;
		Если ЗначениеЗаполнено(СтрокаТЧ.ЧастичноеВыбытиеКоличество)
			И Не СтрокаТЧ.ВыбытиеБутылки Тогда
			ДанныеЗаписиСтатуса.Статус = Перечисления.СтатусыАкцизныхМарок.ВскрытаяБутылка;
		Иначе
			ДанныеЗаписиСтатуса.Статус = Перечисления.СтатусыАкцизныхМарок.ВНаличии;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ЧастичноеВыбытиеКоличество) Тогда
			ДанныеЗаписиСтатуса.КоличествоЧастичногоВыбытия = -СтрокаТЧ.ЧастичноеВыбытиеКоличество;
		КонецЕсли;
		
		ДанныеЗаписиСтатуса.Основание = ДокументСсылка;
		РегистрыСведений.АкцизныеМаркиЕГАИС.ВыполнитьЗаписьВРегистр(ДанныеЗаписиСтатуса);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СерииНоменклатуры

Функция ПараметрыУказанияСерийТТНИсходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНИсходящаяЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийТТНВходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Магазины") Тогда
		
		ПараметрыУказанияСерий.ИмяПоляМагазин = "ТорговыйОбъект";
		ПараметрыСерийСклада = Новый Структура;
		ПараметрыСерийСклада.Вставить("ИспользоватьСерииНоменклатуры", ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры"));
		ПараметрыСерийСклада.Вставить("УчитыватьСебестоимостьПоСериям", Ложь);
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению;
		ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийТТНВходящейЕГАИС.ВозвратОтПокупателя Тогда
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента;
		Иначе
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика;
		КонецЕсли;
	
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(СкладскаяОперация);
		
	Иначе
		
		ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Ложь;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИСВозврат(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИСВозврат";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктПостановкиНаБалансЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктПостановкиНаБалансЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктСписанияЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктСписанияЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийПередачаВРегистр2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаВРегистр2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийВозвратИзРегистра2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратИзРегистра2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСопоставлениеКлассификаторовЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Обработка.СопоставлениеКлассификаторовЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийШтрихкодыУпаковокТоваров(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Справочник.ШтрихкодыУпаковокТоваров";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 2
		|				ИНАЧЕ 21
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШтрихкодыУпаковокТоваров(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 13
		|				ИНАЧЕ 13
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСоответствиеНоменклатурыЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 13
		|				ИНАЧЕ 13
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТТНВходящаяЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары." + ПараметрыУказанияСерий.ИмяПоляКоличество + " КАК Количество,
	|	Товары.СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|					И &ПриемкаОтПоставщика
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоВозвратуОтКлиента
	|					И &ПриемкаПоВозвратуОтКлиента
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПеремещению
	|					И &ПриемкаПоПеремещению)
	|				ТОГДА ВЫБОР
	|						КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|							ТОГДА 2
	|						ИНАЧЕ 1
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|			ПО ПолитикиУчетаСерий.Магазин = Магазины.Ссылка
	|		ПО (ПолитикиУчетаСерий.Магазин = &Магазин)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет свойство "Склад" в структуре параметров заполнения серий
//
// Параметры:
// 	Объект - ДокументОбъект, ДанныеФормыКоллекция - объект, содержащий значение склада
//  ПараметрыЗаполнения - Структура - Структура параметров заполнения серий
//
Процедура ЗаполнитьПараметрЗаполненияСклад(Объект, ПараметрыЗаполнения) Экспорт

КонецПроцедуры // ЗаполнитьПараметрЗаполненияСклад()

#КонецОбласти

#Область ДанныеДокументаОснования

Процедура СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СформироватьДанныеОснованияВозвратаТоваровПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		СформироватьДанныеОснованияВозвратТоваровОтПокупателя(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		СформироватьДанныеОснованияОтчетаОРозничныхПродажах(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		СформироватьДанныеОснованияОприходованияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		СформироватьДанныеОснованияПередачаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		СформироватьДанныеОснованияПеремещенияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		СформироватьДанныеОснованияПересортицаТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		
		СформироватьДанныеОснованияРеализацияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		СформироватьДанныеОснованияСборкиТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		СформироватьДанныеОснованияСписаниеТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	КонецЕсли;
	
	ТаблицаДанных.Индексы.Добавить("Номенклатура, Характеристика");
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияСписаниеТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|			ПО (ТабличнаяЧасть.Номенклатура = ОформленныеТовары.Номенклатура)
	|				И (ТабличнаяЧасть.Характеристика = ОформленныеТовары.Характеристика)
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияСборкиТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.СборкаТоваров КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияРеализацияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И (СправочникВидыАлкогольнойПродукции.Маркируемый
	|			ИЛИ НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив)
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.РеализацияТоваров.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И (СправочникВидыАлкогольнойПродукции.Маркируемый
	|			ИЛИ НЕ СправочникНоменклатура.ВидНоменклатуры.ПродаетсяВРозлив)
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияОприходованияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияПересортицаТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	МетаданныеДокументаЕГАИС = ДокументЕГАИС.Метаданные();
	ИмяДокументаЕГАИС = МетаданныеДокументаЕГАИС.Имя;
	
	ИмяТаблицыШапки  = "Документ." + ИмяДокументаЕГАИС;
	ИмяТаблицыТовары =  "Документ." + ИмяДокументаЕГАИС + ".Товары";
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	&ИмяТаблицыШапки КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		&ИмяТаблицыТовары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыШапки", ИмяТаблицыШапки);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыТовары", ИмяТаблицыТовары);
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы[ИмяДокументаЕГАИС].КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияПередачаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияОтчетаОРозничныхПродажах(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры 

Процедура СформироватьДанныеОснованияВозвратаТоваровПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.ВозвратТоваровПоставщику.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияВозвратТоваровОтПокупателя(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	СУММА(ЕСТЬNULL(ТаблицаСерии.Количество, ТаблицаТовары.Количество)) КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Серии КАК ТаблицаСерии
	|		ПО (ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка)
	|			И (ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЕСТЬNULL(ТаблицаСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-СУММА(ОформленныеТовары.Количество)
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия";
	
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИСВозврат.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияПеремещенияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|			ПО (ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка)
	|				И (ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|				И (ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура,
	|		ТабличнаяЧасть.Характеристика,
	|		ТабличнаяЧасть.Серия,
	|		ТабличнаяЧасть.Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС = СправочникВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

// Создается номенклатура
//
// Параметры:
//  АдресПараметровСозданияНоменклатуры - адрес временного хранилища
//
// Возращаемое значение:
//  Массив
//
Функция СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры) Экспорт
	
	СозданнаяНоменклатура = Новый Массив;
	
	ПараметрыСозданияНоменклатуры = ПолучитьИзВременногоХранилища(АдресПараметровСозданияНоменклатуры);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого АлкогольнаяПродукцияСписка Из ПараметрыСозданияНоменклатуры.МассивЭлементов Цикл
		
		РеквизитыАлкогольнойПродукции = ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукцияСписка);
		
		НоменклатураОбъект  = Справочники.Номенклатура.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоменклатураОбъект, РеквизитыАлкогольнойПродукции,, "Производитель");
		
		НоменклатураОбъект.Родитель             = ПараметрыСозданияНоменклатуры.Родитель;
		НоменклатураОбъект.АлкогольнаяПродукция = Истина;
		НоменклатураОбъект.ОсобенностьУчета     = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция;
		НоменклатураОбъект.ВидНоменклатуры      = ПараметрыСозданияНоменклатуры.ВидНоменклатуры;
		НоменклатураОбъект.НаборУпаковок        = ПараметрыСозданияНоменклатуры.НаборУпаковок;
		НоменклатураОбъект.ЕдиницаИзмерения     = ПараметрыСозданияНоменклатуры.ЕдиницаИзмерения;
		НоменклатураОбъект.СтавкаНДС            = ПараметрыСозданияНоменклатуры.СтавкаНДС;
		НоменклатураОбъект.ТоварнаяГруппа       = ПараметрыСозданияНоменклатуры.ТоварнаяГруппа;
		НоменклатураОбъект.ЦеноваяГруппа        = ПараметрыСозданияНоменклатуры.ЦеноваяГруппа;
		НоменклатураОбъект.СтранаПроисхождения  = ПараметрыСозданияНоменклатуры.СтранаПроисхождения;
		
		ТекстОшибкиПроизводитель = "";
		ТекстОшибкиИмпортер = "";
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ПроизводительЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Производитель) Тогда
				Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
					НоменклатураОбъект.Производитель = РеквизитыАлкогольнойПродукции.Производитель;
				Иначе
					НоменклатураОбъект.ПроизводительИмпортерАлкогольнойПродукции = РеквизитыАлкогольнойПродукции.Производитель;
				КонецЕсли;
			Иначе
				ТекстОшибкиПроизводитель = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного производителя.'");
				ТекстОшибкиПроизводитель = СтрЗаменить(ТекстОшибкиПроизводитель, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Импортер) Тогда
				НоменклатураОбъект.ПроизводительИмпортерАлкогольнойПродукции = РеквизитыАлкогольнойПродукции.Импортер;
			Иначе
				ТекстОшибкиИмпортер = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного импортера.'");
				ТекстОшибкиИмпортер = СтрЗаменить(ТекстОшибкиИмпортер, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ОбъемДАЛ) Тогда
			ПродаетсяВРозлив = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСозданияНоменклатуры.ВидНоменклатуры, "ПродаетсяВРозлив");
			Если ПродаетсяВРозлив = Истина Тогда
				НоменклатураОбъект.ОбъемДАЛ = 0.1;
			КонецЕсли;
		КонецЕсли;
		
		НоменклатураОбъект.Записать();
		
		Если НЕ ПустаяСтрока(ТекстОшибкиПроизводитель) Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибкиПроизводитель, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстОшибкиИмпортер) Тогда
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибкиИмпортер, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		Запись.Номенклатура = НоменклатураОбъект.Ссылка;
		Запись.АлкогольнаяПродукция = АлкогольнаяПродукцияСписка;
		Запись.Порядок = 1;
		Запись.Записать();
		
		СозданнаяНоменклатура.Добавить(НоменклатураОбъект.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданнаяНоменклатура;
	
КонецФункции

Функция ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Наименование,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.НаименованиеПолное,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Объем / 10 КАК ОбъемДАЛ,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Крепость,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции КАК ВидАлкогольнойПродукцииЕГАИС,
	|	ВЫБОР
	|		КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Производитель.Сопоставлено
	|			ТОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Производитель.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Производитель,
	|	ВЫБОР
	|		КОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Импортер.Сопоставлено
	|			ТОГДА КлассификаторАлкогольнойПродукцииЕГАИС.Импортер.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Импортер,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК ПроизводительЕГАИС,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Импортер КАК ИмпортерЕГАИС
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
	
КонецФункции

// Функция - Поле коэффициент пересчета неупакованной продукции
//
// Параметры:
//  ИмяТаблицы - Строка - имя таблицы запроса-источника
// Возвращаемое значение:
//  Строка - Поле коэффициента пересчета неупакованной алкогольной продукции,
//  при вызове заполнения библиотечных документов
//
Функция ПолеКоэффициентПересчетаНеупакованнойПродукции(ИмяТаблицы) Экспорт
	
	Возврат СтрШаблон("ЕСТЬNULL(%1.Номенклатура.ОбъемДАЛ, 0)",ИмяТаблицы);
	
КонецФункции

// Возвращает структуру параметров заполнения серий.
//
// Возвращаемое значение:
//	Структура - Структура со свойствами:
//		* ПараметрыУказанияСерий	- Структура				- Состав полей определен в функции 
//																НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//		* Склад						- ОпределяемыйТип.Склад	- Склад, на котором осуществляется серийный учет.
//
Функция ПараметрыЗаполненияСерий() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("ОрганизацияЕГАИС",			Неопределено);
	ПараметрыЗаполнения.Вставить("ЗаполнятьБезЗапросаСправок",	Ложь);
	ПараметрыЗаполнения.Вставить("ПараметрыУказанияСерий",		Неопределено);
	ПараметрыЗаполнения.Вставить("Склад",						Неопределено);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ОрганизацияЕГАИСПоОрганизацииИКассеККМ(Организация, КассаККМ) Экспорт 
	
	Возврат Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
		Организация,
		КассаККМ.Магазин);
	
КонецФункции

Процедура ЗаполнитьОсновныеРеквизитыОбъекта(ДокументОбъект)
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.ТорговыйОбъект = ЗначениеНастроекПовтИсп.МагазинПоУмолчанию(ДокументОбъект.ТорговыйОбъект);
	ДокументОбъект.Организация = ЗначениеНастроекПовтИсп.ОрганизацияПоУмолчанию(
		ДокументОбъект.Организация, ДокументОбъект.Ответственный);
КонецПроцедуры

Функция ЗаполнитьТаблицуАкцизныеМарки(СтруктураДанных, ИмяРеквизитаМагазин = "Магазин") Экспорт 
	
	Адрес                   = СтруктураДанных.Адрес;
	ДополнительныеПараметры = СтруктураДанных.ДополнительныеПараметры;
	Номенклатура            = СтруктураДанных.Номенклатура;
	Характеристика          = СтруктураДанных.Характеристика;
	Объект                  = СтруктураДанных.Объект;
	
	Организация = Неопределено;
	Если СтруктураДанных.Свойство("Организация") И Не СтруктураДанных.Организация = Неопределено Тогда
		Организация = СтруктураДанных.Организация;
	Иначе 
		Организация = Объект.Организация;
	КонецЕсли;
	
	ТаблицаАкцизныеМарки = Объект.АкцизныеМарки;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("КлючСвязи", ДополнительныеПараметры.ТекущийКлючСвязи);

	МассивАкцизныхМарок = ТаблицаАкцизныеМарки.НайтиСтроки(СтруктураПоиска);

	Для Каждого СтрокаАкцизнаяМарка Из МассивАкцизныхМарок Цикл
		ТаблицаАкцизныеМарки.Удалить(СтрокаАкцизнаяМарка);
	КонецЦикла;
	
	КоличествоУпаковок = 0;
	НазваниеКолонкиШтрихкода = "";
	ТаблицаМарок = ПолучитьИзВременногоХранилища(Адрес);
	Если ТипЗнч(ТаблицаМарок) = Тип("Структура") Тогда 
		ТаблицаМарок = ТаблицаМарок.ТаблицаШтрихкодовВерхнегоУровня;
		НазваниеКолонкиШтрихкода = "Штрихкод";
	Иначе 
		НазваниеКолонкиШтрихкода = "КодАкцизнойМарки";
	КонецЕсли;
	
	Для Каждого СтрокаМарки Из ТаблицаМарок Цикл
		
		Штрихкод = ВРег(СтрокаМарки[НазваниеКолонкиШтрихкода]);
		
		СтруктураШтрихкодУпаковки = ОбщегоНазначенияРТКлиентСервер.СтруктураШтрихкодУпаковки();
		СтруктураШтрихкодУпаковки.Организация    = Организация;
		СтруктураШтрихкодУпаковки.Магазин        = Объект[ИмяРеквизитаМагазин];
		СтруктураШтрихкодУпаковки.Штрихкод       = Штрихкод;
		СтруктураШтрихкодУпаковки.КлючСвязи      = ДополнительныеПараметры.ТекущийКлючСвязи;
		СтруктураШтрихкодУпаковки.Номенклатура   = Номенклатура;
		СтруктураШтрихкодУпаковки.Характеристика = Характеристика;
		
		ДанныеШтрихкодаУпаковки = ИнтеграцияЕГАИСРТ.СформироватьДанныеПоАкцизнымМаркам(СтруктураШтрихкодУпаковки);
		
		СтрокаАкцизнаяМарка = ТаблицаАкцизныеМарки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаАкцизнаяМарка, ДанныеШтрихкодаУпаковки);
		КоличествоУпаковок = КоличествоУпаковок + 1;
	КонецЦикла;
	
	РезультатЗаполнения = Новый Структура;
	РезультатЗаполнения.Вставить("КоличествоУпаковок", КоличествоУпаковок);
	РезультатЗаполнения.Вставить("Штрихкод"          , Штрихкод);
	РезультатЗаполнения.Вставить("АкцизныеМарки"     , ТаблицаАкцизныеМарки);
	
	Возврат РезультатЗаполнения;
	
КонецФункции

// Заполняет свойство "ТТНВходящаяЕГАИС" в документе "Перемещение товаров"
//
Процедура ПриСозданииТТНВходящаяНаОснованииПеремещенеТоваровОбработчик(Источник) Экспорт
	
	Если Не Источник.ДокументОснование = Неопределено И 
		ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		
		ПеремещениеСсылка = Источник.ДокументОснование;
		
		Если ОбщегоНазначения.СсылкаСуществует(ПеремещениеСсылка) Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			
			ПеремещениеОбъект = ПеремещениеСсылка.ПолучитьОбъект();
			ПеремещениеОбъект.ТТНВходящаяЕГАИС = Источник.Ссылка;
			ПеремещениеОбъект.Записать();
			
			УстановитьПривилегированныйРежим(Ложь);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ВозвратИзРегистра2ЕГАИС

#КонецОбласти

