#Область ПрограммныйИнтерфейс

Процедура ОбработкаПрерыванияОперацииПлатежнойСистемы(Форма, Отказ = Ложь) Экспорт
	
	Если Форма.СанкционированноеЗакрытие Тогда	
		Возврат;
	КонецЕсли;
	
	ПродолжитьПрерываниеОперации = Новый ОписаниеОповещения("ОбработатьПрерываниеПроцессаЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	ГруппаСтраницы	 			 = Форма.Элементы.ГруппаСтраницы;
	ПояснениеКОшибке 			 = НСтр("ru = 'Хотите закрыть окно с потерей данных?'"); 
	
	Если ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаЗавершение Тогда
		
		Отказ = Истина;
		
		Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
			
			ТекстОшибки = НСтр("ru = 'Оплата проведена по платежной системе.'");
			
			Если Форма.НастройкиИнтеграции.ОтменаОплаты Тогда
				
				ПояснениеКОшибке				= НСтр("ru = 'Необходимо выполнить сторно оплаты.'"); 
				ПродолжитьПрерываниеОперации    = Неопределено;
				
			КонецЕсли;
			
		Иначе
			ТекстОшибки = НСтр("ru = 'Возврат проведен по платежной системе.'");
		КонецЕсли;
		
	ИначеЕсли Не Форма.Оплачивается 
			И (ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаВыполняется
				ИЛИ ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаQRКод) Тогда	
		
		Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
			
			ТекстОшибки = НСтр("ru = 'При закрытии QR-код станет неактуальным для проведения оплаты.'");
			Отказ 		= Истина;
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ 
		И ЗначениеЗаполнено(ТекстОшибки) Тогда
			
		ВыводитьПредупреждение = Форма.Элементы.Найти("ГруппаВопросПредупреждение") = Неопределено;
		
		Если ВыводитьПредупреждение Тогда
			
			ВывестиИнформацию(Форма, ТекстОшибки, ПояснениеКОшибке, , ПродолжитьПрерываниеОперации);
				
		Иначе
				
			ВывестиИнформацию(Форма, ТекстОшибки, ПояснениеКОшибке, "ВопросПредупреждение");
				
		КонецЕсли;
			
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗапуститьФоновыеЗадания(Форма) Экспорт
	
	Форма.Элементы.ФормаЗавершитьОплату.Видимость = Истина;
	
	Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
	
		Если ЗначениеЗаполнено(Форма.ВидОплатыПлатежнойСистемы) Тогда
			
			ГруппаСтраницы	 			    = Форма.Элементы.ГруппаСтраницы;
			ГруппаСтраницы.ТекущаяСтраница  = Форма.Элементы.ГруппаДлительнаяОперация;
			
			Форма.Элементы.ФормаЗавершитьОплату.Видимость = Ложь;
			
			Если Форма.Оплачивается Тогда
				Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
			Иначе
				Форма.ПодключитьОбработчикОжидания("ПолучитьИдентификаторОплаты", 0.1, Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Форма.ВидОплатыПлатежнойСистемы) Тогда
		
			Если Форма.Оплачивается Тогда
		
				ГруппаСтраницы	 			    = Форма.Элементы.ГруппаСтраницы;
				ГруппаСтраницы.ТекущаяСтраница  = Форма.Элементы.ГруппаДлительнаяОперация;
		
				Форма.Элементы.ФормаЗавершитьОплату.Видимость = Ложь;
			
				Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			
КонецПроцедуры

Функция ПрерватьОперацию(Форма) Экспорт
	
	Отказ 				= Ложь;
	ПараметрыПроцедуры	= Новый Структура("ДокументОплаты, Интеграция, ИдентификаторЗаданияФормированияQRКода, ИдентификаторЗаданияПроверкиСтатуса, ИдентификаторЗаданияВозврата");
		
	ЗаполнитьЗначенияСвойств(ПараметрыПроцедуры, Форма);
		
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ОтменитьОплату(Форма, 
																ПараметрыПроцедуры.ДокументОплаты, 
																ПараметрыПроцедуры.Интеграция, 
																ПараметрыПроцедуры.ИдентификаторЗаданияФормированияQRКода, 
																ПараметрыПроцедуры.ИдентификаторЗаданияПроверкиСтатуса, 
																ПараметрыПроцедуры.ИдентификаторЗаданияВозврата, 
																,
																Отказ);
		
	Форма.СанкционированноеЗакрытие = Истина;
	
	Возврат Не Отказ;
	
КонецФункции

Процедура ВывестиИнформацию(Форма, ЗаголовокИнформации, ТекстИнформации, СтраницаФормы = Неопределено, ОбработчикОповещения = Неопределено, ОтветПоУмолчанию = "Нет") Экспорт
	
	ВыводитьПредупреждение = НЕ ЗначениеЗаполнено(СтраницаФормы);
	
	Если ВыводитьПредупреждение Тогда
		
		Если ОбработчикОповещения <> Неопределено Тогда
			ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМКУправляемой(ЗаголовокИнформации, ТекстИнформации, ОтветПоУмолчанию, ОбработчикОповещения);
		Иначе
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстИнформации);
		КонецЕсли;
		
	Иначе
		
		Форма.Элементы["ДекорацияЗаголовок" + СтраницаФормы].Заголовок = ЗаголовокИнформации;
		Форма.Элементы["ДекорацияТекст" + СтраницаФормы].Заголовок     = ТекстИнформации;
		
		ГруппаСтраницы										 = Форма.Элементы["Группа" + СтраницаФормы].Родитель;
		ГруппаСтраницы.ТекущаяСтраница 			 			 = Форма.Элементы["Группа" + СтраницаФормы];
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет открытие формы настройка кассового qr-кода СБП
//
// Параметры:
//  КассаККМ 		- ОпределяемыйТип.КассаККМРМК - касса qr-кода;
//  Организация 	- ОпределяемыйТип.ОрганизацияРМК - организация кассового qr-кода;
//  ТорговыйОбъект 	- ОпределяемыйТип.ТорговыйОбъектРМК - торговый объект кассового qr-кода;
//  ОповещениеОЗакрытииФормы - ОписаниеОповещения - оповещение при закрытии формы
//	РазрешитьВыборКассыККМ - Булево - определяет возможность установки несколько кодов для разных касс
//
//@skip-warning
Процедура ОткрытьФормуНастройкиКассовогоQRКода(КассаККМ, Организация, ТорговыйОбъект, ОповещениеОЗакрытииФормы = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КассаККМ", 				КассаККМ);
	ПараметрыФормы.Вставить("Организация", 				Организация);
	ПараметрыФормы.Вставить("ТорговыйОбъект", 			ТорговыйОбъект);     
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыФормы, ДополнительныеПараметры, Истина);
	КонецЕсли;
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормаПодключенияКассовогоQRКодаСБП", 
		ПараметрыФормы, 
		, 
		, 
		, 
		, 
		ОповещениеОЗакрытииФормы,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормы

Процедура ПриОткрытии(Форма, Отказ) Экспорт
	
	ЗапуститьФоновыеЗадания(Форма);
	
КонецПроцедуры

Процедура ПередЗакрытием(Форма, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка) Экспорт
	
	ОбработкаПрерыванияОперацииПлатежнойСистемы(Форма, Отказ);
	
КонецПроцедуры

Процедура ОбработатьПрерываниеПроцессаЗавершение(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено 
		И ВРЕГ(РезультатОткрытияФормы) = "ДА"  Тогда
		
		Форма = ДополнительныеПараметры.Форма;
	
		Если ПрерватьОперацию(Форма) Тогда
			Форма.Закрыть();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

Процедура ПечатьПречека(Форма, ТипПлатежнойСистемы, ИдентификаторQRКода, КартинкаQRКода, ПовторнаяПечатьЧека = Ложь, ИдентификаторУстройстваФР = Неопределено) Экспорт
	
	Форма.Доступность 				 = Ложь;
	ОписаниеОповещениеПриЗавершении  = Новый ОписаниеОповещения("ПечатьПречекаЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	
	РезультатОперации = МенеджерОборудованияКлиент.ПараметрыВыполненияОперацииНаОборудовании(Ложь, "Функция не поддерживается");
	ВыполнитьОбработкуОповещения(ОписаниеОповещениеПриЗавершении, РезультатОперации);
	
КонецПроцедуры

Процедура ПечатьПречекаЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Форма			  = Параметры.Форма;
	Форма.Доступность = Истина;
	
	Если НЕ РезультатВыполнения.Результат Тогда  
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(НСтр("ru = 'Печать последнего слип чека'"), РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИдентификаторОплаты(Форма, ОповещениеОЗавершении) Экспорт
	
	ГруппаСтраницы 					= Форма.Элементы.ГруппаСтраницы;
	ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаДлительнаяОперация;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
		
	ПараметрыОжидания 	= ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ЗаявкаНаОплату 	  	= ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НоваяЗаявка(Форма);
	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ПолучитьИдентификаторОплаты(ЗаявкаНаОплату, Форма.УникальныйИдентификатор);
	
	Форма.ИдентификаторЗаданияФормированияQRКода = РезультатВыполнения.ИдентификаторЗадания;
	
	ПараметрыОповещения	  = Новый Структура("Форма, ИдентификаторУстройстваФР", Форма);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПолучитьИдентификаторОплатыЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ПолучитьИдентификаторОплатыЗавершение(РезультатВыполнения, ПараметрыОповещения);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ПолучитьИдентификаторОплатыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		    			= ДополнительныеПараметры.Форма;
	ИдентификаторУстройстваФР   = ДополнительныеПараметры.ИдентификаторУстройстваФР;
	
	ГруппаСтраницы 	= Форма.Элементы.ГруппаСтраницы;
	
	Если Форма.СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		Если РезультатОперации.Свойство("ДокументОплаты")
			И Не ЗначениеЗаполнено(Форма.ДокументОплаты) Тогда
			Форма.ДокументОплаты = РезультатОперации.ДокументОплаты;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			
			ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибка;
			
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатОперации.СообщениеОбОшибке);
				
		Иначе
				
			ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаQRКод;
			СтруктураQRКода					= ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.СформироватьДанныеQRКода(Форма.Интеграция, РезультатОперации.QRКод, Форма.УникальныйИдентификатор);
			
			ЗаполнитьЗначенияСвойств(Форма, СтруктураQRКода);
			
			ПечатьПречека(Форма, Форма.ТипПлатежнойСистемы, СтруктураQRКода.ИдентификаторQRКода, СтруктураQRКода.КартинкаQRКода,,ИдентификаторУстройстваФР);
			
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
				
			Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
			
		КонецЕсли;
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибка;
			
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьСтатусОплаты(Форма, ДокументОплаты, Интеграция, ОповещениеЗавершитьОплату) Экспорт
	
	ГруппаСтраницы = Форма.Элементы.ГруппаСтраницы;
	
	Если Форма.Оплачивается Тогда
		ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаДлительнаяОперация;
	ИначеЕсли Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда
		ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаДлительнаяОперация;
		ТекстДлительнойОперации			= НСтр("ru = 'Получение подтверждения оплаты. Пожалуйста, подождите...'");
	Иначе
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаQRКод;
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма,,ТекстДлительнойОперации);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	РезультатВыполнения   = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ОпределитьСтатусОплатыОплаты(ДокументОплаты, Интеграция, Форма.УникальныйИдентификатор);
	
	ПараметрыЗавершения	  = Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату);	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпределитьСтатусОплатыЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ОпределитьСтатусОплатыЗавершение(РезультатВыполнения, ПараметрыЗавершения);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ОпределитьСтатусОплатыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		      			= ДополнительныеПараметры.Форма;
	ОповещениеЗавершитьОплату   = ДополнительныеПараметры.ОповещениеЗавершитьОплату;
	ГруппаСтраницы   			= Форма.Элементы.ГруппаСтраницы;
	СообщениеОбОшибке 			= "";
	
	Если Форма.СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		// дополнительная проверка
		Если РезультатОперации.СтатусОперации = "Выполнена" 
			И РезультатОперации.Свойство("СуммаОперации") 
			И РезультатОперации.СуммаОперации <> Форма.ИтогПоОрганизации Тогда
			
			СообщениеОбОшибке = НСтр("ru = 'Оплата по QR-коду уже выполнена, создание с новой суммой оплаты запрещено.'");
			
			РезультатОперации.СтатусОперации 	= "Ошибка";
			РезультатОперации.СообщениеОбОшибке = СообщениеОбОшибке;
			
		КонецЕсли;
		
		Если РезультатОперации.СтатусОперации = "Выполняется" Тогда
			
			Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда
				ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаОшибка;
				СообщениеОбОшибке 				= НСтр("ru = 'Не определен идентификатор оплаты в платежной системе!'");
			Иначе
				ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаВыполняется;
			КонецЕсли;
			
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, СообщениеОбОшибке);
			
		ИначеЕсли РезультатОперации.СтатусОперации = "Выполнена" Тогда
			
			Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда
				ИнтеграцияСПлатежнымиСистемамиРТКлиент.ВозвратОплаты(Форма, ОповещениеЗавершитьОплату);
			Иначе
			
				ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаЗавершение;
				ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ДобавитьВидОплаты");
				
				ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			
			КонецЕсли;
			
		ИначеЕсли РезультатОперации.СтатусОперации = "Отменена" Тогда
			
			ГруппаСтраницы.ТекущаяСтраница  = Форма.Элементы.ГруппаОшибка;
			
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, НСтр("ru = 'Операция отменена. Истек срок жизни QR-кода или операция была отклонена СБП.'"));
			
		ИначеЕсли РезультатОперации.СтатусОперации = "Ошибка" Тогда
			
			Если Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда
				ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаОшибка;
			Иначе
				ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаОшибкаПолученияСтатуса;
			КонецЕсли;
			
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатОперации.СообщениеОбОшибке);
		
		КонецЕсли;
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаОшибкаПолученияСтатуса;
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатВыполнения.КраткоеПредставлениеОшибки);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВозвратОплаты(Форма, ОповещениеЗавершитьОплату) Экспорт
	
	ГруппаСтраницы					= Форма.Элементы.ГруппаСтраницы;
	ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаДлительнаяОперация;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ЗаявкаНаВозврат 	= ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НоваяЗаявка(Форма);
	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ВозвратОплаты(ЗаявкаНаВозврат, Форма.УникальныйИдентификатор);
	
	Форма.ИдентификаторЗаданияВозврата = РезультатВыполнения.ИдентификаторЗадания;
	ПараметрыЗавершения	  = Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВозвратОплатыЗавершение", ЭтотОбъект, ПараметрыЗавершения);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ВозвратОплатыЗавершение(РезультатВыполнения, ПараметрыЗавершения);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ВозвратОплатыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма		      			= ДополнительныеПараметры.Форма;
	ОповещениеЗавершитьОплату	= ДополнительныеПараметры.ОповещениеЗавершитьОплату;
	ГруппаСтраницы   			= Форма.Элементы.ГруппаСтраницы;
	
	Если Форма.СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		Если РезультатОперации.Свойство("ДокументВозврата")
			И Не ЗначениеЗаполнено(Форма.ДокументВозврата) Тогда
			Форма.ДокументВозврата = РезультатОперации.ДокументВозврата;
		КонецЕсли;
		
		ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату);
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибка;
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьСтатусВозврата(Форма, ДокументВозврата, Интеграция, ОповещениеЗавершитьОплату) Экспорт
	
	ГруппаСтраницы					= Форма.Элементы.ГруппаСтраницы;
	ГруппаСтраницы.ТекущаяСтраница 	= Форма.Элементы.ГруппаДлительнаяОперация;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	РезультатВыполнения = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ОпределитьСтатусВозврата(ДокументВозврата, Интеграция, Форма.УникальныйИдентификатор);
	
	ИдентификаторЗаданияПроверкиСтатуса = РезультатВыполнения.ИдентификаторЗадания;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпределитьСтатусВозвратаЗавершение", ЭтотОбъект, Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату));
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ОпределитьСтатусВозвратаЗавершение(РезультатВыполнения, Новый Структура("Форма, ОповещениеЗавершитьОплату", Форма, ОповещениеЗавершитьОплату));
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

Процедура ОпределитьСтатусВозвратаЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма						= ДополнительныеПараметры.Форма;
	ОповещениеЗавершитьОплату   = ДополнительныеПараметры.ОповещениеЗавершитьОплату;
	ГруппаСтраницы				= Форма.Элементы.ГруппаСтраницы;
	
	Если Форма.СанкционированноеЗакрытие Тогда // уже на актуально
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресРезультата);
		
		ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату, Ложь);
		
	ИначеЕсли РезультатВыполнения.Статус = "Ошибка" Тогда
		
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибкаПолученияСтатуса;
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатВыполнения.КраткоеПредставлениеОшибки);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодтвердитьВозврат(Форма, ДокументВозврата, Интеграция, ОповещениеЗавершитьОплату) Экспорт
	
	РезультатОперации = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ПодтвердитьВозврат(ДокументВозврата, Интеграция);
		
	ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

Процедура ОтменитьОплату(Форма, ДокументОплаты, Интеграция, ИдентификаторЗаданияФормированияQRКода, ИдентификаторЗаданияПроверкиСтатуса, ИдентификаторЗаданияВозврата, ОповещениеЗавершитьОплату=Неопределено, Отказ=Ложь) Экспорт
	
	Результат 		= ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ОтменаОплаты(ДокументОплаты, Интеграция, ИдентификаторЗаданияФормированияQRКода, ИдентификаторЗаданияПроверкиСтатуса, ИдентификаторЗаданияВозврата);
	ГруппаСтраницы	= Форма.Элементы.ГруппаСтраницы;
	
	Если Результат <> Неопределено
		И ЗначениеЗаполнено(Результат.КодОшибки) Тогда
		
		Отказ 			= Истина;
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибка;
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, Результат.СообщениеОбОшибке);
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		Форма.СанкционированноеЗакрытие = Истина;
		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ОтменитьОплату");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьПолученныеДанные(Форма, СтруктураПараметров, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(СтруктураПараметров.ДанныеПО) Тогда
		Форма.ИдентификаторОплаты = СтруктураПараметров.ДанныеПО;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьСтатусВозврата(Форма, РезультатОперации, ОповещениеЗавершитьОплату, ЗапускПроверкиСтатуса = Истина)
	
	ГруппаСтраницы		= Форма.Элементы.ГруппаСтраницы;
	ПлатежнаяСистема    = Форма.ПлатежнаяСистема;
	
	Если РезультатОперации.СтатусОперации = "ТребуетсяПодтверждение" Тогда
		
		Если ЗначениеЗаполнено(РезультатОперации.Подтверждение.НомерТелефона)
			И ЗначениеЗаполнено(РезультатОперации.Подтверждение.НомерСчета) Тогда
		
			Форма.Элементы.ДекорацияПодтверждение.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Денежные средства будут переведены %1 (номер телефона %2) в %3 на расчетный счет %4. Проверьте реквизиты и подтвердите перевод.'"),
					РезультатОперации.Подтверждение.ФИО,
					РезультатОперации.Подтверждение.НомерТелефона,
					Форма.Элементы.ПлатежнаяСистема.СписокВыбора.НайтиПоЗначению(ПлатежнаяСистема).Представление,
					РезультатОперации.Подтверждение.НомерСчета);
				
		Иначе
				
			Форма.Элементы.ДекорацияПодтверждение.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Денежные средства будут переведены %1 в %2 на расчетный счет. Проверьте реквизиты и подтвердите перевод.'"),
					РезультатОперации.Подтверждение.ФИО,
					Форма.Элементы.ПлатежнаяСистема.СписокВыбора.НайтиПоЗначению(ПлатежнаяСистема).Представление);
					
		КонецЕсли;
			
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаПодтверждение;
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
			
	ИначеЕсли РезультатОперации.СтатусОперации = "Выполняется" Тогда
		
		Если ЗапускПроверкиСтатуса Тогда
			Форма.ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		Иначе
			ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаВыполняется;
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма);
		КонецЕсли;
		
	ИначеЕсли РезультатОперации.СтатусОперации = "Выполнена" Тогда
		
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаЗавершение;
		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ДобавитьВидОплаты");
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатОперации.СообщениеОбОшибке);
		
	Иначе
		
		ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаОшибка;
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(Форма, РезультатОперации.СообщениеОбОшибке);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
