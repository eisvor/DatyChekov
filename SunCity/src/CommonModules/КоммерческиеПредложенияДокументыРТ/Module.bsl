////////////////////////////////////////////////////////////////////////////////
// Подсистема "Коммерческие предложения документы".
// ОбщийМодуль.КоммерческиеПредложенияДокументыРТ
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриОпределенииНастроекУчета.
Процедура ПриОпределенииНастроекУчета(Настройки) Экспорт
	
	Настройки.Вставить("ИспользуетсяЕдинственнаяВалюта", Истина);
	Настройки.Вставить("ИспользуютсяХарактеристикиНоменклатуры", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриУстановкеУсловногоОформления.
Процедура ПриУстановкеУсловногоОформления(Форма) Экспорт
	
	ЭлементТоварыЕдиницаИзмерения = Форма.Элементы.Найти("ТоварыЕдиницаИзмерения");
	Если Не ЭлементТоварыЕдиницаИзмерения = Неопределено Тогда
		ЭлементТоварыЕдиницаИзмерения.ОтображатьВШапке = Ложь;
		
		ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
		
		ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ЕдиницаИзмерения");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТоварыНоменклатураЕдиницаИзмерения");
		
		ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
		
		ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТоварыЕдиницаИзмерения");
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры.
Процедура УстановитьУсловноеОформлениеХарактеристикНоменклатуры(Форма,
	ИмяПоляВводаХарактеристики = "ТоварыХарактеристика",
	ПутьКПолюОтбора = "Объект.Товары.ХарактеристикиИспользуются") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаХарактеристики].Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<характеристики не используются>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеНоменклатуры.
Процедура ЗаполнитьДанныеНоменклатуры(Знач СписокНоменклатур, ЗначенияПолейТоваров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура.Ссылка КАК НоменклатураСсылка,
		|	Номенклатура.Наименование КАК НоменклатураНаименование,
		|	Номенклатура.Артикул КАК Артикул
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В (&СписокНоменклатуры)";
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатур);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗначенияПолейТоваров[Выборка.НоменклатураСсылка], Выборка);
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеХарактеристикНоменклатуры.
Процедура ЗаполнитьДанныеХарактеристикНоменклатуры(Знач СписокХарактеристик, ЗначенияПолейХарактеристик) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаСсылка,
	|	ХарактеристикиНоменклатуры.Наименование КАК ХарактеристикаНаименование
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Ссылка В(&СписокХарактеристик)";
	
	Запрос.УстановитьПараметр("СписокХарактеристик", СписокХарактеристик);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗначенияПолейХарактеристик[Выборка.ХарактеристикаСсылка], Выборка);
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ДанныеУчастникаКоммерческихПредложений.
Процедура ДанныеУчастникаКоммерческихПредложений(Участник, ДанныеУчастника) Экспорт
	
	СведенияОбОрганизации = Неопределено;
	ЭлектронноеВзаимодействиеПереопределяемый.ПолучитьДанныеЮрФизЛица(Участник, СведенияОбОрганизации);
	
	ДанныеУчастника = Новый Структура;
	ДанныеУчастника.Вставить("Ссылка", Участник);
	ДанныеУчастника.Вставить("Наименование", СведенияОбОрганизации.Наименование);
	ДанныеУчастника.Вставить("Вид", Новый Структура);
	
	Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
		
		ИндивидуальныйПредприниматель = Новый Структура("ИНН, Имя, Фамилия, Отчество");
		ЗаполнитьЗначенияСвойств(ИндивидуальныйПредприниматель, СведенияОбОрганизации);
		
		ДанныеУчастника.Вид.Вставить("ИндивидуальныйПредприниматель", ИндивидуальныйПредприниматель);
		
	ИначеЕсли СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		
		ЮридическоеЛицо = Новый Структура("ИНН, КПП");
		ЗаполнитьЗначенияСвойств(ЮридическоеЛицо, СведенияОбОрганизации);
		
		ДанныеУчастника.Вид.Вставить("ЮридическоеЛицо", ЮридическоеЛицо);
		
	КонецЕсли;
	
	ЮридическийАдрес = Новый Структура("Представление, Код");
	ЮридическийАдрес.Представление = СведенияОбОрганизации.ЮридическийАдрес;
	
	ДанныеУчастника.Вставить("ЮридическийАдрес", ЮридическийАдрес);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьАдресПоСкладу.
Процедура ЗаполнитьАдресПоСкладу(Знач Склад, ДанныеАдреса) Экспорт
	
	АдресСклада = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		Склад.Магазин, Справочники.ВидыКонтактнойИнформации.ФактАдресМагазина, ТекущаяДатаСеанса(), Ложь);
	
	Если ТипЗнч(АдресСклада) = Тип("ТаблицаЗначений") И АдресСклада.Количество() > 0 Тогда
		СтруктураАдреса = РаботаСАдресами.СведенияОбАдресе(АдресСклада[0].Значение, Новый Структура("КодыАдреса", Истина));
		
		ЗаполнитьЗначенияСвойств(ДанныеАдреса, СтруктураАдреса);
		ДанныеАдреса.Код = Лев(СтруктураАдреса.ИдентификаторАдресногоОбъекта, 36);
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьТекстЗапросаПолученияЕдиницыИзмерения.
Процедура ПолучитьТекстЗапросаПолученияЕдиницыИзмерения(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБОР 
	|	КОГДА Товары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА &ЕдиницаИзмеренияШтука
	|	КОГДА Товары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|		ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|	ИНАЧЕ Товары.ЕдиницаИзмерения
	|КОНЕЦ";
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеЕдиницИзмерения.
Процедура ЗаполнитьДанныеЕдиницИзмерения(Знач СписокЕдиницИзмерения, ЗначенияПолей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БазовыеЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмеренияСсылка,
	|	БазовыеЕдиницыИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	БазовыеЕдиницыИзмерения.Код КАК ЕдиницаИзмеренияКодОКЕИ,
	|	БазовыеЕдиницыИзмерения.Наименование КАК ЛогистическаяУпаковкаНаименование,
	|	1 КАК Числитель
	|ИЗ
	|	Справочник.БазовыеЕдиницыИзмерения КАК БазовыеЕдиницыИзмерения
	|ГДЕ
	|	БазовыеЕдиницыИзмерения.Ссылка В(&СписокЕдиницИзмерения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	УпаковкиНоменклатуры.ЕдиницаИзмерения.Наименование,
	|	УпаковкиНоменклатуры.ЕдиницаИзмерения.Код,
	|	УпаковкиНоменклатуры.Наименование,
	|	УпаковкиНоменклатуры.Коэффициент
	|ИЗ
	|	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	|ГДЕ
	|	УпаковкиНоменклатуры.Ссылка В(&СписокЕдиницИзмерения)";
	
	Запрос.УстановитьПараметр("СписокЕдиницИзмерения", СписокЕдиницИзмерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗначенияПолей[Выборка.ЕдиницаИзмеренияСсылка], Выборка);
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеШтрихКодовНоменклатуры.
Процедура ЗаполнитьДанныеШтрихКодовНоменклатуры(СписокНоменклатур) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНоменклатур.Номенклатура КАК Номенклатура,
	|	СписокНоменклатур.Характеристика КАК Характеристика,
	|	СписокНоменклатур.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&СписокНоменклатур КАК СписокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Штрихкоды.Штрихкод КАК ШтрихКод
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|			И Товары.ЕдиницаИзмерения = Штрихкоды.Упаковка";
	
	Запрос.УстановитьПараметр("СписокНоменклатур", СписокНоменклатур);
	
	СписокНоменклатуры = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриСозданииНаСервере.
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 
	
	Если Форма.ИмяФормы = "Документ.ЗапросКоммерческихПредложенийПоставщиков.Форма.ФормаДокумента" Тогда
		
		Форма.Объект.Валюта = "RUB";
		
		Если Форма.Объект.Ссылка.Пустая() И Форма.Объект.Товары.Количество() Тогда
			ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Форма.Объект.Товары);
		КонецЕсли;
		
		СвязиПараметровВыбора = Новый Массив;
		СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.Товары.ТекущиеДанные.Номенклатура"));
		Форма.Элементы.ТоварыЕдиницаИзмерения.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЧтенииНаСервере.
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	Если ТипЗнч(ТекущийОбъект) = Тип("ДокументОбъект.ЗапросКоммерческихПредложенийПоставщиков")
		Или ТипЗнч(ТекущийОбъект) = Тип("ДокументОбъект.КоммерческоеПредложениеПоставщика") Тогда
		
		ЗаполнитьПризнакИспользованияХарактеристик(Форма.Объект.Товары);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокументов

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработкаПроверкиЗаполнения.
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	МассивНепроверяемыхРеквизитов.Добавить("Валюта");
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗапросКоммерческихПредложенийПоставщиков") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ЕдиницаИзмерения");
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("Объект", ДокументОбъект);
		ПараметрыПроверки.Вставить("МассивНепроверяемыхРеквизитов", МассивНепроверяемыхРеквизитов);
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект,МассивНепроверяемыхРеквизитов,Отказ);
		Если Не ДокументОбъект.Налогообложение Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Товары.СтавкаНДС");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПередЗаписью.
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	ДокументОбъект.Валюта = "RUB";
	
КонецПроцедуры

#КонецОбласти

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииПараметровСравненияЗапрошеноПредложено.
Процедура ПриЗаполненииПараметровСравненияЗапрошеноПредложено(Параметры, ДанныеПоСтрокеЗапроса, ДанныеТекущейСтроки) Экспорт
	
	Параметры.ЗапросЕдиницаИзмерения = ?(ЗначениеЗаполнено(ДанныеПоСтрокеЗапроса.ЗапросЕдиницаИзмерения),
									ДанныеПоСтрокеЗапроса.ЗапросЕдиницаИзмерения,
									ДанныеПоСтрокеЗапроса.Номенклатура.ЕдиницаИзмерения);
	
	Параметры.ЕдиницаИзмерения = ?(ЗначениеЗаполнено(ДанныеТекущейСтроки.ЕдиницаИзмерения),
									ДанныеТекущейСтроки.ЕдиницаИзмерения,
									ДанныеТекущейСтроки.Номенклатура.ЕдиницаИзмерения);
	
КонецПроцедуры

// Получает реквизиты номенклатуры и значение признака "ХарактеристикиИспользуются".
//
// Параметры:
//  СсылкаНаОбъект - СправочникСсылка.Номенклатура - объект, значения реквизитов которого необходимо получить.
//  Реквизиты - Строка - имена реквизитов, перечисленные через запятую.
//
// Возвращаемое значение:
//  Структура - содержит имена (ключи) и значения затребованных реквизитов.
//     Если используются характеристики, то дополнительно содержит
//     значение признака "ХарактеристикиИспользуются".
//
Функция РеквизитыНоменклатурыПриИзменении(СсылкаНаОбъект, Знач Реквизиты = "") Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Реквизиты,
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Реквизиты,
	|	&ХарактеристикиИспользуются,
	|	ЕСТЬNULL(ВидыНоменклатуры.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)) КАК ТипНоменклатуры
	|ИЗ
	|	ВТ_Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		ТекстХарактеристикиИспользуются = "ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ) КАК ХарактеристикиИспользуются,";
	Иначе
		ТекстХарактеристикиИспользуются = "";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХарактеристикиИспользуются,", ТекстХарактеристикиИспользуются);
	
	Если ЗначениеЗаполнено(Реквизиты) Тогда
		Результат = Новый Структура(Реквизиты);
		Реквизиты = СтрЗаменить(Реквизиты, " ", "");
		Реквизиты = "Номенклатура." + СтрЗаменить(Реквизиты, ",", ",Номенклатура.");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Реквизиты", Реквизиты);
	Иначе
		Результат = Новый Структура;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Реквизиты,", "");
	КонецЕсли;
	
	Результат.Вставить("ХарактеристикиИспользуются", Ложь);
	Результат.Вставить("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПустаяСсылка());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Заполняет колонку "ХарактеристикиИспользуются" в формах.
//
// Параметры:
//   КоллекцияДанных - ДанныеФормыКоллекция, ТаблицаЗначений - Таблица, в которой необходимо заполнить
//      колонку "ХарактеристикиИспользуются".
//
Процедура ЗаполнитьПризнакИспользованияХарактеристик(КоллекцияДанных) Экспорт
	
	Если КоллекцияДанных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(КоллекцияДанных) = Тип("ТаблицаЗначений") Тогда
		ПараметрКоллекция = КоллекцияДанных;
	Иначе
		Колонки = "НомерСтроки,Номенклатура";
		ПараметрКоллекция = КоллекцияДанных.Выгрузить(, Колонки);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоллекцияДанных.НомерСтроки КАК НомерСтроки,
		|	КоллекцияДанных.Номенклатура КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	&КоллекцияДанных КАК КоллекцияДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ) КАК ИспользоватьХарактеристики
		|ИЗ
		|	ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ВТ_Номенклатура.Ссылка = Номенклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)";
	Запрос.УстановитьПараметр("КоллекцияДанных", ПараметрКоллекция);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КоллекцияДанных[Выборка.НомерСтроки - 1].ХарактеристикиИспользуются = Выборка.ИспользоватьХарактеристики;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
