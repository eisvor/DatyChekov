
#Область СлужебныеПроцедурыИФункции

// Открытвает форму печати кодов маркировки по переданным данным.
// Если передается объект документа - требует записи
// 
// Параметры:
// 	ФормаВладелец - Управляемая форма - владелец для открываемой формы печатит
// 	ДанныеОткрытия - Структура, ДанныеФормыОбъект - основание, по которому требуется открыть форму
// 	ОповещениеПриЗакрытии - Неопределено - Описание оповещения при закрытии формы печати
Процедура ОтрытьФормуПечатиКодовМаркировок(ФормаВладелец, ДанныеОткрытия, ОповещениеПриЗакрытии=Неопределено) Экспорт
	
	ОчиститьСообщения();
	
	Если ТипЗнч(ДанныеОткрытия) = Тип("Структура") Тогда
		ПараметрыФормыПечати = ДанныеОткрытия;
	Иначе
		
		Объект = ДанныеОткрытия;
		Если Объект.Ссылка.Пустая() Тогда
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru = 'Невозможно открыть форму печати для нового документа.'"));
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.НанесениеКодовМаркировкиСУЗИСМПТК") Тогда
			ДокументДляПечати = Объект.ДокументОснование;
		Иначе
			ДокументДляПечати = Объект.Ссылка;
		КонецЕсли;
		
		ПараметрыФормыПечати = Новый Структура();
		ПараметрыФормыПечати.Вставить("Документ", ДокументДляПечати);
		
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПечатьКодовМаркировкиИСМПТК.Форма.ФормаПечатиИзПула", ПараметрыФормыПечати, ЭтотОбъект,,,, ОповещениеПриЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Выполняет команду печати этикеток обуви
//
// Параметры:
//	ОписаниеКоманды - Структура - структура с описанием команды.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьЭтикетокОбувь(ОписаниеКоманды, ИмяМенеджераПечати) Экспорт 

	Если ОписаниеКоманды.СтруктураДанных.ОбъектыПечати.Количество() = 0 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru = 'Нет данных для печати этикеток.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.ПустаяСсылка"));
		
	ПараметрыПечати = Новый Структура();
	ПараметрыПечати.Вставить("КоличествоЭкземпеляров",	   1);
	ПараметрыПечати.Вставить("Документ", 				   ОписаниеКоманды.СтруктураДанных.Документ);
	ПараметрыПечати.Вставить("АдресВХранилище", 		   ПоместитьВоВременноеХранилище(ОписаниеКоманды.СтруктураДанных, Новый УникальныйИдентификатор));
	ПараметрыПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте", ОписаниеКоманды.СтруктураДанных.КаждаяЭтикеткаНаНовомЛисте);
	
	ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ВыполнитьКомандуПечати(
		ИмяМенеджераПечати, 
		"ЭтикеткаКодМаркировкиИСМП",
		ПараметрКоманды,
		Неопределено,
		ПараметрыПечати);
		
КонецФункции

// Выполняет печать этикеток обуви по переданным данным печати.
// 
// Параметры:
// 	ДанныеПечати - Структура - данные для печати
// 	Форма = УправляемаяФорма - Форма источник вызова печати
Процедура НапечататьЭтикеткиИСМП(ДанныеПечати, Форма) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ПечатьЭтикеткиИСМП(ДанныеПечати, Форма, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
						
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("АдресВХранилище", 			ПоместитьВоВременноеХранилище(ДанныеПечати, Форма.УникальныйИдентификатор));
		ПараметрыПечати.Вставить("КоличествоЭкземпляров",		1);
		ПараметрыПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте",  ДанныеПечати.КаждаяЭтикеткаНаНовомЛисте);
		
		ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ВыполнитьКомандуПечати("РегистрСведений.ПулКодовМаркировкиСУЗ", "ЭтикеткаКодМаркировкиИСМП",, Форма, ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СброситьФлагПечатиПоЗаказуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		//Необходимо сбросить в РС ПулКодовМаркировкиСУЗ значение 
		//реквизита ДатаПечатиУниверсальная и установить значение ресурса в "Сгенерирован"
		//по всем кодам, относящимся к выбранному Заказу
		ЗаказНаЭмиссиюДляСброса  = ДополнительныеПараметры.ЗаказДляСброса;
		Форма = ДополнительныеПараметры.ФормаЗаказа;
		ОперацияВыполненаУспешно = Ложь;
		
		Форма.ОбнулитьДатуПечатиИСтатусКодовПоЗаказу(ЗаказНаЭмиссиюДляСброса, ОперацияВыполненаУспешно);
		
		Если ОперацияВыполненаУспешно Тогда
			Форма.Элементы.СписокЗакрытые.ТекущиеДанные.ЕстьНераспечатанные = Истина;
		КонецЕсли;
		
		Форма.ОбновитьСписокКодовМаркировки();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполнитьПредставлениеТипаКода(ТипКода) Экспорт
	
	Если ТипКода = 18 Тогда
		ТипКодаПредставление = "DataMatrix";
	ИначеЕсли ТипКода = 24 Тогда
		ТипКодаПредставление = "GS1-DataMatrix";
	ИначеЕсли ТипКода = 2 Тогда
		ТипКодаПредставление = "EAN-128";
	ИначеЕсли ТипКода = 99 Тогда
		ТипКодаПредставление = НСтр("ru = 'Не определен'");
	КонецЕсли;	
	
	Возврат ТипКодаПредставление;
	
КонецФункции

#КонецОбласти

#Область ПечатьSSCC

Процедура НапечататьSSCC(ДанныеПечати, Форма) Экспорт
	
	СтандартнаяОбработка = Истина;
	ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ПечатьSSCC(ДанныеПечати, Форма, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка Тогда
						
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("АдресВХранилище", 			ПоместитьВоВременноеХранилище(ДанныеПечати, Форма.УникальныйИдентификатор));
		ПараметрыПечати.Вставить("КоличествоЭкземпляров",		1);
		ПараметрыПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте",  ДанныеПечати.КаждаяЭтикеткаНаНовомЛисте);
		
		ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ВыполнитьКомандуПечати("Обработка.ПечатьКодовМаркировкиИСМПТК",	"ЭтикеткаКодМаркировкиИСМП",, Форма, ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКодSSCC(ОписаниеКоманды, ИмяМенеджераПечати) Экспорт 

	Если ОписаниеКоманды.СтруктураДанных.ОбъектыПечати.Количество() = 0 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru = 'Нет данных для печати SSCC.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	МассивОбъектов = Новый Массив();
	МассивОбъектов.Добавить(ПредопределенноеЗначение("Документ.АгрегацияКодовМаркировкиСУЗИСМПТК.ПустаяСсылка"));
		
	ПараметрыПечати = Новый Структура();
	ПараметрыПечати.Вставить("КоличествоЭкземпеляров",	   1);
	ПараметрыПечати.Вставить("АдресВХранилище", 		   ПоместитьВоВременноеХранилище(ОписаниеКоманды.СтруктураДанных));
	ПараметрыПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте", Истина);
	ПараметрыПечати.Вставить("ДанныеПечати",			   ОписаниеКоманды.СтруктураДанных.ОбъектыПечати);
	
	ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ВыполнитьКомандуПечати(
		ИмяМенеджераПечати, 
		"ЭтикеткаSSCC",
		МассивОбъектов,
		Неопределено,
		ПараметрыПечати);
		
КонецФункции
	
#КонецОбласти

#Область ПечатьАгрегацияКМ

Процедура НапечататьАгрегацияКМ(ДанныеПечати, Форма) Экспорт
	
	СтандартнаяОбработка = Истина;
	Если Не СтрНайти(Форма.ИмяФормы, "ИСЦЭДМ") = 0 Тогда
		ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ПечатьАгрегацияЦЭДМ(ДанныеПечати, Форма, СтандартнаяОбработка);
	Иначе
		ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ПечатьАгрегацияКМ(ДанныеПечати, Форма, СтандартнаяОбработка);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда
						
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("АдресВХранилище", 	  ПоместитьВоВременноеХранилище(ДанныеПечати, Форма.УникальныйИдентификатор));
		ПараметрыПечати.Вставить("КоличествоЭкземпляров", 1);
				
		ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ВыполнитьКомандуПечати("Обработка.ПечатьКодовМаркировкиИСМПТК", "ЭтикеткаКодМаркировкиИСМП",, Форма, ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАгрегацияКМ(ОписаниеКоманды, ИмяМенеджераПечати) Экспорт 

	Если ОписаниеКоманды.СтруктураДанных.Количество() = 0 Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru = 'Нет данных для печати документа.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	МассивОбъектов = Новый Массив();
	МассивОбъектов.Добавить(ОписаниеКоманды.СтруктураДанных.Ссылка);
			
	ПараметрыПечати = Новый Структура();
	ПараметрыПечати.Вставить("КоличествоЭкземпеляров",	   1);
	ПараметрыПечати.Вставить("АдресВХранилище", 		   ПоместитьВоВременноеХранилище(ОписаниеКоманды.СтруктураДанных));
	ПараметрыПечати.Вставить("ДанныеПечати",			   ОписаниеКоманды.СтруктураДанных);
	
	ПечатьКодовМаркировкиИСМПТККлиентПереопределяемый.ВыполнитьКомандуПечати(
		ИмяМенеджераПечати, 
		"АгрегацияКМ",
		МассивОбъектов,
		Неопределено,
		ПараметрыПечати);
		
КонецФункции
	
#КонецОбласти

