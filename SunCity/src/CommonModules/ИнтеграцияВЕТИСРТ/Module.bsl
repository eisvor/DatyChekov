//---------------------------------------------------------------------------------------------------

#Область ПрограммныйИнтерфейс

#Область НастройкиПрофилейДоступа

// Дополняет профиль ролями ВЕТИС для выполнения базовых функций работы с РТ
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильОбязательнымиРолямиВЕТИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиПанельОбменВЕТИС");
	
КонецПроцедуры

// Дополняет профиль ролями ВЕТИС для чтения и просмотра документов и журналов ВЕТИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиЧтенияДокументовВЕТИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВетеринарноСопроводительныхДокументовВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВходящихТранспортныхОперацийВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗапросовСкладскогоЖурналаВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеИсходящихТранспортныхОперацийВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОбъединенийЗаписейСкладскогоЖурналаВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПроизводственныхОперацийВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеИнвентаризацийПродукцииВЕТИС");
	
КонецПроцедуры

// Дополняет профиль ролями ВЕТИС для чтения и просмотра справочников и регистров ВЕТИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиЧтенияСправочнойИнформацииВЕТИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗаболеванийУсловийРегионализацииВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗаписейСкладскогоЖурналаВРезервеВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНазначенийГрузовВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПродукцииВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСоответствияНоменклатурыВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеХозяйствующихСубъектовВЕТИС");
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОстатковПродукцииВЕТИС");
	
КонецПроцедуры

// Дополняет профиль ролями ВЕТИС для создания и изменения настроек ВЕТИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиНастройкиВЕТИС(ОписаниеПрофиля)Экспорт
	Возврат;
КонецПроцедуры

// Дополняет профиль ролями ВЕТИС для создания документов и выполнения обменов ВЕТИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиОбменаВЕТИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВетеринарноСопроводительныхДокументовВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВходящихТранспортныхОперацийВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗапросовСкладскогоЖурналаВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеИнвентаризацийПродукцииВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеИсходящихТранспортныхОперацийВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОбъединенийЗаписейСкладскогоЖурналаВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПроизводственныхОперацийВЕТИС");
	
КонецПроцедуры

// Дополняет профиль ролями ВЕТИС для добавления и изменения справочников и регистров ВЕТИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиИзмененияСправочнойИнформацииВЕТИС(ОписаниеПрофиля)Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНазначенийГрузовВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПродукцииВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеХозяйствующихСубъектовВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗаболеванийУсловийРегионализацииВЕТИС");
	
КонецПроцедуры

// Дополняет профиль ролями ВЕТИС для работы с отчетами ВЕТИС
//
// Параметры:
//  ОписаниеПрофиля - Структура - описание поставляемого профиля 
//                    (см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа)
//
Процедура ДополнитьПрофильПравамиПросмотраОтчетовВЕТИС(ОписаниеПрофиля)Экспорт
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаАнализРасхожденийПриОтгрузкеПродукцииВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаАнализРасхожденийПриПоступленииПродукцииВЕТИС");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаАнализРасхожденийПриПроизводствеПродукцииВЕТИС");
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет объекты прикладных метаданных, в которых возможна
// интеграция с ВетИС (в формах объектов)
// Параметры:
//  Результат - Массив - объекты прикладных метаданных
Процедура ЗаполнитьОбъектыМетаданныхИнтеграции(Результат) Экспорт
	
	Результат.Добавить(Метаданные.Документы.ВозвратТоваровОтПокупателя);
	Результат.Добавить(Метаданные.Документы.ВозвратТоваровПоставщику);
	Результат.Добавить(Метаданные.Документы.ОприходованиеТоваров);
	Результат.Добавить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	Результат.Добавить(Метаданные.Документы.ПеремещениеТоваров);
	Результат.Добавить(Метаданные.Документы.ПересортицаТоваров);
	Результат.Добавить(Метаданные.Документы.РеализацияТоваров);
	Результат.Добавить(Метаданные.Документы.СборкаТоваров);
	Результат.Добавить(Метаданные.Документы.СписаниеТоваров);
	
КонецПроцедуры

// Заполняет реквизит 'ЕдиницаИзмерения' справочника 'ЕдиницыИзмеренияВЕТИС' по ОКЕИ.
//
// Параметры:
//  СправочникОбъект - СправочникОбъект.ЕдиницыИзмеренияВЕТИС - Единица измерения ВЕТИС.
Процедура ЗаполнитьЕдиницуИзмеренияПоКлассификаторам(СправочникОбъект) Экспорт
	
	Если СправочникОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеКлассификатораВЕТИС = ИнтеграцияВЕТИСПовтИсп.ДанныеКлассификатораЕдиницИзмеренияВЕТИС();
	СтрокаКлассификатораВЕТИС = ДанныеКлассификатораВЕТИС.Найти(СправочникОбъект.Идентификатор, "ЕдиницаИзмеренияGUID");
	
	Если ЗначениеЗаполнено(СтрокаКлассификатораВЕТИС)
		И ЗначениеЗаполнено(СтрокаКлассификатораВЕТИС.КодОКЕИ) Тогда
		
		КодОКЕИ = СтрокаКлассификатораВЕТИС.КодОКЕИ;
		ЕдиницаИзмерения = ИнтеграцияВЕТИСРТ_ЕдиницаИзмеренияОКЕИ(КодОКЕИ);
		
		Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
			СправочникОбъект.ЕдиницаИзмерения = ЕдиницаИзмерения;
		Иначе
			СправочникОбъект.ЕдиницаИзмерения = ИнтеграцияВЕТИСРТ_СоздатьЕдиницуИзмеренияПоКлассификаторуОКЕИ(КодОКЕИ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа на основании, при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИнвентаризацияПродукцииВЕТИС") Тогда
		ОбработкаЗаполненияИнвентаризацииПродукцииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		ОбработкаЗаполненияДокументаВходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
		ОбработкаЗаполненияПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа в форме,
// а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("Сырье.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект,МассивНепроверяемыхРеквизитов,Отказ);
		МассивНепроверяемыхРеквизитов.Добавить("Сырье.Характеристика");
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ", "Сырье");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект,МассивНепроверяемыхРеквизитов,Отказ, ПараметрыПроверки);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗапросСкладскогоЖурналаВЕТИС") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект,МассивНепроверяемыхРеквизитов,Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ",                 "Товары");
		ПараметрыПроверки.Вставить("СписокСтрок",           Неопределено);
		ПараметрыПроверки.Вставить("ОтборПроверяемыхСтрок", Новый Структура);
		
		ПараметрыПроверки.ОтборПроверяемыхСтрок.Вставить("ЕстьУточнения", Ложь);
		ХарактеристикиНеЗаполнены = Ложь;
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
		Если ХарактеристикиНеЗаполнены Тогда
			Отказ = Истина;
			Если ДокументОбъект.Товары.Количество() = 1 Тогда
				ТекстОшибки = НСтр("ru = 'Не заполнена характеристика.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "ПредставлениеХарактеристика",, Отказ);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("УправляемаяФорма") 
		И ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументОбъект.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ПутьКДаннымТаблицыФормы", "");
		ПараметрыПроверки.Вставить("ИмяТЧ", "ТоварыУточнение");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("УправляемаяФорма")
		И ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ПараметрыПроверки = Новый Структура;
		ПараметрыПроверки.Вставить("ИмяТЧ", "ТоварыУточнение");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИнвентаризацияПродукцииВЕТИС") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект,МассивНепроверяемыхРеквизитов,Отказ);
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Характеристика");
		ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект,МассивНепроверяемыхРеквизитов,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при проведении документа. Выполняется в транзакции записи.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проводимый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения.
Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Новый Массив);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
	
КонецПроцедуры

// Создает временную таблицу "ДокументыИнформационнойБазы", для дальнейшего использования в методе
// ЗаполнениеДокументовВЕТИС.ДокументОснованиеПоДаннымСвязанныхДокументов.
// Содержит колонки:
// * ТипДокумента - ПеречислениеСсылка.ТипыДокументовВЕТИС - тип документа ВЕТИС, служит для определения типа связи со связанными документами;
// * ПоказательУпорядочивания - ПроизвольныйТип - при определении документа основания, служит для определения приоритета найденных документов;
// * Документ - ДокументСсылка - документ, который будет определяться как документ-основание;
// * Дата - Дата - дата входящего документа, по которой будут сопоставляться данные документов ИБ и данные связанных документов;
// * Номер - Строка - номер входящего документа, по которому будут сопоставляться данные документов ИБ и данные связанных документов;
//Параметры:
//  ВременныеТаблицы - МенеджерВременныхТаблиц - менеджер временных таблиц запроса, в который будет добавлена создаваемая временная таблица.
Процедура ЗаполнитьВременнуюТаблицуСвязанныхДокументовИнформационнойБазы(ВременныеТаблицы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	МассивТекстовЗапросаДокументыПоЗаказу = Новый Массив;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	НЕОПРЕДЕЛЕНО КАК Ссылка,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Дата
	|ПОМЕСТИТЬ ДокументыПоЗаказу
	|ГДЕ
	|	ЛОЖЬ";
	
	МассивТекстовЗапросаДокументыПоЗаказу.Добавить(ТекстЗапроса);
	
	МассивТекстовЗапросаДокументыИнформационнойБазы = Новый Массив;
	
	МассивТекстовРеестраДокументовИнформационнойБазы = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Ссылка,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Дата,
	|	"""" КАК Номер
	|ПОМЕСТИТЬ РеестрДокументов
	|ГДЕ
	|	ЛОЖЬ";
	
	МассивТекстовРеестраДокументовИнформационнойБазы.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДокументовВЕТИС.ПустаяСсылка) КАК ТипДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ПоказательУпорядочивания,
	|	НЕОПРЕДЕЛЕНО КАК Документ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Дата,
	|	"""" КАК Номер
	|ПОМЕСТИТЬ ДокументыИнформационнойБазы
	|ГДЕ
	|	ЛОЖЬ";

	МассивТекстовЗапросаДокументыИнформационнойБазы.Добавить(ТекстЗапроса);
	
	АнализируемыеТипыСсылок = Новый Массив;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ПоступлениеТоваров) Тогда
		АнализируемыеТипыСсылок.Добавить(Тип("ДокументСсылка.ПоступлениеТоваров"));
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику) Тогда
		АнализируемыеТипыСсылок.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтПокупателя) Тогда
		АнализируемыеТипыСсылок.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваров) Тогда
		АнализируемыеТипыСсылок.Добавить(Тип("ДокументСсылка.РеализацияТоваров"));
	КонецЕсли;
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПокупателя) Тогда
		АнализируемыеТипыСсылок.Добавить(Тип("ДокументСсылка.ЗаказПокупателя"));
	КонецЕсли;
	
	Если АнализируемыеТипыСсылок.Количество() > 0 Тогда
			
		Если ПравоДоступа("Чтение", Метаданные.Документы.ПоступлениеТоваров) Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДокументыПоЗаказу.ЗаказПоставщику КАК Заказ,
			|	ДокументыПоЗаказу.Ссылка КАК Ссылка,
			|	ДокументыПоЗаказу.Дата КАК Дата
			|ИЗ
			|	Документ.ПоступлениеТоваров КАК ДокументыПоЗаказу
			|ГДЕ
			|	ДокументыПоЗаказу.Проведен";
			
			МассивТекстовЗапросаДокументыПоЗаказу.Добавить(ТекстЗапроса);
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПоступлениеТоваров.Ссылка КАК Ссылка,
			|	ПоступлениеТоваров.Дата КАК Дата,
			|	ПоступлениеТоваров.Номер КАК Номер
			|ИЗ
			|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
			|ГДЕ
			|	ПоступлениеТоваров.Проведен";
			
			МассивТекстовРеестраДокументовИнформационнойБазы.Добавить(ТекстЗапроса);
		КонецЕсли;
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваров) Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ДокументыПоЗаказу.ЗаказПокупателя КАК Заказ,
			|	ДокументыПоЗаказу.Ссылка КАК Ссылка,
			|	ДокументыПоЗаказу.Дата КАК Дата
			|ИЗ
			|	Документ.РеализацияТоваров КАК ДокументыПоЗаказу
			|ГДЕ
			|	ДокументыПоЗаказу.Проведен";
			
			МассивТекстовЗапросаДокументыПоЗаказу.Добавить(ТекстЗапроса);
			
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РеализацияТоваров.Ссылка КАК Ссылка,
			|	РеализацияТоваров.Дата КАК Дата,
			|	РеализацияТоваров.Номер КАК Номер
			|ИЗ
			|	Документ.РеализацияТоваров КАК РеализацияТоваров
			|ГДЕ
			|	РеализацияТоваров.Проведен";
			
			МассивТекстовРеестраДокументовИнформационнойБазы.Добавить(ТекстЗапроса);
		КонецЕсли;
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтПокупателя) Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВозвратТоваровОтПокупателя.Ссылка КАК Ссылка,
			|	ВозвратТоваровОтПокупателя.Дата КАК Дата,
			|	ВозвратТоваровОтПокупателя.Номер КАК Номер
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
			|ГДЕ
			|	ВозвратТоваровОтПокупателя.Проведен";
			
			МассивТекстовРеестраДокументовИнформационнойБазы.Добавить(ТекстЗапроса);
		КонецЕсли;
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику) Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаказПоставщику.Ссылка КАК Ссылка,
			|	ЗаказПоставщику.Дата КАК Дата,
			|	ЗаказПоставщику.Номер КАК Номер
			|ИЗ
			|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
			|ГДЕ
			|	ЗаказПоставщику.Проведен";
			
			МассивТекстовРеестраДокументовИнформационнойБазы.Добавить(ТекстЗапроса);
		КонецЕсли;
		
		Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПокупателя) Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаказПокупателя.Ссылка КАК Ссылка,
			|	ЗаказПокупателя.Дата КАК Дата,
			|	ЗаказПокупателя.Номер КАК Номер
			|ИЗ
			|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|ГДЕ
			|	ЗаказПокупателя.Проведен";
			
			МассивТекстовРеестраДокументовИнформационнойБазы.Добавить(ТекстЗапроса);
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) В (ТИП(Документ.ЗаказПоставщику), ТИП(Документ.ЗаказПокупателя))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДокументовВЕТИС.Заказ)
		|		КОГДА ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) В (ТИП(Документ.ПоступлениеТоваров), ТИП(Документ.ВозвратТоваровОтПокупателя), ТИП(Документ.РеализацияТоваров))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДокументовВЕТИС.Торг12)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДокументовВЕТИС.ПустаяСсылка)
		|	КОНЕЦ КАК ТипДокумента,
		|	ЕСТЬNULL(ДокументыПоЗаказу.Дата, РеестрДокументов.Дата) КАК ПоказательУпорядочивания,
		|	ЕСТЬNULL(ДокументыПоЗаказу.Ссылка, РеестрДокументов.Ссылка) КАК Документ,
		|	РеестрДокументов.Дата КАК Дата,
		|	РеестрДокументов.Номер КАК Номер
		|ИЗ
		|	РеестрДокументов КАК РеестрДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПоЗаказу КАК ДокументыПоЗаказу
		|		ПО РеестрДокументов.Ссылка = ДокументыПоЗаказу.Заказ
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) В (&АнализируемыеТипыСсылок)";
	
		МассивТекстовЗапросаДокументыИнформационнойБазы.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АнализируемыеТипыСсылок", АнализируемыеТипыСсылок);
	
	ТекстЗапросаДокументыПоЗаказу = СтрСоединить(МассивТекстовЗапросаДокументыПоЗаказу,
		РазделительЗапросовВОбъединении());
	ТекстЗапросаДокументыПоЗаказу = ТекстЗапросаДокументыПоЗаказу + Символы.ПС +
	"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ";
	
	ТекстЗапросаРеестраДокументов = СтрСоединить(МассивТекстовРеестраДокументовИнформационнойБазы,
		РазделительЗапросовВОбъединении());
		
	ТекстЗапросаДокументыИнформационнойБазы = СтрСоединить(МассивТекстовЗапросаДокументыИнформационнойБазы,
		РазделительЗапросовВОбъединении());
		
	ТекстЗапросаДокументыИнформационнойБазы = ТекстЗапросаДокументыИнформационнойБазы + Символы.ПС +
	"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипДокумента,
	|	Дата,
	|	Номер";
	
	
	МассивТекстовЗапроса = Новый Массив;
	МассивТекстовЗапроса.Добавить(ТекстЗапросаДокументыПоЗаказу);
	МассивТекстовЗапроса.Добавить(ТекстЗапросаРеестраДокументов);
	МассивТекстовЗапроса.Добавить(ТекстЗапросаДокументыИнформационнойБазы);
	МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ ДокументыПоЗаказу");
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ОрганизацииИКонтрагенты

// Определяет заданы ли настройки подключения к сервису интернет поддержки пользователей.
//
Процедура НастройкиПодключенияКСервисуИППЗаданы(НастройкиЗаданы) Экспорт
	
	НастройкиЗаданы = ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
КонецПроцедуры

// Заполняет параметры поиска хозяйствующего субъекта по элементу справочника конфигурации
//
// Параметры:
//  ДанныеКонтрагента - (См. ИнтеграцияВЕТИС.ДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта)
//  Контрагент        - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - ссылка на контрагента информационной базы
Процедура ЗаполнитьДанныеКонтрагентаДляПоискаХозяйствующегоСубъекта(ДанныеКонтрагента, Контрагент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	"""" КАК ОГРН,
	|	Контрагенты.Наименование КАК Наименование,
	|	"""" КАК НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|				ИЛИ Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ЮридическоеЛицо)
	|		КОГДА Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ИндивидуальныйПредприниматель)
	|		КОГДА Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыХозяйствующихСубъектовВЕТИС.ФизическоеЛицо)
	|	КОНЕЦ КАК Тип
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеКонтрагента, Выборка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФизическиеЛица

// Заполняет значения реквизитов из справочника физических лиц используемые для создания пользователя ВетИС
//
// Параметры:
//  ДанныеФизЛица  - (См. ИнтеграцияВЕТИС.ДанныеФизическогоЛица)
//  ФизическоеЛицо - ОпределяемыйТип.ФизическоеЛицо - ссылка на физическое лицо информационной базы
Процедура ЗаполнитьДанныеФизическогоЛица(ДанныеФизЛица, ФизическоеЛицо) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВЫБОР
	|		КОГДА ФИОФизическихЛицСрезПоследних.ФизЛицо ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ФИОФизическихЛицСрезПоследних.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА ФИОФизическихЛицСрезПоследних.ФизЛицо ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ФИОФизическихЛицСрезПоследних.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА ФИОФизическихЛицСрезПоследних.ФизЛицо ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ФИОФизическихЛицСрезПоследних.Отчество
	|	КОНЕЦ КАК Отчество,
	|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ДокументВид,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК ДокументСерия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК ДокументНомер
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	|		ПО (ФИОФизическихЛицСрезПоследних.ФизЛицо = ФизическиеЛица.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|		ПО (ДокументыФизическихЛицСрезПоследних.Физлицо = ФизическиеЛица.Ссылка)
	|			И (ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность)
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &ФизическоеЛицо";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ДанныеФизЛица, Выборка);
	КонецЕсли;
	
	Если ДанныеФизЛица.ДокументВид = Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ Тогда
		ДанныеФизЛица.ДокументТип = Перечисления.ТипыДокументовВЕТИС.ПаспортГражданинаРФ;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// В процедуре необходимо определить значения по умолчанию, которые будут подставляться в
// реквизиты не сопоставленных элементов справочника.
//
// Параметры:
//  СобственнаяОрганизация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - значение по умолчанию для собственной организации,
//  СторонняяОрганизация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - значение по умолчанию для сторонней организации.
Процедура ЗначенияПоУмолчаниюНеСопоставленныхОбъектов(СобственнаяОрганизация,
		                                              СобственныйТорговыйОбъект,
		                                              СобственныйПроизводственныйОбъект,
		                                              СторонняяОрганизация,
		                                              СтороннийТорговыйОбъект) Экспорт
	
	
	СобственнаяОрганизация    			= Справочники.Организации.ПустаяСсылка();
	СобственныйТорговыйОбъект 			= Справочники.Магазины.ПустаяСсылка();
	СобственныйПроизводственныйОбъект	= Неопределено;
	СторонняяОрганизация      			= Справочники.Контрагенты.ПустаяСсылка();
	СтороннийТорговыйОбъект   			= Неопределено;
	
КонецПроцедуры

#Область ТабличнаяЧастьТовары

// Устанавливает параметры выбора номенклатуры.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма, в которой нужно установить параметры выбора.
//  ИмяПоляВвода - Строка - Имя поля ввода номенклатуры.
Процедура УстановитьПараметрыВыбораНоменклатуры(Форма, ИмяПоляВвода = "ТоварыНоменклатура") Экспорт
	
	ПараметрыВыбора = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Форма.Элементы[ИмяПоляВвода].ПараметрыВыбора);
	
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Товар));
	
	ОсобенностиУчетаНоменклатурыВетИС = Новый Массив;
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС);
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС);
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС);
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС);
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС);
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС);
	ОсобенностиУчетаНоменклатурыВетИС.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС);
	
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ОсобенностьУчета", ОсобенностиУчетаНоменклатурыВетИС));
	
	Форма.Элементы[ИмяПоляВвода].ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

// Заполняет количество номенклатуры по количеству ВЕТИС.
//
// Параметры:
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции	- Строка табличной части объекта.
//  Суффикс - Строка - Окончание наименования колонки, содержащей количество по данным ВЕТИС.
Процедура ЗаполнитьКоличествоНоменклатурыПоКоличествуВЕТИС(ТекущаяСтрока, Суффикс = "") Экспорт
	
	ПересчитатьКоличествоЕдиницПоВЕТИС = Новый Структура("ЕдиницаИзмеренияВЕТИС, Суффикс");
	ЗаполнитьЗначенияСвойств(ПересчитатьКоличествоЕдиницПоВЕТИС, ТекущаяСтрока);
	ПересчитатьКоличествоЕдиницПоВЕТИС.Суффикс = Суффикс;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиницПоВЕТИС", ПересчитатьКоличествоЕдиницПоВЕТИС);
	ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, Неопределено);
	
КонецПроцедуры

// Заполняет статус указания серий и проверяет серию в строке табличной части объекта.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Документ, для которого необходимо заполнить статус указания серии.
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - Строка табличной части объекта.
Процедура ПроверитьСериюРассчитатьСтатус(ДокументОбъект, ТекущаяСтрока) Экспорт
	
	ПараметрыУказанияСерий = ИнтеграцияИС.ПараметрыУказанияСерийФормыОбъекта(ДокументОбъект,
								ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ДокументОбъект.Метаданные().ПолноеИмя()));
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.Свойство("Товары") Тогда
		ПроверитьСериюРассчитатьСтатус = Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерий.Товары, Неопределено);
	Иначе
		ПроверитьСериюРассчитатьСтатус = Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерий, Неопределено);
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПроверитьСериюРассчитатьСтатус);
	
	ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область Серии

// Возвращает текст запроса для движений по регистру накопления СерииНоменклатуры.
//
// Возвращаемое значение:
//  Строка - текст запроса.
Процедура ЗаполнитьТекстЗапросаДвижениеСерийТоваров(ТекстЗапроса, МетаданныеДокумента) Экспорт
	
	ТекстЗапроса = "";
	
	Если МетаданныеДокумента = Метаданные.Документы.ВходящаяТранспортнаяОперацияВЕТИС Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ТаблицаСерииУточнение.Номенклатура, ТаблицаСерии.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(ТаблицаСерииУточнение.Характеристика, ТаблицаСерии.Характеристика) КАК Характеристика,
		|	ЕСТЬNULL(ТаблицаСерииУточнение.Серия, ТаблицаСерии.Серия) КАК Серия,
		|	ЕСТЬNULL(ТаблицаСерииУточнение.Количество, ТаблицаСерии.Количество) КАК Количество,
		|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВзаимодействиеСВЕТИС) КАК СкладскаяОперация,
		|	&Ссылка КАК Документ,
		|	&Период КАК Период,
		|	&Ссылка КАК Регистратор,
		|	ЛОЖЬ КАК ЭтоСкладскоеДвижение
		|ИЗ
		|	Документ.ВходящаяТранспортнаяОперацияВЕТИС.Товары КАК ТаблицаСерии
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВходящаяТранспортнаяОперацияВЕТИС.ТоварыУточнение КАК ТаблицаСерииУточнение
		|		ПО ТаблицаСерии.ИдентификаторСтроки = ТаблицаСерииУточнение.ИдентификаторСтроки
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
		
	ИначеЕсли МетаданныеДокумента = Метаданные.Документы.ПроизводственнаяОперацияВЕТИС Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерии.Номенклатура КАК Номенклатура,
		|	ТаблицаСерии.Характеристика КАК Характеристика,
		|	ТаблицаСерии.Серия КАК Серия,
		|	ТаблицаСерии.Количество КАК Количество,
		|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВзаимодействиеСВЕТИС) КАК СкладскаяОперация,
		|	&Ссылка КАК Документ,
		|	&Период КАК Период,
		|	&Ссылка КАК Регистратор,
		|	ЛОЖЬ КАК ЭтоСкладскоеДвижение
		|ИЗ
		|	Документ.ПроизводственнаяОперацияВЕТИС.Товары КАК ТаблицаСерии
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаСерии.Номенклатура,
		|	ТаблицаСерии.Характеристика,
		|	ТаблицаСерии.Серия,
		|	ТаблицаСерии.Количество,
		|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВзаимодействиеСВЕТИС),
		|	&Ссылка,
		|	&Период,
		|	&Ссылка,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПроизводственнаяОперацияВЕТИС.Сырье КАК ТаблицаСерии
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
		
	ИначеЕсли МетаданныеДокумента = Метаданные.Документы.ИнвентаризацияПродукцииВЕТИС Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерии.Номенклатура КАК Номенклатура,
		|	ТаблицаСерии.Характеристика КАК Характеристика,
		|	ТаблицаСерии.Серия КАК Серия,
		|	ВЫБОР
		|		КОГДА ТаблицаСерии.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Добавление) ТОГДА
		|			ТаблицаСерии.КоличествоИзменение
		|		КОГДА ТаблицаСерии.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Изменение) ТОГДА
		|			ТаблицаСерии.КоличествоИзменение
		|		КОГДА ТаблицаСерии.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Удаление) ТОГДА
		|			ТаблицаСерии.КоличествоИзменение
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ КАК Количество,
		|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВзаимодействиеСВЕТИС) КАК СкладскаяОперация,
		|	&Ссылка КАК Документ,
		|	&Период КАК Период,
		|	&Ссылка КАК Регистратор,
		|	ЛОЖЬ КАК ЭтоСкладскоеДвижение
		|ИЗ
		|	Документ.ИнвентаризацияПродукцииВЕТИС.Товары КАК ТаблицаСерии
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|";
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерии.Номенклатура КАК Номенклатура,
		|	ТаблицаСерии.Характеристика КАК Характеристика,
		|	ТаблицаСерии.Серия КАК Серия,
		|	ТаблицаСерии.Количество КАК Количество,
		|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВзаимодействиеСВЕТИС) КАК СкладскаяОперация,
		|	&Ссылка КАК Документ,
		|	&Период КАК Период,
		|	&Ссылка КАК Регистратор,
		|	ЛОЖЬ КАК ЭтоСкладскоеДвижение
		|ИЗ
		|	Документ.%ИмяДокумента%.Товары КАК ТаблицаСерии
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяДокумента%", МетаданныеДокумента.Имя);
	
КонецПроцедуры

// Заполняет, при необходимости создает серии в документе ВетИС или его выделенных строках
//
// Параметры:
//  Контекст  - (см. ИнтеграцияВЕТИС.СгенерироватьСерии)
//  Результат - (см. ИнтеграцияВЕТИС.СтруктураРезультатЗаполненияСерий)
Процедура ЗаполнитьСгенерироватьСерии(Контекст, Результат) Экспорт
	
	ПараметрыЗаполнения = ПараметрыЗаполненияСерий();
	ПараметрыЗаполнения.ПараметрыУказанияСерий = Контекст.ПараметрыУказанияСерий;
	
	Склад = Контекст.Объект.ТорговыйОбъект;
	Если Склад = Метаданные.ОпределяемыеТипы.Склад.Тип.ПривестиЗначение(Склад) Тогда
		ЗаполнитьПараметрЗаполненияСклад(Контекст.Объект, ПараметрыЗаполнения);
	КонецЕсли;
	
	РезультатЗаполнения = ИнтеграцияВЕТИСРТ_ЗаполнитьСгенерироватьСерии(
		Контекст.Товары,
		Контекст.МассивСтрок,
		ПараметрыЗаполнения,
		Контекст.ТоварыУточнение);
	
	ЗаполнитьЗначенияСвойств(Результат, РезультатЗаполнения);
	
КонецПроцедуры

// Заполняет, при необходимости создает серии в документе ВетИС или его выделенных строках
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - объект для заполнения
//  Товары - ДанныеФормыКоллекция, ТаблицаЗначений - ТЧ документа
//  ВыделенныеСтроки - Массив - выделенные строки документа
//  ПараметрыУказанияСерий - см. ИнтеграцияИСПереопределяемый.ЗаполнитьПараметрыУказанияСерий
//  ТоварыУточнение - Неопределено, ДанныеФормыКоллекция - Дополнительная ТЧ, содержащая расшифровку строк товаров
//  РезультатЗаполненияСерий - см. ИнтеграцияВетис.СтруктураРезультатЗаполненияСерий.
Процедура ПриГенерацииСерий(Объект, Товары, ВыделенныеСтроки, ПараметрыУказанияСерий, ТоварыУточнение, РезультатЗаполненияСерий) Экспорт
	
	МассивСтрок = Новый Массив;
	
	Если ТипЗнч(Товары) = Тип("ДанныеФормыКоллекция") Тогда
		Для Каждого Строка Из ВыделенныеСтроки Цикл
			МассивСтрок.Добавить(Товары.НайтиПоИдентификатору(Строка));
		КонецЦикла;
	ИначеЕсли ТипЗнч(Товары) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Строка Из ВыделенныеСтроки Цикл
			МассивСтрок.Добавить(Товары[Строка]);
		КонецЦикла;
	Иначе
		ВызватьИсключение НСтр("ru = 'Неправильный тип параметра Товары метода СгенерироватьСерии'");
	КонецЕсли;
	
	КонтекстЗаполненияСерий = Новый Структура;
	КонтекстЗаполненияСерий.Вставить("Объект",                 Объект);
	КонтекстЗаполненияСерий.Вставить("Товары",                 Товары);
	КонтекстЗаполненияСерий.Вставить("МассивСтрок",            МассивСтрок);
	КонтекстЗаполненияСерий.Вставить("ПараметрыУказанияСерий", ПараметрыУказанияСерий);
	КонтекстЗаполненияСерий.Вставить("ТоварыУточнение",        ТоварыУточнение);
	
	ЗаполнитьСгенерироватьСерии(КонтекстЗаполненияСерий, РезультатЗаполненияСерий);
	
КонецПроцедуры

#КонецОбласти

// Процедура заполняет признак использования комиссии при закупках или производства из давальческого сырья.
//
// Параметры:
//  Используется - Булево - Признак использования комиссии при закупках или производства из давальческого сырья.
Процедура ИспользуетсяКомиссияПриЗакупкахИлиПереработкаДавальческогоСырья(Используется) Экспорт
	
	Используется = Ложь;
	
КонецПроцедуры

// Процедура заполняет признак использования производства на стороне.
//
// Параметры:
//  Используется - Булево - Признак использования производства на стороне.
Процедура ИспользуетсяПереработкаНаСтороне(Используется) Экспорт
	
	Используется = Ложь;
	
КонецПроцедуры

// Процедура определяет использование транспортных средств
//
// Параметры:
//  Указывается - Булево - Признак использования транспортных средств.
Процедура УказываетсяТранспортноеСредство(Указывается) Экспорт
	
	Указывается = Ложь;
	
КонецПроцедуры

// Заполняет данные реквизитов пункта маршрута ВетИС получаемые из транспортного средства
//
// Параметры:
//  Реквизиты - Структура - возможные реквизиты пункта маршрута ВетИС с данными транспортного средства
//  ТранспортноеСредство - ОпределяемыйТип.ТранспортныеСредстваВЕТИС - транспортное средство
Процедура ПриОпределенииРеквизитовТранспортногоСредства(Реквизиты, ТранспортноеСредство) Экспорт
	
	Реквизиты.НомерТранспортногоСредства = "";
	Реквизиты.НомерАвтомобильногоПрицепа = "";
	
КонецПроцедуры

#КонецОбласти

#Область ИнтеграцияВЕТИСРТ

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийДокументов

Процедура ОбработкаЗаполненияИнвентаризацииПродукцииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияВЕТИСРТ_ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаВходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	
КонецПроцедуры

Процедура ОбработкаЗаполненияПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияВЕТИСРТ_ОбработкаЗаполненияДокументаПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти


#Область Серии

// Возвращает структуру параметров заполнения серий.
//
// Возвращаемое значение:
//	Структура - Структура со свойствами:
//		* ПараметрыУказанияСерий	- Структура				- Состав полей определен в функции 
//																НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//		* Склад						- ОпределяемыйТип.Склад	- Склад, на котором осуществляется серийный учет.
//
Функция ПараметрыЗаполненияСерий() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("ПараметрыУказанияСерий",	Неопределено);
	ПараметрыЗаполнения.Вставить("Склад",					Неопределено);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Заполняет свойство "Склад" в структуре параметров заполнения серий.
//
// Параметры:
//	Объект				- ДокументОбъект, ДанныеФормыКоллекция	- Объект, хранящий значение склада.
//	ПараметрыЗаполнения	- Структура								- Параметры заполнения серий.
//
Процедура ЗаполнитьПараметрЗаполненияСклад(Объект, ПараметрыЗаполнения) Экспорт

	ПараметрыУказанияСерий = ПараметрыЗаполнения.ПараметрыУказанияСерий;
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыУказанияСерий.ИмяПоляСклад)
		И ОбщегоНазначенияРТКлиентСервер.ЕстьРеквизитОбъекта(Объект, ПараметрыУказанияСерий.ИмяПоляСклад) Тогда
		
		ПараметрыЗаполнения.Склад = Объект[ПараметрыУказанияСерий.ИмяПоляСклад];
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область РеализацияТоваров

Процедура ЗаполнитьРеализациюТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПродажи");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата", ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад", ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ =
		СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(
		ДокументОбъект,
		СтруктураЗаполненияТЧ);
КонецПроцедуры

#КонецОбласти

Функция РазделительЗапросовВОбъединении()
	
	Результат = ОбщегоНазначенияРТ.РазделительЗапросовВОбъединении();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область ПрограммныйИнтерфейс

// Возвращает единицу измерения по ОКЕИ.
//
// Параметры:
//	КодОКЕИ - ОпределяемыйТип.СтрокаВЕТИС - Код ОКЕИ.
//
// Возвращаемое значение:
//	СправочникСсылка.БазовыеЕдиницыИзмерения, Неопределено - Единица измерения по ОКЕИ.
//
Функция ИнтеграцияВЕТИСРТ_ЕдиницаИзмеренияОКЕИ(КодОКЕИ) Экспорт
	
	СоответствиеКодовОКЕИ = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕдиницыИзмерения.Ссылка КАК Ссылка,
	|	ЕдиницыИзмерения.Код КАК Код
	|ИЗ
	|	Справочник.БазовыеЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Код <> """"";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеКодовОКЕИ.Вставить(СокрЛП(Выборка.Код), Выборка.Ссылка);
	КонецЦикла;
	
	ЕдиницаИзмерения = СоответствиеКодовОКЕИ.Получить(КодОКЕИ);
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

// Создает единицу измерения по ОКЕИ.
//
// Параметры:
//	КодОКЕИ - ОпределяемыйТип.СтрокаВЕТИС - Код ОКЕИ.
//
// Возвращаемое значение:
//	СправочникСсылка.ЕдиницаИзмерения, Неопределено - Единица измерения по ОКЕИ.
//
Функция ИнтеграцияВЕТИСРТ_СоздатьЕдиницуИзмеренияПоКлассификаторуОКЕИ(КодОКЕИ) Экспорт
	
	ДеревоДанныхКлассификатора = Справочники.БазовыеЕдиницыИзмерения.ПолучитьДанныеКлассификатора();
	
	ДанныеКлассификатора = ОбщегоНазначенияРТ.ДанныеДерева(ДеревоДанныхКлассификатора, 2);
	СтрокаКлассификатора = ДанныеКлассификатора.Найти(КодОКЕИ, "КодЧисловой");
	
	ЕдиницаИзмерения = Неопределено;
	
	НачатьТранзакцию();
	
	Попытка
		
		Если ЗначениеЗаполнено(СтрокаКлассификатора.УсловноеОбозначениеНациональное) Тогда
			Наименование = СтрокаКлассификатора.УсловноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.УсловноеОбозначениеМеждународное) Тогда
			Наименование = СтрокаКлассификатора.УсловноеОбозначениеМеждународное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеНациональное) Тогда
			Наименование = СтрокаКлассификатора.КодовоеБуквенноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное) Тогда
			Наименование = СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное;
		Иначе
			Наименование = СтрокаКлассификатора.Наименование;
		КонецЕсли;
		
		СправочникОбъект = Справочники.БазовыеЕдиницыИзмерения.СоздатьЭлемент();
		
		СправочникОбъект.Код                     = СокрЛП(СтрокаКлассификатора.КодЧисловой);
		СправочникОбъект.Наименование            = СтрЗаменить(Наименование, Символы.ПС, "/");
		СправочникОбъект.НаименованиеПолное      = СтрЗаменить(СтрокаКлассификатора.Наименование, Символы.ПС, "/");
		СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное,
																Символы.ПС,
																"/");
		
		СправочникОбъект.Записать();
		
		ЕдиницаИзмерения = СправочникОбъект.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		КодОсновногоЯзыка = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
		ИмяСобытия = НСтр("ru = 'Создание единицы измерения по классификатору.'", КодОсновногоЯзыка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьТабличнуюЧастьДокумента(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, СоответствиеКолонокКоличествоВЕТИС, БезСопоставления = Истина)
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	КэшированныеЗначения      = Новый Структура("КоэффициентыУпаковок", Новый Соответствие);
	КолонкиТабличнойЧасти     = ТабличнаяЧасть.Выгрузить(Новый Структура("НомерСтроки",Ложь));
	ЕстьЕдиницаИзмеренияВЕТИС = КолонкиТабличнойЧасти.Колонки.Найти("ЕдиницаИзмеренияВЕТИС") <> Неопределено;
	ЕстьИдентификаторСтроки   = КолонкиТабличнойЧасти.Колонки.Найти("ИдентификаторСтроки") <> Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Продукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ЕстьЕдиницаИзмеренияВЕТИС Тогда
				ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
				Если ЗначениеЗаполнено(НоваяСтрока.ЕдиницаИзмеренияВЕТИС) Тогда
					Для Каждого КлючИЗначение Из СоответствиеКолонокКоличествоВЕТИС Цикл
						НоваяСтрока[КлючИЗначение.Значение] = ИнтеграцияВЕТИСРТКлиентСервер.ПересчитатьКоличествоЕдиницВЕТИС(
											НоваяСтрока[КлючИЗначение.Ключ],
											Выборка.Номенклатура,
											НоваяСтрока.ЕдиницаИзмеренияВЕТИС,
											Ложь,
											КэшированныеЗначения,
											"");
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьИдентификаторСтроки Тогда
				НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КонецЕсли;
			
		Иначе
			
			Если ОбщегоНазначенияРТКлиентСервер.ЕстьРеквизитОбъекта(Выборка, "Номенклатура") Тогда
				
				ТабличнаяЧасть.Очистить();
				
				ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ВЕТИС.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", Выборка.Номенклатура);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ИнвентаризацияПродукцииВЕТИС

Процедура ЗаполнитьШапкуДокументаПоОснованию(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента.ДокументОснование);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		РеквизитыВЕТИС = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Организация, РеквизитыДокумента.ТорговыйОбъект);
		ЗаполнитьЗначенияСвойств(ДокументОбъект,РеквизитыВЕТИС);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак)
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияИнвентаризацииПродукцииИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИнвентаризацияПродукцииВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличестваВЕТИС = Новый Структура;
	КолонкиКоличестваВЕТИС.Вставить("КоличествоИзменение","КоличествоИзменениеВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваВЕТИС);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияИнвентаризацииПродукцииИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+
	ТекстТоварыДокумента
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура                    КАК Номенклатура,
	|	ТоварыСерии.Характеристика                  КАК Характеристика,
	|	ТоварыСерии.Серия                           КАК Серия,
	|	ТоварыСерии.Количество                      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура              КАК Номенклатура,
	|	ОформленныеТовары.Характеристика            КАК Характеристика,
	|	ОформленныеТовары.Серия                     КАК Серия,
	|	-ОформленныеТовары.КоличествоИзменение      КАК Количество
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                                        КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения                       КАК Упаковка,
	|	ТоварыКОформлению.Характеристика                                      КАК Характеристика,
	|	ТоварыКОформлению.Серия                                               КАК Серия,
	|	СопоставленыеПозиции.Продукция                                        КАК Продукция,
	|	СУММА(ТоварыКОформлению.Количество)                                   КАК КоличествоИзменение,
	|	СУММА(ТоварыКОформлению.Количество)                                   КАК КоличествоИзменениеВЕТИС,
	|	ВЫБОР
	|		КОГДА СУММА(ТоварыКОформлению.Количество) > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Добавление)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Изменение)
	|	КОНЕЦ                               КАК Операция
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.Продукция
	|ИМЕЮЩИЕ ДопустимыйЗнак
	|";
	Если ДопустимыйЗнак = -1 Тогда
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)<0");
	ИначеЕсли ДопустимыйЗнак = 1 Тогда
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)>0");
	Иначе
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)<>0");
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

Функция ТекстЗапросаШапкиДокумента(ИмяДокумента)
	
	Возврат СтрШаблон("ВЫБРАТЬ
	|	ДокОснование.Ссылка КАК ДокументОснование,
	|	ДокОснование.Номер КАК НомерАктаНесоответствия,
	|	ДокОснование.Дата КАК ДатаАктаНесоответствия,
	|	НЕ ДокОснование.Проведен КАК ЕстьОшибкиПроведен,
	|	ДокОснование.Ответственный КАК Ответственный,
	|	ДокОснование.Организация КАК Организация,
	|	ДокОснование.Магазин КАК ТорговыйОбъект
	|ИЗ
	|	Документ.%1 КАК ДокОснование
	|ГДЕ
	|	ДокОснование.Ссылка = &ДокументОснование", ИмяДокумента);
	
КонецФункции

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(ТекстЗапросаШапкиДокумента("ОприходованиеТоваров"));
	ЗаполнитьШапкуДокументаПоОснованию(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	&ПустаяСерия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&ПустаяСерия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ОприходованиеТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|";
		
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(ТекстЗапросаШапкиДокумента("ПересортицаТоваров"));
	ЗаполнитьШапкуДокументаПоОснованию(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.Характеристика     КАК Характеристика,
	|	&ПустаяСерия              КАК Серия,
	|	-СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&ПустаяСерия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	&ПустаяСерия,
	|	СУММА(Товары.Количество)
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	&ПустаяСерия
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 0);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(ТекстЗапросаШапкиДокумента("СписаниеТоваров"));
	ЗаполнитьШапкуДокументаПоОснованию(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ПустаяСерия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Серия КАК Серия,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.СписаниеТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия) КАК Серия,
	|	СУММА(ЕСТЬNULL(-Серии.Количество, -Товары.Количество)) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|		ПО (Серии.Номенклатура = Товары.Номенклатура)
	|			И (Серии.Характеристика = Товары.Характеристика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия),
	|	Товары.Характеристика,
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

#КонецОбласти

#Область ПроизводственнаяОперацияВЕТИС

Процедура ИнтеграцияВЕТИСРТ_ОбработкаЗаполненияДокументаПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ИсходящаяТранспортнаяОперацияВЕТИС

Процедура ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(РеквизитыДокумента.ДокументОснование);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Грузоотправитель, РеквизитыДокумента.СкладОтправитель);
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		
		Грузополучатель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.СкладПолучатель);
		ДокументОбъект.ГрузополучательХозяйствующийСубъект = Грузополучатель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузополучательПредприятие          = Грузополучатель.Предприятие;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияИсходящейТранспортнойОперацииИзПрикладногоДокумента(ИмяДокумента,ЕстьСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличествоВЕТИС);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияИсходящейТранспортнойОперацииИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии)
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	&ПустаяСерия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&ПустаяСерия
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	&ПустаяСерия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&ПустаяСерия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС))
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                  КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ТоварыКОформлению.Характеристика                КАК Характеристика,
	|	ТоварыКОформлению.Серия                         КАК Серия,
	|	СопоставленыеПозиции.Продукция                  КАК Продукция,
	|	СУММА(ТоварыКОформлению.Количество)             КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)             КАК КоличествоВЕТИС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.Продукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
КонецФункции

Процедура ИнтеграцияВЕТИСРТ_ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокОснование.Ссылка КАК ДокументОснование,
	|	ДокОснование.Номер КАК НомерТТН,
	|	ДокОснование.Дата КАК ДатаТТН,
	|	НЕ ДокОснование.Проведен КАК ЕстьОшибкиПроведен,
	|	ДокОснование.Ответственный КАК Ответственный,
	|	ДокОснование.Контрагент КАК Грузополучатель,
	|	ДокОснование.Организация КАК Грузоотправитель,
	|	ДокОснование.Магазин КАК СкладОтправитель,
	|	ДокОснование.Магазин КАК СкладПолучатель
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокОснование
	|ГДЕ
	|	ДокОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровПоставщику", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокОснование.Ссылка                КАК ДокументОснование,
	|	ДокОснование.Номер                 КАК НомерТТН,
	|	ДокОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокОснование.Ответственный         КАК Ответственный,
	|	ДокОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокОснование.Организация           КАК Грузоотправитель,
	|	ДокОснование.Магазин               КАК СкладОтправитель,
	|	ДокОснование.Магазин               КАК СкладПолучатель
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокОснование
	|ГДЕ
	|	ДокОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ПередачаТоваровМеждуОрганизациями", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                КАК ДокументОснование,
	|	ПеремещениеТоваров.Номер                 КАК НомерТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаТТН,
	|	НЕ ПеремещениеТоваров.Проведен           КАК ЕстьОшибкиПроведен,
	|	ПеремещениеТоваров.Организация           КАК Грузоотправитель,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Грузополучатель,
	|	ПеремещениеТоваров.МагазинОтправитель    КАК СкладОтправитель,
	|	ПеремещениеТоваров.МагазинПолучатель     КАК СкладПолучатель,
	|	ПеремещениеТоваров.Ответственный         КАК Ответственный
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ПеремещениеТоваров", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокОснование.Ссылка                КАК ДокументОснование,
	|	ДокОснование.Номер                 КАК НомерТТН,
	|	ДокОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокОснование.Ответственный         КАК Ответственный,
	|	ДокОснование.Контрагент            КАК Грузополучатель,
	|	ДокОснование.Организация           КАК Грузоотправитель,
	|	ДокОснование.Магазин               КАК СкладОтправитель,
	|	ДокОснование.Магазин               КАК СкладПолучатель
	|ИЗ
	|	Документ.РеализацияТоваров КАК ДокОснование
	|ГДЕ
	|	ДокОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваров", Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Прочее

#Область СерииНоменклатуры

// Заполняет реквизит "Серия" в товарной табличной части.
//
// Параметры:
//	ТабличнаяЧасть		- ДанныеФормыКоллекция, ТабличнаяЧасть - Товарная табличная часть объекта.
//	ВыделенныеСтроки	- Массив	- Обрабатываемые строки таблицы.
//	ПараметрыЗаполнения	- Структура	- Состав полей определен в функции 
//										ИнтеграцияВЕТИСПереопределяемый.ПараметрыЗаполненияСерий.
//
// Возвращаемое значение:
//	Структура - Структура со свойствами:
//		* ЗаполнениеЗавершено	- Булево, Истина		- Признак успешного выполнения генераций и заполнения серий.
//		* СписокОшибок			- Массив, Неопределено	- Список ошибок.
//
Функция ИнтеграцияВЕТИСРТ_ЗаполнитьСгенерироватьСерии(ТабличнаяЧастьТовары,
									ВыделенныеСтрокиТоваров,
									ПараметрыЗаполнения,
									ТабличнаяЧастьУточнения = Неопределено) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыЗаполнения.ПараметрыУказанияСерий;
	Склад = ПараметрыЗаполнения.Склад;
	
	ПроверитьСериюРассчитатьСтатус = Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерий, Склад);
	
	СтруктураДействий = Новый Структура();
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПроверитьСериюРассчитатьСтатус);
	
	// Инициализация результирующей структуры.
	Результат = Новый Структура("ЗаполнениеЗавершено, СписокОшибок", Ложь, Неопределено);
	
	Запрос = Новый Запрос;
	
	Если ТабличнаяЧастьУточнения = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ЛОЖЬ КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	"""" КАК ИдентификаторПартии,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	0 КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ПОМЕСТИТЬ ВтУточнения";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТаблицаТовары.ЕстьУточнения КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыУточнение.НомерСтроки КАК НомерСтроки,
		|	ТоварыУточнение.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТоварыУточнение.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТоварыУточнение.Номенклатура КАК Номенклатура,
		|	ТоварыУточнение.Характеристика КАК Характеристика,
		|	ТоварыУточнение.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТоварыУточнение.Серия КАК Серия
		|ПОМЕСТИТЬ ВтУточнения
		|ИЗ
		|	&ТоварыУточнение КАК ТоварыУточнение";
		
	КонецЕсли;
	
	Разделитель = "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + Разделитель;
	
	ТекстЗапроса = 	ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтрокиТовары,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0) КАК НомерСтрокиУточнения,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ КАК ИдентификаторПартии,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ВтТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПроизводства,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ГоденДо,
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL КАК ОшибкаНетУточнения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель) КАК КоличествоПроизводителей,
	|	ВтТовары.ЕстьУточнения КАК ЕстьУточнения,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ) КАК НастройкаВидаИспользоватьХарактеристики,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьДатуПроизводстваСерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьСрокГодностиСерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьСрокГодностиСерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьИдентификаторПартииВЕТИССерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьПроизводителяВЕТИССерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьПроизводителяВЕТИССерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.АвтоматическиГенерироватьСерии, ЛОЖЬ) КАК НастройкаВидаАвтоматическиГенерироватьСерии,
	|	ВидыНоменклатуры.Ссылка КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТОбъединеннаяТаблицаТоваров
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУточнения КАК ВтУточнения
	|		ПО ВтТовары.ИдентификаторСтроки = ВтУточнения.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписиСкладскогоЖурналаВЕТИС
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ВЫБОР
	|				КОГДА ВтТовары.ЕстьУточнения
	|					ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|				ИНАЧЕ ВтТовары.Номенклатура
	|			КОНЕЦ = СпрНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СпрНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ,
	|	ВтТовары.ЕстьУточнения,
	|	ВтТовары.НомерСтроки,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0),
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL,
	|	ВтТовары.ЗаписьСкладскогоЖурнала,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьСрокГодностиСерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьИдентификаторПартииВЕТИССерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьПроизводителяВЕТИССерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.АвтоматическиГенерироватьСерии, ЛОЖЬ),
	|	ВидыНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	""ОшибкаНетУточнения"" КАК ТипОшибки,
	|	ЛОЖЬ КАК ЭтоНомерСтрокиУточнений
	|ПОМЕСТИТЬ ВТСтрокиСОшибками
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетНоменклатуры"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНеНужноГенерировать"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетХарактеристики"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьХарактеристики
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетЗаписиСкладскогоЖуранала"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии)
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетДатыПроизводства"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетГоденДо"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ГоденДо = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетИндентификатораПартии"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии = """"
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетПроизводителя"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей = 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаМногоПроизводетелей"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей > 1
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения КАК ЕстьУточнения,
	|	"""" КАК Номер,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|			ТОГДА ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ПроизводительВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИдентификаторПартииВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ГоденДо
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПроизводства,
	|	ВТОбъединеннаяТаблицаТоваров.ВладелецСерий КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТРеквизитыСерий
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|			И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии)
	|ГДЕ
	|	НЕ (ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары, ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения) В
	|				(ВЫБРАТЬ
	|					ВТСтрокиСОшибками.НомерСтрокиТовары,
	|					ВТСтрокиСОшибками.НомерСтрокиУточнения
	|				ИЗ
	|					ВТСтрокиСОшибками)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРеквизитыСерий.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТРеквизитыСерий.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТРеквизитыСерий.ЕстьУточнения КАК ЕстьУточнения,
	|	ВТРеквизитыСерий.Номер КАК Номер,
	|	ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВТРеквизитыСерий.ПроизводительВЕТИС КАК ПроизводительВЕТИС,
	|	ВТРеквизитыСерий.ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
	|	ВТРеквизитыСерий.ГоденДо КАК ГоденДо,
	|	ВТРеквизитыСерий.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТРеквизитыСерий.ВладелецСерий КАК ВидНоменклатуры,
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия
	|ИЗ
	|	ВТРеквизитыСерий КАК ВТРеквизитыСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВТРеквизитыСерий.Номер = СерииНоменклатуры.Номер
	|			И ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС = СерииНоменклатуры.ЗаписьСкладскогоЖурналаВЕТИС
	|			И ВТРеквизитыСерий.ПроизводительВЕТИС = СерииНоменклатуры.ПроизводительВЕТИС
	|			И ВТРеквизитыСерий.ИдентификаторПартииВЕТИС = СерииНоменклатуры.ИдентификаторПартииВЕТИС
	|			И ВТРеквизитыСерий.ГоденДо = СерииНоменклатуры.ГоденДо
	|			И ВТРеквизитыСерий.ДатаПроизводства = СерииНоменклатуры.ДатаПроизводства
	|			И ВТРеквизитыСерий.ВладелецСерий = СерииНоменклатуры.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСтрокиСОшибками.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТСтрокиСОшибками.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТСтрокиСОшибками.ТипОшибки КАК ТипОшибки,
	|	ВТСтрокиСОшибками.ЭтоНомерСтрокиУточнений КАК ЭтоНомерСтрокиУточнений
	|ИЗ
	|	ВТСтрокиСОшибками КАК ВТСтрокиСОшибками
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиТовары,
	|	НомерСтрокиУточнения";
	
	Запрос.Текст = ТекстЗапроса;
	
	ТоварыДляЗапроса = ТабличнаяЧастьТовары;
	
	Если ТипЗнч(ТабличнаяЧастьТовары) = Тип("ДанныеФормыКоллекция") Тогда
		ТоварыДляЗапроса = ТабличнаяЧастьТовары.Выгрузить(ВыделенныеСтрокиТоваров);
	КонецЕсли;
	Запрос.УстановитьПараметр("ТаблицаТовары", ТоварыДляЗапроса);
	
	Если ТабличнаяЧастьУточнения <> Неопределено Тогда
		Запрос.УстановитьПараметр("ТоварыУточнение", ТабличнаяЧастьУточнения.Выгрузить());
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОшибок         = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить();
	ТаблицаУстановкиСерий = РезультатыЗапроса[РезультатыЗапроса.ВГраница()-1].Выгрузить();
	
	Результат.ЗаполнениеЗавершено = ТаблицаОшибок.Количество() = 0;
	
	Для Каждого СтрТабл из ТаблицаОшибок Цикл
		
		Если СтрТабл.ТипОшибки = "ОшибкаНетУточнения" Тогда
			ПолеОшибки = "Объект.Товары.НомерСтроки";
			
			ТекстСообщения = НСтр("ru = 'По строке %НомерСтроки% указано, что должны быть уточнения, но строки уточнения не введены.'");
			
		Иначе
			
			Если СтрТабл.ТипОшибки = "ОшибкаНетНоменклатуры" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана номенклатура.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана номенклатура.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНеНужноГенерировать" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетХарактеристики" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характериски.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Характеристика";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характериски.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетЗаписиСкладскогоЖуранала" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана запись складского журнала ВЕТИС.'");

			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетДатыПроизводства" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана запись складского журнала ВЕТИС, в которой не заполнена дата начала производства. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетГоденДо" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой не заполнена дата начала периода срока годности. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетПроизводителя" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой не заполнен производитель. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаМногоПроизводетелей" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВЕТИС, в которой указано более одного производителя. Создайте серию вручную.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетИндентификатораПартии" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указан индентификатор партии ВЕТИС.'");
				Иначе
					ПолеОшибки = "Объект.Товары.ИдентификаторПартии";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указан индентификатор партии ВЕТИС.'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрТабл.НомерСтрокиТовары);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения, Неопределено, СтрТабл.НомерСтрокиТовары - 1);
	КонецЦикла;
	
	СозданныеСерии = Новый ТаблицаЗначений;
	СозданныеСерии.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	
	СозданныеСерии.Колонки.Добавить("ВидНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"));
	СозданныеСерии.Колонки.Добавить("ЗаписьСкладскогоЖурналаВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ЗаписиСкладскогоЖурналаВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ПроизводительВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ПредприятияВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ИдентификаторПартииВЕТИС", Новый ОписаниеТипов("Строка"));
	СозданныеСерии.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
	СозданныеСерии.Колонки.Добавить("ДатаПроизводства", Новый ОписаниеТипов("Дата"));
	
	ПоляПоиска = "ЗаписьСкладскогоЖурналаВЕТИС,ПроизводительВЕТИС,ИдентификаторПартииВЕТИС,ГоденДо,ДатаПроизводства";
	
	СозданныеСерии.Индексы.Добавить(ПоляПоиска);
	
	СтруктураОтбора = Новый Структура(ПоляПоиска);
	
	Для Каждого СтрТабл из ТаблицаУстановкиСерий Цикл
		
		Если ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			Серия = СтрТабл.Серия;
		Иначе
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрТабл);
			НайденныеСтроки = СозданныеСерии.НайтиСтроки(СтруктураОтбора);
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				Серия = НайденныеСтроки[0].Серия;
			Иначе
				
				Серия = СоздатьСерию(СтрТабл, Результат);
				
				Если Не ЗначениеЗаполнено(Серия) Тогда
					Результат.ЗаполнениеЗавершено = Ложь;
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СозданныеСерии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
				НоваяСтрока.Серия = Серия;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрТабл.ЕстьУточнения Тогда
			СтрокаТЧ = ТабличнаяЧастьУточнения[СтрТабл.НомерСтрокиУточнения - 1];
		Иначе
			СтрокаТЧ = ТабличнаяЧастьТовары[СтрТабл.НомерСтрокиТовары - 1];
		КонецЕсли;
		
		СтрокаТЧ.Серия = Серия;
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(СтрокаТЧ, СтруктураДействий, Неопределено);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СоздатьСерию(Реквизиты, Результат)
	
	СерияСсылка = Справочники.СерииНоменклатуры.ПустаяСсылка();
	
	Попытка
		
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(Реквизиты);
		НоваяСерия.Записать();
		
		СерияСсылка = НоваяСерия.Ссылка;
		
	Исключение
		ПолеОшибки = "Объект.Товары.Серия";
		ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения,
			Неопределено);
		
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.СерииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
	КонецПопытки;
		
	Возврат СерияСсылка;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

//---------------------------------------------------------------------------------------------------

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Функция ОбработчикиТЧ()
	
	Результат = Новый Структура;
	Результат.Вставить("ПересчитатьКоличествоУпаковок");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПоступлениеТоваров

Процедура ЗаполнитьПоступлениеТоваровНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ДокументОбъект.ЦенаВключаетНДС = Истина;
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПараметровСтавкиНДСУчитыватьНДС(ДокументОбъект));
	
	СтруктураНДС = ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПересчетаСуммыНДСВСтрокеТЧ(ДокументОбъект);
	СтруктураНДС.Вставить("НеобходимоОбработатьВсюТЧ", Истина);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураНДС);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	СтруктураПараметровДействия = ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураЗаполненияЦеныЗакупкиВСтрокеТЧ(ДокументОбъект);
	СтруктураДействий.Вставить("ЗаполнитьЦенуЗакупки", СтруктураПараметровДействия);
	СтруктураДействий.Вставить("НеобходимоОбработатьВсюТЧ", Истина);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровОтКлиента

Процедура ЗаполнитьВозвратТоваровОтПокупателяНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПродажи");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровПоставщику

Процедура ЗаполнитьВозвратТоваровПоставщикуНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);

КонецПроцедуры

#КонецОбласти

#Область ПеремещениеТоваров

Процедура ЗаполнитьПеремещениеТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.СкладОтправитель      = Реквизиты.ГрузоотправительПредприятие;
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		ДокументОбъект.СкладПолучатель       = Реквизиты.ГрузополучательПредприятие;
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий, Ложь);
	
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаТоваровМеждуОрганизациями

Процедура ЗаполнитьПередачуТоваровМеждуОрганизациямиНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения, "СкладПоступления");
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		
	КонецЕсли;
	
	СтруктураДействий = ОбработчикиТЧ();
	СтруктураПараметровСтавкиНДС = Новый Структура;
	СтруктураПараметровСтавкиНДС.Вставить("Дата"       , ДокументОбъект.Дата);
	СтруктураПараметровСтавкиНДС.Вставить("Организация", ДокументОбъект.Организация);
	СтруктураПараметровСтавкиНДС.Вставить("Склад"      , ДокументОбъект.Склад);
	
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДССкладВШапке", СтруктураПараметровСтавкиНДС);
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты, СтруктураДействий);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ОприходованиеТоваров

Процедура ЗаполнитьОприходованиеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты,,,1);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеНедостачТоваров

Процедура ЗаполнитьСписаниеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#Область СборкаТоваров

Процедура ЗаполнитьСборкуТоваровНаОснованииПроизводственнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Запрос = Новый Запрос();
	СписокЗапросов = Новый СписокЗначений();
	
	СтруктураЗапроса = Документы.ПроизводственнаяОперацияВЕТИС.СтруктураЗапросаДанныеОформленныхДокументов();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.Реквизиты, "Реквизиты");
	СписокЗапросов.Добавить(СтруктураЗапроса.Товары,    "Товары");
	СписокЗапросов.Добавить(СтруктураЗапроса.Сырье,     "Сырье");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаРеквизиты = РезультатЗапроса["Реквизиты"].Выбрать();
	ВыборкаРеквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(
			ДанныеЗаполнения);
			
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация;
		
		ДокументОбъект.Организация = ВыборкаРеквизиты.Организация;
		ДокументОбъект.Магазин = ВыборкаРеквизиты.ТорговыйОбъект;
		ДокументОбъект.Склад = ДокументОбъект.Магазин.СкладПоступления;
		
	КонецЕсли;
	
	ТаблицаШапка = РезультатЗапроса["Товары"].Выгрузить();
	
	Комплект = ТаблицаШапка.Скопировать();
	Комплект.Свернуть("Номенклатура, Характеристика");
	
	Если Комплект.Количество() > 1 Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% содержит несколько строк в табличной части ""Продукция"". Ввод на основании документа ""Сборка (разборка) товаров"" невозможен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Серии.Очистить();
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураКэшируемыхЗначений();
	
	Если ЗначениеЗаполнено(ТаблицаШапка) Тогда
		
		ТаблицаШапка.Свернуть("Номенклатура, Характеристика", "Количество");
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ТаблицаШапка[0]);
		
		ДокументОбъект.Количество = ТаблицаШапка.Итог("Количество");
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ДокументОбъект, СтруктураДействий, КэшированныеЗначения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ВходящаяТранспортнаяОперацияВЕТИС

Функция ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДокументСсылка, ИмяСклада = "СкладПоступления")
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Контрагент,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Организация,
	|	ПредприятияОтправителя.ТорговыйОбъект                                             КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                             КАК Партнер,
	|	ПредприятияПолучателя.ТорговыйОбъект                                              КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                              КАК Магазин,
	|	&ИмяПоляСклад                                                                     КАК Склад,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                     КАК ГрузоотправительПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                      КАК ГрузополучательПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ВходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Номенклатура.ЕдиницаИзмерения                 КАК Упаковка,
	|		&ВыражениеДляПоляКоличество                   КАК Количество,
	|		&ВыражениеДляПоляКоличество                   КАК КоличествоУпаковок,
	|		ИдентификаторСтроки                           КАК ИдентификаторСтроки,
	|		ЛОЖЬ                                          КАК БылоУточнение
	|	) КАК Товары,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТоварыУточнение.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Номенклатура.ЕдиницаИзмерения                 КАК Упаковка,
	|		Количество                                    КАК Количество,
	|		Количество                                    КАК КоличествоУпаковок,
	|		ИдентификаторСтроки                           КАК ИдентификаторСтроки
	|	) КАК ТоварыУточнение
	|ИЗ
	|	Документ.ВходящаяТранспортнаяОперацияВЕТИС КАК ВходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ВходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	
	ВыражениеДляВычисленияКоличества = "Количество * ВЫБОР 
		|		КОГДА КоличествоВЕТИС > 0 
		|		ТОГДА (КоличествоВЕТИС-ВозвращаемоеКоличествоВЕТИС)/КоличествоВЕТИС 
		|		ИНАЧЕ 1 КОНЕЦ";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "&ВыражениеДляПоляКоличество", ВыражениеДляВычисленияКоличества);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "&ИмяПоляСклад", "ПредприятияПолучателя.ТорговыйОбъект." + ИмяСклада);
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(ДанныеЗаполнения,ОбработчикиТЧ,ЕстьСерии = Ложь,ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",                        ДанныеЗаполнения.Товары.Выгрузить());
	Результат.Вставить("ТоварыУточнение",               ДанныеЗаполнения.ТоварыУточнение.Выгрузить());
	Результат.Вставить("ОбработчикиТЧТовары",           ОбработчикиТЧ);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЗаполнитьСклад");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	ДанныеЗаполнения.Товары.Индексы.Добавить("ИдентификаторСтроки");
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.ТоварыУточнение Цикл 
		
		Если СтрокаТовары.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИсходнаяСтрока = ДанныеЗаполнения.Товары.НайтиСтроки(Новый Структура("ИдентификаторСтроки",СтрокаТовары.ИдентификаторСтроки));
		Если ИсходнаяСтрока.Количество() = 0 Тогда 
			ИсходнаяСтрока = Новый Структура;
		Иначе 
			ИсходнаяСтрока = ИсходнаяСтрока[0];
			ИсходнаяСтрока.БылоУточнение = Истина;
		КонецЕсли;
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ИсходнаяСтрока);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтрокаТовары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары.НайтиСтроки(Новый Структура("БылоУточнение",Ложь))Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтрокаТовары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
		СписокСвойств = "Номенклатура, Характеристика";
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", НоваяСтрокаТовары.Характеристика);
		
		ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(НоваяСтрокаТовары, СтруктураДействий, Неопределено);
		
	КонецЦикла;
	
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ИсходящаяТранспортнаяОперацияВЕТИС

Функция ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДокументСсылка, ИмяСклада = "СкладПоступления")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Контрагент,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК Магазин,
	|	ПредприятияОтправителя.ТорговыйОбъект." + ИмяСклада + "                            КАК Склад,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК Партнер,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК ГрузоотправительПодразделение,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                       КАК ГрузополучательПодразделение,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество                                    КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения                 КАК Упаковка,
	|		Количество                                    КАК КоличествоУпаковок
	|	) КАК Товары
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ИсходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(ДанныеЗаполнения,ОбработчикиТЧ,ЕстьСерии = Ложь,ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",              ДанныеЗаполнения.Товары.Выбрать());
	Результат.Вставить("ОбработчикиТЧТовары", ОбработчикиТЧ);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЗаполнитьСклад");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	Пока ДанныеЗаполнения.Товары.Следующий() Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ДанныеЗаполнения.Товары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		СтруктураТЧ = Новый Структура;
		СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
		
		ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ИнвентаризацияПродукцииВЕТИС

Функция ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Предприятия.ТорговыйОбъект                                   КАК ТорговыйОбъект,
	|	Предприятия.ТорговыйОбъект                                   КАК Магазин,
	|	Предприятия.ТорговыйОбъект.СкладПоступления                  КАК Склад,
	|	Предприятия.ПроизводственныйОбъект                           КАК Подразделение,
	|	ИнвентаризацияПродукцииВЕТИС.Комментарий                     КАК Комментарий,
	|	ИнвентаризацияПродукцииВЕТИС.Дата                            КАК Дата,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК ХозяйствующийСубъект,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИнвентаризацияПродукцииВЕТИС.Товары.(
	|		Номенклатура                  КАК Номенклатура,
	|		Характеристика                КАК Характеристика,
	|		Серия                         КАК Серия,
	|		КоличествоИзменение           КАК Количество,
	|		Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|		КоличествоИзменение           КАК КоличествоУпаковок
	|	) КАК Товары
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ИнвентаризацияПродукцииВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК Предприятия
	|		ПО ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект = Предприятия.Ссылка
	|			И ИнвентаризацияПродукцииВЕТИС.Предприятие = Предприятия.Предприятие
	|ГДЕ
	|	ИнвентаризацияПродукцииВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(ДанныеЗаполнения, ОбработчикиТЧ = Неопределено, ЕстьСерии = Ложь, ДопустимыйЗнакСтроки = -1)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",               ДанныеЗаполнения.Товары.Выбрать());
	Результат.Вставить("ОбработчикиТЧТовары",  ОбработчикиТЧ);
	Результат.Вставить("ДопустимыйЗнакСтроки", ДопустимыйЗнакСтроки);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	Пока ДанныеЗаполнения.Товары.Следующий() Цикл
		
		СтруктураЗаполненияКоличества = Новый Структура("Количество,КоличествоУпаковок");
		СтруктураЗаполненияКоличества.Количество = ДанныеЗаполнения.Товары.Количество*ДанныеЗаполнения.ДопустимыйЗнакСтроки;
		СтруктураЗаполненияКоличества.КоличествоУпаковок = ДанныеЗаполнения.Товары.КоличествоУпаковок*ДанныеЗаполнения.ДопустимыйЗнакСтроки;
		
		Если СтруктураЗаполненияКоличества.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ДанныеЗаполнения.Товары);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтруктураЗаполненияКоличества);
		
		Если НЕ(ДанныеЗаполнения.ОбработчикиТЧТовары = Неопределено)Тогда 
			СтруктураТЧ = Новый Структура;
			СтруктураТЧ.Вставить("СтрокиТЧ" , ДокументОбъект.Товары);
			
			ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ,  ДанныеЗаполнения.ОбработчикиТЧТовары, Неопределено);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область СерииНоменклатуры

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыВЕТИС";
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляМагазин = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	
	Если ПараметрыУказанияСерий.Товары = Неопределено Тогда
		ПараметрыУказанияСерий.Товары = Новый Структура();
		ПараметрыУказанияСерий.Товары.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерииНоменклатуры);
	КонецЕсли;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает параметры указания серий в документе 'ВходящаяТранспортнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийВходящаяТранспортнаяОперацияВЕТИС(Объект) Экспорт
	
	ИспользоватьСерииНоменклатуры  = Ложь;
	УчитыватьСебестоимостьПоСериям = Ложь;
	ИмяПоляСклад = Неопределено;
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		ИмяПоляСклад = "ТорговыйОбъект";
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ВходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТовары.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	ПараметрыУказанияСерийТовары.ИменаПолейДополнительные.Добавить("ЕстьУточнения");
	
	ПараметрыУказанияСерийТовары.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТоварыУточнение = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();;
	
	ПараметрыУказанияСерийТоварыУточнение.ПолноеИмяОбъекта = "Документ.ВходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТоварыУточнение.ИспользоватьСерииНоменклатуры = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТоварыУточнение.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТоварыУточнение.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТоварыУточнение.ИмяТЧТовары = "ТоварыУточнение";
	ПараметрыУказанияСерийТоварыУточнение.ИмяТЧСерии = "ТоварыУточнение";
	ПараметрыУказанияСерийТоварыУточнение.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТоварыУточнение.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий = Новый Структура;
	ПараметрыУказанияСерий.Вставить("Товары", ПараметрыУказанияСерийТовары);
	ПараметрыУказанияСерий.Вставить("ТоварыУточнение", ПараметрыУказанияСерийТоварыУточнение);
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает параметры указания серий в документе 'ИнвентаризацияПродукцииВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийИнвентаризацияПродукцииВЕТИС(Объект) Экспорт
	
	ИспользоватьСерииНоменклатуры  = Ложь;
	УчитыватьСебестоимостьПоСериям = Ложь;
	ИмяПоляСклад = Неопределено;
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		ИмяПоляСклад = "ТорговыйОбъект";
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ИнвентаризацияПродукцииВЕТИС";
	ПараметрыУказанияСерийТовары.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТовары.ИмяТЧТовары = "Товары";
	ПараметрыУказанияСерийТовары.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	Если ПараметрыУказанияСерийТовары.Товары = Неопределено Тогда
		ПараметрыУказанияСерийТовары.Товары = Новый Структура();
		ПараметрыУказанияСерийТовары.Товары.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерииНоменклатуры);
	КонецЕсли;
	
	Возврат ПараметрыУказанияСерийТовары;
КонецФункции

// Возвращает параметры указания серий в документе 'ПроизводственнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийПроизводственнаяОперацияВЕТИС(Объект) Экспорт
	
	ИспользоватьСерииНоменклатуры  = Ложь;
	УчитыватьСебестоимостьПоСериям = Ложь;
	ИмяПоляСклад = Неопределено;
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		ИмяПоляСклад = "ТорговыйОбъект";
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТовары.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТовары.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерийТовары.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	Если ПараметрыУказанияСерийТовары.Товары = Неопределено Тогда
		ПараметрыУказанияСерийТовары.Товары = Новый Структура();
		ПараметрыУказанияСерийТовары.Товары.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерииНоменклатуры);
	КонецЕсли;
	
	Возврат ПараметрыУказанияСерийТовары;
КонецФункции

// Возвращает параметры указания серий в документе 'ЗапросСкладскогоЖурналаВЕТИС'.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийЗапросСкладскогоЖурналаВЕТИС(Объект) Экспорт
	
	ИспользоватьСерииНоменклатуры  = Ложь;
	УчитыватьСебестоимостьПоСериям = Ложь;
	ИмяПоляСклад = Неопределено;
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
		ИмяПоляСклад = "ТорговыйОбъект";
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = МаркировкаТоваровГИСМРТ.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ЗапросСкладскогоЖурналаВЕТИС";
	
	ПараметрыУказанияСерийТовары.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерийТовары.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	Если ПараметрыУказанияСерийТовары.Товары = Неопределено Тогда
		ПараметрыУказанияСерийТовары.Товары = Новый Структура();
		ПараметрыУказанияСерийТовары.Товары.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерииНоменклатуры);
	КонецЕсли;
	
	Возврат ПараметрыУказанияСерийТовары;
КонецФункции

#КонецОбласти

#КонецОбласти


