
#Область ПодключаемоеОборудование

Функция ОбрабатыватьВнешнееСобытиеТО() Экспорт
	
	Возврат Ложь;
			
КонецФункции

// В процедуре нужно реализовать алгоритм преобразования данных из подсистемы подключаемого оборудования.
//
// Параметры:
//  Результат - Структура - со свойствами Штрихкод, Количество
//  Параметр  - Массив    - входящие данные.
Процедура ПреобразоватьДанныеСоСканераВСтруктуру(Результат, Параметр) Экспорт
	
	Результат = МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр);
	
КонецПроцедуры

Функция ВнешнееСобытиеПреобразоватьДанныеСоСканераВСтруктуру(Форма, Источник, Событие, Данные, Параметр = Неопределено) Экспорт

	МенеджерОборудованияКлиентПереопределяемый.ОбработатьСобытие();
	Результат = Неопределено;
	ПреобразоватьДанныеСоСканераВСтруктуру(Результат, Параметр);  
	
	МенеджерОборудованияКлиентПереопределяемый.ОбработатьСобытие();
	
	Возврат Результат;
	
КонецФункции

// В процедуре нужно реализовать алгоритм преобразования данных из подсистемы подключаемого оборудования.
//
// Параметры:
//  Параметр - Массив - входящие данные.
//
// Возвращаемое значение:
//  Структура - структура со свойствами:
//   * Штрихкод
//   * Количество
Функция ПреобразоватьДанныеСоСканераВСтруктуруЧекККМ(Параметр) Экспорт
	
	Результат = Новый Структура("Штрихкод,Количество");
	Результат = МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВСтруктуру(Параметр);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ФормаПоискНоменклатурыПоШтрихкоду

Процедура ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(Форма, Элемент, ИмяТаблицы = "ШтрихкодыНоменклатуры") Экспорт
	
	ТекущиеДанные = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыНоменклатуры = ОбщегоНазначенияИСМПТКВызовСервера.ЗначенияРеквизитовОбъекта(ТекущиеДанные.Номенклатура, Новый Структура("ЕдиницаИзмерения, ВидНоменклатуры"));
	Если ЗначениеЗаполнено(РеквизитыНоменклатуры.ВидНоменклатуры) Тогда
		
		Если ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик() Тогда //Использование хар-к в целом в базе
			
			//Использование хар-к у номенклатуры выбора
			ИспользоватьХарактеристики = ОбщегоНазначенияИСМПТКВызовСервера.ЗначениеРеквизитаОбъекта(РеквизитыНоменклатуры.ВидНоменклатуры, "ИспользованиеХарактеристик");
			
			Если ИспользоватьХарактеристики	   = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать")
				ИЛИ ИспользоватьХарактеристики = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ПустаяСсылка") Тогда
				ТекущиеДанные.ХарактеристикиИспользуются = Ложь;
			Иначе
				ТекущиеДанные.ХарактеристикиИспользуются = Истина;
			КонецЕсли;
			
		Иначе
			ТекущиеДанные.ХарактеристикиИспользуются = Ложь;
		КонецЕсли;
		
		Если Не ТекущиеДанные.ХарактеристикиИспользуются Тогда
			ТекущиеДанные.Характеристика = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеДанные.ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
		
КонецПроцедуры

// Выполняется при начале выбора номенклатуры. Требуется определить и открыть форму выбора.
//
// Параметры:
//  Владелец     - УправляемаяФорма            - Форма владелец.
//  ДанныеСтроки - ДанныеФормыЭлементКоллекции - текущие данные строки таблицы товаров откуда производится выбор.
//  СтандартнаяОбработка - Булево - Выключается в переопределении
//  ВидыПродукцииИС - Массив Из Перечисления.ВидыПродукцииИСМПТК - Виды продукции.
//  Описание - ОписаниеОповещения - Вызывается при выборе значения в форме выбора.
//
Процедура ПриНачалеВыбораНоменклатуры(Владелец, ДанныеСтроки, СтандартнаяОбработка, ВидыПродукцииИС, Описание = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ТипНоменклатуры", ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));
		
	ОсобенностиУчета = Новый Массив;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ПрисутствуетОбувнаяПродукция(ВидыПродукцииИС) Тогда
		ОсобенностиУчета.Добавить(ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция"));
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ПрисутствуетТабачнаяПродукция(ВидыПродукцииИС) Тогда
		ОсобенностиУчета.Добавить(ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция"));
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ПрисутствуетМолочнаяПродукция(ВидыПродукцииИС) Тогда
		ОсобенностиУчета.Добавить(ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС"));
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ПрисутствуетТекстильнаяПродукция(ВидыПродукцииИС) Тогда
		ОсобенностиУчета.Добавить(ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность"));
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМПТККлиентСервер.ПрисутствуетЛекарственнаяПродукция(ВидыПродукцииИС) Тогда
		ОсобенностиУчета.Добавить(ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ЛекарственныеПрепараты"));
	КонецЕсли;
																										   
	Если ОсобенностиУчета.Количество() > 0 Тогда
		ПараметрыОтбора.Вставить("ОсобенностьУчета", ОсобенностиУчета);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("Отбор",                ПараметрыОтбора);
		
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Владелец,,,, Описание);
	
	Возврат;
	
КонецПроцедуры

Функция ПолучитьИмяФормыДляКомандыЗаполненияДанных() Экспорт
	
	Возврат "ОбщаяФорма.ФормаУточненияДанныхИСМПТК";
	
КонецФункции

#КонецОбласти