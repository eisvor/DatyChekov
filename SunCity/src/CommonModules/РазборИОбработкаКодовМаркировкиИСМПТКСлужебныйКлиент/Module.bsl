
#Область ПодключаемоеОборудование

// Выполняет инициализацию и заполнение параметров сканирования по переданному контексту.
// Параметры сканирования необходимы для анализа и обработки штрихкодов маркируемой продукции.
//
Функция ПараметрыСканирования(Контекст = Неопределено, ФормаВыбора = Неопределено, ВидПродукции = Неопределено) Экспорт
	
	ПараметрыСканирования = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.БазовыеПараметрыСканирования();
	ОбщегоНазначенияИСМПТКВызовСервера.ЗполнитьДопустимыеВидыПродукции(ПараметрыСканирования);
	РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ЗаполнитьБазовыеПараметрыСканирования(ПараметрыСканирования, Контекст);
		
	Возврат ПараметрыСканирования;
	
КонецФункции

// В процедуре нужно реализовать алгоритм преобразования данных из подсистемы подключаемого оборудования.
//
// Параметры:
//  Параметр - Массив - входящие данные.
//
// Возвращаемое значение:
//  Структура - структура со свойствами:
//   * Штрихкод
//   * Количество
Функция ПреобразоватьДанныеСоСканераВСтруктуру(Параметр) Экспорт
	
	Результат = Новый Структура("Штрихкод,Количество");
	РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентПереопределяемый.ПреобразоватьДанныеСоСканераВСтруктуру(Результат, Параметр);
	Возврат Результат;
	
КонецФункции

Процедура ВывестиСообщениеОбОшибке(ТекстСообщения) Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура("ТекстОшибки", ТекстСообщения);
	ОткрытьФорму("Обработка.РозничноеВыбытиеМаркированнойПродукцииИСМПТК.Форма.ИнформацияОНевозможностиДобавленияОтсканированного", ПараметрыОткрытияФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область МобильноеПриложение

Процедура МобильноеПриложениеЗагрузитьТоварыОбработкаВыбораОбщая(Форма, Элемент, Параметры, НеСообщатьОбОтмене = Ложь) Экспорт
	
	Если Элемент <> Неопределено Тогда
		
		МассивОшибок = Новый Массив();
		СведенияОВыбранныхДокументах = Новый Массив();
		НужноЗагружать = Ложь;
		ОбщееКоличество = 0;
		
		Для Каждого Строка Из Элемент Цикл
			
			Если Строка.Пометка = Истина Тогда
				НужноЗагружать = Истина;
				ОбщееКоличество = ОбщееКоличество + 1;
				ЗагрузитьТоварыИзМобильногоПриложения(Строка.Значение, Строка.Представление, СведенияОВыбранныхДокументах);
			КонецЕсли;
			
		КонецЦикла;
		
		Если НужноЗагружать Тогда
			
			Если Не ОбщееКоличество = 1 Тогда
				Для Каждого СтруткураДанных Из СведенияОВыбранныхДокументах Цикл
					СтруткураДанных.ОбщееКоличество = ОбщееКоличество;
				КонецЦикла;
			КонецЕсли;	
			ВыполнитьОбработкуПолученныхДанныхМобильноеПриложение(Форма, СведенияОВыбранныхДокументах, МассивОшибок, ОбщееКоличество);
			
		КонецЕсли;
	Иначе
		
		Если Не НеСообщатьОбОтмене Тогда
			ТекстСообщения = НСтр("ru = 'Выбор файла сканирования из мобильного приложения отменен. Процесс загрузки данных прерван.'");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗагрузитьТоварыИзМобильногоПриложения(Номер, Представление = "", СведенияОВыбранныхДокументах = Неопределено)
	
	Список = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйВызовСервера.ЗагруженныеДокументыСканированияВыборНаСервере(Номер);  //Перечень КМ из документа
	МассивКодовМаркировки = Новый Массив;
	
	Для Каждого Код Из Список Цикл
		
		Код = Код.Значение;
		Если Не РозничноеВыбытиеИСМПТККлиент.ЭтоСтрокаФорматаBase64(Код) Тогда
		     Код = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ШтрихкодВBase64(Код);
		КонецЕсли;
		ДанныеШтрихкода = Новый Структура("ШтрихКод, ФорматBase64, Количество", Код, Истина, 1);
		Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ПроверкаФорматаТранспортногоКодаПройденаУспешно(ДанныеШтрихкода, Истина) Тогда
			Продолжить;
		КонецЕсли;
		МассивКодовМаркировки.Добавить(ДанныеШтрихкода);
	КонецЦикла;
	
	ДанныеФайла = Новый Структура("ОбщееКоличество, ИмяДокумента, МассивКодов");
	ДанныеФайла.ОбщееКоличество = 1;
	ДанныеФайла.ИмяДокумента	= Представление;
	ДанныеФайла.МассивКодов		= МассивКодовМаркировки;
	СведенияОВыбранныхДокументах.Добавить(ДанныеФайла);
	
КонецПроцедуры

Процедура ВыполнитьОбработкуПолученныхДанныхМобильноеПриложение(Форма, СведенияОВыбранныхДокументах, МассивОшибок, ОбщееКоличество) 
	
	СтруктураПараметров = Новый Структура("ФормаОбъекта, МассивОшибок, СведенияОВыбранныхДокументах", Форма, МассивОшибок, СведенияОВыбранныхДокументах);
	
	Если ИнтеграцияИСМПТКВызовСервера.ИспользоватьАвтоОпределениеЛогистическихКодовИСМПТК()
		И СтрНайти(Форма.ИмяФормы, "ИСЦЭДМ") = 0 //Для ИС ЦЭДМ не используем
		И Не Форма.ИмяФормы = "Обработка.РабочиеМестаИСМПТК.Форма.РабочееМестоПолучениеИнформацииОВладельцеИСостоянииКМ" 
		И Не Форма.ИмяФормы = "Документ.АктПриемаПередачиИСМПТК.Форма.ФормаСверкиВходящихКодовМаркировки" Тогда  //В этом РМ данная проверка и запрос не нужны
		
		ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки = Новый ОписаниеОповещения("ЗагрузитьКодыМаркировкиИзФайлаЗавершение", ИнтеграцияИСМПТККлиент, СтруктураПараметров);
		Форма.ПолучитьКлючАвторизации(ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки);
	Иначе
		ИнтеграцияИСМПТККлиент.ЗагрузитьКодыМаркировкиИзФайлаЗавершение(Неопределено, СтруктураПараметров);
	КонецЕсли;

	Если ИнтеграцияИСМПТКВызовСервера.ИспользоватьАвтоПроверкаВалидностиКодаИСМПТК()
		И СтрНайти(Форма.ИмяФормы, "ИСЦЭДМ") = 0 //Для ИС ЦЭДМ не используем
		И Не Форма.ИмяФормы = "Обработка.РабочиеМестаИСМПТК.Форма.РабочееМестоПолучениеИнформацииОВладельцеИСостоянииКМ" 
		И Не Форма.ИмяФормы = "Документ.АктПриемаПередачиИСМПТК.Форма.ФормаСверкиВходящихКодовМаркировки" Тогда 
		
		ТокенАвторизацииВрем = Неопределено;
		ЗавершениеПроверитьСостояниеКодовНаСервере = Новый ОписаниеОповещения("ЗавершениеПроверитьСостояниеКодовНаСервере", Форма);
		Форма.ПолучитьКлючАвторизации(ЗавершениеПроверитьСостояниеКодовНаСервере, Истина);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОНевозможностиВыполнитьПроверкуСтатусаКМ(РежимЗапроса) Экспорт

	Если РежимЗапроса = "Ручной" Тогда
		ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияНевозможноВыполнитьПроверкуСтатусаКМ_Вручную();
	Иначе	
		ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияНевозможноВыполнитьПроверкуСтатусаКМ_ВФоне();
	КонецЕсли;
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПреобразоватьСтрокуСНедопустимымиСимволами(ПроверяемаяСтрока) Экспорт
	
	ПозицияСимвола = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.НайденНедопустимыйСимволXML(ПроверяемаяСтрока);
	Если Не ПозицияСимвола = 0 Тогда
		НоваяСтрока = Сред(ПроверяемаяСтрока, 1, ПозицияСимвола - 1) + Сред(ПроверяемаяСтрока, ПозицияСимвола + 1);
		ПроверяемаяСтрока = ПреобразоватьСтрокуСНедопустимымиСимволами(НоваяСтрока);
	КонецЕсли;	
	
	Возврат ПроверяемаяСтрока;
	
КонецФункции

#КонецОбласти


