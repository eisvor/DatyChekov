
#Область ДинамическоеФормированиеИмен

//Возвращаемое значение: Структура, где
//Имя - Имя объекта метаданных, найденного по переданной ссылке
//Синоним - синоним этого объекта
Функция ПолучитьИмяИПредставлениеПоСсылке(ОбъектСсылка) Экспорт
	
	Возврат ОбщегоНазначенияИСМПТК.ПолучитьИмяИПредставлениеПоСсылке(ОбъектСсылка);
	
КонецФункции

Функция ПолучитьПредставлениеПоПолномуИмени(ПолноеИмяОбъекта) Экспорт

	Возврат ОбщегоНазначенияИСМПТК.ПолучитьПредставлениеПоПолномуИмени(ПолноеИмяОбъекта);
	
КонецФункции

#КонецОбласти

#Область ПреобразованиеИПроверкиФормата

Функция ЭтоКодSSCC(Штрихкод) Экспорт 
	
	Возврат РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.ЭтоКодSSCC(Штрихкод);
	
КонецФункции

Функция EncodeURIcomponent(ТекСтрока) Экспорт
	
	Возврат КодироватьСтроку(ТекСтрока, СпособКодированияСтроки.КодировкаURL);
	
КонецФункции

Функция Hex(ТекЧисло) Экспорт
	
	СпецСимволы = "~`!@#$%^&*()[]_+-=""№;:?\/<>.,";
	
	ТекЧисло	= ТекЧисло - ?(Найти(СпецСимволы, Символ(ТекЧисло))>0, 0, 848);
	Число1		= ТекЧисло % 16;
	Стр1		= ?(Число1 < 9,Строка(Число1),Символ(КодСимвола("A") + Число1 - 10));
	Число2		= Цел(ТекЧисло/16);
	Стр2		= ?(Число2 < 9,Строка(Число2),Символ(КодСимвола("A") + Число2 - 10));
	
	Возврат Стр2 + Стр1;
	
КонецФункции

Функция СтрокуВBase64(Строка) Экспорт
	
	Возврат РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.СтрокуВBase64(Строка);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьЗначениеОбщейФОМаркировки() Экспорт
	
	Возврат ОбщегоНазначенияИСМПТК.ПроверитьЗначениеОбщейФОМаркировки();
	
КонецФункции

Функция ПроверитьЗначениеКонстанты(ИмяКонстанты) Экспорт
	
	Возврат ОбщегоНазначенияИСМПТК.ПроверитьЗначениеКонстанты(ИмяКонстанты);
	
КонецФункции

Процедура ЗполнитьДопустимыеВидыПродукции(БазовыеПараметры) Экспорт
	
	ОбщегоНазначенияИСМПТК.ЗполнитьДопустимыеВидыПродукции(БазовыеПараметры);	
	
КонецПроцедуры

Процедура СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, УровеньСтрокой = "", ОбъектМетаданных = Неопределено, Данные = Неопределено, Комментарий = "", РежимТранзакции = Неопределено) Экспорт
	
	Если УровеньСтрокой = "Информация" Тогда
		Уровень = УровеньЖурналаРегистрации.Информация;	
	ИначеЕсли УровеньСтрокой = "Ошибка" Тогда
		Уровень = УровеньЖурналаРегистрации.Ошибка;	
	ИначеЕсли УровеньСтрокой = "Предупреждение" Тогда
		Уровень = УровеньЖурналаРегистрации.Предупреждение;	
	ИначеЕсли УровеньСтрокой = "Примечание" Тогда
		Уровень = УровеньЖурналаРегистрации.Примечание;	
	Иначе
		Уровень = УровеньЖурналаРегистрации.Информация;	
	КонецЕсли;	
		
	ЗаписьЖурналаРегистрации(ИмяСобытия, Уровень, ОбъектМетаданных, Данные, Комментарий, РежимТранзакции); 
	
КонецПроцедуры

Функция ЗначенияРеквизитовОбъекта(Ссылка, Знач Реквизиты, ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат ОбщегоНазначенияИСМПТК.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты, ВыбратьРазрешенные);
	
КонецФункции

Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные);
	
КонецФункции

Функция ЕстьПравоДоступа(Право, Ссылка) Экспорт
	
	Возврат ПравоДоступа(Право, Ссылка.Метаданные());
	
КонецФункции

// Выполняет запись ошибки в журнал регистрации.
//
// Параметры:
//  Заголовок   - Строка - заголовок сообщения.
//  ТекстОшибки - Строка - текст ошибки.
//
Процедура ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки, ИмяСобытия = Неопределено, ОбъектМетаданных = Неопределено, Данные = Неопределено) Экспорт
	
	Если ИмяСобытия = Неопределено Тогда
		ИмяСобытия = НСтр("ru = 'Выполнение методов сервиса 1С:Маркировка для Казахстана'", ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.КодОсновногоЯзыка());
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, ОбъектМетаданных, Данные, ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеИмениОбъекта_НеЛокализуемыеТексты

Функция ИмяДокументаАктПриемаПередачиИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.АктПриемаПередачиИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОРасхожденииИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОРасхожденииИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВводеВОборотИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВводеВОборотИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВыводеИзОборотаИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВыводеИзОборотаИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВвозеИзЕАЭСИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВвозеИзТретьихСтранИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОбЭкспортеЕАЭСИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОбЭкспортеЕАЭСИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОПриемкеЕАЭСИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОПриемкеЕАЭСИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОбОтгрузкеЕАЭСИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОбОтгрузкеЕАЭСИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаЗаказКодовМаркировкиСУЗИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.ЗаказКодовМаркировкиСУЗИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаНанесениеКодовМаркировкиСУЗИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.НанесениеКодовМаркировкиСУЗИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаАгрегацияКодовМаркировкиСУЗИСМПТК() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.АгрегацияКодовМаркировкиСУЗИСМПТК.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаАктПриемаПередачиИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.АктПриемаПередачиИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВыводеИзОборотаИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВыводеИзОборотаИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВводеВОборотИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВводеВОборотИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаАгрегацияВнеПроизводстваИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.АгрегацияВнеПроизводстваИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаАктВнутреннегоПеремещенияИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.АктВнутреннегоПеремещенияИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВвозеИзЕАЭСИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВвозеИзЕАЭСИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ИмяДокументаУведомлениеОРасхожденияхИСЦЭДМ() Экспорт
	
	Возврат СтрЗаменить(Метаданные.Документы.УведомлениеОРасхожденияхИСЦЭДМ.ПолноеИмя(), "Документ.", "");
	
КонецФункции

Функция ПолучитьИмяФормыРМПанельОбменИСЦЭДМ() Экспорт 
	
	Возврат Метаданные.Обработки.ПанельОбменИСЦЭДМ.Формы.Форма.ПолноеИмя();
	
КонецФункции

Функция ПолучитьИмяФормыРМПанельОбменИСМПТ() Экспорт 
	
	Возврат Метаданные.Обработки.ПанельОбменИСМПТК.Формы.Форма.ПолноеИмя();
	
КонецФункции

Функция ПолучитьИмяФормыСверкаВходящийАктИСМПТ() Экспорт
	
	Возврат Метаданные.Документы.АктПриемаПередачиИСМПТК.Формы.ФормаСверкиВходящихКодовМаркировки.ПолноеИмя();
	
КонецФункции

Функция ПолучитьИмяФормыРабочееМестоПолучениеИнформацииОВладельцеИСостоянииКМ() Экспорт
	
	Возврат Метаданные.Обработки.РабочиеМестаИСМПТК.Формы.РабочееМестоПолучениеИнформацииОВладельцеИСостоянииКМ.ПолноеИмя();
	
КонецФункции

#КонецОбласти

Функция ПолучитьСтавкуНДСПоНоменклатуре(Номенклатура) Экспорт
	
	Возврат ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьСтавкуНДСПоНоменклатуре(Номенклатура);
	
КонецФункции
