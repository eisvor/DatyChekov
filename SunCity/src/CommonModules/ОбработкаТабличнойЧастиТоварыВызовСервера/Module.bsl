////////////////////////////////////////////////////////////////////////////////
// ОбработкаТабличнойЧастиТоварыВызовСервера содержит процедуры и функции 
// для работы с табличными частями товаров документов.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Передает управление северу ПриИзмененииРеквизитовВТЧСервер.
// 
// Параметры:
//  СтруктураТЧ - Структура - структура табличной части товаров.
//  СтруктураДействия - Структура - структура действий к выполнению при изменении реквизитов.
//  КэшированныеЗначения - Структура - структура данных кэшированных значений.
//
Процедура ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

// Получает список упаковок для выбора.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура по которой подбирается список упаковок.
//  ДанныеВыбора - СписокЗначений - список упаковок для выбора.
//  ДобавлятьПустуюУпаковку - Булево - признак добавления пустой упаковки.
//  СтрокаПоиска - Строка - наименование упаковки подобно которой подбирается список упаковок.
//
Процедура СписокДляВыбораУпаковок(Номенклатура, ДанныеВыбора, ДобавлятьПустуюУпаковку, СтрокаПоиска = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СпрУпаковки.Ссылка, НЕОПРЕДЕЛЕНО) КАК Упаковка,
	|	ПРЕДСТАВЛЕНИЕ(СпрУпаковки.Ссылка) КАК УпаковкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СпрНоменклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
	|		ПО (СпрУпаковки.Владелец = ВЫБОР
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА СпрНоменклатура.НаборУпаковок
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура
	|	" + ?(СтрокаПоиска = Неопределено, "", "И СпрУпаковки.Наименование ПОДОБНО &СтрокаПоиска") + "
	|   И НЕ СпрУпаковки.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпрУпаковки.Коэффициент,
	|	СпрУпаковки.Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	КонецЕсли;
	
	Если ДобавлятьПустуюУпаковку Тогда
		ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЕдиницаИзмерения");
		ДанныеВыбора.Добавить(Справочники.УпаковкиНоменклатуры.ПустаяСсылка(), ЕдиницаИзмерения);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
			Если Выборка.Упаковка <> Неопределено Тогда
				ДанныеВыбора.Добавить(Выборка.Упаковка, Выборка.УпаковкаПредставление + ", " + Выборка.ЕдиницаИзмеренияПредставление);
			КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Проверяет использование характеристик и получает владельца для выбора.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура по которой определяется использование характеристик.
//  ВладелецХарактеристики - СправочникСсылка.Номенклатура,
//                           СправочникСсылка.ВидыНоменклатуры - владелец характеристики объекта.
//
// Возвращаемое значение:
//  Булево - признак использования характеристик номенклатуры.
//
Функция ИспользованиеХарактеристикИВладелецДляВыбора(Номенклатура, ВладелецХарактеристики) Экспорт

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ВидНоменклатуры"           , "ВидНоменклатуры");
	СтруктураРеквизитов.Вставить("ИспользованиеХарактеристик", "ВидНоменклатуры.ИспользованиеХарактеристик");
	ЗначенияРеквизитовВИБ = ОбщегоНазначенияРТ.ЗначенияРеквизитовОбъекта(Номенклатура, СтруктураРеквизитов);

	Если ЗначенияРеквизитовВИБ.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать Тогда
		ИспользованиеХарактеристик = Ложь;
	Иначе
		ИспользованиеХарактеристик = Истина;

		Если ЗначенияРеквизитовВИБ.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры Тогда
			ВладелецХарактеристики = ЗначенияРеквизитовВИБ.ВидНоменклатуры;
		Иначе
			ВладелецХарактеристики = Номенклатура;
		КонецЕсли;
	КонецЕсли;

	Возврат ИспользованиеХарактеристик;

КонецФункции

// Получает по документу, номенклатуре и характеристике номенклатуры, строки таблицы.
//
// Параметры:
//  Документ - ДокументСсылка - документ из которого будет получена строка таблицы.
//  МетаданныеНаименование - Строка - имя метаданных документа.
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура по которой будут подобраны строки.
//  Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика номенклатуры по которой будут подобраны строки.
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор объекта.
//
// Возвращаемое значение:
//  Строка - адрес во временном хранилище.
//
Функция СтрокиДокументаПродажиНаКлиента(Документ, МетаданныеНаименование, Номенклатура, Характеристика, УникальныйИдентификатор) Экспорт

	Перем Результат;
	
	Результат = Неопределено;
	
	ТаблицаСтрок = ОбработкаТабличнойЧастиТоварыСервер.ПолучитьТаблицуСтрокДокументаПродажи(Документ, МетаданныеНаименование, Номенклатура, Характеристика);
	
	Если НЕ ТаблицаСтрок.Количество() = 0 Тогда
		
		Результат = ПоместитьВоВременноеХранилище(ТаблицаСтрок, УникальныйИдентификатор);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Проверяет использование характеристик и получает список для выбора.
//
// Параметры:
//  Номеклатура - СправочникСсылка.Номенклатура - номенклатура по которой происходит проверка и получается список.
//  ДанныеВыбора - СписокЗначений - список значений характеристик для выбора.
//  СтрокаПоиска - Строка - наименование подобно которому подбирается список.
//
// Возвращаемое значение:
//  
//
Функция ИспользованиеХарактеристикИСписокДляВыбора(Номенклатура, ДанныеВыбора, СтрокаПоиска = Неопределено) Экспорт

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СпрХарактеристики.Ссылка, НЕОПРЕДЕЛЕНО) КАК Характеристика,
	|	ПРЕДСТАВЛЕНИЕ(СпрХарактеристики.Ссылка) КАК ХарактеристикаПредставление,
	|	ВЫБОР КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать) ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ИспользоватьХарактеристики
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|ПО
	|	СпрХарактеристики.Владелец = ВЫБОР КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры) ТОГДА
	|			СпрНоменклатура.ВидНоменклатуры
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры) ТОГДА
	|			СпрНоменклатура.Ссылка
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура
	|	" + ?(СтрокаПоиска = Неопределено, "", "И СпрХарактеристики.Наименование ПОДОБНО &СтрокаПоиска") + "
	|УПОРЯДОЧИТЬ ПО
	|	СпрХарактеристики.Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ
	|");

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ИспользоватьХарактеристики Тогда
			Если Выборка.Характеристика <> Неопределено Тогда
				ДанныеВыбора.Добавить(Выборка.Характеристика, Выборка.ХарактеристикаПредставление);
			КонецЕсли;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;

КонецФункции

// Получает значение функциональной опции
//
// Возвращаемое значение:
//  Булево - значение функциональной опции "ИспользоватьПроверкуНаВводДробногоКоличества".
//
Функция ВводДробногоКоличества() Экспорт 
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьПроверкуНаВводДробногоКоличества");	
	
КонецФункции

// Обрабатывает строку табличной части на сервере.
//
// Параметры:
//  ТекущаяСтрока - СтрокаТабличнойЧасти - строка табличной части товаров для обработки.
//  СтруктураДействия - Структура - структура действий к выполнению при изменении реквизитов.
//  КэшированныеЗначения - Структура - структура данных кэшированных значений.
//
Процедура ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти