
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ОтменитьОперациюВФоне с сохранение результата во временном хранилище
// Отменяет все выполняемые действия с операций платежной системой на форме
//
// Параметры:
//  РезультатОперации - Структура
//
//  ДокументОплаты - ОпределяемыйТип.ДокументОплатыБИП - документ, который отражает
//                    продажу в информационной базе;
//  Интеграция - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//                  настройка интеграции с платежной системой;
//  НастройкиТорговойТочки - Структура - информация о доступных операциях:
//    *СрокЖизниQRКода - Булево - признак доступности установки максимального
//                       срока действия QR-кода;
//    *ПлатежнаяСсылка - Булево - признак доступности использования платежной ссылки
//                       для выполнения оплаты;
//    *ВыборПлатежнойСистемыВозврата - Булево - признак доступности возврата оплаты
//                                     в платежную систему отличную от исходной. Для
//                                     получения списка доступных платежных систем следует 
//                                     использовать метод ПереводыСБПc2b.ПлатежныеСистемыВозврата;
//    *Идентификатор - Строка - строковый идентификатор платежной системы или участника СБП;
//    *СинонимСистемы - Строка - синоним платежной системы для печати.
//    
//  ИдентификаторЗаданияФормированияQRКода - УникальныйИдентификатор - идентификатор 
//  																   длительной операции по формированию qr-кода
//  ИдентификаторЗаданияПроверкиСтатуса - УникальныйИдентификатор    - идентификатор 
//  															       длительной операции по проверки статуса оплаты
//  ИдентификаторЗаданияВозврата - УникальныйИдентификатор           - идентификатор 
//  														           длительной операции по проверке статуса возврата
//
Процедура ОтменитьОперацию(РезультатОперации, ДокументОплаты, Интеграция, НастройкиТорговойТочки, ИдентификаторЗаданияФормированияQRКода, ИдентификаторЗаданияПроверкиСтатуса, ИдентификаторЗаданияВозврата) Экспорт
	
	РезультатОперации = ИнтеграцияСПлатежнымиСистемамиРТСервер.ОтменитьОперацию(ДокументОплаты, 
																	Интеграция, 
																	НастройкиТорговойТочки, 
																	ИдентификаторЗаданияФормированияQRКода, 
																	ИдентификаторЗаданияПроверкиСтатуса, 
																	ИдентификаторЗаданияВозврата);
КонецПроцедуры

#КонецОбласти

// Устарела из-за изменения интерфейса настроек кассового qr-кода. настройки выведены в отдельную форму
// Процедура настраивает форму помощника кассового места
// Параметры:
//  Форма - форма нового РМК
//  КассаККМ - ОпределяемыйТип.КассаККМРМК - настраиваемая касса
//
Процедура НастроитьФормуПомощникаПодключенияСБП(Форма, КассаККМ) Экспорт
	
	Форма.Элементы.ГруппаИспользоватьКассовыйQRКодСБП.Видимость = Ложь; // не используется
	Форма.Элементы.ГруппаСБП.Видимость							= Ложь;
	
КонецПроцедуры

// Процедура заполняет доступные права для текущего пользователя.
// Параметры:
//  Форма - форма нового РМК
//
Процедура ЗаполнитьТаблицуРолейПользователя(Форма) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ЗаполнитьТаблицуРолейПользователя(Форма);
	
КонецПроцедуры

// Определяет доступность операций для торговой точки. В сценариях оплаты
// различных платежных систем существуют отличия, поэтому ряд операций могут
// быть запрещены для выполнения. Метод следует использовать для настройки
// элементов форм оплаты и возвратов и получение общих настроек интеграции.
//
// Параметры:
//  НастройкиИнтеграции - Структура - информация о доступных операциях:
//    *СрокЖизниQRКода - Булево - признак доступности установки максимального
//                       срока действия QR-кода;
//    *ПлатежнаяСсылка - Булево - признак доступности использования платежной ссылки
//                       для выполнения оплаты;
//    *ВыборПлатежнойСистемыВозврата - Булево - признак доступности возврата оплаты
//                                     в платежную систему отличную от исходной. Для
//                                     получения списка доступных платежных систем следует 
//                                     использовать метод ПереводыСБПc2b.ПлатежныеСистемыВозврата;
//    *Идентификатор - Строка - строковый идентификатор платежной системы или участника СБП;
//    *СинонимСистемы - Строка - синоним платежной системы для печати.
//    
//  Интеграция - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//                  настройка выполнения операции платежной системы.
//
//
Процедура ЗаполнитьНастройкиТорговойТочки(НастройкиИнтеграции, Интеграция) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ЗаполнитьНастройкиТорговойТочки(НастройкиИнтеграции, Интеграция);
	
КонецПроцедуры

// Определяет необходимость вывода подключения кассового QR-кода в форме настроек рабочего места кассира.
//
// Параметры:
//  ИспользоватьПодключение - Булево - Признак необходимости вывода подключения кассового qr-кода в форме подключения
//  ОсновнаяКассаККМ - ОпределяемыйТип.КассаККМРМК - касса для подключения кассового qr-кода.
//
Процедура НастроитьПодключениеКассовойСсылкиВНастройкеРабочегоМеста(ИспользоватьПодключение, ОсновнаяКассаККМ) Экспорт
	

	
КонецПроцедуры

// Определяет настройки кассового qr-кода 
//
// Параметры:
//	КассаККМРМК - ОпределяемыйТип.КассаККМРМК - касса по которой необходимо определить кассовый qr-код
//  ИспользоватьКассовыйQRКод - булево - признак использования кассового qr-кода. Если код используется необходимо добавить переопределение процедуры
//  СпособыОплатыРМК - Соответствие - соответствие кассовых кодов в разрезе способов оплаты РМК:
//    *Ключ - СпособОплатыРМК - ОпределяемыйТип.СпособОплатыРМК
//    *Значение - Структура - данные кассовой ссылки
//      ** КассоваяСсылка - Строка - ссылка, по которой будет выполнятся оплата;
//      ** ИдентификаторОплаты - Строка - идентификатор зарегистрированной ссылки;
//
//
Процедура ПолучитьНастройкиКассовогоQRКода(КассаККМРМК, ИспользоватьКассовыйQRКод, СпособыОплатыРМК) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ПолучитьНастройкиКассовогоQRКода(
		КассаККМРМК, 
		ИспользоватьКассовыйQRКод, 
		СпособыОплатыРМК);
	
КонецПроцедуры

// Формирование изображения идентификатора оплаты (QR-кода).
//
// Параметры: 
//  СтруктураQRКода - Структура - информация о QR-коде:
//    *ИдентификаторQRКода - Строка - строковый идентификатор QRКода;
//    *КартинкаQRКода - Base64 - картинка QR-кода
//    *ДанныеQRКода - Строка - адрес хранилища данных QR-кода.
//  ТорговаяТочка - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//                  настройка интеграции с платежной системой;
//  QRКод - Строка - идентификатор оплаты;
//  УникальныйИдентификатор - УникальныйИдентификатор - идентификатор для установки поля данные qr-кода;
//
//
Процедура СформироватьДанныеQRКода(СтруктураQRКода, ТорговаяТочка, QRКод, УникальныйИдентификатор) Экспорт
	
	СтруктураQRКода = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.СформироватьДанныеQRКода(
		ТорговаяТочка, 
		QRКод, 
		УникальныйИдентификатор);
	
КонецПроцедуры

// Формирование строку, в которое добавляются все необходимые идентификаторы
// платежных систем для выполнения возврата оплаты.
//
// Параметры:
//  ИдентификаторОплаты - Строка - набор идентификаторов операции оплаты, которые должны быть переданы при возврате.
//
//  Интеграция - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//                  настройка интеграции с платежной системой;
//  ДокументОплаты - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//                   оплату в информационной базе.
//
Процедура ЗаполнитьИдентификаторыОперацииОплаты(ИдентификаторОплаты, Интеграция, ДокументОплаты) Экспорт
	
	ИдентификаторОплаты = ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ИдентификаторыОперацииОплаты(Интеграция, ДокументОплаты);
	
КонецПроцедуры

// Определяет статус оплаты в платежной системе.
//
// Параметры:
//  ДокументОплаты - ОпределяемыйТип.ДокументОплатыБИП - документ, который отражает
//                    продажу в информационной базе;
//
// Возвращаемое значение:
//  Структура
//
Процедура СтатусОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.СтатусОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

// Подтверждает возврат в платежной системе.
//
// Параметры:
//  РезультатОперации - Структура - см.  - см. ПереводыСБПc2b.ПодтвердитьВозврат.
//
//  ДокументВозврата - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//                   оплату в информационной базе;
//  Интеграция - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//                  настройка выполнения операции платежной системы.
//
Процедура ПодтвердитьВозврат(РезультатОперации, ДокументВозврата, Интеграция) Экспорт
	
	РезультатОперации = ИнтеграцияСПлатежнымиСистемамиРТСервер.ПодтвердитьВозврат(ДокументВозврата, Интеграция);
	
КонецПроцедуры

// Возвращает структуру пустой ссылки на документ оплаты
//
// Параметры:
//  СтруктураНовойСсылки - Структура - информация о QR-коде:
//    *ЧекККМВОбработке - ДокументСсылка - пустая ссылка на документ чекККМ.
//    *НовыйЧек - Булево - признак, что это новая ссылка
//
//  СсылкаНаВозврат - булево - признак, что нужно вернуть ссылку на документ возврата
//
Процедура ЗаполнитьСсылкуНовогоЧекаККМ(СтруктураНовойСсылки, СсылкаНаВозврат = Ложь) Экспорт
	
	СтруктураНовойСсылки = ИнтеграцияСПлатежнымиСистемамиРТСервер.ПолучитьСсылкуНовогоЧекаККМ();
	
КонецПроцедуры

// Возвращает структуру чека оплаты для автоматического выполнения возврата
//
// Параметры:
//  ПараметрыВозврата - Структура - информация о QR-коде:
//    *ИдентификаторОплаты - строка - идентификатор оплаты
//    *ВидОплатыВозврата - ОпределяемыйТип.ВидОплатыРМК - на вид оплаты возврата
//    *Организация - ОпределяемыйТип.ОрганизацияРМК - организация возврата
//    *ИдентификаторПС - строка - идентификатор платежной системы
//
//  ДокументОплаты - пустая ссылка на документ чекККМ.
//  
Процедура ЗаполнитьПараметрыДокументаОплаты(ПараметрыВозврата, ДокументОплаты) Экспорт
	
	ПараметрыВозврата = ИнтеграцияСПлатежнымиСистемамиРТСервер.ПолучитьПараметрыДокументаОплаты(ДокументОплаты);
	
КонецПроцедуры

// Отменяет все выполняемые действия с операций платежной системой на форме
//
// Параметры:
//  ПараметрыОтмены - Структура - параметры выполнения длительной операции;
//  	*ДокументОплаты - ОпределяемыйТип.ДокументОплатыБИП - документ, который отражает
//                    продажу в информационной базе;
//  	*Интеграция - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//                  настройка интеграции с платежной системой;
//  	*НастройкиТорговойТочки - Структура - информация о доступных операциях:
//  	*ИдентификаторЗаданияФормированияQRКода - УникальныйИдентификатор - идентификатор 
//  																   длительной операции по формированию qr-кода
//  	*ИдентификаторЗаданияПроверкиСтатуса - УникальныйИдентификатор    - идентификатор 
//  															       длительной операции по проверки статуса оплаты
//  	*ИдентификаторЗаданияВозврата - УникальныйИдентификатор           - идентификатор 
//  АдресРезультата - Строка - адрес результата операции во временном хранилище.
//
Процедура ОтменитьОперациюВФоне(ПараметрыОтмены, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ОтменитьОперациюВФоне(ПараметрыОтмены, АдресРезультата); // НЕ РМК
		
КонецПроцедуры

// Заполняет текст запроса для получения подключенных настроек интеграция в регистре "Соответствие настроек интеграции"
//
// Параметры:
//  Запрос - запрос - запрос на получения данных настроек
//  ИдентификаторПлатежнойСистемы - строка - отбор по идентификатору платежной системы
//
Процедура ЗаполнитьТекстЗапросаНастройкиИнтеграции(Запрос, ИдентификаторПлатежнойСистемы = Неопределено) Экспорт
	
	Запрос.Текст = ИнтеграцияСПлатежнымиСистемамиРТСервер.ТекстЗапросаНастройкиИнтеграции(ИдентификаторПлатежнойСистемы);
	
КонецПроцедуры

// Заполняет подбор платежных систем при возврате СБП
//
// Параметры:
//  ДанныеПоиска - СписокЗначений - данные подбора 
//  Наименование - строка - введенные символы для автоподбора
//
Процедура ПодобратьПлатежнуюСистему(ДанныеПоиска, Наименование) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

// Формирование QR-кода для оплаты в платежной системе.
//
// Параметры:
//  ПараметрыПроцедуры - Структура - параметры выполнения длительной операции;
//  АдресРезультата - Строка - адрес результата операции во временном хранилище.
//
Процедура ИдентификаторОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ИдентификаторОплатыВПлатежнойСистеме(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

// Формирование возврата оплаты в платежной системе.
//
// Параметры:
//  ПараметрыПроцедуры - Структура - параметры выполнения длительной операции;
//  АдресРезультата - Строка - адрес результата операции во временном хранилище.
//
Процедура ВозвратОплаты(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ВозвратОплаты(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры

// Производит получение статуса возврата по документу.
//
// Параметры:
//  ПараметрыПроцедуры - Структура - параметры выполнения длительной операции;
//  АдресРезультата - Строка - адрес результата операции во временном хранилище.
//
Процедура СтатусВозвратОплаты(ПараметрыПроцедуры, АдресРезультата) Экспорт
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.СтатусВозвратОплаты(ПараметрыПроцедуры, АдресРезультата);
	
КонецПроцедуры
