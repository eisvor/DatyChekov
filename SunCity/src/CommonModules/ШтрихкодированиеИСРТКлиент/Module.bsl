#Область ПрограммныйИнтерфейс

// В процедуре нужно показать диалоговое окно для ввода штрихкода и передать полученные данные в описание оповещения.
//
// Параметры:
//  Оповещение - ОписаниеОповещения - процедура, которую нужно вызвать после ввода штрихкода.
//
Процедура ПоказатьВводШтрихкода(ОповещениеУспешногоВвода, Количество = Неопределено, Заголовок = "", СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Заголовок) Тогда
		Заголовок = НСтр("ru = 'Введите штрихкод'");
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура(
		"ОповещениеУспешногоВвода, Количество",
		ОповещениеУспешногоВвода,
		Количество);
	Оповещение = Новый ОписаниеОповещения(
		"ПоказатьВводШтрихкодаЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	ПоказатьВводЗначения(Оповещение, "", Заголовок);
	
КонецПроцедуры

// В процедуре необходимо реализовать алгоритм обработки после получения данных по штрихкодам и попытки обработать эти данные.
// 
// Параметры:
// 	Форма - УправляемаяФорма - форма, для которой необходимо выполнить обработку штрихкода.
// 	ОбработанныеДанные - 
// 	КэшированныеЗначения - Структура - Содержит поля кэшируемых значений.
Процедура ПослеОбработкиШтрихкодов(Форма, ОбработанныеДанные, КэшированныеЗначения) Экспорт
	
	СтруктураДействий = ОбработанныеДанные;
	
	Если СтруктураДействий.НеизвестныеШтрихкоды.Количество() > 0 Тогда
		ДополнительныеПараметры = Новый Структура("Форма, КэшированныеЗначения", Форма, КэшированныеЗначения);
		ОписаниеОповещения = Новый ОписаниеОповещения("СопоставлениеНоменклатурыШтрихкодамЗавершение", ШтрихкодированиеИСКлиент, ДополнительныеПараметры);
		РаботаСНоменклатуройКлиент.ОткрытьФормуПодбораНоменклатурыПоШтрихкодам(СтруктураДействий, Форма, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

// В процедуре необходимо реализовать открытие формы, в которой будет возможность сопоставить неизвестные штрихкоды с номенклатурой.
// 
// Параметры:
// 	НеизвестныеШтрихкоды - Массив - Штрихкоды для сопоставления.
// 	ФормаВладелец - УправляемаяФорма - Форма владелец.
// 	ОповещениеОЗакрытии - ОписаниеОповещения - Оповещение, которое должно быть вызвано после сопоставления номенклатуры.
Процедура ОткрытьФормуПодбораНоменклатурыПоШтрихкодам(НеизвестныеШтрихкоды, ФормаВладелец = Неопределено, ОповещениеОЗакрытии = Неопределено) Экспорт
	
	ЕстьПравоСопоставленияНоменклатуры 	= НЕ УправлениеПользователямиВызовСервера.ПолучитьБулевоЗначениеПраваПользователя(
		ПредопределенноеЗначение("ПланВидовХарактеристик.ПраваПользователей.НеСопоставлятьТовары"), Ложь);
	
	Если ЕстьПравоСопоставленияНоменклатуры Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НеизвестныеШтрихкоды", НеизвестныеШтрихкоды);
		ОткрытьФорму("Обработка.РаботаСНоменклатурой.Форма.ПоискНоменклатурыПоШтрихкоду",
		СтруктураПараметров, ФормаВладелец, Новый УникальныйИдентификатор, , , ОповещениеОЗакрытии);
		
	Иначе
		Для Каждого Штрихкод Из НеизвестныеШтрихкоды Цикл
			СтрокаСообщения = НСтр("ru = 'Данные по коду не найдены: %1%'");
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1%", Штрихкод);
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрокаСообщения);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// В процедуре необходимо реализовать очистку колекции штрихкодов, которые находятся в структуре кэшированные значения.
// 
// Параметры:
// 	ДанныеШтрихкодов - Соответствие - Данные штрихкодов.
// 	КэшированныеЗначения - Структура - Содержит поля кэшируемых значений.
Процедура ОчиститьКэшированныеШтрихкоды(ДанныеШтрихкодов, КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения.Свойство("Штрихкоды") Тогда 
		КэшированныеЗначения.Штрихкоды.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// Вызывается после загрузки данных из ТСД. В процедуре нужно проанализировать полученные штрихкоды на предмет сканирования акцизной марки, а также
// обработать штрихкоды, не привязанные к номенклатуре.
//
// Параметры:
//  Форма - УправляемаяФорма - форма документа, в которой были обработаны штрихкоды,
//  ОбработанныеДанные - Структура - подготовленные ранее данные штрихкодов,
//  КэшированныеЗначения - Структура - используется механизмом обработки изменения реквизитов ТЧ.
//
Процедура ПослеОбработкиТаблицыТоваровПолученнойИзТСД(Форма, ОбработанныеДанные, КэшированныеЗначения) Экспорт
	
	Если ОбработанныеДанные.Свойство("ТекстПредупреждения") Тогда
		Для Каждого СтрокаПредупреждения Из ОбработанныеДанные.ТекстПредупреждения Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаПредупреждения);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// В процедуре нужно реализовать подготовку данных для дальнейшей обработки штрихкодов, полученных из ТСД.
//
// Параметры:
//   Форма - УправляемаяФорма - форма документа, в которой происходит обработка,
//   ТаблицаТоваров - Массив - полученные данные из ТСД,
//   КэшированныеЗначения - Структура - используется механизмом обработки изменения реквизитов ТЧ,
//   ПараметрыЗаполнения - Структура - параметры заполнения (см. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти()).
//   СтруктураДействий - Структура - подготовленные данные.
Процедура ПодготовитьДанныеДляОбработкиТаблицыТоваровПолученнойИзТСД(
	Форма, ТаблицаТоваров, КэшированныеЗначения, ПараметрыЗаполнения, СтруктураДействий) Экспорт
	
	ПараметрыСканирования = ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования(Форма);
	Если ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ДопустимВидПродукции(ПараметрыСканирования, ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Алкогольная")) Тогда
		СтруктураДействий = Неопределено;
		ШтрихкодированиеНоменклатурыЕГАИСКлиентПереопределяемый.ПодготовитьДанныеДляОбработкиТаблицыТоваровПолученнойИзТСД(
			ЭтотОбъект,
			ТаблицаТоваров,
			КэшированныеЗначения,
			ПараметрыЗаполнения,
			СтруктураДействий);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру, которая затем обрабатывается процедурами заполнения ТЧ.
//
// Параметры:
//  Штрихкод - штрихкод, который необходимо обработать.
//  Количество - количество товаров с указанным штрихкодом.
//
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * Штрихкод - Строка - Штрихкод.
//   * Количество - Число - Количество.
//
Функция СтруктураДанныхШтрихкода(Штрихкод, Количество) Экспорт

	Возврат Новый Структура("Штрихкод, Количество", Штрихкод, Количество);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПоказатьВводШтрихкодаЗавершение(Штрихкод, ДополнительныеПараметры) Экспорт
	
	ОповещениеУспешногоВвода = ДополнительныеПараметры.ОповещениеУспешногоВвода;
	Количество = ДополнительныеПараметры.Количество;
	
	Если (Штрихкод <> Неопределено) Тогда
		Если Не ПустаяСтрока(Штрихкод) Тогда
			Если Количество = Неопределено Тогда
				Количество = 1;
			КонецЕсли;
			ВыполнитьОбработкуОповещения(
				ОповещениеУспешногоВвода,
				СтруктураДанныхШтрихкода(Штрихкод, Количество));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ШтрихкодВФорматеGS1(Штрихкод) Экспорт 
	
	ЧтениеШтрихкода = ШтрихкодыУпаковокКлиентСервер.ПараметрыШтрихкода(Штрихкод);
	Если Не ЧтениеШтрихкода.Результат = Неопределено Тогда
		
		Если ЧтениеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.GS1_128")
			Или ЧтениеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.GS1_DataBarExpandedStacked") Тогда
			
			ШтрихкодGS1 = ШтрихкодыУпаковокКлиентСервер.ШтрихкодGS1(ЧтениеШтрихкода.Результат, Истина);
			
			Возврат ШтрихкодGS1;
			
		КонецЕсли;
		
	Иначе
		
		Возврат Штрихкод;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

