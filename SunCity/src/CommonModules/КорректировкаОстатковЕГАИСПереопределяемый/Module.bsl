#Область ПрограммныйИнтерфейс

// Формирует текст запроса на получение учетных остатков алкогольной продукции.
//   Ожидаемые действия:
//   * Создание временной таблицы "Остатки" с колонками
//     ** Номенклатура   - ОпределяемыйТип.Номенклатура
//     ** Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры
//     ** Серия          - ОпределяемыйТип.СерияНоменклатуры
//     ** Остаток        - Число
//     ** ОбъемДАЛ       - Число (объем ДАЛ единицы хранения номенклатуры, используется для неупакованной продукции для пересчета)
//   * Установка необходимых параметров запроса (например получение склада из организации ЕГАИС)
//
// Параметры:
//   Запрос            - Запрос - создаваемый запрос,
//   ОрганизацияЕГАИС  - СправочникСсылка.КлассификаторОрганизацийЕГАИС - ссылка сопоставленную собственной организации организацию ЕГАИС,
//   ТолькоМаркируемая - Булево - переключатель маркируемая/вся алкогольная продукция
//
Процедура ПриФормированииЗапросаУчетныхОстатков(Запрос, ОрганизацияЕГАИС, ТолькоМаркируемая) Экспорт
	
		РеквизитыОрганизацииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОрганизацияЕГАИС, "Контрагент, ТорговыйОбъект");
	
	Организация = Справочники.Организации.ПустаяСсылка();
	Если ТипЗнч(РеквизитыОрганизацииЕГАИС.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		Организация = РеквизитыОрганизацииЕГАИС.Контрагент;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТорговыйОбъект", РеквизитыОрганизацииЕГАИС.ТорговыйОбъект);
	Запрос.УстановитьПараметр("ВключаяНемаркируемую", НЕ ТолькоМаркируемая);
	
	Если Не ИспользуетсяНесколькоСкладов(РеквизитыОрганизацииЕГАИС.ТорговыйОбъект) Тогда 
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Остаток,
		|	МАКСИМУМ(ТоварыНаСкладахОстатки.Номенклатура.ОбъемДАЛ) КАК ОбъемДАЛ
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			,
		|			Склад.Магазин = &ТорговыйОбъект
		|				И Склад.Организация = &Организация
		|				И Номенклатура.АлкогольнаяПродукция
		|				И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|				И (&ВключаяНемаркируемую
		|					ИЛИ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ))) КАК ТоварыНаСкладахОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	Иначе 
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	СУММА(ВложенныйЗапрос.Остаток) КАК Остаток,
		|	МАКСИМУМ(ВложенныйЗапрос.Номенклатура.ОбъемДАЛ) КАК ОбъемДАЛ
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|		ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|		ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|		ТоварыНаСкладахОстатки.Номенклатура.ОбъемДАЛ КАК ОбъемДАЛ
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Склад.Магазин = &ТорговыйОбъект
		|					И Склад.Организация = &Организация
		|					И Номенклатура.АлкогольнаяПродукция
		|					И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|					И Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.СкладскоеПомещение)
		|					И (&ВключаяНемаркируемую
		|						ИЛИ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ))) КАК ТоварыНаСкладахОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Номенклатура,
		|		ТоварыНаСкладахОстатки.Характеристика,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		ТоварыНаСкладахОстатки.КоличествоОстаток,
		|		ТоварыНаСкладахОстатки.Номенклатура.ОбъемДАЛ
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				Склад.Магазин = &ТорговыйОбъект
		|					И Склад.Организация = &Организация
		|					И Номенклатура.АлкогольнаяПродукция
		|					И НЕ Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
		|					И Склад.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
		|					И (&ВключаяНемаркируемую
		|						ИЛИ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ))) КАК ТоварыНаСкладахОстатки) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
КонецПроцедуры

// В процедуре необходимо определить значения переменных ЭтоСклад и ЭтоТорговыйЗал в зависимости от типа торгового объекта.
//
// Параметры:
//  ОрганизацияЕГАИС - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ЭтоСклад - Булево - признак того, что торговый объект является складским помещением. Выходной параметр,
//  ЭтоТорговыйЗал - Булево - признак того, что торговый объект является торговым залом. Выходной параметр.
//
Процедура ПриОпределенииТипаТорговогоОбъекта(ОрганизацияЕГАИС, ЭтоСклад, ЭтоТорговыйЗал) Экспорт
	
	ЭтоСклад = Ложь;
	ЭтоТорговыйЗал = Истина;
	
КонецПроцедуры

// Проверяет состояние инвентаризации по складу.
//   Можно вывести текущее состояние (проводится/не проводится) и рекомендации (провести инвентаризацию),
//   активировать доступность отчетов по расхождениям
//
// Параметры:
//   Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//   ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//   ТекстПроверкиСклад - Строка, ФорматированнаяСтрока - результат проверки инвентаризации на складе. Выходной параметр,
//   ТекстПроверкиТорговыйЗал - Строка, ФорматированнаяСтрока - результат проверки инвентаризации в торговом зале. Выходной параметр,
//   ОтчетПоРасхождениямСклад - Булево - флаг доступности формирования отчета по излишкам/недостачам (на складе). Выходной параметр,
//   ОтчетПоРасхождениямТорговыйЗал - Булево - флаг доступности ссылка на формирование отчета по излишкам/недостачам (в торговом зале). Выходной параметр.
//
Процедура ПриПроверкеИнвентаризации(Организация, ТорговыйОбъект, ТекстПроверкиСклад, ТекстПроверкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал) Экспорт
	
	ПроверитьНаличиеИнвентаризации(Организация, ТорговыйОбъект, ТекстПроверкиСклад, ТекстПроверкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

// Возвращает Истина, если для у магазина есть склады с разным типом.
//
Функция ИспользуетсяНесколькоСкладов(Магазин)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склады.ТипСклада КАК ТипСклада
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Магазин = &Магазин
	|	И НЕ Склады.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Количество() > 1;
	
КонецФункции

Процедура ПроверитьНаличиеИнвентаризации(Организация, ТорговыйОбъект, ТекстОшибкиСклад, ТекстОшибкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал)
	
	ТекстОшибкиСклад = "";
	ТекстОшибкиТорговыйЗал = "";
	
	Если ИспользуетсяНесколькоСкладов(ТорговыйОбъект) Тогда
		
		ТекстОшибкиСклад = ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект, Перечисления.ТипыСкладов.СкладскоеПомещение);
		
		ТекстОшибкиТорговыйЗал = ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект, Перечисления.ТипыСкладов.ТорговыйЗал);
		
	Иначе
		
		ТекстОшибкиТорговыйЗал = ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект);
		
	КонецЕсли;
	
	ОтчетПоРасхождениямСклад = НЕ ПустаяСтрока(ТекстОшибкиСклад);
	ОтчетПоРасхождениямТорговыйЗал = НЕ ПустаяСтрока(ТекстОшибкиТорговыйЗал);
	
КонецПроцедуры

// Проверяет наличие проведенного приказа на инвентаризацию по магазину.
//
Функция ПроверитьНаличиеИнвентаризацииПоСкладу(Организация, ТорговыйОбъект, ТипСклада = Неопределено)
	
	МестоПроведения = ?(ТипСклада = Перечисления.ТипыСкладов.ТорговыйЗал, "ВТорговомЗале", "НаСкладе");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Магазин"    , ТорговыйОбъект);
	Запрос.УстановитьПараметр("ТипСклада"  , ТипСклада);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	ЕСТЬNULL(ПриказНаПроведениеИнвентаризацииТоваров.Ссылка, ЗНАЧЕНИЕ(Документ.ПриказНаПроведениеИнвентаризацииТоваров.ПустаяСсылка)) КАК ДокументСсылка,
	|	ЕСТЬNULL(ПриказНаПроведениеИнвентаризацииТоваров.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончания,
	|	ЕСТЬNULL(ПриказНаПроведениеИнвентаризацииТоваров.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПриказовНаПроведениеИнвентаризацийТоваров.ПустаяСсылка)) КАК Статус
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказНаПроведениеИнвентаризацииТоваров КАК ПриказНаПроведениеИнвентаризацииТоваров
	|		ПО Склады.Ссылка = ПриказНаПроведениеИнвентаризацииТоваров.Склад
	|			И (ПриказНаПроведениеИнвентаризацииТоваров.Проведен)
	|			И (ПриказНаПроведениеИнвентаризацииТоваров.Магазин = &Магазин)
	|			И (ВЫБОР
	|				КОГДА Склады.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА Склады.Организация = ПриказНаПроведениеИнвентаризацииТоваров.Организация
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ Склады.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА Склады.ТипСклада = ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ТорговыйЗал)
	|				ТОГДА Склады.Организация = &Организация
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И Склады.Магазин = &Магазин
	|	И ВЫБОР
	|			КОГДА &ТипСклада = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Склады.ТипСклада = &ТипСклада
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	ДатаОкончания УБЫВ
	|ИТОГИ ПО
	|	Склад
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ТекстОшибки = "";
	
	ВыборкаСклад = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСклад.Следующий() Цикл
		
		МассивСтроки = Новый Массив;
		МассивСтроки.Добавить(?(ТипСклада = Перечисления.ТипыСкладов.ТорговыйЗал, НСтр("ru='в торговом зале'"), НСтр("ru='на складе'")));
		МассивСтроки.Добавить(" ");
		МассивСтроки.Добавить(Новый ФорматированнаяСтрока(Строка(ВыборкаСклад.Склад),,,, ПолучитьНавигационнуюСсылку(ВыборкаСклад.Склад)));
		
		ПредставлениеСклада = Новый ФорматированнаяСтрока(МассивСтроки);
		
		Выборка = ВыборкаСклад.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ДокументСсылка.Пустая() Тогда
				
				МассивСтроки = Новый Массив;
				МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(ПредставлениеСклада);
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(НСтр("ru='не проводилась.'"));
				
				ТекстОшибки = Новый ФорматированнаяСтрока(МассивСтроки);
				
			ИначеЕсли НачалоДня(Выборка.ДатаОкончания) < НачалоДня(ДобавитьМесяц(ТекущаяДатаСеанса(), -1)) Тогда
				
				МассивСтроки = Новый Массив;
				МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(ПредставлениеСклада);
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(НСтр("ru='проводилась больше месяца назад.'"));
				МассивСтроки.Добавить(Символы.ПС);
				МассивСтроки.Добавить(НСтр("ru='Рекомендуется провести повторную инвентаризацию.'"));
				
				ТекстОшибки = Новый ФорматированнаяСтрока(МассивСтроки);
				
			ИначеЕсли Выборка.Статус <> Перечисления.СтатусыПриказовНаПроведениеИнвентаризацийТоваров.Закрыт Тогда
				
				МассивСтроки = Новый Массив;
				МассивСтроки.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(ПредставлениеСклада);
				МассивСтроки.Добавить(" ");
				МассивСтроки.Добавить(НСтр("ru='не завершена.'"));
				МассивСтроки.Добавить(Символы.ПС);
				МассивСтроки.Добавить(НСтр("ru='Перед корректировкой остатков по регистрам ЕГАИС рекомендуется завершить инвентаризацию.'"));
				
				ТекстОшибки = Новый ФорматированнаяСтрока(МассивСтроки);
				
			КонецЕсли;
			
			Прервать;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТекстОшибки;
	
КонецФункции

#КонецОбласти
