
#Область ФормаПоискНоменклатурыПоШтрихкоду

// В данной процедуре нужно переопределить параметры записи журнала регистрации при отказе ввода кода маркировки.
// 
// Параметры:
//  Форма - УправляемаяФорма - форма, для которой происходит обработка штрихкода.
//  СтруктураСообщения - Структура:
//   * ИмяСобытия - Строка - Имя события журнала регистрации.
//   * Уровень - Строка - Уровень журнала регистрации. Возможные уровни: "Информация", "Ошибка", "Предупреждение",
//        "Примечание".
//   * Данные - Любая ссылка, Число, Строка, Дата, Булево, Неопределено; Null; Тип - Данные журнала регистрации.
//   * СсылкаНаОбъект - Любая ссылка - Ссылка на объект, на основании которого будут полученные метаданные для записи
//        в журнал регистрации.
//   * КодМаркировки - Строка - Введеный код маркировки. Если значение кода не заполнено - ввод кода маркировки отменен
//        по инициативе пользователя.
Процедура ПриОпределенииИнформацииОбОтказеВводаКодаМаркиДляЖурналаРегистрации(Форма, СтруктураСообщения) Экспорт
	
	Если ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ЭтоКонтекстОбъекта(Форма, "Документ.ЧекККМ") Тогда
		СтруктураСообщения.СсылкаНаОбъект = ПредопределенноеЗначение("Документ.ЧекККМ.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработкаШтрихкодаНоменклатуры

//Возвращает имя типовой процедуры обработки данных штрихкода из обработки события сканирования в форме ЧекККМ
//
Функция ИмяТиповойПроцедурыОбработкиШтрихкода() Экспорт
	
	Возврат "ОбработатьКодМаркировки";
	
КонецФункции

Функция ПолучитьПустуюСсылкуУпаковка() Экспорт
	
	Возврат ПредопределенноеЗначение("Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка");
		
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

Процедура ОчиститьМаркиИСМПТК(Объект, СтрокаТабличнойЧасти) Экспорт 
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("КлючСвязи", СтрокаТабличнойЧасти.КлючСвязи);
	
	ТекущаяНоменклатура   = СтрокаТабличнойЧасти.Номенклатура;
	ТекущаяХарактеристика = СтрокаТабличнойЧасти.Характеристика;
	
	МассивКодовМаркировки = Объект.КодыМаркировкиИСМПТК.НайтиСтроки(СтруктураПоиска);
		
	Для Каждого СтрокаКМ Из МассивКодовМаркировки Цикл 
		Если Не ТекущаяНоменклатура = СтрокаКМ.Номенклатура
			Или Не ТекущаяХарактеристика = СтрокаКМ.Характеристика Тогда
			Объект.КодыМаркировкиИСМПТК.Удалить(СтрокаКМ);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область ПроверкаВидаПродукцииВРозничныхДокументах

Процедура ПроверитьТабачныйВидПродукции(ЭтоМаркировка, ИмяФормы, ТекстОшибки) Экспорт 
	
	ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная");
	ПроверитьВидПродукцииОбщая(ЭтоМаркировка, ИмяФормы, ТекстОшибки, ВидПродукции);
		
КонецПроцедуры

Процедура ПроверитьОбувнойВидПродукции(ЭтоМаркировка, ИмяФормы, ТекстОшибки) Экспорт
	
	ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная");
	ПроверитьВидПродукцииОбщая(ЭтоМаркировка, ИмяФормы, ТекстОшибки, ВидПродукции);

КонецПроцедуры

Процедура ПроверитьЛекарственногоВидПродукции(ЭтоМаркировка, ИмяФормы, ТекстОшибки) Экспорт
	
	ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты");
	ПроверитьВидПродукцииОбщая(ЭтоМаркировка, ИмяФормы, ТекстОшибки, ВидПродукции);
		
КонецПроцедуры

Процедура ПроверитьВидПродукцииОбщая(ЭтоМаркировка, ИмяФормы, ТекстОшибки, ТоварнаяГруппа) Экспорт
	
	ТекстОшибкиОбщийНеПредусмотрено = НСтр("ru = 'Сканирование номенклатуры вида ""%ВидПродукции%"" в данном документе не предусмотрено.'");
	ТекстОшибкиОбщийНеПредусмотрено = СтрЗаменить(ТекстОшибкиОбщийНеПредусмотрено, "%ВидПродукции%", ТоварнаяГруппа);
	
	Если ПроверитьДокументНаПоддержкуИСМП(, ИмяФормы) Тогда
		
		ЭтоМаркировка = Истина;
		
	ИначеЕсли ИмяФормы = "Документ.ВозвратТоваровОтПокупателя.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента" 
		Или ИмяФормы = "Документ.ПеремещениеТоваров.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.ПоступлениеТоваров.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.СборкаТоваров.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.РеализацияТоваров.Форма.ФормаДокумента" 
		Или ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаДокумента" 
		Или ИмяФормы = "Документ.СписаниеТоваров.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.ОприходованиеТоваров.Форма.ФормаДокумента"
		Или ИмяФормы = "Документ.СборкаТоваров.Форма.ФормаДокумента" 
		Или ИмяФормы = "Документ.ОрдерНаПеремещениеТоваров.Форма.ФормаДокумента" Тогда
		
		ЭтоМаркировка = Истина;
		ТекстОшибки   = ТекстОшибкиОбщийНеПредусмотрено;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ФормаПроверкиКМ

Процедура ПриЗакрытииФормыПроверкиКМ(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если ПроверитьДокументНаПоддержкуИСМП(Форма) Тогда		
		Оповестить("ЗакрытиеФормыПроверкиКМ", Результат, Форма.УникальныйИдентификатор);
	Иначе
		Форма.Прочитать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеПараметровОткрытияФормыПроверкиКМ(Форма, Параметры) Экспорт

	Если ОбщегоНазначенияИСМПТККлиентСервер.ЭтоДокументПоНаименованию(Форма, "ЧекККМ")
		Или Форма.ИмяФормы = "Обработка.РМКУправляемыйРежим.Форма.Форма" Тогда
		
		Параметры.ПроверятьМодифицированность   = Ложь;
		ПараметрыОповещенияПриЗакрытии = Новый Структура;
		ПараметрыОповещенияПриЗакрытии.Вставить("Форма", Форма);
		Параметры.ОписаниеОповещенияПриЗакрытии = Новый ОписаниеОповещения("ПриЗакрытииФормыПроверкиКМ", РозничноеВыбытиеИСМПТККлиент, ПараметрыОповещенияПриЗакрытии);
		
	КонецЕсли;

КонецПроцедуры

Процедура ВыполнитьПереопределяемуюКомандуЧекККМ(Форма, Команда, ДополнительныеПараметры) Экспорт
	
	//Открытие из формы чека ККМ
	Если Команда.Имя = "ПроверитьКодыМаркировки" Тогда
		
		ОчиститьСообщения();
		ПараметрыОткрытия = РозничноеВыбытиеИСМПТККлиент.ПараметрыОткрытияФормыПроверкиКМ(Форма);
		
		ОписаниеОповещения = ПараметрыОткрытия.ОписаниеОповещенияПриЗакрытии;
		ПараметрыОткрытия.Удалить("ОписаниеОповещенияПриЗакрытии"); //Удаляем служебные значения
		ПараметрыОткрытия.Удалить("ИмяРеквизитаФормыОбъект"); //Удаляем служебные значения
		ПараметрыОткрытия.Удалить("ИмяРеквизитаОрганизация"); //Удаляем служебные значения
				
		ПараметрыОткрытия.Вставить("СписокКМ", 	  Форма.Объект.КодыМаркировкиИСМПТК);
		ПараметрыОткрытия.Вставить("ТоварыЧека",  Форма.Объект.Товары);
		ПараметрыОткрытия.Вставить("Организация", форма.Объект.Организация);
		ПараметрыОткрытия.Вставить("ОбъединятьСтрокиСОдинаковымиТоварами", Истина);
		ПараметрыОткрытия.Вставить("ВызовИзФормыСпискаЧеков", Ложь);
		ПараметрыОткрытия.РедактированиеФормыНедоступно = Форма.ТолькоПросмотр;
		
		//Дополнительный параметр, присуствующий только при вызове из формы ЧекККМВозврат
		ПараметрыОткрытия.Вставить("ДанныеВозвращаемогоКода", Неопределено);
				
		ОткрытьФорму("Обработка.РозничноеВыбытиеМаркированнойПродукцииИСМПТК.Форма.ПроверкаКМ", ПараметрыОткрытия, Форма, Форма.УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
			
КонецПроцедуры

Функция ПолучитьНастройкуОбъединенияСтрокВЧеке(Форма) Экспорт 
	
	Возврат Форма.НаборПравИНастроек.ОбъединятьПозицииСОдинаковымТоваром;
	
КонецФункции

Процедура ОткрытьФормуПодбораНоменклатурыИРегистрацииШК_Общая(ИсходныеДанныеВходящие, ЭтоКодМарки, ДокументОбъект) Экспорт
	
	Операция = "СопоставлениеНоменклатуры";
	ТекстСообщенияНеизвестныйШтрихкод  =  НСтр("ru = 'Не удалось выполнить разбор отсканированного штрихкода.'");
	
	Если ТипЗнч(ИсходныеДанныеВходящие) = Тип("Структура") Тогда
		ИсходныеДанные = ИсходныеДанныеВходящие;
	ИначеЕсли ТипЗнч(ИсходныеДанныеВходящие) = Тип("Массив") Тогда
		ИсходныеДанные = ИсходныеДанныеВходящие[0];
	КонецЕсли;
	
	Если ЭтоКодМарки Тогда
		СтруктураКодовМаркировки = РозничноеВыбытиеИСМПТКВызовСервера.ПолучитьКодыМаркировкиПриРозничнойПродаже(Новый Структура("Штрихкод, ФорматBase64", ИсходныеДанные.Штрихкод, Истина));
		//Если удалось разобрать код, вернется структура. Если нет - текст сообщения об ошибке.
		Если ТипЗнч(СтруктураКодовМаркировки) = Тип("Строка") Тогда
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(СтруктураКодовМаркировки);
			//Был отсканирован Код маркировки, но не удалось его распознать - выводим сообщение об ошибке и не продолжаем разбор.
			Возврат;
		КонецЕсли;
	Иначе
		//Отсканирован не код маркировки. Пытаемся проверить, является ли строка штрихкодом ЕАН.
		//В библиотеке маркировки при сканировании ЕАН в документах поведение отличается от Чеков, поэтому обработку данного случая
		//выполняем уже на стороне типового решения в розничном контуре.
		СтруктураКодовМаркировки = Неопределено;
	КонецЕсли;
	
	ДанныеДляСопоставленияНоменклатуры = Новый Структура(); //передается в параметрах открытия формы подбора
	
	Если СтруктураКодовМаркировки = Неопределено Тогда
		
		//Возможно, был отсканирован ЕАН
		ТипШКСоответствуетКМ = РозничноеВыбытиеИСМПТКПереопределяемый.ПроверитьТипШтрихкодаВФормеВводаКМ(ИсходныеДанные.Штрихкод); //Обрабатываем обратный результат, когда ШК - это ЕАН8/ЕАН13
		Если Не ТипШКСоответствуетКМ Тогда
			//Был отсканирован ЕАН, берем его без изменений для заполнения данных:
			ДекодированныйШтрихкод = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.Base64ВШтрихкод(ИсходныеДанные.Штрихкод);
			ИсходныйШтрихкод = ДекодированныйШтрихкод;
			EAN 			 = ДекодированныйШтрихкод;
		Иначе
			//Когда отсканирован неизвестный ШК, не являющийся ни КМ, ни ЕАН. Возможно, это какой-то внутренний код - регистрацию ШК не продолжаем.
			РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиент.ВывестиСообщениеОбОшибке(ТекстСообщенияНеизвестныйШтрихкод);
			Возврат;
		КонецЕсли;

	Иначе
		//Был отсканирован код маркировки и его удалось корректно разобрать - берем данные из структуры разбора.
		ИсходныйШтрихкод = СтруктураКодовМаркировки.КодМаркировки;
		EAN 			 = СтруктураКодовМаркировки.EAN;
	КонецЕсли;
	
	ИсходныеДанные = Новый Структура("Количество, Штрихкод", 1, ИсходныйШтрихкод);
	ДанныеДляСопоставленияНоменклатуры.Вставить("ИсходныеДанные", ИсходныеДанные); //содержит структуру "Количество, Штрихкод", где штрихкод это отсканированный КМ
	
	ШтрихкодыКСопоставлению = Новый Массив();
	ДанныеШтрихкода = Новый Структура("Количество, Штрихкод", 1, EAN);
	ШтрихкодыКСопоставлению.Добавить(ДанныеШтрихкода);
	ДанныеДляСопоставленияНоменклатуры.Вставить("ШтрихкодыКСопоставлению", ШтрихкодыКСопоставлению); //содержит массив, где каждый элемент - структура "Количество, Штрихкод", где штрихкод - это EAN из КМ, который необходимо проверить по регистру Штрихкодов
	
	ПараметрыОткрытияФормы  = Новый Структура("ДанныеДляСопоставленияНоменклатуры, Операция, НеизвестныеШтрихкоды, СтруктураКодовМаркировки", ДанныеДляСопоставленияНоменклатуры, Операция, ШтрихкодыКСопоставлению, СтруктураКодовМаркировки);
	ДополнительныеПараметры = Новый Структура("ДанныеСоСканераСтруктура, ЭтоКодМаркировки", ИсходныеДанные, ЭтоКодМарки); 
	
	ОбработкаОповещенияПодборНоменклатуры = Новый ОписаниеОповещения("ОбработатьКодМаркировкиИСМПТК", ДокументОбъект, ДополнительныеПараметры);
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ОткрытьФорму("Обработка.РозничноеВыбытиеМаркированнойПродукцииИСМПТК.Форма.ПоискНоменклатурыПоШтрихкоду", ПараметрыОткрытияФормы, ДокументОбъект,,,, ОбработкаОповещенияПодборНоменклатуры, РежимОткрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НеобходимоОбновитьСтатусыСерий(ТекущиеДанные, КэшированныеЗначения, ПараметрыУказанияСерий, Удаление = Ложь) Экспорт
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Удаление Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИмяТЧТовары = "";
	
	Если Не ПараметрыУказанияСерий.Свойство("ИмяТЧТовары", ИмяТЧТовары) Тогда
		ИмяТЧТовары = "Товары";
	КонецЕсли;
	
	ИмяТЧСерии  = "";
	
	Если Не ПараметрыУказанияСерий.Свойство("ИмяТЧСерии", ИмяТЧСерии) Тогда
		ИмяТЧСерии = "Серии";
	КонецЕсли;
	
	Если ИмяТЧТовары = ИмяТЧСерии Тогда
		Если КэшированныеЗначения.Номенклатура = ТекущиеДанные.Номенклатура Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	ТекстПоляСвязи = "";
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	Для Каждого СтрокаМассива Из ПараметрыУказанияСерий.ПоляСвязи Цикл
		ТекстПоляСвязи = ТекстПоляСвязи + "," + СтрокаМассива;
	КонецЦикла;
	
	Если ПараметрыУказанияСерий.Свойство("ЭтоЗаказ")
		И ПараметрыУказанияСерий.ЭтоЗаказ
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки")) = Неопределено
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки")) = Неопределено Тогда
		ЕстьОтменаСтроки = Истина;
	Иначе
		ЕстьОтменаСтроки = Ложь;
	КонецЕсли;
	
	Если ЕстьОтменаСтроки Тогда
		ТекстПоляСвязи = ТекстПоляСвязи + ",Отменено";
	КонецЕсли;
	
	ИмяКолонкиКоличество = "";
	Если Не ПараметрыУказанияСерий.Свойство("ИмяКолонкиКоличество", ИмяКолонкиКоличество) Тогда
		ИмяКолонкиКоличество = "Количество";
	КонецЕсли;
	
	Если Не ОбщегоНазначенияРТКлиентСервер.СтруктурыРавны(КэшированныеЗначения, ТекущиеДанные,
		ИмяКолонкиКоличество + ",Номенклатура,Характеристика"+ТекстПоляСвязи) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции

Функция ПроверитьДокументНаПоддержкуИСМП(Форма = Неопределено, ИмяФормы = Неопределено) Экспорт
	
	Если Не Форма = Неопределено Тогда
		ИмяФормы = Форма.ИмяФормы;
	КонецЕсли;
	
	Если ИмяФормы    = "Документ.ЧекККМ.Форма.ФормаДокумента"
		Или ИмяФормы = "Обработка.РМКУправляемыйРежим.Форма.Форма" Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции

Функция ЕстьНеобработанноеСобытие() Экспорт
	
	Возврат (глПодключаемоеОборудованиеСобытиеОбработано = Ложь);
	
КонецФункции

#КонецОбласти

#Область Переопределение

Процедура ОбработкаВнешнегоСобытияЧекВозврат(Форма, ДанныеСоСканераСтруктура, ФормаИсточникСтрока, НесоответствиеТоваровРазрешено = Ложь) Экспорт
	
	//Проверяем, отсканировали Код маркировки (DataMatrix) или обычный штрихкод (EAN)
	Если ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Структура") Тогда
		//Данные со сканера в конфигурации типа "Розница"
		Штрихкод = ДанныеСоСканераСтруктура.Штрихкод;
	ИначеЕсли ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Массив") Тогда
		//В конфигурации типа "ЕРП, КА, УТ"
		Штрихкод = ДанныеСоСканераСтруктура[0].Штрихкод;
	КонецЕсли;	
	
	ИсходныйШтрихкод = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ШтрихкодВBase64(Штрихкод);
	ДанныеМаркировки = РозничноеВыбытиеИСМПТКВызовСервера.РазобратьШтриховойКодТовара(ИсходныйШтрихкод, Истина);
	
	ИмяТиповойПроцедурыОбработатьШтрихкод = ИмяТиповойПроцедурыОбработкиШтрихкода();
	
	Если Не ДанныеМаркировки.Разобран Тогда
		//Это не код маркировки и не ЕАН, но это может быть произвольный зарегистрированный штрихкод номенклатуры. 
		//В этом случае потребуется выполнить типовую обработку.
		Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");	
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеМаркировки.ОписаниеОшибки) Тогда
		
		ТекстСообщения = НСтр("ru = 'При разборе данных штрихкода произошла ошибка: '") + ДанныеМаркировки.ОписаниеОшибки;
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		//В этом случае скорее всего штрихкод - код маркировки, относящийся к товарной группе, учет которой в базе не включен.
		//В данном случае как маркировку обрабатывать его не можем, поэтому пробуем заменить отсканированный "КМ" на обычный ЕАН.
		//Если это получилось, отправяем данные в типовой механизм обработки события сканера, чтобы попытаться добавить товар как товар без особенностей учета.
		Если ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Структура") Тогда
			//Данные со сканера в конфигурации типа "Розница"
			ДанныеСоСканераСтруктура.Штрихкод = ДанныеМаркировки.EAN;
		ИначеЕсли ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Массив") Тогда
			//В конфигурации типа "ЕРП, КА, УТ"
			ДанныеСоСканераСтруктура[0].Штрихкод = ДанныеМаркировки.EAN;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеМаркировки.EAN) Тогда
			//Пробуем определить номенклатуру и ее особенности учета
			ДанныеНоменклатуры = РозничноеВыбытиеИСМПТККлиент.ПолучитьНоменклатуруПоШтрихкодуВРозничномКонтуре(ДанныеМаркировки.EAN);			
			Если Не ДанныеНоменклатуры = Неопределено 
				И ЗначениеЗаполнено(ДанныеНоменклатуры.Номенклатура) Тогда
				ВидПродукцииШК 	 = РозничноеВыбытиеИСМПТККлиент.ПолучитьВидПродукцииПоНоменклатуре(ДанныеНоменклатуры.Номенклатура);
				ОсобенностьУчета = ПолучитьОсобенностьУчетаНоменклатуры(ДанныеНоменклатуры.Номенклатура);
				//Нужно сформировать сообщение для администратора о наличии проблем в настройках учета маркируемой продукции
				Если Не ВидПродукцииШК.Пустая() Тогда
					ПредставлениеКМ = ?(ДанныеМаркировки.Свойство("ПредставлениеШтрихкода"), ДанныеМаркировки.ПредставлениеШтрихкода, ДанныеМаркировки.EAN); 
					ТекстОшибки = НСтр("ru = 'Внимание! Не включен учет маркировки по товарной группе ""%1""! В Чеке был отсканирован код маркировки ""%2"", связанный с номенклатурой ""%3"".'")
								+ НСтр("ru = 'Данная номенклатура имеет особенности учета: %4. Необходимо изменить вид номенклатуры на ""Товар без особенностей учета"" или включить учет маркировки этой товарной группы!'");
					ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВидПродукцииШК, ПредставлениеКМ, ДанныеНоменклатуры.Номенклатура, ОсобенностьУчета);
					ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
					ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
					ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
								   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
					ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
			Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось разобрать полученный штрихкод, товар не был добавлен!'");
			Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);
		КонецЕсли; // Проверка ЗначениеЗаполнено(ДанныеМаркировки.EAN)
	Иначе
		ЭтоКодМарки	 	  = РозничноеВыбытиеИСМПТККлиент.ЭтоКодМаркировки(ДанныеМаркировки.ТипИдентификатораТовара);
		НормализованныйКМ = РозничноеВыбытиеИСМПТКВызовСервера.НормализованныйШтрихкод(ДанныеМаркировки.ШтрихкодBase64);
		
		//Проверяем наличие отсканированного КМ в документе, чтобы избежать дублирования кодов
		НайденныйВЧекеКМ = Форма.Объект.КодыМаркировкиИСМПТК.НайтиСтроки(Новый Структура("КодМаркировки", НормализованныйКМ)).Количество();
		Если Не НайденныйВЧекеКМ = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Код маркировки уже указан в документе!'"); 
			Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);		
			Возврат;
		КонецЕсли;	
		
		ДанныеНоменклатуры = РозничноеВыбытиеИСМПТККлиент.ПолучитьНоменклатуруПоШтрихкодуВРозничномКонтуре(ДанныеМаркировки.EAN);
		Если ДанныеНоменклатуры = Неопределено Тогда
			Если Не ЭтоКодМарки Тогда
				//Обрабатываем как обычный товар
				Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
			Иначе
				//Но если ЕАН не зарегистрирован в базе, в РМК не даем возможности выполнить регистрацию, т.к. кассир этим не занимается
				//Поэтому просто оповещаем пользователя, что выполнить добавление незарегистрированного товара невозможно.
				ТекстОшибки = НСтр("ru = 'Внимание! В Чеке был отсканирован код маркировки ""%1"". В базе не обнаружено зарегистрированного штрихкода номенклатуры EAN ""%2""!'")
							+ НСтр("ru = 'Чтобы работать с кодами маркировки необходимо зарегистрировать новый штрихкод номенклатуры для позиции, имеющей особенности учета по маркировке.'");
				ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеМаркировки.ПредставлениеШтрихкода, ДанныеМаркировки.EAN);
				ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
				ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
				ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
							   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				
				ТекстСообщения = НСтр("ru = 'Не удалось определить номенклатуру для кода маркировки %1, товар не был добавлен в чек!'"); 
				ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ДанныеМаркировки.ПредставлениеШтрихкода);
				Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);	
			КонецЕсли;
		ИначеЕсли ТипЗнч(ДанныеНоменклатуры) = Тип("Структура")
			И Не ЗначениеЗаполнено(ДанныеНоменклатуры.Номенклатура) Тогда
			
			Если Не ЭтоКодМарки Тогда
				Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
			Иначе
				Если Не ЭтоКодМарки Тогда
					Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
				Иначе
					//Данные номенклатуры по штрихкоду однозначно определить не удалось.
					//В конфигурациях типа "Розница", поддерживающих регистрацию неуникальных штрихкодов, в ДанныеНоменклатуры может быть передана
					//пустая структура, если обнаружилось несколько записей по одному штрихкоду. 
					//В этом случае требуется сначала отработать типовой механизм уточнения номенклатуры пользователем.
					СведенияОКодеМаркировки = Новый Структура();
					СведенияОКодеМаркировки.Вставить("ДанныеМаркировки",   ДанныеМаркировки);
					СведенияОКодеМаркировки.Вставить("ДанныеНоменклатуры", ДанныеНоменклатуры);
					Форма.ОбработатьКодМаркировкиИСМПТК(ДанныеСоСканераСтруктура, СведенияОКодеМаркировки);
				КонецЕсли;
			КонецЕсли;
		Иначе
			
			Номенклатура      	 = ДанныеНоменклатуры.Номенклатура; 
			Характеристика    	 = ДанныеНоменклатуры.Характеристика;
			Упаковка  		  	 = ДанныеНоменклатуры.Упаковка;
			БазоваяЕИ			 = ДанныеНоменклатуры.БазоваяЕдиницаИзмерения;
			ИспользуютсяУпаковки = ДанныеНоменклатуры.ИспользуютсяУпаковки;
			ВидПродукцииШК    	 = РозничноеВыбытиеИСМПТККлиент.ПолучитьВидПродукцииПоНоменклатуре(Номенклатура);
			
			Если Не ЭтоКодМарки Тогда
				Если Не ЗначениеЗаполнено(ВидПродукцииШК) Тогда
					//Это не код маркировки и зарегистрированная номенклатура без особенностей учета - выполняем стандартную обработку штрихкода,
					//т.к. товар не относится к маркируемой продукции.
					Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
				Иначе				
					//Это не код маркировки, но зарегистрированная на него номенклатура с особенностями учета:
					//Если включен учет маркировки этой ТГ, по правилам маркировки запрашиваем указание кода маркировки;
					//Если учет этой ТГ не включен, нужно предупредить о проблеме с особенностью учета у номенклатуры, а товар добавить как обычный не маркируемый.
					УчетТГВключен = РозничноеВыбытиеИСМПТКВызовСервера.ПроверитьВключениеУчетаТГ(ВидПродукцииШК);
					Если УчетТГВключен Тогда
						ДанныеНоменклатурыКода = Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения", Номенклатура, Характеристика, ?(ИспользуютсяУпаковки, Упаковка, ПолучитьПустуюСсылкуУпаковка()));
						Форма.ДобавлениеМПБезКодаМаркировкиПредупреждение(ВидПродукцииШК, ДанныеМаркировки, ДанныеНоменклатурыКода);
					Иначе
						ТекстОшибки = НСтр("ru = 'Внимание! Не включен учет маркировки по товарной группе ""%1""! У номенклатуры ""%2"" установлены особенности учета по маркировке товарной группы: ""%3"".'")
									+ НСтр("ru = 'Необходимо изменить вид номенклатуры на ""Товар без особенностей учета"" или включить учет маркировки этой товарной группы!'");
						ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВидПродукцииШК, ДанныеНоменклатуры.Номенклатура, ОсобенностьУчета);
						ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
						ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
						ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
									   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
						ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
					КонецЕсли;
				КонецЕсли; // Проверка Не ЗначениеЗаполнено(ВидПродукцииШК)
			Иначе 
				
				//Формируем служебные оповещенеия
				Если Не ЗначениеЗаполнено(ВидПродукцииШК) Тогда
					//Отсканированили код маркировки, но товар без особенностей учета по маркировке. 
					ТекстОшибки = НСтр("ru = 'Внимание! В Чеке был отсканирован код маркировки ""%1"", связанный с номенклатурой ""%2"".'")
								+ НСтр("ru = 'Данная номенклатура не имеет особенностей учета по маркировке! Необходимо изменить вид номенклатуры на ""Товар с особенностями учета"" соответствующей товарной группы!'");
					ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, НормализованныйКМ, ДанныеНоменклатуры.Номенклатура);
					ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
					ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
					ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
								   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
					ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				Иначе
					//Отсканировали код маркировки и этот товар с особенностями учета,
					//нужно проверить, что в базе включен учет данной товарной группы.
					УчетТГНоменклатурыВключен = РозничноеВыбытиеИСМПТКВызовСервера.ПроверитьАктивностьОпцииУчетаПоТГноменклатуры(ВидПродукцииШК);
					Если Не УчетТГНоменклатурыВключен Тогда
						//В этом случае не можем работать с маркировкой, товар воспринимаем как ном-ру без особенностей учета и обрабатываем ее ввод стандартным механизмом
						ОсобенностьУчета = ПолучитьОсобенностьУчетаНоменклатуры(ДанныеНоменклатуры.Номенклатура);
						ТекстОшибки = НСтр("ru = 'Внимание! Не включен учет маркировки по товарной группе ""%1""! В Чеке был отсканирован код маркировки ""%2"", связанный с номенклатурой ""%3"".'")
									+ НСтр("ru = 'Данная номенклатура имеет особенности учета: %4. Необходимо изменить вид номенклатуры на ""Товар без особенностей учета"" или включить учет маркировки этой товарной группы!'");
						ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВидПродукцииШК, НормализованныйКМ, ДанныеНоменклатуры.Номенклатура, ОсобенностьУчета);
						ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
						ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
						ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
									   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
						ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
					КонецЕсли;
				КонецЕсли; // Проверка ЗначениеЗаполнено(ВидПродукцииШК)
				
				//Проверяем наличие товара, к которому относится отсканированный КМ, в таблице: добавлять КМ по отсутствующим в чеке товарам при возврате нельзя
				СтруктураПоискаПоЧеку = Новый Структура("Номенклатура, Характеристика, Упаковка");
				СтруктураПоискаПоЧеку.Вставить("Номенклатура",   Номенклатура);
				СтруктураПоискаПоЧеку.Вставить("Характеристика", Характеристика);
				СтруктураПоискаПоЧеку.Вставить("Упаковка", 		 Упаковка);
						
				НайденныеСтрокиТоваровЧекаКоличество = Форма.Объект.Товары.НайтиСтроки(СтруктураПоискаПоЧеку).Количество();
			
				Если Не НайденныеСтрокиТоваровЧекаКоличество = 0 Тогда
					//Открываем форму ПроверкаКМ для подтверждения добавления КМ в чек
					ПараметрыОткрытия = РозничноеВыбытиеИСМПТККлиент.ПараметрыОткрытияФормыПроверкиКМ(Форма);
					
					ОписаниеОповещения = ПараметрыОткрытия.ОписаниеОповещенияПриЗакрытии;
					ПараметрыОткрытия.Удалить("ОписаниеОповещенияПриЗакрытии"); //Удаляем служебные значения
					ПараметрыОткрытия.Удалить("ИмяРеквизитаФормыОбъект"); 		//Удаляем служебные значения
					ПараметрыОткрытия.Удалить("ИмяРеквизитаОрганизация"); 		//Удаляем служебные значения
					
					ПараметрыОткрытия.Вставить("СписокКМ", 	  Форма.Объект.КодыМаркировкиИСМПТК);
					ПараметрыОткрытия.Вставить("ТоварыЧека",  Форма.Объект.Товары);
					ПараметрыОткрытия.Вставить("Организация", форма.Объект.Организация);
					ПараметрыОткрытия.Вставить("ОбъединятьСтрокиСОдинаковымиТоварами", Истина);
					ПараметрыОткрытия.Вставить("ВызовИзФормыСпискаЧеков", Ложь);
					ПараметрыОткрытия.РедактированиеФормыНедоступно = Форма.ТолькоПросмотр;
					
					//Дополнительный параметр, присуствующий только при вызове из формы ЧекККМВозврат
					ДанныеКМ = Новый Структура("ДанныеМаркировки, ДанныеНоменклатуры", ДанныеМаркировки, ДанныеНоменклатуры);
					ПараметрыОткрытия.Вставить("ДанныеВозвращаемогоКода", ДанныеКМ);
					
					ОткрытьФорму("Обработка.РозничноеВыбытиеМаркированнойПродукцииИСМПТК.Форма.ПроверкаКМ", ПараметрыОткрытия, Форма, Форма.УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
				Иначе
					Если НесоответствиеТоваровРазрешено Тогда 
						//Конфигурация поддерживает заполнение чека на возврат товарами не из чека продажи
						РозничноеВыбытиеИСМПТККлиент.ОбработкаВнешнегоСобытия(Форма, ДанныеСоСканераСтруктура, ФормаИсточникСтрока);
					Иначе	
						ТекстСообщения = НСтр("ru = 'Отсканированный код маркировки относится к номенклатуре, отсутствующей в чеке.'"); 
						Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);	
					КонецЕсли;
				КонецЕсли; // Проверка НайденныеСтрокиТоваровЧекаКоличество = 0
			КонецЕсли; // Проверка ЭтоКодМарки		
		КонецЕсли; // Проверка ДанныеНоменклатуры = Неопределено
	КонецЕсли; // Проверка ЗначениеЗаполнено(ДанныеМаркировки.ОписаниеОшибки)
		
КонецПроцедуры

Процедура ОбработкаВнешнегоСобытия(Форма, ДанныеСоСканераСтруктура, ФормаИсточникСтрока) Экспорт
	
	//Проверяем, отсканировали Код маркировки (DataMatrix) или обычный штрихкод (EAN)
	Если ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Структура") Тогда
		//Данные со сканера в конфигурации типа "Розница"
		Штрихкод = ДанныеСоСканераСтруктура.Штрихкод;
	ИначеЕсли ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Массив") Тогда
		//В конфигурации типа "ЕРП, КА, УТ"
		Штрихкод = ДанныеСоСканераСтруктура[0].Штрихкод;
	КонецЕсли;	
	
	ИсходныйШтрихкод = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ШтрихкодВBase64(Штрихкод);
	ДанныеМаркировки = РозничноеВыбытиеИСМПТКВызовСервера.РазобратьШтриховойКодТовара(ИсходныйШтрихкод, Истина);
	
	ИмяТиповойПроцедурыОбработатьШтрихкод = РозничноеВыбытиеИСМПТККлиентПереопределяемый.ИмяТиповойПроцедурыОбработкиШтрихкода();
	
	Если Не ДанныеМаркировки.Разобран Тогда
		//Это не код маркировки и не ЕАН, но это может быть произвольный зарегистрированный штрихкод номенклатуры. 
		//В этом случае потребуется выполнить типовую обработку.
		Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");	
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеМаркировки.ОписаниеОшибки) Тогда
		
		ТекстСообщения = НСтр("ru = 'При разборе данных штрихкода произошла ошибка: '") + ДанныеМаркировки.ОписаниеОшибки;
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		//В этом случае скорее всего штрихкод - код маркировки, относящийся к товарной группе, учет которой в базе не включен.
		//В данном случае как маркировку обрабатывать его не можем, поэтому пробуем заменить отсканированный "КМ" на обычный ЕАН.
		//Если это получилось, отправяем данные в типовой механизм обработки события сканера, чтобы попытаться добавить товар как товар без особенностей учета.
		Если ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Структура") Тогда
			//Данные со сканера в конфигурации типа "Розница"
			ДанныеСоСканераСтруктура.Штрихкод = ДанныеМаркировки.EAN;
		ИначеЕсли ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Массив") Тогда
			//В конфигурации типа "ЕРП, КА, УТ"
			ДанныеСоСканераСтруктура[0].Штрихкод = ДанныеМаркировки.EAN;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеМаркировки.EAN) Тогда
			//Пробуем определить номенклатуру и ее особенности учета
			ДанныеНоменклатуры = РозничноеВыбытиеИСМПТККлиент.ПолучитьНоменклатуруПоШтрихкодуВРозничномКонтуре(ДанныеМаркировки.EAN);			
			Если Не ДанныеНоменклатуры = Неопределено 
				И ЗначениеЗаполнено(ДанныеНоменклатуры.Номенклатура) Тогда
				ВидПродукцииШК 	 = РозничноеВыбытиеИСМПТККлиент.ПолучитьВидПродукцииПоНоменклатуре(ДанныеНоменклатуры.Номенклатура);
				ОсобенностьУчета = ПолучитьОсобенностьУчетаНоменклатуры(ДанныеНоменклатуры.Номенклатура);
				//Нужно сформировать сообщение для администратора о наличии проблем в настройках учета маркируемой продукции
				Если Не ВидПродукцииШК.Пустая() Тогда
					ПредставлениеКМ = ?(ДанныеМаркировки.Свойство("ПредставлениеШтрихкода"), ДанныеМаркировки.ПредставлениеШтрихкода, ДанныеМаркировки.EAN); 
					ТекстОшибки = НСтр("ru = 'Внимание! Не включен учет маркировки по товарной группе ""%1""! В Чеке был отсканирован код маркировки ""%2"", связанный с номенклатурой ""%3"".'")
								+ НСтр("ru = 'Данная номенклатура имеет особенности учета: %4. Необходимо изменить вид номенклатуры на ""Товар без особенностей учета"" или включить учет маркировки этой товарной группы!'");
					ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВидПродукцииШК, ПредставлениеКМ, ДанныеНоменклатуры.Номенклатура, ОсобенностьУчета);
					ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
					ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
					ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
								   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
					ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
			Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
		Иначе
			ТекстСообщения = НСтр("ru = 'Не удалось разобрать полученный штрихкод, товар не был добавлен!'");
			Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);
		КонецЕсли; // Проверка ЗначениеЗаполнено(ДанныеМаркировки.EAN)	
	Иначе
		
		ЭтоКодМарки	 	  = РозничноеВыбытиеИСМПТККлиент.ЭтоКодМаркировки(ДанныеМаркировки.ТипИдентификатораТовара);
		НормализованныйКМ = РозничноеВыбытиеИСМПТКВызовСервера.НормализованныйШтрихкод(ДанныеМаркировки.ШтрихкодBase64);
		
		//Проверяем, зарегистрирован ли полученный при разборе данных со сканера EAN в регистре
		ЭтоЗарегистрированныйШК  = Ложь;
		ДанныеНоменклатуры 		 = РозничноеВыбытиеИСМПТККлиент.ПолучитьНоменклатуруПоШтрихкодуВРозничномКонтуре(ДанныеМаркировки.EAN);
			
		Если Не ДанныеНоменклатуры = Неопределено 
			И  ЗначениеЗаполнено(ДанныеНоменклатуры.Номенклатура) Тогда
						
			//Если ШК зарегистрирован, проверяем особенности учета его номенклатуры
			ЭтоЗарегистрированныйШК = Истина;
			Номенклатура      	 = ДанныеНоменклатуры.Номенклатура; 
			Характеристика    	 = ДанныеНоменклатуры.Характеристика;
			Упаковка  		  	 = ДанныеНоменклатуры.Упаковка;
			БазоваяЕИ			 = ДанныеНоменклатуры.БазоваяЕдиницаИзмерения;
			ИспользуютсяУпаковки = ДанныеНоменклатуры.ИспользуютсяУпаковки;
			ВидПродукцииШК    	 = РозничноеВыбытиеИСМПТККлиент.ПолучитьВидПродукцииПоНоменклатуре(Номенклатура);
						
			Если Не ЭтоКодМарки Тогда
				Если Не ЗначениеЗаполнено(ВидПродукцииШК) Тогда
					//Это не код маркировки и зарегистрированная номенклатура без особенностей учета - выполняем стандартную обработку штрихкода,
					//т.к. товар не относится к маркируемой продукции.
					Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
					
				Иначе				
					//Это не код маркировки, но зарегистрированная на него номенклатура с особенностями учета:
					//Если включен учет маркировки этой ТГ, по правилам маркировки запрашиваем указание кода маркировки;
					//Если учет этой ТГ не включен, нужно предупредить о проблеме с особеннсотью учета у номенклатуры, а товар добавить как обычный не маркируемый.
					УчетТГВключен = РозничноеВыбытиеИСМПТКВызовСервера.ПроверитьВключениеУчетаТГ(ВидПродукцииШК);
					Если УчетТГВключен Тогда
						ДанныеНоменклатурыКода = Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения", Номенклатура, Характеристика, ?(ИспользуютсяУпаковки, Упаковка, РозничноеВыбытиеИСМПТККлиентПереопределяемый.ПолучитьПустуюСсылкуУпаковка()));
						Форма.ДобавлениеМПБезКодаМаркировкиПредупреждение(ВидПродукцииШК, ДанныеМаркировки, ДанныеНоменклатурыКода);
					Иначе
						ТекстОшибки = НСтр("ru = 'Внимание! Не включен учет маркировки по товарной группе ""%1""! У номенклатуры ""%2"" установлены особенности учета по маркировке товарной группы: ""%3"".'")
									+ НСтр("ru = 'Необходимо изменить вид номенклатуры на ""Товар без особенностей учета"" или включить учет маркировки этой товарной группы!'");
						ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВидПродукцииШК, ДанныеНоменклатуры.Номенклатура, ОсобенностьУчета);
						ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
						ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
						ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " " 
									   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
						ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
					КонецЕсли;
				КонецЕсли; // Проверка  ЗначениеЗаполнено(ВидПродукцииШК)
			Иначе
				Если Не ЗначениеЗаполнено(ВидПродукцииШК) Тогда
					//Отсканированили код маркировки, но товар без особенностей учета по маркировке. 
					//В данном случае не можем проверить включение учета маркировки ТГ, но должны добавить КМ в таблицу.
					//Предупреждаем о проблемах в настройках учета. 
					ТекстОшибки = НСтр("ru = 'Внимание! В Чеке был отсканирован код маркировки ""%1"", связанный с номенклатурой ""%2"".'")
								+ НСтр("ru = 'Данная номенклатура не имеет особенностей учета по маркировке! Необходимо изменить вид номенклатуры на ""Товар с особенностями учета"" соответствующей товарной группы!'");
					ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, НормализованныйКМ, ДанныеНоменклатуры.Номенклатура);
					ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
					ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
					ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
								   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
					ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
					
					//Перед добавлением КМ в таблицу проверяем его наличие в списке уже добавленных КМ
					МожноПродолжитьОбработкуКМ = Форма.ПроверитьТЧКодыМаркировкиНаНаличиеКМ(НормализованныйКМ);
					Если МожноПродолжитьОбработкуКМ Тогда
						СведенияОКодеМаркировки = Новый Структура();
						СведенияОКодеМаркировки.Вставить("ДанныеМаркировки",   ДанныеМаркировки);
						СведенияОКодеМаркировки.Вставить("ДанныеНоменклатуры", ДанныеНоменклатуры);
						Форма.ОбработатьКодМаркировкиИСМПТК(ДанныеСоСканераСтруктура, СведенияОКодеМаркировки);
					Иначе
						ТекстСообщения = НСтр("ru = 'Невозможно добавить код маркировки: он уже присутствует в документе.'"); 
						Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);
					КонецЕсли;
					
				Иначе
					//Отсканировали код маркировки и этот товар с особенностями учета,
					//нужно проверить, что в базе включен учет данной товарной группы.
					УчетТГНоменклатурыВключен = РозничноеВыбытиеИСМПТКВызовСервера.ПроверитьАктивностьОпцииУчетаПоТГноменклатуры(ВидПродукцииШК);
					Если Не УчетТГНоменклатурыВключен Тогда
							
						//В этом случае не можем работать с маркировкой, товар воспринимаем как ном-ру без особенностей учета и обрабатываем ее ввод стандартным механизмом
						ОсобенностьУчета = ПолучитьОсобенностьУчетаНоменклатуры(ДанныеНоменклатуры.Номенклатура);
						ТекстОшибки = НСтр("ru = 'Внимание! Не включен учет маркировки по товарной группе ""%1""! В Чеке был отсканирован код маркировки ""%2"", связанный с номенклатурой ""%3"".'")
									+ НСтр("ru = 'Данная номенклатура имеет особенности учета: %4. Необходимо изменить вид номенклатуры на ""Товар без особенностей учета"" или включить учет маркировки этой товарной группы!'");
						ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВидПродукцииШК, НормализованныйКМ, ДанныеНоменклатуры.Номенклатура, ОсобенностьУчета);
						ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
						ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
						ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
									   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации(); 
						ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						
						ТекстСообщения = НСтр("ru = 'Введен код маркировки. Связанная номенклатура ""%1"" имеет особенности учета по маркировке, но учет товарной группы ""%2"" в базе не включен.'")
									   + НСтр("ru = 'Обработка кода маркировки невозможна! Товар добавлен в документ без учета кода маркировки.'"); 
						ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Номенклатура, ВидПродукцииШК);			   
						Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);	
												
						//Добавляем позицию стандартным механизмом без учета КМ, однако сначала нужно подменить значение кода маркировки в структуре данных со сканера
						//на обычный штрихкод товара.
						Если ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Структура") Тогда
							//Данные со сканера в конфигурации типа "Розница"
							ДанныеСоСканераСтруктура.Штрихкод = ДанныеМаркировки.EAN;
						ИначеЕсли ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Массив") Тогда
							//В конфигурации типа "ЕРП, КА, УТ"
							ДанныеСоСканераСтруктура[0].Штрихкод = ДанныеМаркировки.EAN;
						КонецЕсли;
						Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
						
					Иначе
						//Учет маркировки этой ТГ включен, отсканирован КМ и номенклатура настроена корректно - можно выполнять добавление товара и КМ по механизму работы с маркировкой.
						//Но сначала проверим, что ранее в этом чеке такой КМ не сканировался (повторно добавлять нельзя).
						МожноПродолжитьОбработкуКМ = Форма.ПроверитьТЧКодыМаркировкиНаНаличиеКМ(НормализованныйКМ);
						Если Не МожноПродолжитьОбработкуКМ Тогда
							ТекстСообщения = НСтр("ru = 'Невозможно добавить код маркировки: он уже присутствует в документе.'"); 
							Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);	
						Иначе
							СведенияОКодеМаркировки = Новый Структура();
							СведенияОКодеМаркировки.Вставить("ДанныеМаркировки",   ДанныеМаркировки);
							СведенияОКодеМаркировки.Вставить("ДанныеНоменклатуры", ДанныеНоменклатуры);
							Форма.ОбработатьКодМаркировкиИСМПТК(ДанныеСоСканераСтруктура, СведенияОКодеМаркировки);
						КонецЕсли;				
					КонецЕсли; // Проверка УчетТГНоменклатурыВключен
				КонецЕсли; // Проверка ЗначениеЗаполнено(ВидПродукцииШК)
			КонецЕсли; // Проверка ЭтоКодМарки		
		Иначе 
			//Данные номенклатуры по штрихкоду однозначно определить не удалось.
			//В конфигурациях, поддерживающих регистрацию неуникальных штрихкодов, в ДанныеНоменклатуры может быть передана
			//пустая структура, если обнаружилось несколько записей по одному штрихкоду. 
			//В этом случае требуется сначала отработать стандартный механизм уточнения номенклатуры пользователем.
			Если ТипЗнч(ДанныеНоменклатуры) = Тип("Структура") Тогда
				
				Если Не ЭтоКодМарки Тогда
					Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
				Иначе
					//Перед добавлением КМ в таблицу проверяем его наличие в списке уже добавленных КМ
					МожноПродолжитьОбработкуКМ = Форма.ПроверитьТЧКодыМаркировкиНаНаличиеКМ(НормализованныйКМ);
					Если МожноПродолжитьОбработкуКМ Тогда
						СведенияОКодеМаркировки = Новый Структура();
						СведенияОКодеМаркировки.Вставить("ДанныеМаркировки",   ДанныеМаркировки);
						СведенияОКодеМаркировки.Вставить("ДанныеНоменклатуры", ДанныеНоменклатуры);
						Форма.ОбработатьКодМаркировкиИСМПТК(ДанныеСоСканераСтруктура, СведенияОКодеМаркировки);
					Иначе
						ТекстСообщения = НСтр("ru = 'Невозможно добавить код маркировки: он уже присутствует в документе.'"); 
						Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				//Если конфигурация не поддерживает работу с неуникальными штрихкодами и номенклатура для отсканированного кода не определилась,
				//в некоторых случаях можем предложить зарегистрировать новый штрихкод номенклатуры.
				Если ЭтоКодМарки Тогда
					Если ФормаИсточникСтрока = "ЧекККМ" Тогда
						//Если сканирование кода маркировки выполнеятся менеджером в документе, позволяем зарегистрировать новую номенклатуру
						//напрямую из документа в момент заполнения.
						Если ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Структура") Тогда
							//Данные со сканера в конфигурации типа "Розница"
							ДанныеСоСканераСтруктура.Штрихкод = ИсходныйШтрихкод;
						ИначеЕсли ТипЗнч(ДанныеСоСканераСтруктура) = Тип("Массив") Тогда
							//В конфигурации типа "ЕРП, КА, УТ"
							ДанныеСоСканераСтруктура[0].Штрихкод = ИсходныйШтрихкод;
						КонецЕсли;
						Форма.ОткрытьФормуПодбораНоменклатурыИРегистрацииШК(ДанныеСоСканераСтруктура, ЭтоКодМарки);
					Иначе 
						//Но если ЕАН не зарегистрирован в базе, в РМК не даем возможности выполнить регистрацию, т.к. кассир этим не занимается
						//Поэтому просто оповещаем пользователя, что выполнить добавление незарегистрированного товара невозможно.
						ТекстОшибки = НСтр("ru = 'Внимание! В Чеке был отсканирован код маркировки ""%1"". В базе не обнаружено зарегистрированного штрихкода номенклатуры EAN ""%2""!'")
									+ НСтр("ru = 'Чтобы работать с кодами маркировки необходимо зарегистрировать новый штрихкод номенклатуры для позиции, имеющей особенности учета по маркировке.'");
						ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеМаркировки.ПредставлениеШтрихкода, ДанныеМаркировки.EAN);
						ИмяСобытия = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияРозничнаяПродажа();
						ОбщегоНазначенияИСМПТКВызовСервера.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, "Предупреждение",,, ТекстОшибки);
						ТекстСообщения = НСтр("ru = 'Внимание! Обнаружены проблемы в настройках учета маркируемой продукции! Требуется сообщить Администратору.'") + " "
									   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации();
						ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						
						ТекстСообщения = НСтр("ru = 'Не удалось определить номенклатуру для кода маркировки %1, товар не был добавлен в чек!'"); 
						ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ДанныеМаркировки.ПредставлениеШтрихкода);
						Форма.ВывестиСообщениеОбОшибке(ТекстСообщения);	
					КонецЕсли; // Проверка ФормаИсточникСтрока = "ЧекККМ"
				Иначе
					//Если ЕАН не зарегистрирован и пользователь работает не с КМ, подключаем стандартный механизм.
					Выполнить("Форма." + ИмяТиповойПроцедурыОбработатьШтрихкод + "(ДанныеСоСканераСтруктура)");
				КонецЕсли; // Проверка ЭтоКодМарки
			КонецЕсли; // Проверка ТипЗнч(ДанныеНоменклатуры) = Тип("Структура")
		КонецЕсли; // Проверка Не ДанныеНоменклатуры = Неопределено
	КонецЕсли; // Проверка ЗначениеЗаполнено(ДанныеМаркировки.ОписаниеОшибки)			
	
КонецПроцедуры

Функция ПолучитьОсобенностьУчетаНоменклатуры(Номенклатура) Экспорт
	
	Возврат РозничноеВыбытиеИСМПТКВызовСервера.ПолучитьОсобенностьУчетаНоменклатуры(Номенклатура);
	
КонецФункции

#Область Розница

#Область ФормаВыборДанныхПоискаПоКМ

Процедура ОткрытьФормуУточненияДанныхТоварнойПозиции(Форма, НормализованныйКМ) Экспорт 
	
	СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Форма, НормализованныйКМ);
	ОбработатьДанныеПодбораТовара(Форма, СтруктураПараметровКлиента);
			
КонецПроцедуры

Функция ПолученШтрихкодИзСШК(Форма, Штрихкод) Экспорт
	
	СтруктураРезультат = РозничноеВыбытиеИСМПТКПереопределяемый.ДанныеПоискаПоШтрихкодуСервер(Штрихкод);
	Возврат ПолученШтрихкодИзСШКПродолжение(Форма, СтруктураРезультат);
	
КонецФункции

Функция ПолученШтрихкодИзСШКПродолжение(Форма, СтруктураРезультат) Экспорт
	
	НайденоОбъектов = СтруктураРезультат.ЗначенияПоиска.Количество();
	Если НайденоОбъектов = 1 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеОбработатьДанныеПоПолученнымШК", Форма);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, СтруктураРезультат);
	ИначеЕсли НайденоОбъектов > 1 Тогда
		ПодключаемоеОборудованиеРТВызовСервера.ПодготовитьДанныеДляВыбора(СтруктураРезультат);
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ОбработатьДанныеПодбораТовара(Форма, СтруктураПараметровКлиента) Экспорт
	
	Если СтруктураПараметровКлиента.Свойство("ВыборДанныхПоиска") Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("СтруктураПараметровКлиента", СтруктураПараметровКлиента);
		ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыборДанныхПоискаПоКМ", Форма, ДополнительныеПараметры);
		ПараметрыФормы 		 = Новый Структура("АдресВХранилище", СтруктураПараметровКлиента.ВыборДанныхПоиска);
		Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
		ОткрытьФорму("Обработка.РозничноеВыбытиеМаркированнойПродукцииИСМПТК.Форма.ВыборДанныхПоискаПоКМ", ПараметрыФормы,,,,, ОбработчикОповещения, Режим); 
				
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти