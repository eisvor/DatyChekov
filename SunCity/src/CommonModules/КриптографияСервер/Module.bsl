#Область ПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
// Параметры:
//  Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
// Пример:
//  Для добавления своей процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.РежимВыполнения     = "Оперативно";
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	ЗавершениеОбновления = Ложь;
	КриптографияСерверПереопределяемый.ПриДобавленииОбработчиковОбновления(Обработчики, ЗавершениеОбновления);
	Если ЗавершениеОбновления Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормами

// Проверяет использование серверной криптографии на форме настроек и настраивает видимость и комментарии для элементов.
//
// Параметры:
//   Форма (Форма) – Форма, на которой настраиваются элементы и комментарии.
//   МестоУстановкиБиблиотеки (ПеречислениеСсылка.МестаВыполненияКриптографическихОпераций) – Текущее место установки библиотеки.
//
Процедура ПроверитьИспользованиеСервернойКриптографииФормыНастройки(Форма, МестоУстановкиБиблиотеки) Экспорт
	
	ЭлементМестоУстановкиБиблиотеки = Форма.Элементы.Найти("МестоУстановкиБиблиотеки");
	ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере = Форма.Элементы.Найти("ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере");
	КомментарийМестоУстановкиБиблиотекиНаСервере = Форма.Элементы.Найти("КомментарийМестоУстановкиБиблиотекиНаСервере");
	ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте = Форма.Элементы.Найти("ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте");
	КомментарийМестоУстановкиБиблиотекиНаКлиенте = Форма.Элементы.Найти("КомментарийМестоУстановкиБиблиотекиНаКлиенте");
	
	Если ЭлементМестоУстановкиБиблиотеки = Неопределено
		ИЛИ ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере = Неопределено
		ИЛИ ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте = Неопределено
		ИЛИ КомментарийМестоУстановкиБиблиотекиНаСервере = Неопределено
		ИЛИ КомментарийМестоУстановкиБиблиотекиНаКлиенте = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КриптографияКлиентСерверПереопределяемый.ПоказыватьОповещенияСервернаяКриптография() Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере.ЦветФона = Новый Цвет(251, 212, 212);
	КомментарийМестоУстановкиБиблиотекиНаСервере.Заголовок = НСтр("ru = 'Место выполнения криптографических операций установлено в режим ""На сервере 1С:Предприятие"", поддержка которого будет прекращена в последующих релизах.
	|Рекомендуется перейти на вариант ""На компьютерах пользователей"".'");
	КомментарийМестоУстановкиБиблиотекиНаКлиенте.Заголовок = НСтр("ru = 'Поддержка варианта ""На сервере 1С:Предприятие"" будет прекращена в последующих релизах.
	|Включение данного варианта недоступно.'");
	
	Если МестоУстановкиБиблиотеки = Перечисления.МестаВыполненияКриптографическихОпераций.НаКлиенте Тогда
		ЭлементМестоУстановкиБиблиотеки.ТолькоПросмотр = Истина;
		ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте.Видимость = ЭлементМестоУстановкиБиблиотеки.Видимость;
		ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере.Видимость = Ложь;
	ИначеЕсли МестоУстановкиБиблиотеки = Перечисления.МестаВыполненияКриптографическихОпераций.НаСервере Тогда
		ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере.Видимость = ЭлементМестоУстановкиБиблиотеки.Видимость;
		ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Настраивает видимость элементов управления в зависимости от места выполнения криптографических операций.
//
// Параметры:
//   Форма (Форма) – Форма, в которой настраивается видимость элементов.
//   МестоУстановкиБиблиотеки (ПеречислениеСсылка.МестаВыполненияКриптографическихОпераций) – Текущее место установки библиотеки.
//   ИнформационнаяБазаФайловая (Булево) – Истина, если используется файловая база, иначе Ложь.
//
Процедура НастроитьВидимостьМестаВыполненияОпераций(Форма, МестоУстановкиБиблиотеки, ИнформационнаяБазаФайловая) Экспорт
	
	ЭлементМестоУстановкиБиблиотеки = Форма.Элементы.Найти("МестоУстановкиБиблиотеки");
	ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере = Форма.Элементы.Найти("ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере");
	ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте = Форма.Элементы.Найти("ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте");
	
	Если ЭлементМестоУстановкиБиблиотеки = Неопределено
		ИЛИ ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере = Неопределено
		ИЛИ ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ИнформационнаяБазаФайловая Тогда
		ЭлементМестоУстановкиБиблиотеки.Видимость = Ложь;
		ГруппаКомментарийМестоУстановкиБиблиотекиНаКлиенте.Видимость = ЭлементМестоУстановкиБиблиотеки.Видимость;
		ГруппаКомментарийМестоУстановкиБиблиотекиНаСервере.Видимость = ЭлементМестоУстановкиБиблиотеки.Видимость;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает место выполнения криптографических операций по умолчанию.
//
// Параметры:
//   Форма (Форма) – Форма, в контексте которой выполняется установка.
//   МестоУстановкиБиблиотеки (ПеречислениеСсылка.МестаВыполненияКриптографическихОпераций) – Текущее место установки библиотеки.
//   ИнформационнаяБазаФайловая (Булево) – Истина, если используется файловая база, иначе Ложь.
//
Процедура УстановитьМестоВыполненияОперацийПоУмолчанию(Форма, МестоУстановкиБиблиотеки, ИнформационнаяБазаФайловая) Экспорт
	
	Если МестоУстановкиБиблиотеки = Перечисления.МестаВыполненияКриптографическихОпераций.ПустаяСсылка() Тогда
		МестоУстановкиБиблиотеки = Перечисления.МестаВыполненияКриптографическихОпераций.НаКлиенте;
		Константы.МестоВыполненияКриптографическихОпераций.Установить(МестоУстановкиБиблиотеки);
	КонецЕсли;
	
	Если ИнформационнаяБазаФайловая Тогда
		
		Если МестоУстановкиБиблиотеки <> Перечисления.МестаВыполненияКриптографическихОпераций.НаКлиенте Тогда
			МестоУстановкиБиблиотеки = Перечисления.МестаВыполненияКриптографическихОпераций.НаКлиенте;
			Константы.МестоВыполненияКриптографическихОпераций.Установить(МестоУстановкиБиблиотеки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет, является ли информационная база файловой.
//
// Возвращаемое значение:
//   Булево – Истина, если база данных файловая, иначе Ложь.
//
Функция ИнформационнаяБазаФайловая() Экспорт
	
	Возврат КриптографияСерверПереопределяемый.ИнформационнаяБазаФайловая();
	
КонецФункции

#КонецОбласти

#КонецОбласти