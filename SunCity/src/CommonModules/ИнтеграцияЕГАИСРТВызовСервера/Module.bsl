
#Область ПрограммныйИнтерфейс

Функция ДанныеАлкогольнойПродукции(Номенклатура) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.ДанныеАлкогольнойПродукции(Номенклатура);
	
КонецФункции

Функция ПроверитьУникальностьАкцизнойМарки(Операция, КодАкцизнойМарки, ТекстОшибки, ОрганизацияЕГАИС = Неопределено) Экспорт
	
	АкцизныеМаркиЕГАИСРТ.ПроверитьУникальностьАкцизнойМарки(Операция, КодАкцизнойМарки, ТекстОшибки, ОрганизацияЕГАИС);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Организация, Магазин) Экспорт
	Возврат Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Организация, Магазин);
КонецФункции

// Определяет необходимость отражения операции в ЕГАИС
//
//  Параметры:
//   Объект - ДокументСсылка, ДокументыОбъект
//
//  Возвращаемое значение:
//   Булево
//
Функция ОперацияОтражаетсяВЕГАИС(Объект) Экспорт
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка);
	Возврат МенеджерОбъекта.ОперацияОтражаетсяВЕГАИС(Объект);
	
КонецФункции

Функция ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкода = Неопределено) Экспорт 
	
	Возврат ИнтеграцияЕГАИСРТ.ЭтоШтрихкодАкцизнойМарки(Штрихкод, ТипШтрихкода);
	
КонецФункции

Процедура УстановитьДоступностьПрикладногоОбъектаПоПодчиненным(Форма, ИмяСобытия = "", Параметр = Неопределено) Экспорт
	
	ТекущийДокумент = Форма.Объект.Ссылка;
	
	Если Не ЗначениеЗаполнено(ТекущийДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяБлокировкаФормы = Ложь;
	ТребуетсяПроверкаПодчиненных = Ложь;
	
	Если (ИмяСобытия = "Запись_ЧекЕГАИС"
			ИЛИ ИмяСобытия = "Запись_ЧекЕГАИСВозврат"
			ИЛИ ИмяСобытия = "ИзменениеСостоянияЕГАИС")
				И Параметр.Основание = ТекущийДокумент Тогда
		
		ТребуетсяПроверкаПодчиненных = Истина;
		
	ИначеЕсли ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусЕГАИСВФормахДокументов)) Тогда
		
		ТребуетсяПроверкаПодчиненных = Истина;
		
	ИначеЕсли ИмяСобытия = "" Тогда
		
		ТребуетсяПроверкаПодчиненных = Истина;
	КонецЕсли;
	
	Если Не ТребуетсяПроверкаПодчиненных Тогда
		Возврат;
	КонецЕсли;
	
	ТребуетсяБлокировкаФормы = ИнтеграцияЕГАИСРТ.ЕстьПереданныеЧекиЕГАИС(ТекущийДокумент,);
	
	Если ТребуетсяБлокировкаФормы Тогда
		Форма.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

// Проверяет необходимость блокировки формы документа при наличии подчиненных документов ЕГАИС.
//
// Параметры:
//  ТекущийДокумент - ДокументСсылка - документ, блокировку формы которого необходимо проверить;
//  ИмяСобытия - Строка - имя события из обработки оповещения, по которому необходимо проверить блокировку формы;
//  Параметр - Структура, Неопределено - параметры обработки оповещения.
//
// Возвращаемое значение:
//  ТребуетсяБлокировкаФормы - Булево.
//
Функция ТребуетсяБлокировкаФормыПоПодчиненным(ТекущийДокумент, ИмяСобытия = "", Параметр = Неопределено) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.ТребуетсяБлокировкаФормыПоПодчиненным(ТекущийДокумент, ИмяСобытия, Параметр);
КонецФункции

Функция ТекстДокументаЕГАИСВПоступленииТоваровВРаботе(ТТНВходящаяЕГАИС) Экспорт
	Возврат Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = 'Заполнение по документу: %1';"), ТТНВходящаяЕГАИС),,
		ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
КонецФункции

// Заполняет форматированную строку (связи с документами ЕГАИС) для формы документа Приобретение товаров услуг
//
// Параметры:
//   Объект - ДанныеФормыКоллекция - редактируемый в форме документ приобретения
//
// Возвращаемое значение:
//   ФорматированнаяСтрока, Строка - Описание доступных действий ЕГАИС
Функция ТекстДокументаЕГАИСВПоступленииТоваров(Знач Объект, ТТНВходящаяЕГАИС) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(ТТНВходящаяЕГАИС) Тогда
		Возврат ТекстДокументаЕГАИСВПоступленииТоваровВРаботе(ТТНВходящаяЕГАИС);
	КонецЕсли;
	
	ЕстьАлкогольнаяПродукция = Ложь;
	Для каждого Стр Из Объект.Товары Цикл
		ОсобенностьУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр.Номенклатура, "ОсобенностьУчета");
		Если ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция
			Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.Пиво Тогда
			ЕстьАлкогольнаяПродукция = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Если Не ЕстьАлкогольнаяПродукция Тогда
		Возврат "";
	КонецЕсли;
	
	Строки = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТТНВходящаяЕГАИС.Ссылка       КАК Ссылка,
	|	СтатусыДокументовЕГАИС.Статус КАК Статус
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТТНВходящаяЕГАИС.Ссылка
	|ГДЕ
	|	ТТНВходящаяЕГАИС.ДокументОснование = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	ТТНПривязана = Ложь;
	Если Выборка.Следующий() Тогда
		Строки.Добавить(
			Новый ФорматированнаяСтрока(
				СтрШаблон(
					НСтр("ru = 'ТТН ЕГАИС (входящая): %1';"),
					Выборка.Статус),,
				ЦветаСтиля.ЦветГиперссылки,,
				ПолучитьНавигационнуюСсылку(Выборка.Ссылка)));
		Шаблон = НСтр("ru = 'Связать еще (%1)';");
		ТТНПривязана = Истина;
	Иначе
		Шаблон = НСтр("ru = 'Связать с ТТН ЕГАИС (входящей) (%1)';");
	КонецЕсли;
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ТТНВходящаяЕГАИС) ИЛИ Пользователи.ЭтоПолноправныйПользователь() Тогда
		
		ВозможныеТТНЕГАИС   = ИнтеграцияЕГАИСВызовСервера.ВозможныеТТНЕГАИС(Объект.Организация, Объект.Склад, Объект.Контрагент);
		КоличествоНакладных = ВозможныеТТНЕГАИС.Количество();
		
		Если КоличествоНакладных > 0 Тогда
			Строки.Добавить("  ");
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					СтрШаблон(
						Шаблон,
						КоличествоНакладных),,
					ЦветаСтиля.ЦветГиперссылки,,
					"СвязатьСТТНЕГАИС"));
		ИначеЕсли НЕ ТТНПривязана Тогда
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru = 'В документе приобретения указана алкогольная продукция. Подходящая ТТН входящая ЕГАИС не найдена.';"),,
					ЦветаСтиля.ЦветТекстаПроблемаГосИС));
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(Строки);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.АдресКонтрагентовДляСопоставления(УникальныйИдентификатор, МассивАлкогольнойПродукции, ТТНВходящаяЕГАИС);
	
КонецФункции

Функция АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.АдресОрганизацийЕГАИСДляСопоставления(УникальныйИдентификатор, МассивНоменклатуры);
	
КонецФункции

Функция ПроверятьНеобходимостьСозданияДокументовЕГАИС() Экспорт
	
	Возврат Константы.ПроверятьНеобходимостьСозданияДокументовЕГАИС.Получить();
	
КонецФункции

Функция ТТНПолностьюСопоставлена(ТТНСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ТТНСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.НомерСтроки КАК НомерСтроки,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|	И СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

Функция НесопоставленныеТоварыВТТН(ДокументСсылка) Экспорт
	
	ИмяТаблицы = "Документ" + "." + ДокументСсылка.Метаданные().Имя + "." + "Товары";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.ИдентификаторУпаковки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ИмяТаблицы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ИмяТаблицы);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АлкогольнаяПродукция");
	
КонецФункции

Функция ПолучитьСкладыМагазина(Магазин) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Магазин = &Магазин
	|	И НЕ Склады.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция АлкогольнаяПродукцияПоНоменклатуре(Номенклатура, Характеристика) Экспорт
	
	Результат = Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеЕГАИС
	|ГДЕ
	|	СоответствиеЕГАИС.Номенклатура = &Номенклатура
	|	И СоответствиеЕГАИС.Характеристика = &Характеристика";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.АлкогольнаяПродукция;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НоменклатураПоАлкогольнойПродукции(АлкогольнаяПродукция) Экспорт
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Новый Структура("Номенклатура, Характеристика", Выборка.Номенклатура, Выборка.Характеристика));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

Функция ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты);
	
КонецФункции

Процедура ОтменитьСтатусыУпаковок(ДокументСсылка) Экспорт 

	ИнтеграцияЕГАИСРТ.ОтменитьСтатусыУпаковок(ДокументСсылка);

КонецПроцедуры

Функция СформироватьДанныеПоАкцизнымМаркам(СтруктураДанных) Экспорт 
	
	Возврат ИнтеграцияЕГАИСРТ.СформироватьДанныеПоАкцизнымМаркам(СтруктураДанных);
	
КонецФункции

Функция ЗаполнитьТаблицуАкцизныеМарки(СтруктураДанных) Экспорт 
	
	Возврат ИнтеграцияЕГАИСРТ.ЗаполнитьТаблицуАкцизныеМарки(СтруктураДанных);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

Функция СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры) Экспорт
	
	Возврат ИнтеграцияЕГАИСРТ.СоздатьНоменклатуру(АдресПараметровСозданияНоменклатуры);
	
КонецФункции

Функция ОрганизацияЕГАИСПоОрганизацииИКассеККМ(Организация, КассаККМ) Экспорт 
	
	Возврат ИнтеграцияЕГАИСРТ.ОрганизацияЕГАИСПоОрганизацииИКассеККМ(Организация, КассаККМ);
	
КонецФункции

Функция ОрганизацияЕГАИСПоОрганизацииИМагазину(Организация, Магазин) Экспорт 
	
	Возврат Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Организация, Магазин,,Ложь);
	
КонецФункции

Функция ВидыАлкогольнойПродукции(ВидПродукции) Экспорт 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатуры.Наименование + "" ("" + ВидыНоменклатуры.ВидАлкогольнойПродукцииЕГАИС.Наименование + "")"" КАК ВидНоменклатурыПредставление,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ВидАлкогольнойПродукцииЕГАИС = &ТекущийВид
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	НЕ ВидыНоменклатуры.ПометкаУдаления
	|	И ВидыНоменклатуры.АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок УБЫВ");
	
	Запрос.УстановитьПараметр("ТекущийВид", ВидПродукции);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВидыНоменклатурыАлкоголь = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		ВидыНоменклатурыАлкоголь.Добавить(Выборка.ВидНоменклатуры, Выборка.ВидНоменклатурыПредставление);
	КонецЦикла;
	
	Возврат ВидыНоменклатурыАлкоголь;
	
КонецФункции
#КонецОбласти
