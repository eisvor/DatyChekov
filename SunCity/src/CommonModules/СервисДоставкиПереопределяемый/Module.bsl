
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Сервис доставки".
// ОбщийМодуль.СервисДоставкиПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ЗаполнениеПараметровОтбора

// Заполняет параметры отбора для формы выбора адреса организации.
//
// Параметры:
//  ПараметрыОтбора - Структура - параметры отбора для формы выбора.
//  Организация     - ОпределяемыйТип.ОрганизацияСервисДоставки - ссылка на организацию.
//
Процедура ЗаполнитьПараметрыОтбораАдресаОрганизации(ПараметрыОтбора, Организация) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыОтбораАдресаОрганизации(ПараметрыОтбора, Организация);
	
КонецПроцедуры

// Заполняет параметры отбора для формы выбора адреса контрагента.
//
// Параметры:
//  ПараметрыОтбора - Структура - параметры отбора для формы выбора.
//  Контрагент      - ОпределяемыйТип.КонтрагентСервисДоставки - ссылка на контрагента.
//
Процедура ЗаполнитьПараметрыОтбораАдресаКонтрагента(ПараметрыОтбора, Контрагент) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыОтбораАдресаКонтрагента(ПараметрыОтбора, Контрагент);
	
КонецПроцедуры

// Заполняет параметры отбора для формы выбора контактного лица организации.
//
// Параметры:
//  ПараметрыОтбора - Структура - параметры отбора для формы выбора.
//  Организация     - ОпределяемыйТип.ОрганизацияСервисДоставки - ссылка на организацию.
//
Процедура ЗаполнитьПараметрыОтбораКонтактногоЛицаОрганизации(ПараметрыОтбора, Организация) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыОтбораКонтактногоЛицаОрганизации(ПараметрыОтбора, Организация);
	
КонецПроцедуры

// Заполняет параметры отбора для формы выбора контактного лица контрагента.
//
// Параметры:
//  ПараметрыОтбора - Структура - параметры отбора для формы выбора.
//  Контрагент      - ОпределяемыйТип.КонтрагентСервисДоставки - ссылка на контрагента.
//
Процедура ЗаполнитьПараметрыОтбораКонтактногоЛицаКонтрагента(ПараметрыОтбора, Контрагент) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыОтбораКонтактногоЛицаКонтрагента(ПараметрыОтбора, Контрагент);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеПараметровДаннымиИзУчетнойСистемы

// Заполнить валюту организации.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация.
//  Валюта - СправочникСсылка.Валюты - валюта организации.
Процедура ЗаполнитьВалютуОрганизации(Организация, Валюта) Экспорт
	
КонецПроцедуры

// Заполняет параметры заказа на доставку данными из объекта-основания заказа.
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыЗаказаНаДоставку
//
Процедура ЗаполнитьПараметрыЗаказаНаДоставку(Параметры) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыЗаказаНаДоставку(Параметры);
	
КонецПроцедуры

// Заполняет параметры контрагента данными по ссылке, указанной в Параметры.
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыКонтрагента
//
Процедура ЗаполнитьПараметрыКонтрагента(Параметры) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыКонтрагента(Параметры);
	
КонецПроцедуры

// Заполняет параметры контактного лица данными по ссылке, указанной в Параметры.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма настроек, в которой необходимо заполнить контактное лицо.
//  Параметры - см. СервисДоставки.НовыйПараметрыКонтактногоЛица
//
Процедура ЗаполнитьПараметрыКонтактногоЛицаПоУмолчанию(Форма, Параметры) Экспорт
КонецПроцедуры

// Заменяет текст наименования вида телефона для заголовка перед номером телефона.
//
// Параметры:
//  ЗначениеПредставления - Строка - представление названия телефона.
//  ВидКонтактнойИнформации - ПеречислениеСсылка.ТипыКонтактнойИнформации - тип контактной информации.
//
Процедура СкорректироватьНаименованиеВидаТелефона(ЗначениеПредставления, Знач ВидКонтактнойИнформации) Экспорт
	
КонецПроцедуры

// Заполняет параметры валюты.
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыВалюты
//
Процедура ЗаполнитьПараметрыВалюты(Параметры) Экспорт
	
КонецПроцедуры

// Заполняет таблицу данными документов.
//
// Параметры:
//  ОснованияСписок - см. СервисДоставки.ДокументыОснованияСписок
//
Процедура ЗаполнитьДокументыОснованияСписок(ОснованияСписок) Экспорт
	
КонецПроцедуры

// Заполняет соответствие ставок НДС.
//
// Параметры:
//  СтавкиНДС - см. СервисДоставкиПовтИсп.СоответствиеСтавокНДСИзСервиса
//
Процедура ЗаполнитьСоответствиеСтавокНДСИзСервиса(СтавкиНДС) Экспорт
	
КонецПроцедуры 

#КонецОбласти

#Область ВидыКонтактнойИнформации

// Получает вид контактной информации для адреса по переданному владельцу.
//
// Параметры:
//  Владелец  - СправочникСсылка, ДокументСсылка - владелец адреса.
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации - вид контактной информации.
//  ТипАдреса - Строка - тип адреса, доступны: АдресДоставки, Юридический, Фактический.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляАдресаПоВладельцу(Владелец, ВидКонтактнойИнформации, ТипАдреса = "АдресДоставки") Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляАдресаПоВладельцу(Владелец, ВидКонтактнойИнформации, ТипАдреса);
	
КонецПроцедуры

// Получает вид контактной информации для адреса доставки организации.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляАдресаДоставкиСкладаОрганизации(ВидКонтактнойИнформации) Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляАдресаДоставкиСкладаОрганизации(ВидКонтактнойИнформации);
КонецПроцедуры

// Получает вид контактной информации для юридического адреса организации.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляЮридическогоАдресаОрганизации(ВидКонтактнойИнформации) Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляЮридическогоАдресаОрганизации(ВидКонтактнойИнформации);
КонецПроцедуры

// Получает вид контактной информации для адреса доставки контрагента.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляАдресаДоставкиСкладаКонтрагента(ВидКонтактнойИнформации) Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляАдресаДоставкиСкладаКонтрагента(ВидКонтактнойИнформации);
КонецПроцедуры

// Получает вид контактной информации для юридического адреса доставки.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляЮридическогоАдресаКонтрагента(ВидКонтактнойИнформации) Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляЮридическогоАдресаКонтрагента(ВидКонтактнойИнформации);
КонецПроцедуры

// Получает вид контактной информации для телефона контактного лица контрагента.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляТелефонаКонтактногоЛицаКонтрагента(ВидКонтактнойИнформации) Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляТелефонаКонтактногоЛицаКонтрагента(ВидКонтактнойИнформации);
КонецПроцедуры

// Получает вид контактной информации для телефона контактного лица организации.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляТелефонаКонтактногоЛицаОрганизации(ВидКонтактнойИнформации) Экспорт
	
	СервисДоставкиРТ.ПолучитьЗначениеВидаКонтактнойИнформацииДляТелефонаКонтактногоЛицаОрганизации(ВидКонтактнойИнформации);
КонецПроцедуры

// Получает вид контактной информации для юридического адреса доставки.
//
// Параметры:
//  ВидКонтактнойИнформации - СправочникСсылка.ВидыКонтактнойИнформации,Неопределено - вид контактной информации.
//
Процедура ПолучитьЗначениеВидаКонтактнойИнформацииДляФактическогоАдресаКонтрагента(ВидКонтактнойИнформации) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаНаложенныхПлатежей
 
// Ограничение длительности обработки одной пачки платежей (в секундах)
// Параметры:
//	Лимит - Число - количество секунд(возвращаемое значение)
Процедура ЛимитВремениОбработкиПачкиПлатежей(Лимит) Экспорт
	
КонецПроцедуры

// Разрешение на использование наложенных платежей.
// Параметры:
//  ИспользоватьНаложенныеПлатежи - Булево - Параметр, который нужно заполнить.
// 
Процедура ИспользоватьНаложенныеПлатежи(ИспользоватьНаложенныеПлатежи) Экспорт

КонецПроцедуры

// Разрешение на загрузку наложенных платежей регламентным заданием.
//
// Параметры:
//  ИспользоватьРегламентЗагрузкиНаложенныхПлатежей - Булево - Параметр, который нужно заполнить.
// 
Процедура ИспользоватьРегламентЗагрузкиНаложенныхПлатежей(ИспользоватьРегламентЗагрузкиНаложенныхПлатежей) Экспорт

КонецПроцедуры

// Обработать данные наложенного платежа: создать платеж, подтвердить обработку.
// 
// Параметры:
//  АтрибутыПлатежа - см. СервисДоставки.НовыйДанныеНаложенногоПлатежа
//  Обработано - Булево - признак корректной обработки (возвращаемое значение)
//  ТекстОшибки - Строка - текст ошибки (возвращаемое значение)
// 
Процедура ОбработатьДанныеНаложенногоПлатежа(Знач АтрибутыПлатежа, Обработано, ТекстОшибки = "") Экспорт

КонецПроцедуры

// Проверяет, есть ли у переданной организации договор эквайринга с оператором доставки.
// Параметры:
//	Организация - СправочникСсылка.Организации
//	Перевозчик - ОпределяемыйТип.КонтрагентСервисДоставки, Неопределено - незаполненное значение параметра 
//						означает наличие хотя бы одного перевозчика с договором эквайринга. 
//	Результат - Булево - возможна доставка наложенным платежом.
Процедура ВозможнаДоставкаНаложеннымПлатежом(Знач Организация, Знач Перевозчик, Результат) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Заполняет список выбора способов определения реквизита заказа на доставку для общих настроек.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма настроек, в которой необходимо заполнить список выбора.
//
Процедура ЗаполнитьСписокВыбораСпособаОпределенияКонтактногоЛица(Форма) Экспорт
	
КонецПроцедуры

// Получение доступности функционала доставки в прикладном решении.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма панели настроек, в которой необходимо установить доступность.
//
Процедура УстановитьДоступностьНастройкиСервисаДоставки(Форма) Экспорт
	
КонецПроцедуры

// Добавление команды поиска торговых предложений в формах.
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании.
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
КонецПроцедуры

// Обработка создания библиотечной формы.
//
// Параметры:
//  Форма - Форма - создаваемая управляемая форма;
//  Отказ - Булево - флаг отказа от создания формы;
//  СтандартнаяОбработка - Булево - флаг стандартной обработки формы.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Заполняет шаблон формы оплаты для параметров заказа на доставку.
// Например, когда Форма оплаты определена перечислением "ФормыОплаты":
//    Если ФормаОплаты = Перечисления.ФормыОплаты.Наличная Тогда
//      СвойстваФормыОплаты.Вставить("ФормаОплаты", 2);
//      СвойстваФормыОплаты.Вставить("ФормаОплатыПредставление", НСтр("ru='Наличная'"));
//    Иначе
//      СвойстваФормыОплаты.Вставить("ФормаОплаты", 1);
//      СвойстваФормыОплаты.Вставить("ФормаОплатыПредставление", НСтр("ru='Безналичная'"));
//    КонецЕсли;.
//
// Параметры:
//  ФормаОплаты - ОпределяемыйТип.ФормаОплатыСервисДоставки - форма оплаты заказа на доставку;
//  СвойстваФормыОплаты - Структура - содержит:
//    ФормаОплаты - Число - 1 - безналичная, 2 - наличная, по умолчанию 2;
//    ФормаОплатыПредставление - Строка - "Безналичная", "Наличная", по умолчанию "Наличная".
//
Процедура ОпределитьПараметрыЗаказаФормаОплаты(ФормаОплаты, СвойстваФормыОплаты) Экспорт
	
	Если ФормаОплаты = Перечисления.ФормыОплаты.Наличная Тогда
		СвойстваФормыОплаты.Вставить("ФормаОплаты", 2);
		СвойстваФормыОплаты.Вставить("ФормаОплатыПредставление", НСтр("ru='Наличная'"));
	Иначе
		СвойстваФормыОплаты.Вставить("ФормаОплаты", 1);
		СвойстваФормыОплаты.Вставить("ФормаОплатыПредставление", НСтр("ru='Безналичная'"));
	КонецЕсли;
	
КонецПроцедуры

// Определяет можно ли использовать сервис доставки в текущей конфигурации.
//
// Параметры:
//  Результат - Булево - Признак возможности использовать сервис доставки.
//
Процедура ПроверитьДоступностьСервисаДоставки(Результат) Экспорт
	
КонецПроцедуры

// Адаптирует текст запроса к базе данных для получения контрагента или организации.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса, который требуется адаптировать для текущей конфигурации (основная таблица уже есть в запросе);
//  ТипДанных - Тип - тип данных к таблице которых будет выполнен запрос.
//
Процедура ОбработатьЗапросПолученияУчастникаГрузоперевозкиПоИННиКПП(ТекстЗапроса, ТипДанных) Экспорт
	
КонецПроцедуры

// Заполнить данные по взаиморасчетам.
// 
// Параметры:
//  СтруктураВзаиморасчетов - см. СервисДоставки.НовыйСтруктураВзаиморасчетовПоДокументу
//  ДокументСсылка - Неопределено, ДокументСсылка - Документ на оснвоании которого необходимо заполнить данные
Процедура ЗаполнитьДанныеПоВзаиморасчетам(СтруктураВзаиморасчетов, ДокументСсылка = Неопределено) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Обработка_результатов_запросов_документов

// Обрабатывает результат создания и изменения заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументыОснования - СписокЗначений из ДокументСсылка, Неопределено - список документов оснований заказа на доставку
//                                        (значение - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки).
//
Процедура ОбработатьРезультатЗапросаСозданияИзмененияЗаказаНаДоставку(Результат, ДокументыОснования = Неопределено) Экспорт
	
	СервисДоставкиРТ.ОбработатьРезультатСозданияЗаказаНаДоставку(Результат, ДокументыОснования);
	
КонецПроцедуры

// Обрабатывает результат оформления заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументыОснования - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатЗапросаОформленияЗаказаНаДоставку(Результат, ДокументыОснования = Неопределено) Экспорт
	
	СервисДоставкиРТ.ОбработатьРезультатОформленияЗаказаНаДоставку(Результат, ДокументыОснования);
	
КонецПроцедуры

// Обрабатывает результат отмены заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументыОснования - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатЗапросаОтменыЗаказаНаДоставку(Результат, ДокументыОснования = Неопределено) Экспорт
	
	СервисДоставкиРТ.ОбработатьРезультатОтменыЗаказаНаДоставку(Результат, ДокументыОснования);
	
КонецПроцедуры

// Обрабатывает результат обновления заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументыОснования - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатЗапросаОбновленияЗаказаНаДоставку(Результат, ДокументыОснования = Неопределено) Экспорт
	
КонецПроцедуры

// Обрабатывает результат запроса состояния заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  ИнформацияОЗаказе - Структура - содержит информацию о состоянии заказа в сервисе;
//
Процедура ОбработатьРезультатСостоянияЗаказаНаДоставку(ИнформацияОЗаказе) Экспорт
	
	СервисДоставкиРТ.ОбработатьРезультатСостоянияЗаказаНаДоставку(ИнформацияОЗаказе);
	
КонецПроцедуры

// Обрабатывает результат получения заказа на доставку из сервиса 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументыОснования - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатЗапросаПолученияЗаказаНаДоставку(Результат, ДокументыОснования = Неопределено) Экспорт
	
	СервисДоставкиРТ.ОбработатьРезультатПолученияЗаказаНаДоставку(Результат, ДокументыОснования);
	
КонецПроцедуры

// Обрабатывает результат отмены заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//
Процедура ОбработатьРезультатЗапросаОтменыМультизаказаНаДоставку(Результат) Экспорт
	
КонецПроцедуры

// Обрабатывает результат обновления заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//
Процедура ОбработатьРезультатЗапросаОбновленияМультизаказаНаДоставку(Результат) Экспорт
	
КонецПроцедуры

// Обрабатывает результат получения заказа на доставку из сервиса 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//
Процедура ОбработатьРезультатЗапросаПолученияМультизаказаНаДоставку(Результат) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции
// Устарела. Следует использовать СервисДоставкиПереопределяемый.ОбработатьРезультатЗапросаСозданияИзмененияЗаказаНаДоставку.
// Обрабатывает результат создания заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументОснование - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатСозданияЗаказаНаДоставку(Результат, ДокументОснование = Неопределено) Экспорт
	
КонецПроцедуры

// Устарела. Следует использовать СервисДоставкиПереопределяемый.ОбработатьРезультатЗапросаОформленияЗаказаНаДоставку.
// Обрабатывает результат оформления заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументОснование - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатОформленияЗаказаНаДоставку(Результат, ДокументОснование = Неопределено) Экспорт
	
КонецПроцедуры

// Устарела. Следует использовать СервисДоставкиПереопределяемый.ОбработатьРезультатЗапросаОтменыЗаказаНаДоставку.
// Обрабатывает результат отмены заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументОснование - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатОтменыЗаказаНаДоставку(Результат, ДокументОснование = Неопределено) Экспорт
	
КонецПроцедуры

// Устарела. Следует использовать СервисДоставкиПереопределяемый.ОбработатьРезультатЗапросаОбновленияЗаказаНаДоставку.
// Обрабатывает результат обновления заказа на доставку в сервисе 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументОснование - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатОбновленияЗаказаНаДоставку(Результат, ДокументОснование = Неопределено) Экспорт
	
КонецПроцедуры

// Устарела. Следует использовать СервисДоставкиПереопределяемый.ОбработатьРезультатЗапросаПолученияЗаказаНаДоставку.
// Обрабатывает результат получения заказа на доставку из сервиса 1С:Доставка.
//
// Параметры:
//  Результат - Структура - содержит результат выполнения запроса в сервис;
//  ДокументОснование - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки, Неопределено - документ, основание заказа на доставку.
//
Процедура ОбработатьРезультатПолученияЗаказаНаДоставку(Результат, ДокументОснование = Неопределено) Экспорт
	
КонецПроцедуры

// Устарела. Следует использовать СервисДоставки.ЗаполнитьПараметрыКонтактногоЛица.
// Заполняет параметры контактного лица данными по ссылке, указанной в Параметры.
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыКонтактногоЛица
//
Процедура ЗаполнитьДанныеКонтактногоЛица(Параметры) Экспорт
	
КонецПроцедуры

// Устарела. Не использовать.
// Вместо него использовать СервисДоставки.ЗаполнитьПараметрыКонтактногоЛица.
// Заполняет параметры контактного лица данными по ссылке, указанной в Параметры.
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыКонтактногоЛица
//
Процедура ЗаполнитьПараметрыКонтактногоЛица(Параметры) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьПараметрыКонтактногоЛица(Параметры);
	
КонецПроцедуры

// Устарела. Не использовать.
// Вместо него использовать СервисДоставки.ЗаполнитьПараметрыКонтактногоЛица.
// Заполняет параметры телефона контактной информацией по владельцу, указанному в Параметры.
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыКонтактногоЛица
//
Процедура ЗаполнитьТелефонКонтактногоЛица(Параметры) Экспорт
	
	СервисДоставкиРТ.ЗаполнитьТелефонКонтактногоЛица(Параметры);
	
КонецПроцедуры

// Устарела. Не использовать.
// Вместо него использовать СкорректироватьНаименованиеВидаТелефона()
// Формирует текст наименования вида телефона для заголовка перед номером телефона.
//
// Параметры:
//  Параметры - СтрокаТаблицыЗначений из см. УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов. 
//  ВидТелефона - Строка - название вида телефона, которое необходимо сформировать или оставить без изменения.
//
Процедура СформироватьНаименованиеВидаТелефона(Параметры, ВидТелефона) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
