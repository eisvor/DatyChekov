
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСписокВыбораОрганизацииПоСохраненнымНастройкам(Форма, Знач ЗначениеПрефиксы = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеПрефиксы = Неопределено Тогда
		Префиксы = Новый Массив;
		Префиксы.Добавить("Оформлено");
		Префиксы.Добавить("КОформлению");
	Иначе
		Если ТипЗнч(ЗначениеПрефиксы) = Тип("Строка") Тогда
			Префиксы = Новый Массив();
			Префиксы.Добавить(ЗначениеПрефиксы);
		Иначе
			Префиксы = ЗначениеПрефиксы;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Значение Из Префиксы Цикл
		Форма.Элементы[Значение + "Организация"].СписокВыбора.Очистить();
		Форма.Элементы[Значение + "Организации"].СписокВыбора.Очистить();
	КонецЦикла;
	
	ПараметрыОтбора = Новый Структура("КлючОбъекта", "ОбщаяФорма.ФормаВыбораСпискаОрганизацийИСМПТК");
	
	Выборка = ХранилищеНастроекДанныхФорм.Выбрать(ПараметрыОтбора);
	
	Пока Выборка.Следующий() Цикл
		
		Данные = Новый Массив;
		Значение = Выборка.Настройки.Получить("ТаблицаОрганизации");
		Если Значение <> Неопределено Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Выбрана", Истина);
			НайденныеСтроки = Значение.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
				Данные.Добавить(СтрокаТЧ.Организация);
			КонецЦикла;
			
			Для Каждого Значение Из Префиксы Цикл
				ЭлементОтбораОрганизация = Форма.Элементы.Найти(Значение + "Организация");
				Если ЭлементОтбораОрганизация <> Неопределено Тогда
					ЭлементОтбораОрганизация.СписокВыбора.Добавить(Данные, СтрСоединить(Данные, "; "));
				КонецЕсли;
		
				ЭлементОтбораОрганизации = Форма.Элементы.Найти(Значение + "Организации");
				Если ЭлементОтбораОрганизации <> Неопределено Тогда
					ЭлементОтбораОрганизации.СписокВыбора.Добавить(Данные, СтрСоединить(Данные, "; "));
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура НастроитьВидПродукцииПриСозданииНаСервере(Форма, ДоступныеВидыПродукции) Экспорт
	
	Если Не ОбщегоНазначенияИСМПТККлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Элементы, "ВидПродукции") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВидПродукции Из ДоступныеВидыПродукции Цикл
		
		Если (ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.Обувная
				И ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойОбувиИСМПТК")) 
			ИЛИ (ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.МолочнаяПродукция
				И ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойМолочкиИСМПТК"))
			ИЛИ (ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты
				И ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемыхЛекарствИСМПТК"))
			ИЛИ (ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.Табачная
				И ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемогоТабакаИСМПТК")) Тогда
			
			Форма.Элементы.ВидПродукции.СписокВыбора.Добавить(ВидПродукции);
					
		КонецЕсли;
		
		Если Форма.Объект.Свойство("СпособИзготовленияСИ") Тогда
			Форма.Объект.СпособИзготовленияСИ = ПредопределенноеЗначение("Перечисление.СпособыИзготовленияСредствИдентификацииСУЗИСМПТК.Самостоятельно");
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Форма.Объект.ВидПродукции)
		И Форма.Элементы.ВидПродукции.СписокВыбора.НайтиПоЗначению(Форма.Объект.ВидПродукции) = Неопределено Тогда  
		Форма.Элементы.ВидПродукции.СписокВыбора.Добавить(Форма.Объект.ВидПродукции);
	КонецЕсли;
	
	Если Форма.Элементы.ВидПродукции.СписокВыбора.Количество() = 1 Тогда
		Форма.Объект.ВидПродукции = Форма.Элементы.ВидПродукции.СписокВыбора[0].Значение;
		Форма.Элементы.ВидПродукции.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
