#Область РаботаСДеревомСвойствВидаНоменклатуры

// Процедура вызывается при изменении значения в дереве отборов по свойствам вида
//  номенклатуры на формах списков и формах подборов.
//
// Параметры:
//  Форма					 - УправляемаяФорма	 - форма списка номенклатуры или форма подбора.
//  ОповещениеПослеОбработки - ОписаниеОповещения - описание оповещения после обработки.
//
Процедура ДеревоОтборовОтборПриИзменении(Форма, ОповещениеПослеОбработки = Неопределено) Экспорт
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"ОбщийМодуль.ПодборТоваровКлиент.ДеревоОтборовОтборПриИзменении");
	
	Если Не Форма.ИспользоватьФильтры Тогда
		Если ОповещениеПослеОбработки <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПослеОбработки, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ВариантДействий = ВариантДействийПриИзмененииОтбораДереваОтборов(Форма);
	
	Если ВариантДействий = 3 Тогда // установили флажок на строке с незаполненным "фиксированным" значением
		УстановитьФиксированныйОтбор(Форма, ОповещениеПослеОбработки);
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеПослеОбработки, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается после изменении значения в дереве отборов по свойствам вида
//  номенклатуры на формах списков и формах подборов.
//
// Параметры:
//  Форма					 - УправляемаяФорма	 - форма списка номенклатуры или форма подбора.
//
Процедура ДеревоОтборовПриИзмененииЗавершение(Форма) Экспорт

	ТекущиеДанные = Форма.Элементы.ДеревоОтборов.ТекущиеДанные;
	ТаблицаПараметровОтбора = Форма.ТаблицаПараметровОтбора;
	
	Если ТекущиеДанные.ФиксированноеЗначение
		Или ТипЗнч(ТекущиеДанные.ЗначениеОтбора) = Тип("Булево") Тогда
		
		Если ТекущиеДанные.Отбор Тогда
			
			Отбор = Новый Структура();
			Отбор.Вставить("ИмяРеквизита",ТекущиеДанные.ИмяРеквизита);
			ОтобранныеСтроки = ТаблицаПараметровОтбора.НайтиСтроки(Отбор);
			Если ОтобранныеСтроки.Количество()>0 Тогда
				ЗаполнитьЗначенияСвойств(ОтобранныеСтроки[0],ТекущиеДанные);
				ОтобранныеСтроки[0].ИмяРеквизита = ТекущиеДанные.ИмяРеквизита;
			Иначе
				НоваяСтрока = ТаблицаПараметровОтбора.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущиеДанные);
				НоваяСтрока.ИмяРеквизита = ТекущиеДанные.ИмяРеквизита; 
			КонецЕсли;
			
		Иначе
			
			Отбор = Новый Структура();
			Отбор.Вставить("ИмяРеквизита",ТекущиеДанные.ИмяРеквизита);
			ОтобранныеСтроки = ТаблицаПараметровОтбора.НайтиСтроки(Отбор);
			Для Каждого СтрокаДляУдаления Из ОтобранныеСтроки Цикл
				ТаблицаПараметровОтбора.Удалить(СтрокаДляУдаления);
			КонецЦикла;
		
		КонецЕсли;
		
	Иначе
		
		Родитель = ТекущиеДанные.ПолучитьРодителя();
		
		Если Родитель = Неопределено Тогда // выбрана строка-родитель
			
			ПодчиненныеЭлементыДерева = ТекущиеДанные.ПолучитьЭлементы();
			
			Если ТекущиеДанные.Отбор Тогда
				Для Каждого ЭлементДерева Из ПодчиненныеЭлементыДерева Цикл
					НоваяСтрока = ТаблицаПараметровОтбора.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,ЭлементДерева);
					НоваяСтрока.ИмяРеквизита = ТекущиеДанные.ИмяРеквизита;
				КонецЦикла;
			Иначе
				Отбор = Новый Структура();
				Отбор.Вставить("ИмяРеквизита",ТекущиеДанные.ИмяРеквизита);
				ОтобранныеСтроки = ТаблицаПараметровОтбора.НайтиСтроки(Отбор);
				Для Каждого СтрокаДляУдаления Из ОтобранныеСтроки Цикл
					ТаблицаПараметровОтбора.Удалить(СтрокаДляУдаления);
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			Если ТекущиеДанные.Отбор Тогда
				НоваяСтрока = ТаблицаПараметровОтбора.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущиеДанные);
			Иначе
				Отбор = Новый Структура();
				Отбор.Вставить("ИмяРеквизита",ТекущиеДанные.ИмяРеквизита);
				Отбор.Вставить("Представление",ТекущиеДанные.Представление);
				ОтобранныеСтроки = ТаблицаПараметровОтбора.НайтиСтроки(Отбор);
				Для Каждого СтрокаДляУдаления Из ОтобранныеСтроки Цикл
					ТаблицаПараметровОтбора.Удалить(СтрокаДляУдаления);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

// Возвращает число - код варианта действия которое было выполнено с деревом отборов.
//
// Параметры:
//	Форма - УправляемаяФорма - форма списка справочника номенклатуры или форма подбора.
//
// Возвращаемое значение:
//	Число.
//	0 - никакого изменения значений в дереве отборов не произошло;
//	1 - был установлен/снят флажок у строки (или родительской строки) значений, например:
//	    был установлен/снят флажок у строки с качеством "Новый" или у строки "Качество";
//	2 - был установлен/снят флажок на строке с "фиксированным значением", причем фиксированное
//	    значение уже было указано, например: в строке дерева отборов было указано конкретное значение диаметра
//	    кабеля и у него установили/сняли флажок;
//	3 - был УСТАНОВЛЕН флажок на строке с "фиксированным значением", причем фиксированное значение
//	    в строке еще не указано, например: в строке дерева отборов не было указано конкретное значение
//	    диаметра кабеля и у строки установили флажок. Такой вариант действия приводит к тому что открывается
//	    дополнительная форма установки значений (или интервала) фиксированного значения.
//	
Функция ВариантДействийПриИзмененииОтбораДереваОтборов(Форма)
	
	ВариантДействий = 0;
	
	ТекущиеДанные = Форма.Элементы.ДеревоОтборов.ТекущиеДанные;
	
	Если ТекущиеДанные.ФиксированноеЗначение Тогда
		
		// Фиксированное значение - например, введен артикул, или указано,
		// какое-то конкретное числовое, строковое значение, или интервал дат.
		
		ВариантДействий = 2; // установили/сняли флажок на поле фиксированного значения
		
		Если ТекущиеДанные.Отбор Тогда
			
			ТипЗначенияОтбора = ТипЗнч(ТекущиеДанные.ЗначениеОтбора);
			
			Если Не (
				     (ТипЗначенияОтбора = Тип("Строка") И ЗначениеЗаполнено(ТекущиеДанные.ЗначениеОтбора)) 
				 Или ТипЗначенияОтбора <> Тип("Строка") И (ЗначениеЗаполнено(ТекущиеДанные.ИнтервалОт) Или ЗначениеЗаполнено(ТекущиеДанные.ИнтервалДо))
				    ) Тогда
				
				ВариантДействий = 3; // УСТАНОВИЛИ флажок на незаполненном значением поле фиксированного значения
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ВариантДействий = 1; // установили/сняли флажок на строке конкретного значения или группы значений
		
		Родитель = ТекущиеДанные.ПолучитьРодителя();
		
		Если Родитель = Неопределено Тогда // выбрана строка-родитель
			
			// Установить/снять значение флажка отбора для всех подчиненных строк.
			
			ПодчиненныеЭлементыДерева = ТекущиеДанные.ПолучитьЭлементы();
			
			Для Каждого ЭлементДерева Из ПодчиненныеЭлементыДерева Цикл
				ЭлементДерева.Отбор = ТекущиеДанные.Отбор;
			КонецЦикла;
			
		Иначе
			
			// Выбрана подчиненная строка.
			
			Родитель.Отбор = Ложь;
			
			ПодчиненныеЭлементыДерева = Родитель.ПолучитьЭлементы();
			
			// Пройти по всем подчиненным строкам родителя выбранной строки, и если
			// хотя бы для одной строки установлен флажок отбора, то включить флажок отбора
			// и родительской строки.
			
			Для Каждого ЭлементДерева Из ПодчиненныеЭлементыДерева Цикл
				
				Если ЭлементДерева.Отбор Тогда
					Родитель.Отбор = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВариантДействий;
	
КонецФункции

#КонецОбласти

#Область РаботаСДеревомСвойствВидаНоменклатуры

// Возвращает признак необходимости установки отбора  динамического списка номенклатуры
//  на формах отбора, по значениям дерева отборов. Вызывается при нажатии на поле выбора
//  фиксированного значения в строке дерева отборов.
//  Возвращает в оповещении: Истина - значение в дереве отборов изменено и нужно применить значение отбора
//  к списку номенклатуры, или Ложь - значение отбора не изменено.
//
// Параметры:
//  Форма					 - УправляемаяФорма	 - форма списка или форма подбора.
//  ОповещениеПослеОбработки - ОписаниеОповещения - описание оповещения после обработки.
//
Процедура УстановитьФиксированныйОтбор(Форма, ОповещениеПослеОбработки = Неопределено)
	
	ТекущиеДанные = Форма.Элементы.ДеревоОтборов.ТекущиеДанные;
	
	Если Не ТекущиеДанные.ФиксированноеЗначение Тогда
		Если ОповещениеПослеОбработки <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПослеОбработки, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ВидНоменклатуры = Форма.ВидНоменклатуры;
	
	ТипЗначенияОтбора = ТипЗнч(ТекущиеДанные.ЗначениеОтбора);
	
	Если ТипЗначенияОтбора = Тип("СписокЗначений") Тогда
		
		// Тип значения - строка. В этом случае открывается форма установки значения и список выбора
		// поля выбора значения заполняется доступными значениями.
		
		ПоНоменклатуре = Истина;
		
		Если ТекущиеДанные.Свойство("ОтборХарактеристик") Тогда
			ПоНоменклатуре = Не ТекущиеДанные.ОтборХарактеристик;
		КонецЕсли;
		
		ЗначениеОтбора = СокрЛП(ТекущиеДанные.ЗначениеОтбора);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяРеквизита", ТекущиеДанные.ИмяРеквизита);
		СтруктураПараметров.Вставить("ЗначениеОтбора", ТекущиеДанные.ЗначениеОтбора);
		СтруктураПараметров.Вставить("ЭтоДопРеквизит", ТекущиеДанные.ЭтоДопРеквизит);
		СтруктураПараметров.Вставить("ОтборПоНоменклатуре", ПоНоменклатуре);
		СтруктураПараметров.Вставить("ВидНоменклатуры", ВидНоменклатуры);
		
	ИначеЕсли ТипЗначенияОтбора = Тип("Строка") Тогда
		
		// Тип значения - строка. В этом случае открывается форма установки значения и список выбора
		// поля выбора значения заполняется доступными значениями.
		
		ПоНоменклатуре = Истина;
		
		Если ТекущиеДанные.Свойство("ОтборХарактеристик") Тогда
			ПоНоменклатуре = Не ТекущиеДанные.ОтборХарактеристик;
		КонецЕсли;
		
		ЗначениеОтбора = СокрЛП(ТекущиеДанные.ЗначениеОтбора);
		
		СписокЗначенийРеквизита = ПодборТоваровВызовСервера.СписокЗначенийРеквизита(
			ВидНоменклатуры, 
			ТекущиеДанные.ИмяРеквизита, 
			ТекущиеДанные.ЭтоДопРеквизит, 
			ПоНоменклатуре);
			
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяРеквизита", ТекущиеДанные.ИмяРеквизита);
		СтруктураПараметров.Вставить("СписокСтрокОтбора", СписокЗначенийРеквизита);
		СтруктураПараметров.Вставить("ЗначениеОтбора", ТекущиеДанные.ЗначениеОтбора);
		СтруктураПараметров.Вставить("ТипЗначения", ТипЗначенияОтбора);
		
	Иначе
		
		// Тип значения - число или дата, в этом случае открывается форма установки интервала.
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяРеквизита", ТекущиеДанные.ИмяРеквизита);
		СтруктураПараметров.Вставить("ЗначениеОт", ТекущиеДанные.ИнтервалОт);
		СтруктураПараметров.Вставить("ЗначениеДо", ТекущиеДанные.ИнтервалДо);
		СтруктураПараметров.Вставить("ТипЗначения", ТипЗнч(ТекущиеДанные.ЗначениеОтбора));
		
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ОповещениеПослеОбработки, ТекущиеДанные", ОповещениеПослеОбработки, ТекущиеДанные);
	Если ТипЗначенияОтбора = Тип("СписокЗначений") Тогда
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаУстановкиЗначенийОтбора", 
			СтруктураПараметров, 
			Форма,
			,
			,
			,
			Новый ОписаниеОповещения("УстановитьФиксированныйОтборЗавершение", ЭтотОбъект, ДополнительныеПараметры), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаУстановкиИнтервала", 
			СтруктураПараметров, 
			Форма,
			,
			,
			,
			Новый ОписаниеОповещения("УстановитьФиксированныйОтборЗавершение", ЭтотОбъект, ДополнительныеПараметры), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
