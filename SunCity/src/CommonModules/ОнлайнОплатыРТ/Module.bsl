
#Область ПрограммныйИнтерфейс

#Область РаботаСПодсистемой

Процедура ПриОпределенииДополнительныхНастроекОнлайнОплаты(ДополнительныеНастройки) Экспорт
	
	Для каждого ЭлементКоллекции Из ОписаниеИспользуемыхНастроек() Цикл
		ЗаполнитьЗначенияСвойств(ДополнительныеНастройки.Добавить(), ЭлементКоллекции);
	КонецЦикла;
	
КонецПроцедуры

Функция ОписаниеИспользуемыхНастроек() Экспорт
	
	ОписаниеРеквизитов = Новый ТаблицаЗначений;
	
	ОписаниеРеквизитов.Колонки.Добавить("Настройка");
	ОписаниеРеквизитов.Колонки.Добавить("Представление");
	ОписаниеРеквизитов.Колонки.Добавить("ТипЗначения");
	ОписаниеРеквизитов.Колонки.Добавить("Подсказка");
	ОписаниеРеквизитов.Колонки.Добавить("ПараметрыВыбора");
	
	СтрокаНастройки = ОписаниеРеквизитов.Добавить();
	СтрокаНастройки.Настройка = "БанковскийСчет";
	СтрокаНастройки.Представление = НСтр("ru = 'Банковский счет'");
	СтрокаНастройки.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета");
	СтрокаНастройки.Подсказка = НСтр("ru = 'Банковский счет, указанный в договоре, на который будут перечисляться денежные средства'");
	
	СтрокаНастройки = ОписаниеРеквизитов.Добавить();
	СтрокаНастройки.Настройка = "ВидОплатЧекаККМ";
	СтрокаНастройки.Представление = НСтр("ru = 'Вид оплаты'");
	СтрокаНастройки.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВидыОплатЧекаККМ");
	СтрокаНастройки.Подсказка = НСтр("ru = 'Вид оплаты, который будет указан в чеке'");
	
    СтрокаНастройки.ПараметрыВыбора = Новый Массив;
	СтрокаНастройки.ПараметрыВыбора.Добавить(
		Новый ПараметрВыбора("Отбор.ТипОплаты", Перечисления.ТипыОплатЧекаККМ.ПлатежнаяСистема));
	СтрокаНастройки.ПараметрыВыбора.Добавить(
		Новый ПараметрВыбора("Отбор.ПлатежнаяСистема", Перечисления.ТипыПлатежнойСистемыККТ.ЮКасса));
	
	Возврат ОписаниеРеквизитов;
	
КонецФункции

Процедура ПриОпределенииОснованийПлатежа(ОснованияПлатежа) Экспорт
	
	ТипыОснованийПлатежа = ПолучитьСписокТиповОснованийПлатежаДляОнлайнОплаты();
	
	Для каждого ТипОснования Из ТипыОснованийПлатежа Цикл
		Если ТипОснования <> "ЧекККМ" Тогда
			ОснованияПлатежа.Добавить("Документ." + ТипОснования);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСписокТиповОснованийПлатежаДляОнлайнОплаты()
	
	ОснованияПлатежа = Новый Массив;
	ОснованияПлатежа.Добавить("ЧекККМ");
	
	Возврат ОснованияПлатежа;
	
КонецФункции

Процедура ПриПроверкеЗаполненияОснованияПлатежа(Знач ОснованиеПлатежа, Отказ) Экспорт
	
	РеквизитыДляПроверки = Новый СписокЗначений;
	
	РеквизитыДляПроверки.Добавить("Организация",    НСтр("ru = 'Организация'"));
	РеквизитыДляПроверки.Добавить("СуммаДокумента", НСтр("ru = 'Сумма документа'"));
	РеквизитыДляПроверки.Добавить("Номер",          НСтр("ru = 'Номер'"));
	РеквизитыДляПроверки.Добавить("Дата",           НСтр("ru = 'Дата'"));
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОснованиеПлатежа, СтрСоединить(РеквизитыДляПроверки.ВыгрузитьЗначения(), ","));
	
	Для каждого ЭлементКоллекции Из РеквизитыДляПроверки Цикл
		Если Не ЗначениеЗаполнено(ОснованиеПлатежа[ЭлементКоллекции.Значение]) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Не заполнен реквизит %1'"), ЭлементКоллекции.Представление), 
				ОснованиеПлатежа, ЭлементКоллекции.Значение,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыОрганизации(Знач Организация, Реквизиты) Экспорт
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "ИНН, КПП, ЮрФизЛицо");
	
	Реквизиты.ИНН       = ЗначенияРеквизитов.ИНН;
	Реквизиты.КПП       = ЗначенияРеквизитов.КПП;
	Реквизиты.Резидент  = ЗначенияРеквизитов.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
	Реквизиты.ЭтоЮрЛицо = ЗначенияРеквизитов.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
	
КонецПроцедуры

Процедура ИспользуетсяОднаОрганизация(Результат) Экспорт

	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();	

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций")
		И ЗначениеЗаполнено(Организация) Тогда
		
		Результат.ОднаОрганизация 	= Истина;
		Результат.Организация 		= Организация;

	КонецЕсли;
	
КонецПроцедуры

Процедура ИмяПрикладногоСправочникаОрганизации(ИмяПрикладногоСправочника) Экспорт
	
	ИмяПрикладногоСправочника = "Организации";
	
КонецПроцедуры

Процедура ЗаполнитьДанныеОснованияПлатежа(Знач ОснованиеПлатежа, ДанныеОснованияПлатежа) Экспорт
	
	ДанныеЗаполнения = ДанныеДокументаДляПолученияПлатежнойСсылки(ОснованиеПлатежа);
	
	Если ДанныеЗаполнения.ДанныеДокумента.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокумента            = ДанныеЗаполнения.ДанныеДокумента[0];
	УчетнаяПолитикаПродавца    = ДанныеЗаполнения.УчетнаяПолитика;
	КонтактнаяИнформация       = ДанныеЗаполнения.КонтактнаяИнформация;
	ДанныеПоНоменклатуре       = ДанныеЗаполнения.РасширенноеОписаниеТоваров;
	Штрихкоды                  = ДанныеЗаполнения.Штрихкоды;
	
	ВидыКонтактнойИнформации = Новый Соответствие();
	
	ВидыКонтактнойИнформации.Вставить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации,    "ФактическийАдрес");
	ВидыКонтактнойИнформации.Вставить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации,	    "ЮридическийАдрес");
	ВидыКонтактнойИнформации.Вставить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации,      "Телефон");
	ВидыКонтактнойИнформации.Вставить(Справочники.ВидыКонтактнойИнформации.EmailОрганизации,        "ЭлектроннаяПочта");
	
	// Данные документа
	Если ТипЗнч(ОснованиеПлатежа) = Тип("ДокументСсылка.ЧекККМ") Тогда
		ДанныеОснованияПлатежа.Идентификатор = ДанныеДокумента.УникальныйИдентификаторПлатежа;
	Иначе
		ДанныеОснованияПлатежа.Идентификатор = ПолучитьУникальныйИдентификаторПлатежа(ОснованиеПлатежа);
	КонецЕсли;
	ДанныеОснованияПлатежа.Номер         = ДанныеДокумента.Номер;
	ДанныеОснованияПлатежа.Сумма         = ДанныеДокумента.Сумма;
	//ДанныеОснованияПлатежа.Валюта        = ДанныеДокумента.Валюта;
	
	ДанныеОснованияПлатежа.НазначениеПлатежа = СтрШаблон(НСтр("ru = 'По счету № %1 от %2'"),
		ДанныеДокумента.Номер, Формат(ДанныеДокумента.Дата, "ДЛФ=DD"));

	// Банковский счет
	ДанныеОснованияПлатежа.БанковскийСчет.БанкБИК          = ДанныеДокумента.БанкБИК;
	ДанныеОснованияПлатежа.БанковскийСчет.БанкНаименование = ДанныеДокумента.БанкНаименование;
	ДанныеОснованияПлатежа.БанковскийСчет.БанкКоррСчет     = ДанныеДокумента.БанкКоррСчет;
	ДанныеОснованияПлатежа.БанковскийСчет.НомерСчета       = ДанныеДокумента.БанковскийСчетНомерСчета;
	
	// Продавец
	ДанныеОснованияПлатежа.Продавец.УчетнаяПолитика = ПараметрыУчетнойПолитики(УчетнаяПолитикаПродавца);
	ДанныеОснованияПлатежа.Продавец.ИНН             = ДанныеДокумента.ОрганизацияИНН;
	ДанныеОснованияПлатежа.Продавец.КПП             = ДанныеДокумента.ОрганизацияКПП;
	ДанныеОснованияПлатежа.Продавец.Наименование    = ДанныеДокумента.ОрганизацияНаименованиеПолное;
	
	Для каждого ЭлементКоллекции Из КонтактнаяИнформация Цикл
		Если ВидыКонтактнойИнформации.Получить(ЭлементКоллекции.Вид) <> Неопределено Тогда
			ПолеКонтактнойИнформации = ВидыКонтактнойИнформации[ЭлементКоллекции.Вид];
			ДанныеОснованияПлатежа.Продавец[ПолеКонтактнойИнформации] = ЭлементКоллекции.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ЭлементКоллекции Из ВидыКонтактнойИнформации Цикл
		Если ДанныеОснованияПлатежа.Продавец[ЭлементКоллекции.Значение] = Неопределено Тогда
			ДанныеОснованияПлатежа.Продавец[ЭлементКоллекции.Значение] = "";
		КонецЕсли;
	КонецЦикла;
	
	// Покупатель
	ДанныеОснованияПлатежа.Покупатель.Идентификатор        = ИдентификаторПлательщика(ДанныеДокумента.Контрагент);
	ДанныеОснованияПлатежа.Покупатель.Наименование         = ДанныеДокумента.КонтрагентНаименованиеПолное;
	ДанныеОснованияПлатежа.Покупатель.ИНН         		   = ДанныеДокумента.КонтрагентИНН;
	ДанныеОснованияПлатежа.Покупатель.КонтактныеДанныеЧека = ""; // Будет выбрано в форме подготовки ссылки.
	
	// Номенклатура
	Для каждого ЭлементКоллекции Из ДанныеПоНоменклатуре Цикл
		НоваяСтрока = ДанныеОснованияПлатежа.Номенклатура.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементКоллекции);
		НоваяСтрока.СтавкаНДСКод = ПреобразоватьСтавкуНДС(ЭлементКоллекции.СтавкаНДССсылка);
	КонецЦикла;
	
	Для каждого ЭлементКоллекции Из Штрихкоды Цикл
		ЗаполнитьЗначенияСвойств(ДанныеОснованияПлатежа.Штрихкоды.Добавить(), ЭлементКоллекции);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКонтактнуюИнформациюОснованияПлатежа(Знач ОснованиеПлатежа, КонтактнаяИнформация) Экспорт
	
	Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОснованиеПлатежа, "Контрагент");
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли; 
	
	////////////////////////////////////////////////////////////////////////////////
	
	ИсточникиКонтактнойИнформации = Новый Массив;
	ИсточникиКонтактнойИнформации.Добавить(Контрагент);
	
	ВидыКонтактнойИнформации = Новый Массив;
	ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
	
	ДанныеПоКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
		ИсточникиКонтактнойИнформации,, ВидыКонтактнойИнформации, ТекущаяДатаСеанса());
	
	Для каждого ЭлементКоллекции Из ДанныеПоКонтактнойИнформации Цикл
		Если ЭлементКоллекции.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента Тогда
			КонтактнаяИнформация.Телефоны.Добавить(ЭлементКоллекции.Представление);
		ИначеЕсли ЭлементКоллекции.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагента Тогда
			КонтактнаяИнформация.ЭлектроннаяПочта.Добавить(ЭлементКоллекции.Представление);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриФормированииСпискаПолучателейСообщения(Знач ОснованиеПлатежа, Знач ВариантОтправки, Получатели) Экспорт
	
	Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОснованиеПлатежа, "Контрагент");
	Телефон = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(Контрагент, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	АдресЭП = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(Контрагент, Справочники.ВидыКонтактнойИнформации.EmailКонтрагента);
	
	Если ВариантОтправки = "ЭлектроннаяПочта" Тогда
		
		//Для корректной обработки контактной информации в форме отправки письма, 
		//необходимо подменить список значений Получатели на массив структур
		СписокПолучателей = Новый Массив; 
		
		СтруктураПолучателя = Новый Структура;
		СтруктураПолучателя.Вставить("Адрес", АдресЭП);
		СтруктураПолучателя.Вставить("Представление", Контрагент.НаименованиеПолное);
		СтруктураПолучателя.Вставить("ИсточникКонтактнойИнформации", Контрагент);
		СписокПолучателей.Добавить(СтруктураПолучателя);
		
		Получатели = СписокПолучателей;
		
	ИначеЕсли ВариантОтправки = "Телефон" Тогда
		Получатели.Добавить(Телефон);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормами

Процедура ПриСозданииФормыОнлайнОплаты(Форма, Группа, Префикс, ДополнительныеНастройки) Экспорт
	
	ИспользуемыеНастройки = ОписаниеИспользуемыхНастроек();
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для каждого ЭлементКоллекции Из ИспользуемыеНастройки Цикл
		
		Реквизит = Новый РеквизитФормы(
		Префикс + ЭлементКоллекции.Настройка,
		ЭлементКоллекции.ТипЗначения,,
		ЭлементКоллекции.Представление,
		Истина);
		
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ДополнительныеНастройки.Вставить(ЭлементКоллекции.Настройка, Реквизит.Имя);
	КонецЦикла;
	
	Реквизит = Новый РеквизитФормы(Префикс + "ДополнительныеПараметрыФормы", Новый ОписаниеТипов);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// Элементы формы
	РасположениеПолей = Новый Структура;
	РаспределитьРеквизитыПоГруппам(Форма, Группа, Префикс, РасположениеПолей);
	
	// События элементов
	СобытияЭлементов = Новый Структура;
	СобытияЭлементов.Вставить("ВидОплатЧекаККМ", "НачалоВыбора");
	
	// Связи параметров выбора
	СвязиПараметровВыбора = Новый Структура;
	СвязиПараметровВыбора.Вставить("БанковскийСчет", "Организация");
	
	// Проверка заполнения
	РеквизитыДляПроверкиЗаполнения = РеквизитыДляПроверкиЗаполнения();
	
	Элементы = Форма.Элементы;
	ТипПолеФормы = Тип("ПолеФормы");
	
	Для каждого ЭлементКоллекции Из ИспользуемыеНастройки Цикл
		
		ИмяРеквизита = Префикс + ЭлементКоллекции.Настройка;
		
		Поле = Элементы.Добавить(ИмяРеквизита, ТипПолеФормы, РасположениеПолей[ЭлементКоллекции.Настройка]);
		Поле.ПутьКДанным = ИмяРеквизита;
		Поле.Вид = ВидПоляФормы.ПолеВвода;
		Поле.Подсказка = ЭлементКоллекции.Подсказка;
		Поле.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;

		Если ЗначениеЗаполнено(ЭлементКоллекции.ПараметрыВыбора) Тогда
			Поле.ПараметрыВыбора	= Новый ФиксированныйМассив(ЭлементКоллекции.ПараметрыВыбора);
		КонецЕсли;
		
		Если РеквизитыДляПроверкиЗаполнения.НайтиПоЗначению(ЭлементКоллекции.Настройка) <> Неопределено Тогда
			Поле.АвтоОтметкаНезаполненного = Истина;
		КонецЕсли;
		
		Если СвязиПараметровВыбора.Свойство(ЭлементКоллекции.Настройка) Тогда
			
			ВсеСвязи = Новый Массив;
			ВсеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", СвязиПараметровВыбора[ЭлементКоллекции.Настройка]));
			
			Поле.СвязиПараметровВыбора = Новый ФиксированныйМассив(ВсеСвязи); 
			
		КонецЕсли;
		
		Если СобытияЭлементов.Свойство(ЭлементКоллекции.Настройка) Тогда
			МассивСобытий = СтрРазделить(СобытияЭлементов[ЭлементКоллекции.Настройка], ",");
			Для каждого Событие Из МассивСобытий Цикл
				Поле.УстановитьДействие(СокрЛП(Событие), "Подключаемый_Элемент" + СокрЛП(Событие));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьРеквизитыФормы(Форма, Префикс);
	
КонецПроцедуры

Процедура ПередНачаломРедактированияДополнительныхНастроекОнлайнОплаты(Контекст, Отказ = Ложь) Экспорт
	
	
КонецПроцедуры

Процедура ПередОкончаниемРедактированияДополнительныхНастроекОнлайнОплат(Контекст, Отказ = Ложь) Экспорт
	
	Форма   = Контекст.Форма;
	Префикс = Контекст.Префикс;
	
	РеквизитыДляПроверки = РеквизитыДляПроверкиЗаполнения();
	
	Для каждого ЭлементКоллекции Из РеквизитыДляПроверки Цикл
		
		ИмяРеквизита = Префикс + ЭлементКоллекции.Значение;
		
		Если НЕ ЗначениеЗаполнено(Форма[ИмяРеквизита]) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Не заполнено: %1'"), ЭлементКоллекции.Представление),, ЭлементКоллекции.Значение,,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаССервисом

Процедура ПриЗагрузкеОперацийПоОнлайнОплате(Операции, Результат, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Структура;
	Результат.Вставить("КоличествоЗагруженыхОпераций", 0);
	Результат.Вставить("КоличествоНезагруженыхОпераций", 0);
	СоответствиеЧеков = Новый Соответствие;
	
	ТипыОснованийплатежа = ПолучитьСписокТиповОснованийПлатежаДляОнлайнОплаты();
	
	Для каждого Операция Из Операции.ОперацииМассивСтруктур Цикл
		
		ОснованиеПлатежа = Неопределено;
		ОснованиеПлатежа = ПолучитьСсылкуПоУникальномуИдентификаторуПлатежа(Операция.ИдентификаторПлатежа);
		
		Если НЕ ЗначениеЗаполнено(ОснованиеПлатежа) ИЛИ ТипыОснованийПлатежа.Найти(ОснованиеПлатежа.Метаданные().Имя) = Неопределено Тогда
			Продолжить; // Загружаются платежи только по имеющимся в базе основаниям.
		КонецЕсли;
		
		Если ТипЗнч(ОснованиеПлатежа) = Тип("ДокументСсылка.ЧекККМ") Тогда
			СоответствиеЧеков.Вставить(ОснованиеПлатежа, Операция);
		КонецЕсли;
		
		ТекстСообщения = "";
		Результат.КоличествоЗагруженыхОпераций = Результат.КоличествоЗагруженыхОпераций + 1;
		
	КонецЦикла;
	Результат.Вставить("СоответствиеЧеков", СоответствиеЧеков);

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ЗагрузитьОперацииОнлайнОплатыВФоне(Знач ПараметрыЗагрузки) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка операций'");
	
	ИмяПроцедуры = "ОнлайнОплатыРТ.ЗагрузитьОперацииОнлайнОплатыВФоне";
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(ИмяПроцедуры, ПараметрыЗагрузки, ПараметрыВыполнения);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

#КонецОбласти

#Область ШаблоныСообщений

Процедура ПроверитьИспользованиеШаблоновСообщенийОнлайнОплат(Используется) Экспорт
	
	Используется = Ложь;
	
КонецПроцедуры

#КонецОбласти

// Возвращает параметры настройки онлайн оплаты 
//
// Параметры:
//  Интеграция - Справочник.НастройкиОнлайнОплат - настройки которой нужно получить.
//
// Возвращаемое значение:
//  Структура - настройки онлайн оплаты
//
Функция ПараметрыИнтеграции(Интеграция) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =   
	"ВЫБРАТЬ
	|	НастройкиОнлайнОплат.Организация КАК Организация,
	|	НастройкиОнлайнОплат.Наименование КАК Наименование
	|ИЗ
	|	Справочник.НастройкиОнлайнОплат КАК НастройкиОнлайнОплат
	|ГДЕ
	|	НастройкиОнлайнОплат.Ссылка = &Ссылка";                
	
	Запрос.УстановитьПараметр("Ссылка", Интеграция);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Структура = Новый Структура("Организация, Наименование");
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Структура.Организация  = ВыборкаДетальныеЗаписи.Организация;
		Структура.Наименование = ВыборкаДетальныеЗаписи.Наименование;
			
		Возврат Структура;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает настройки онлайн оплаты организации
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация, настройки которой нужно получить.
//
// Возвращаемое значение:
//  Справочник.НастройкиОнлайнОплат, Неопределено - настройки онлайн оплаты:
//
Функция НастройкаОнлайнОплатыОрганизации(Знач Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	НастройкиОнлайнОплат.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиОнлайнОплат КАК НастройкиОнлайнОплат
	|ГДЕ
	|	НастройкиОнлайнОплат.Организация = &Организация
	|	И НЕ НастройкиОнлайнОплат.Недействительна
	|	И НЕ НастройкиОнлайнОплат.ПометкаУдаления";
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
		
	Возврат Выборка.Ссылка;
	
КонецФункции

#КонецОбласти

#Область ФормаНастройки

Процедура РаспределитьРеквизитыПоГруппам(Форма, Группа, Префикс, РасположениеПолей)
	
	Элементы = Форма.Элементы;
	
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	// Основная группа
	ГруппаАналитикиУчета = НоваяГруппаФормы(Элементы, 
		Префикс + "ГруппаАналитикиУчета", НСтр("ru = 'Укажите настройки учета'"),
		Группа, Неопределено, ОтображениеОбычнойГруппы.ОбычноеВыделение);
		
	// Группа перед колонками
	ГруппаБанковскийСчет = НоваяГруппаФормы(Элементы, 
		Префикс + "ГруппаБанковскийСчет", "", ГруппаАналитикиУчета);
	
	РасположениеПолей.Вставить("БанковскийСчет", ГруппаБанковскийСчет);
	РасположениеПолей.Вставить("ВидОплатЧекаККМ", ГруппаБанковскийСчет);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыФормы(Форма, Префикс)
	
	Форма[Префикс + "ДополнительныеПараметрыФормы"] = Новый Структура;
	
	ДополнительныеПараметрыФормы = Форма[Префикс + "ДополнительныеПараметрыФормы"];
		
	ДополнительныеПараметрыФормы.Вставить("АналитикаРасходовЗаказРеализация", Ложь);
	ДополнительныеПараметрыФормы.Вставить("АналитикаРасходовОбязательна",     Ложь);
	ДополнительныеПараметрыФормы.Вставить("КэшированныеЗначения",             Неопределено);
	
КонецПроцедуры

Функция НоваяГруппаФормы(Элементы, Имя, Заголовок, Родитель, Группировка = Неопределено, Отображение = Неопределено)
	
	ГруппаСтатьяДвиженияДенежныхСредствОплаты                     = Элементы.Добавить(Имя, Тип("ГруппаФормы"), Родитель);
	ГруппаСтатьяДвиженияДенежныхСредствОплаты.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСтатьяДвиженияДенежныхСредствОплаты.Заголовок           = Заголовок;
	ГруппаСтатьяДвиженияДенежныхСредствОплаты.Группировка         = ?(Группировка = Неопределено, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Группировка);
	ГруппаСтатьяДвиженияДенежныхСредствОплаты.ОтображатьЗаголовок = ?(ЗначениеЗаполнено(Заголовок), Истина, Ложь);
	ГруппаСтатьяДвиженияДенежныхСредствОплаты.Отображение         = ?(Отображение = Неопределено, ОтображениеОбычнойГруппы.Нет, Отображение);
	
	Возврат ГруппаСтатьяДвиженияДенежныхСредствОплаты;
	
КонецФункции

Функция РеквизитыДляПроверкиЗаполнения()
	
	РеквизитыДляПроверки = Новый СписокЗначений;
	
	РеквизитыДляПроверки.Добавить("БанковскийСчет", НСтр("ru = 'Банковский счет'"));
	РеквизитыДляПроверки.Добавить("ВидОплатЧекаККМ", НСтр("ru = 'Вид оплаты'"));
	
	Возврат РеквизитыДляПроверки;
	
КонецФункции

#КонецОбласти

#Область ЗагрузкаОпераций

Процедура ЗагрузитьОперацииОнлайнОплаты(Знач Параметры, АдресРезультата) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Результат = ОнлайнОплаты.ЗагрузитьОперацииОнлайнОплат(Параметры.Период, Параметры.Организация, Параметры.СДоговором);
	
	Если Параметры.ЭтоРМК Тогда
		
		НастройкаОнлайнОплатыОрганизации = НастройкаОнлайнОплатыОрганизации(Параметры.Организация);
		ЗагруженныеДанные = Результат.Получить(НастройкаОнлайнОплатыОрганизации);
		СоответствиеЧеков = ЗагруженныеДанные.СоответствиеЧеков;
		ДанныеЧекаОплаты = СоответствиеЧеков.Получить(Параметры.ОснованиеПлатежа);
		
		Если ЗначениеЗаполнено(ДанныеЧекаОплаты) Тогда
			РезультатДлительнойОперации = ДанныеЧекаОплаты;
		Иначе
			РезультатДлительнойОперации = Неопределено;
		КонецЕсли;
		
		ПоместитьВоВременноеХранилище(РезультатДлительнойОперации, АдресРезультата);
		
	Иначе
		
		ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаСсылки

Процедура ПлатежнаяСсылкаВФоне(Знач Параметры, АдресРезультата) Экспорт
	
	Результат = ОнлайнОплаты.ПлатежнаяСсылка(Параметры.ОснованиеПлатежа);
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМетоды

Функция ПараметрыУчетнойПолитики(ДанныеПоУчетнойПолитике)
	
	Если ДанныеПоУчетнойПолитике.Количество() = 0 Тогда
		Возврат 1;
	КонецЕсли;
	
	СтрокаУчетнойПолитики = ДанныеПоУчетнойПолитике[0];
	
	Если СтрокаУчетнойПолитики.ПрименяетсяЕНВД Тогда
		Возврат 4;     // ЕНВД
	Иначе
		Если СтрокаУчетнойПолитики.ПрименяетсяУСНДоходыМинусРасходы Тогда
			Возврат 3; // УСН
		ИначеЕсли СтрокаУчетнойПолитики.ПрименяетсяУСН Тогда
			Возврат 2; // УСН
		ИначеЕсли НЕ СтрокаУчетнойПолитики.ПрименяетсяУСН Тогда
			Возврат 1; // ОСН
		Иначе
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПреобразоватьСтавкуНДС(СтавкаНДС)
	
	СтавкаНДСЧислом = 1;
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		СтавкаНДСЧислом = 1;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		СтавкаНДСЧислом = 2;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
		СтавкаНДСЧислом = 3;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		СтавкаНДСЧислом = 4;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
		СтавкаНДСЧислом = 5;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		СтавкаНДСЧислом = 6;
	КонецЕсли;
	
	Возврат СтавкаНДСЧислом;
	
КонецФункции

Функция ИдентификаторПлательщика(Знач Контрагент)
	
	Реквизиты = "ИНН, КПП, Наименование";
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, Реквизиты);
	
	ИдентификаторПлательщика = СтрШаблон("%1 %2%3%4", 
		СокрЛП(ЗначенияРеквизитов.Наименование),
		СокрЛП(ЗначенияРеквизитов.ИНН),
		СокрЛП(?(Не ПустаяСтрока(ЗначенияРеквизитов.ИНН), "/", "")),
		СокрЛП(?(Не ПустаяСтрока(ЗначенияРеквизитов.ИНН), ЗначенияРеквизитов.КПП, "")));
	
	Возврат СокрЛП(ИдентификаторПлательщика);
	
КонецФункции

Функция ПолучитьСсылкуПоУникальномуИдентификаторуПлатежа(ИдентификаторПлатежа) Экспорт
	
	Запрос = Новый Запрос;
	
	ТипыОбъектов = ПолучитьТипыОбъектовСИдентификаторомПлатежа();
	
	Для каждого ТипОбъекта Из ТипыОбъектов Цикл
		
		Если ПравоДоступа("Чтение", Метаданные.Документы[ТипОбъекта]) Тогда
			
			Если ЗначениеЗаполнено(Запрос.Текст) Тогда
				Запрос.Текст = Запрос.Текст + " ОБЪЕДИНИТЬ ВСЕ ";	
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст +
				"
				|ВЫБРАТЬ
				|	ОснованиеПлатежа.Ссылка КАК Ссылка
				|ИЗ
				|	Документ." + ТипОбъекта + " КАК ОснованиеПлатежа
				|ГДЕ
				|	ОснованиеПлатежа.УникальныйИдентификаторПлатежа = &ИдентификаторПлатежа";
		
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ИдентификаторПлатежа", ИдентификаторПлатежа);
	
	ВыборкаОснование = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаОснование.Следующий() Тогда
		Возврат ВыборкаОснование.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
	
КонецФункции 

// Возвращает массив имен типов документов, у которых есть реквизит ИдентификаторПлатежа
//
Функция ПолучитьТипыОбъектовСИдентификаторомПлатежа()
	
	ТипыОбъектов = Новый Массив;
	
	ТипыОбъектов.Добавить("ЧекККМ");
	
	Возврат ТипыОбъектов;
	
КонецФункции

Функция ПараметрыОнлайнОплаты(Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК ВидОплаты,
	|	НастройкиОнлайнОплат.ОтправкаЧековЧерезСервис КАК ОтправкаЧековЧерезСервис
	|ИЗ
	|	Справочник.НастройкиОнлайнОплат.ДополнительныеНастройки КАК НастройкиОнлайнОплатДополнительныеНастройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиОнлайнОплат КАК НастройкиОнлайнОплат
	|		ПО НастройкиОнлайнОплатДополнительныеНастройки.Ссылка = НастройкиОнлайнОплат.Ссылка
	|ГДЕ
	|	НастройкиОнлайнОплатДополнительныеНастройки.Ссылка В
	|			(ВЫБРАТЬ
	|				НастройкиОнлайнОплат.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.НастройкиОнлайнОплат КАК НастройкиОнлайнОплат
	|			ГДЕ
	|				НастройкиОнлайнОплат.Организация = &Организация)
	|	И ТИПЗНАЧЕНИЯ(НастройкиОнлайнОплатДополнительныеНастройки.Значение) = ТИП(Справочник.ВидыОплатЧекаККМ)";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВидОплаты", Выборка.ВидОплаты);
	СтруктураПараметров.Вставить("ОтправкаЧековЧерезСервис", Выборка.ОтправкаЧековЧерезСервис);
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#Область УИП

Функция ПолучитьУникальныйИдентификаторПлатежа(Объект)Экспорт
	
	Префикс = ПолучитьПрефиксДляУИП(Объект.Ссылка);
	Дата = Формат(Объект.Дата, "ДФ=yyMM");
	Номер = СтрЗаменить(Объект.Номер, "-", "");
	Код = Строка(Префикс) + Строка(Дата) + Строка(Номер);
	УИН = ПолучитьУникальныйИдентификаторПлатежаСКонтрольнымРазрядом(Код);
	
	Возврат УИН;
	
КонецФункции

Функция ПолучитьПрефиксДляУИП(Ссылка)
	
	Соответствие = Новый Соответствие();
	Соответствие.Вставить("ЗаказПокупателя", "ЗП");
	Соответствие.Вставить("ЧекККМ", "ЧК");
	
	Возврат Соответствие[Ссылка.Метаданные().Имя];
	
КонецФункции

Функция ПолучитьУникальныйИдентификаторПлатежаСКонтрольнымРазрядом(Код,Сдвиг = Неопределено)
	
	Если Сдвиг = Неопределено Тогда
		Сдвиг = 0;
	КонецЕсли;
	
	СтруктураСоответствий = СтруктураСоответствийБуквИЦифр();
	
	СтрокаЦифр = "0123456789";
	ВесРазряда = 1+Сдвиг;
	Результат = 0;
	//Замена служебных символов в коде
	СтрокаБукв = "АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЭЮЯЪЫЬABCDEFGHIJKLMNOPQRSTUVWXYZ";
	НовКод = "";
	Для Инд = 1 По СтрДлина(Код) Цикл
		СимволКода = Сред(Код,Инд,1);
		СимволКода = ВРЕГ(СимволКода);
		Если СтрНайти(СтрокаЦифр,СимволКода)=0 И СтрНайти(СтрокаБукв,СимволКода)=0 Тогда
			НовКод = НовКод + "0";
		Иначе
			НовКод = НовКод + СимволКода;
		КонецЕсли;
	КонецЦикла;
	Код = НовКод;
	//Конец замены
	Если СтрДлина(Код)<19 Тогда
		СтрокаКода = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Код,19,"0","Справа");
	Иначе
		СтрокаКода = Лев(Код,19);
	КонецЕсли;
	
	Для Инд = 1 По 19 Цикл 
		СимволКода = Сред(СтрокаКода,Инд,1);
		Если СтрНайти(СтрокаЦифр,СимволКода)>0 Тогда
			Значение = Число(СимволКода);
		ИначеЕсли СтруктураСоответствий.Свойство(ВРег(СимволКода)) Тогда
			Значение = СтруктураСоответствий[СимволКода]%10;
		КонецЕсли;		
		Результат = Результат + ВесРазряда*Значение;
		
		ВесРазряда = ВесРазряда + 1;
		Если ВесРазряда = 11 Тогда
			ВесРазряда = 1;
		КонецЕсли;
	КонецЦикла;
	
	КонтрольныйРазряд = Результат % 11;
	
	Если КонтрольныйРазряд = 10 Тогда
		Если Сдвиг = 0 Тогда
			Возврат ПолучитьУникальныйИдентификаторПлатежаСКонтрольнымРазрядом(Код,2);
		Иначе
			КонтрольныйРазряд = 0;
		КонецЕсли;
	КонецЕсли;
	
	ПолныйКод = СтрокаКода+Строка(КонтрольныйРазряд);
	
	Возврат ПолныйКод;
	
КонецФункции

Функция СтруктураСоответствийБуквИЦифр()
	
	СтруктураСоответствий = Новый Структура();
	
	СтруктураСоответствий.Вставить("А", 1);
	СтруктураСоответствий.Вставить("Б", 2);
	СтруктураСоответствий.Вставить("В", 3);
	СтруктураСоответствий.Вставить("Г", 4);
	СтруктураСоответствий.Вставить("Д", 5);
	СтруктураСоответствий.Вставить("Е", 6);
	СтруктураСоответствий.Вставить("Ж", 7);
	СтруктураСоответствий.Вставить("З", 8);
	СтруктураСоответствий.Вставить("И", 9);
	СтруктураСоответствий.Вставить("К", 10);
	СтруктураСоответствий.Вставить("Л", 11);
	СтруктураСоответствий.Вставить("М", 12);
	СтруктураСоответствий.Вставить("Н", 13);
	СтруктураСоответствий.Вставить("О", 14);
	СтруктураСоответствий.Вставить("П", 15);
	СтруктураСоответствий.Вставить("Р", 16);
	СтруктураСоответствий.Вставить("С", 17);
	СтруктураСоответствий.Вставить("Т", 18);
	СтруктураСоответствий.Вставить("У", 19);
	СтруктураСоответствий.Вставить("Ф", 20);
	СтруктураСоответствий.Вставить("Х", 21);
	СтруктураСоответствий.Вставить("Ц", 22);
	СтруктураСоответствий.Вставить("Ч", 23);
	СтруктураСоответствий.Вставить("Ш", 24);
	СтруктураСоответствий.Вставить("Щ", 25);
	СтруктураСоответствий.Вставить("Э", 26);
	СтруктураСоответствий.Вставить("Ю", 27);
	СтруктураСоответствий.Вставить("Я", 28);
	СтруктураСоответствий.Вставить("Ъ", 33);
	СтруктураСоответствий.Вставить("Ы", 36);
	СтруктураСоответствий.Вставить("Ь", 46);
	СтруктураСоответствий.Вставить("A", 1);
	СтруктураСоответствий.Вставить("B", 3);
	СтруктураСоответствий.Вставить("C", 17);
	СтруктураСоответствий.Вставить("D", 29);
	СтруктураСоответствий.Вставить("E", 6);
	СтруктураСоответствий.Вставить("F", 30);
	СтруктураСоответствий.Вставить("G", 31);
	СтруктураСоответствий.Вставить("H", 13);
	СтруктураСоответствий.Вставить("I", 32);
	СтруктураСоответствий.Вставить("J", 33);
	СтруктураСоответствий.Вставить("K", 10);
	СтруктураСоответствий.Вставить("L", 34);
	СтруктураСоответствий.Вставить("M", 12);
	СтруктураСоответствий.Вставить("N", 35);
	СтруктураСоответствий.Вставить("O", 14);
	СтруктураСоответствий.Вставить("P", 16);
	СтруктураСоответствий.Вставить("Q", 36);
	СтруктураСоответствий.Вставить("R", 37);
	СтруктураСоответствий.Вставить("S", 38);
	СтруктураСоответствий.Вставить("T", 18);
	СтруктураСоответствий.Вставить("U", 39);
	СтруктураСоответствий.Вставить("V", 40);
	СтруктураСоответствий.Вставить("W", 41);
	СтруктураСоответствий.Вставить("X", 21);
	СтруктураСоответствий.Вставить("Y", 19);
	СтруктураСоответствий.Вставить("Z", 42);
	
	Возврат СтруктураСоответствий;
	
КонецФункции

#КонецОбласти

#Область ПолучениеДанных

#Область ДанныхДляПолученияПлатежнойСсылки

Функция ДанныеДокументаДляПолученияПлатежнойСсылки(ДокументСсылка)

	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеДокумента = Новый Структура;
	
	ДанныеДокумента.Вставить("ДанныеДокумента");
	ДанныеДокумента.Вставить("РасширенноеОписаниеТоваров");
	ДанныеДокумента.Вставить("КонтактнаяИнформация");
	ДанныеДокумента.Вставить("УчетнаяПолитика");
	ДанныеДокумента.Вставить("ШтрихКоды");
	
	////////////////////////////////////////////////////////////////////////////////
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапросаТоваровДокумента(ДокументСсылка);
	
	ВидыКонтактнойИнформации = Новый Массив;
	
	ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	ВидыКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.EmailОрганизации);
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата, Организация");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", РеквизитыДокумента.Организация);
	Запрос.УстановитьПараметр("Период", РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ОплатаОтКлиента", Истина);
	Запрос.УстановитьПараметр("ВидыКонтактнойИнформации", ВидыКонтактнойИнформации);
	
	Результат = Запрос.ВыполнитьПакет();
	
	////////////////////////////////////////////////////////////////////////////////
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекККМ") Тогда
		ДанныеДокумента.ДанныеДокумента =            Результат[3].Выгрузить();
		ДанныеДокумента.УчетнаяПолитика =            Результат[6].Выгрузить();
		ДанныеДокумента.РасширенноеОписаниеТоваров = Результат[7].Выгрузить();
		ДанныеДокумента.ШтрихКоды =                  Результат[8].Выгрузить();
		ДанныеДокумента.КонтактнаяИнформация =       Результат[9].Выгрузить();
		
	Иначе
		ДанныеДокумента.ДанныеДокумента =            Результат[2].Выгрузить();
		ДанныеДокумента.УчетнаяПолитика =            Результат[6].Выгрузить();
		ДанныеДокумента.РасширенноеОписаниеТоваров = Результат[7].Выгрузить();
		ДанныеДокумента.ШтрихКоды =                  Результат[8].Выгрузить();
		ДанныеДокумента.КонтактнаяИнформация =       Результат[9].Выгрузить();
	КонецЕсли;
	
	Возврат ДанныеДокумента;
	
КонецФункции

#КонецОбласти

#Область ТекстыЗапросов

// Текст запроса для электронного чека и расширенного описания номенклатуры
////
Функция ТекстЗапросаТоваровДокумента(ДокументСсылка)
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
	
	ТекстСводныеДанные = 
	"ВЫБРАТЬ
	|	ДокументОснованиеПлатежа.Номер КАК Номер,
	|	ДокументОснованиеПлатежа.Дата КАК Дата,
	|	ДокументОснованиеПлатежа.Организация КАК Организация,
	|	ДокументОснованиеПлатежа.Контрагент КАК Контрагент,
	|	ДокументОснованиеПлатежа.Контрагент.ИНН КАК КонтрагентИНН,
	|	ДокументОснованиеПлатежа.Контрагент.Наименование КАК КонтрагентНаименованиеПолное,
	|	ДокументОснованиеПлатежа.Организация.Наименование КАК ОрганизацияНаименованиеПолное,
	|	ДокументОснованиеПлатежа.Организация.ИНН КАК ОрганизацияИНН,
	|	ДокументОснованиеПлатежа.Организация.КПП КАК ОрганизацияКПП,
	|	ДокументОснованиеПлатежа.БанковскийСчетОрганизации.НомерСчета КАК БанковскийСчетНомерСчета,
	|	ДокументОснованиеПлатежа.БанковскийСчетОрганизации.Банк.Наименование КАК БанкНаименование,
	|	ДокументОснованиеПлатежа.БанковскийСчетОрганизации.Банк.Код КАК БанкБИК,
	|	ДокументОснованиеПлатежа.БанковскийСчетОрганизации.Банк.КоррСчет КАК БанкКоррСчет,
	|	ДокументОснованиеПлатежа.СуммаДокумента КАК Сумма,
	|	ДокументОснованиеПлатежа.БанковскийСчетОрганизации КАК БанковскийСчет
	|ИЗ
	|	&ДокументОснованиеПлатежа КАК ДокументОснованиеПлатежа
	|ГДЕ
	|	ДокументОснованиеПлатежа.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения,
	|	ПрименениеСистемНалогообложенияСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТСрезПоследних
	|ИЗ
	|	РегистрСведений.ПрименениеСистемНалогообложения.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ВЫБОР
	|					КОГДА СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.Патент)
	|						ТОГДА &Период >= ДатаНачалаПатента
	|									И &Период <= ДатаОкончанияПатента
	|								ИЛИ ДатаНачалаПатента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									И ДатаОкончанияПатента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ПрименениеСистемНалогообложенияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТСрезПоследних.Период) КАК Период
	|ПОМЕСТИТЬ ВТПериод
	|ИЗ
	|	ВТСрезПоследних КАК ВТСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.УСНДоход)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ПрименяетсяУСН,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.УСНДоходРасход)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.ЕНВД)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ПрименяетсяЕНВД
	|ИЗ
	|	ВТСрезПоследних КАК ПрименениеСистемНалогообложенияСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериод КАК ВТПериод
	|		ПО ПрименениеСистемНалогообложенияСрезПоследних.Период = ВТПериод.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное = """"
	|				ТОГДА ТаблицаНоменклатуры.Номенклатура.Наименование
	|			ИНАЧЕ ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное
	|		КОНЕЦ, """") КАК Наименование,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Характеристика.Наименование, """") КАК Характеристика,
	|	ТаблицаНоменклатуры.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Количество = 0
	|				ТОГДА ТаблицаНоменклатуры.Сумма
	|			ИНАЧЕ ТаблицаНоменклатуры.Сумма / ТаблицаНоменклатуры.Количество
	|		КОНЕЦ КАК ЧИСЛО(31, 2)) КАК Цена,
	|	ТаблицаНоменклатуры.Сумма КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС КАК СтавкаНДССсылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.СтавкаНДС) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаНоменклатуры.Номенклатура.ВидНоменклатуры.ПризнакПредметаРасчета = ЗНАЧЕНИЕ(Справочник.ПризнакиПредметовРасчета.ПодакцизныйТовар)
	|			ТОГДА 2
	|		КОГДА ТаблицаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ТОГДА 1
	|		КОГДА ТаблицаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА 4
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПредметРасчета,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Номенклатура.Наименование, """") КАК НаименованиеПолное,
	|	ТаблицаНоменклатуры.Номенклатура.Артикул КАК Артикул,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.ВидНоменклатуры) КАК ВидНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.Родитель) КАК Родитель,
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	"""" КАК КодТовара,
	|	"""" КАК КодСтраныПроисхожденияТовара,
	|	"""" КАК НомерТаможеннойДекларации,
	|	"""" КАК СуммаАкциза
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТаблицаНоменклатуры.Номенклатура = Штрихкоды.Владелец
	|			И ТаблицаНоменклатуры.Характеристика = Штрихкоды.Характеристика
	|			И ТаблицаНоменклатуры.Упаковка = Штрихкоды.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Вид КАК Вид,
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Представление,
	|	ОрганизацииКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Организация
	|	И ОрганизацииКонтактнаяИнформация.Вид В(&ВидыКонтактнойИнформации)";
	
ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЧекККМ") Тогда 
	ТекстЗапроса = 

	"ВЫБРАТЬ
	|	ЧекККМ.Ссылка КАК Основание
	|ПОМЕСТИТЬ ДокументОснованияПлатежа
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Упаковка КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК Справочник.БанковскиеСчета) КАК БанковскийСчетОрганизации,
	|	ВЫРАЗИТЬ(НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК Справочник.БанковскиеСчета).Владелец КАК Владелец,
	|	ВЫРАЗИТЬ(НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК Справочник.БанковскиеСчета).НомерСчета КАК БанковскийСчетНомерСчета,
	|	ВЫРАЗИТЬ(НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК Справочник.БанковскиеСчета).Банк.Наименование КАК БанкНаименование,
	|	ВЫРАЗИТЬ(НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК Справочник.БанковскиеСчета).Банк.Код КАК БанкБИК,
	|	ВЫРАЗИТЬ(НастройкиОнлайнОплатДополнительныеНастройки.Значение КАК Справочник.БанковскиеСчета).Банк.КоррСчет КАК БанкКоррСчет
	|ПОМЕСТИТЬ БанковскийСчет
	|ИЗ
	|	Справочник.НастройкиОнлайнОплат.ДополнительныеНастройки КАК НастройкиОнлайнОплатДополнительныеНастройки
	|ГДЕ
	|	НастройкиОнлайнОплатДополнительныеНастройки.Ссылка В
	|			(ВЫБРАТЬ
	|				НастройкиОнлайнОплат.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.НастройкиОнлайнОплат КАК НастройкиОнлайнОплат
	|			ГДЕ
	|				НастройкиОнлайнОплат.Организация = &Организация)
	|	И ТИПЗНАЧЕНИЯ(НастройкиОнлайнОплатДополнительныеНастройки.Значение) = ТИП(Справочник.БанковскиеСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументОснованиеПлатежа.Номер КАК Номер,
	|	ДокументОснованиеПлатежа.Дата КАК Дата,
	|	ДокументОснованиеПлатежа.Организация КАК Организация,
	|	ДокументОснованиеПлатежа.Контрагент КАК Контрагент,
	|	ДокументОснованиеПлатежа.Контрагент.ИНН КАК КонтрагентИНН,
	|	ДокументОснованиеПлатежа.Контрагент.Наименование КАК КонтрагентНаименованиеПолное,
	|	ДокументОснованиеПлатежа.Организация.Наименование КАК ОрганизацияНаименованиеПолное,
	|	ДокументОснованиеПлатежа.Организация.ИНН КАК ОрганизацияИНН,
	|	ДокументОснованиеПлатежа.Организация.КПП КАК ОрганизацияКПП,
	|	ДокументОснованиеПлатежа.СуммаДокумента КАК Сумма,
	|	ДокументОснованиеПлатежа.УникальныйИдентификаторПлатежа КАК УникальныйИдентификаторПлатежа,
	|	БанковскийСчет.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	БанковскийСчет.БанковскийСчетНомерСчета КАК БанковскийСчетНомерСчета,
	|	БанковскийСчет.БанкНаименование КАК БанкНаименование,
	|	БанковскийСчет.БанкБИК КАК БанкБИК,
	|	БанковскийСчет.БанкКоррСчет КАК БанкКоррСчет,
	|	БанковскийСчет.Владелец КАК Владелец
	|ИЗ
	|	Документ.ЧекККМ КАК ДокументОснованиеПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ БанковскийСчет КАК БанковскийСчет
	|		ПО (БанковскийСчет.Владелец = ДокументОснованиеПлатежа.Организация)
	|ГДЕ
	|	ДокументОснованиеПлатежа.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения,
	|	ПрименениеСистемНалогообложенияСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТСрезПоследних
	|ИЗ
	|	РегистрСведений.ПрименениеСистемНалогообложения.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ВЫБОР
	|					КОГДА СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.Патент)
	|						ТОГДА &Период >= ДатаНачалаПатента
	|									И &Период <= ДатаОкончанияПатента
	|								ИЛИ ДатаНачалаПатента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									И ДатаОкончанияПатента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ПрименениеСистемНалогообложенияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТСрезПоследних.Период) КАК Период
	|ПОМЕСТИТЬ ВТПериод
	|ИЗ
	|	ВТСрезПоследних КАК ВТСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.УСНДоход)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ПрименяетсяУСН,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.УСНДоходРасход)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.ТипыСистемНалогообложенияККТ.ЕНВД)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ, ЛОЖЬ) КАК ПрименяетсяЕНВД
	|ИЗ
	|	ВТСрезПоследних КАК ПрименениеСистемНалогообложенияСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериод КАК ВТПериод
	|		ПО ПрименениеСистемНалогообложенияСрезПоследних.Период = ВТПериод.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное = """"
	|				ТОГДА ТаблицаНоменклатуры.Номенклатура.Наименование
	|			ИНАЧЕ ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное
	|		КОНЕЦ, """") КАК Наименование,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Характеристика.Наименование, """") КАК Характеристика,
	|	ТаблицаНоменклатуры.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТаблицаНоменклатуры.Количество = 0
	|				ТОГДА ТаблицаНоменклатуры.Сумма
	|			ИНАЧЕ ТаблицаНоменклатуры.Сумма / ТаблицаНоменклатуры.Количество
	|		КОНЕЦ КАК ЧИСЛО(31, 2)) КАК Цена,
	|	ТаблицаНоменклатуры.Сумма КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС КАК СтавкаНДССсылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.СтавкаНДС) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаНоменклатуры.Номенклатура.ВидНоменклатуры.ПризнакПредметаРасчета = ЗНАЧЕНИЕ(Справочник.ПризнакиПредметовРасчета.ПодакцизныйТовар)
	|			ТОГДА 2
	|		КОГДА ТаблицаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ТОГДА 1
	|		КОГДА ТаблицаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА 4
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПредметРасчета,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.Номенклатура.Наименование, """") КАК НаименованиеПолное,
	|	ТаблицаНоменклатуры.Номенклатура.Артикул КАК Артикул,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.ВидНоменклатуры) КАК ВидНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаНоменклатуры.Номенклатура.Родитель) КАК Родитель,
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	"""" КАК КодТовара,
	|	"""" КАК КодСтраныПроисхожденияТовара,
	|	"""" КАК НомерТаможеннойДекларации,
	|	"""" КАК СуммаАкциза
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТаблицаНоменклатуры.Номенклатура = Штрихкоды.Владелец
	|			И ТаблицаНоменклатуры.Характеристика = Штрихкоды.Характеристика
	|			И ТаблицаНоменклатуры.Упаковка = Штрихкоды.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Вид КАК Вид,
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Представление,
	|	ОрганизацииКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Организация
	|	И ОрганизацииКонтактнаяИнформация.Вид В(&ВидыКонтактнойИнформации)";
	КонецЕсли;

	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ТекстНоменклатураДокумента = ТекстЗапросаЗаказПокупателя();
		ТекстСводныеДанные = СтрЗаменить(ТекстСводныеДанные, "&ДокументОснованиеПлатежа", "Документ.ЗаказПокупателя");
		ТекстЗапроса = ТекстНоменклатураДокумента + " ; " + ТекстСводныеДанные;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса к товарам заказа
//
Функция ТекстЗапросаЗаказПокупателя()
	
	Возврат
	
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК Основание,
	|	ЗаказПокупателя.УчитыватьНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ОснованияПлатежа
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка = &Ссылка	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика         КАК Характеристика,
	|	ТаблицаДокумента.Упаковка               КАК Упаковка,
	|	ТаблицаДокумента.КоличествоУпаковок     КАК Количество,
	|	ТаблицаДокумента.Цена                   КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС              КАК Сумма,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
КонецФункции

Функция ПолучитьМакетЭквайеры() Экспорт

	Возврат
	
	"<Items Description=""Эквайеры"" Columns=""DateFrom,FullName,Name,INN,KPP,OGRN,OKVED,OKPO"">
	|<Item
	|	DateFrom=""""
	|	FullName='Общество с ограниченной ответственностью небанковская кредитная организация ""Яндекс.Деньги""'
	|	Name='ООО НКО ""Яндекс.Деньги""'
	|	INN=""7750005725""
	|	KPP=""775001001""
	|	OGRN=""1127711000031""
	|	OKVED=""65.12""
	|	OKPO=""11366276""
	|/>
	|<Item
	|	DateFrom=""20170104""
	|	FullName='Общество с ограниченной ответственностью небанковская кредитная организация ""Яндекс.Деньги""'
	|	Name='ООО НКО ""Яндекс.Деньги""'
	|	INN=""7750005725""
	|	KPP=""770401001""
	|	OGRN=""1127711000031""
	|	OKVED=""65.12""
	|	OKPO=""11366276""
	|/>
	|<Item
	|	DateFrom=""20201201""
	|	FullName='Общество с ограниченной ответственностью небанковская кредитная организация ""ЮМани""'
	|	Name='ООО НКО ""ЮМани""'
	|	INN=""7750005725""
	|	KPP=""770501001""
	|	OGRN=""1127711000031""
	|	OKVED=""64.19""
	|	OKPO=""11366276""
	|/>
	|</Items>";
	
КонецФункции

#КонецОбласти

#КонецОбласти
