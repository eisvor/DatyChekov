#Область ПрограммныйИнтерфейс

// См. ОчередьЗаданийПереопределяемый.ПриПолученииСпискаШаблонов.
// Формирует список шаблонов заданий очереди.
//
// Параметры:
//  ШаблоныЗаданий - Массив - В параметр следует добавить имена предопределенных
//   неразделенных регламентных заданий, которые должны использоваться в качестве
//   шаблонов для заданий очереди.
Процедура ПриПолученииСпискаШаблонов(ШаблоныЗаданий) Экспорт
	
	// ЗапасыИЗакупки.РаботаСПоставщиками
	ШаблоныЗаданий.Добавить(Метаданные.РегламентныеЗадания.ОбновлениеПоставляемойНоменклатуры.Имя);
	ШаблоныЗаданий.Добавить(Метаданные.РегламентныеЗадания.ОбновлениеСостоянияОплатыИПоступления.Имя);
	// Конец ЗапасыИЗакупки.РаботаСПоставщиками
	
	// Маркетинг.МаркетинговыеАкции
	ШаблоныЗаданий.Добавить(Метаданные.РегламентныеЗадания.ОбновлениеПродажВДисконтномСервере.Имя);
	ШаблоныЗаданий.Добавить(Метаданные.РегламентныеЗадания.ФормированиеГруппПолучателейСкидки.Имя);
	// Конец Маркетинг.МаркетинговыеАкции
	
	// ОбменДанными
	ШаблоныЗаданий.Добавить(Метаданные.РегламентныеЗадания.ОбновлениеИнформативныхОстатковПоМагазинам.Имя);
	ШаблоныЗаданий.Добавить(Метаданные.РегламентныеЗадания.ОбновлениеИнформативныхОстатковПоСкладам.Имя);
	// Конец ОбменДанными
	
	// ИнтеграцияГОСИС
	ИнтеграцияЕГАИС.ПриПолученииСпискаШаблонов(ШаблоныЗаданий);
	ИнтеграцияВЕТИС.ПриПолученииСпискаШаблонов(ШаблоныЗаданий);
	ИнтеграцияИСМП.ПриПолученииСпискаШаблонов(ШаблоныЗаданий);
	ИнтеграцияЗЕРНО.ПриПолученииСпискаШаблонов(ШаблоныЗаданий);
	// Конец ИнтеграцияГОСИС
	
КонецПроцедуры

// См. ОчередьЗаданийПереопределяемый.ПриОпределенииПсевдонимовОбработчиков.
// Заполняет соответствие имен методов их псевдонимам для вызова из очереди заданий.
//
// Параметры:
//  СоответствиеИменПсевдонимам - Соответствие - 
//    * Ключ - Псевдоним метода, например ОчиститьОбластьДанных.
//    * Значение - Имя метода для вызова, например РаботаВМоделиСервиса.ОчиститьОбластьДанных.
//        В качестве значения можно указать Неопределено, в этом случае считается что имя 
//        совпадает с псевдонимом.
//
Процедура ПриОпределенииПсевдонимовОбработчиков(СоответствиеИменПсевдонимам) Экспорт
	
	// ЗапасыИЗакупки
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовНаПеремещение.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.РасчетСебестоимости.ИмяМетода);
	// ЗапасыИЗакупки.РаботаСПоставщиками
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ЗакрытиеЗаказовПоставщикам.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОбновлениеПоставляемойНоменклатуры.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОбновлениеСостоянияОплатыИПоступления.ИмяМетода);
	// Конец ЗапасыИЗакупки.РаботаСПоставщиками
	// Конец ЗапасыИЗакупки
	
	// Маркетинг.МаркетинговыеАкции
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.АвтоматическоеНачислениеИСписаниеБонусныхБаллов.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОбновлениеПродажВДисконтномСервере.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ФормированиеГруппПолучателейСкидки.ИмяМетода);
	// Конец Маркетинг.МаркетинговыеАкции
	
	// Маркетинг.Посетители
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ЗагрузкаДанныхСчетчиковПодсчетаПосетителей.ИмяМетода);
	// Конец Маркетинг.Посетители
	
	// Маркетинг.Сегментация
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ФормированиеСегментов.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОчисткаСегментов.ИмяМетода);
	// Конец Маркетинг.Сегментация
	
	// ОбменДанными
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОбновлениеИнформативныхОстатковПоМагазинам.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОбновлениеИнформативныхОстатковПоСкладам.ИмяМетода);
	СоответствиеИменПсевдонимам.Вставить("ОбменДаннымиСервер.ВыполнитьОбменДаннымиДляУзлаИнформационнойБазы");
	// Конец ОбменДанными
	
	// СервисЛольности
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.СерверЛояльностиОбработкаСостоянияБонусовПодарочныхСертификатов.ИмяМетода);
	// Конец СервисЛольности
	
	// ВЕТИС
	СоответствиеИменПсевдонимам.Вставить(Метаданные.РегламентныеЗадания.ОтправкаПолучениеДанныхВЕТИС.ИмяМетода);
	// Конец ВЕТИС
	
КонецПроцедуры

#КонецОбласти
