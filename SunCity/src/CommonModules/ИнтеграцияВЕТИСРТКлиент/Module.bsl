// Переопределяемые клиентские процедуры ВЕТИС

#Область ПрограммныйИнтерфейс

#Область ФормыДокументовОснований

//См. ИнтеграцияВЕТИСКлиентПереопределяемый.ОбработкаОповещенияВФормеДокументаОснования
// Вызывается при возникновении события ОбработкаОповещения в форме документа-основания.
// В данной процедуре можно переопределить стандартную обработку этого события механизмом ВЕТИС.
// Если процедура переопределена, то необходимо установить параметр СобытиеОбработано в значение Истина.
Процедура ОбработкаОповещенияВФормеДокументаОснования(Форма, Объект, ИмяСобытия,
			Параметр, Источник, СобытиеОбработано) Экспорт
	
	СобытиеОбработано = Ложь;
	ОписаниеСобытия = ИнтеграцияИСКлиентСервер.ПреобразоватьИмяСобытияОповещенияВоВнутреннийФормат(ИмяСобытия);
	
	// Проверим корректность имени события оповещения.
	Если ИнтеграцияИСКлиентСервер.ЭтоСобытиеОповещенияИзмененоСостояние(ОписаниеСобытия)
	 ИЛИ ИнтеграцияИСКлиентСервер.ЭтоСобытиеОповещенияВыполненОбмен(ОписаниеСобытия) Тогда
		
		СобытиеОбработано = Истина;
		
	ИначеЕсли ИнтеграцияИСКлиентСервер.ЭтоСобытиеОповещенияИзмененОбъект(ОписаниеСобытия) Тогда
		
		ИмяИзмененногоОбъекта = ИнтеграцияИСКлиентСервер.ИмяИзмененногоОбъектаИзВнутреннегоФорматаСобытияОповещения(ОписаниеСобытия);
		ЧастиИмениОбъекта 	  = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяИзмененногоОбъекта, ".");
		
		Если ЧастиИмениОбъекта.Количество() = 2 И ЧастиИмениОбъекта[0] = "Документ" Тогда
			
			ИменаДокументовВЕТИС = ИнтеграцияВЕТИСВызовСервера.ИменаДокументовДляДокументаОснования(Объект.Ссылка);
			СобытиеОбработано = ИменаДокументовВЕТИС.Свойство(ЧастиИмениОбъекта[1]);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СобытиеОбработано Тогда
		
		// Проверим, что оповещение относится к объекту указанной формы.
		ОбязательныеПараметрыОповещения = Новый Структура("Основание");
		Если Параметр <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ОбязательныеПараметрыОповещения, Параметр);
		КонецЕсли;
		
		Если Параметр = Неопределено ИЛИ ОбязательныеПараметрыОповещения.Основание = Объект.Ссылка Тогда
			
			ИнтеграцияИСКлиент.ОбновитьПолеИнтеграцииВФормеДокументаОснования(
				Форма,
				ИнтеграцияВЕТИСКлиентСервер.ИмяПодсистемы());
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//См. ИнтеграцияВЕТИСКлиентПереопределяемый.ОбработкаНавигационнойСсылкиВФормеДокументаОснования
// Вызывается при возникновении события ОбработкаНавигационнойСсылки поля гиперссылки ВЕТИС в форме документа-основания.
// В данной процедуре можно переопределить стандартную обработку этого события механизмом ВЕТИС.
// Если процедура переопределена, то необходимо установить параметр СобытиеОбработано в значение Истина.
Процедура ОбработкаНавигационнойСсылкиВФормеДокументаОснования(Форма, Объект,
			Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, СобытиеОбработано) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Контекст = Новый Структура;
	Контекст.Вставить("Форма",  Форма);
	Контекст.Вставить("Объект", Объект);
	Контекст.Вставить("ДокументОснование", Объект.Ссылка);
	Контекст.Вставить("НавигационнаяСсылкаФорматированнойСтроки", НавигационнаяСсылкаФорматированнойСтроки);
	
	Если Форма.Модифицированность Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения(
			"ОбработкаНавигационнойСсылкиВФормеДокументаОснованияВЕТИСЗавершение",
			ЭтотОбъект,
			Контекст);
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Документ ""%1"" был изменен. Записать?'"),
			Контекст.ДокументОснование);
		
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Контекст.ДокументОснование) Тогда
		
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения(
			"ОбработкаНавигационнойСсылкиВФормеДокументаОснованияВЕТИСЗавершение",
			ЭтотОбъект,
			Контекст);
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Документ ""%1"" не записан. Записать?'"),
			Контекст.ДокументОснование);
		
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ВыполнитьКомандуГиперссылкиВФормеДокументаОснованияВЕТИС(
			Контекст.ДокументОснование,
			НавигационнаяСсылкаФорматированнойСтроки,
			Форма);
			
		СобытиеОбработано = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти



#Область СлужебныеПроцедурыИФункции

#Область ФормыДокументовОснований

Процедура ОбработкаНавигационнойСсылкиВФормеДокументаОснованияВЕТИСЗавершение(РезультатВопроса, Контекст) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Контекст.Объект.Проведен Тогда
		Если Контекст.Форма.ПроверитьЗаполнение() Тогда
			Контекст.Форма.Записать();
		КонецЕсли;
	Иначе
		Контекст.Форма.Записать();
	КонецЕсли;
	
	Если НЕ Контекст.Форма.Модифицированность И ЗначениеЗаполнено(Контекст.ДокументОснование) Тогда
		
		ВыполнитьКомандуГиперссылкиВФормеДокументаОснованияВЕТИС(
			Контекст.ДокументОснование,
			Контекст.НавигационнаяСсылкаФорматированнойСтроки,
			Контекст.Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКомандуГиперссылкиВФормеДокументаОснованияВЕТИС(ДокументОснование, НавигационнаяСсылкаФорматированнойСтроки, Форма)
	
	ОписаниеКоманды = ИнтеграцияИСКлиентСервер.ПреобразоватьИмяКомандыНавигационнойСсылкиВоВнутреннийФормат(
		НавигационнаяСсылкаФорматированнойСтроки);
	
	// Открытие протокола обмена.
	Если ИнтеграцияИСКлиентСервер.ЭтоКомандаНавигационнойСсылкиОткрытьПротоколОбмена(ОписаниеКоманды) Тогда
		
		ОткрытьПротоколОбменаВЕТИС(ДокументОснование, Форма);
		
		Возврат;
		
	КонецЕсли;
	
	// Создание документа.
	Если ИнтеграцияИСКлиентСервер.ЭтоКомандаНавигационнойСсылкиСоздатьОбъект(ОписаниеКоманды) Тогда
		
		ИмяОбъектаДляСоздания = ИнтеграцияИСКлиентСервер.ИмяОбъектаДляОткрытияИзВнутреннегоФорматаКомандыНавигационнойСсылки(
			ОписаниеКоманды); // полное имя документа.
		
		ПараметрыФормы = Новый Структура("Основание", ДокументОснование);
		
		ОткрытьФорму(
			ИмяОбъектаДляСоздания + ".Форма.ФормаДокумента",
			ПараметрыФормы,
			Форма);
		
		Возврат;
		
	КонецЕсли;
	
	// Открытие документа.
	Если ИнтеграцияИСКлиентСервер.ЭтоКомандаНавигационнойСсылкиОткрытьОбъект(ОписаниеКоманды) Тогда
		
		ИмяОбъектаДляОткрытия = ИнтеграцияИСКлиентСервер.ИмяОбъектаДляОткрытияИзВнутреннегоФорматаКомандыНавигационнойСсылки(
			ОписаниеКоманды); // полное имя документа.
	
		ЧастиИмениОбъекта = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяОбъектаДляОткрытия, ".");
		
		ДокументыВЕТИС 	  = ИнтеграцияВЕТИСВызовСервера.ДокументыВЕТИСПоДокументуОснованию(ДокументОснование);
		МассивДокументов  = ДокументыВЕТИС[ЧастиИмениОбъекта[1]];
		
		Если МассивДокументов.Количество() = 1 Тогда
			ПоказатьЗначение(, МассивДокументов[0].Ссылка);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	// Открытие произвольной навигационной ссылки.
	ПерейтиПоНавигационнойСсылке(НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

Процедура ОткрытьПротоколОбменаВЕТИС(Документ, Владелец = Неопределено)
	
	ПараметрыФормы = Новый Структура("Документ", Документ);
	
	ОткрытьФорму(
		"Справочник.ВЕТИСПрисоединенныеФайлы.Форма.ФормаПротоколОбмена",
		ПараметрыФормы,
		Владелец,
		Новый УникальныйИдентификатор,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти



