#Область ПрограммныйИнтерфейс

#Область СобытияФорм

// Вызывается из одноименного обработчика события формы.
//
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры) Экспорт
	
	Возврат;

КонецПроцедуры

// Вызывается из одноименного обработчика события формы.
//
Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФорм

// Вызывается из одноименного обработчика события элемента.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Вызывается из одноименного обработчика события элемента.
//
Процедура ПриВыбореЭлемента(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Вызывается из одноименного обработчика события элемента.
//
Процедура ПриАктивизацииЯчейки(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Вызывается из одноименного обработчика события элемента.
//
Процедура ПриНачалеРедактирования(Форма, Элемент, НоваяСтрока, Копирование, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Заполняет требуемый тип надписи в прикладной форме из фиксированного списка:
//  УведомлениеОбОтгрузке
//  УведомлениеОСписании
//  <пустая строка> (надпись не требуется)
//
// Параметры:
//  Форма - УправляемаяФорма - форма для размещения надписи;
//  ТипНадписи - Строка - тип надписи связанных документов ГИСМ.
//
Процедура ПриОпределенииТипаНадписиПоФорме(Форма, ТипНадписи) Экспорт
	
	Если Форма.ИмяФормы = "Документ.РеализацияТоваров.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента" Тогда
		Если Форма.Объект.ЕстьМаркируемаяПродукцияГИСМ Тогда
			ТипНадписи = "УведомлениеОбОтгрузке";
		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "Документ.СписаниеТоваров.Форма.ФормаДокумента" Тогда
		Если Форма.Объект.ЕстьМаркируемаяПродукцияГИСМ Или Форма.Объект.ЕстьКиЗГИСМ Тогда
			ТипНадписи = "УведомлениеОСписании";
		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "Документ.ВозвратТоваровОтПокупателя.Форма.ФормаДокумента" Тогда
		Если Форма.Объект.ЕстьМаркируемаяПродукцияГИСМ И НЕ Форма.ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры Тогда
			ТипНадписи = "Маркировка";
		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаДокумента" Тогда
		Если Форма.Объект.ЕстьКиЗГИСМ Тогда
			ТипНадписи = "ЗаявкаНаВыпускКиЗГИСМ";
		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "Документ.ПоступлениеТоваров.Форма.ФормаДокумента" Тогда
		Если Форма.Объект.ЕстьКиЗГИСМ Тогда
			Если Форма.Объект.ХозяйственнаяОперация =
					ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту") Тогда
				
				ТипНадписи = "ЗакупкаПоИмпорту";
			ИначеЕсли Форма.Объект.ХозяйственнаяОперация =
					ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС") Тогда
				
				ТипНадписи = "ЗакупкаВЕАЭС";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// Выполняет действия при создании характеристики в таблице Товары.
//
// Параметры:
//  Форма - УправляемаяФорма - форма, в которой произошло событие;
//  ТекущаяСтрока - ДанныеФормыЭлементКоллекции - строка таблицы товаров;
//  Элемент - ПолеФормы - поле, в котором происходит создание характеристики;
//  СтандартнаяОбработка - Булево - признак отказа от стандартной обработки события.
//
Процедура ХарактеристикаСоздание(Форма, ТекущаяСтрока, Элемент, СтандартнаяОбработка) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

