
#Область Авторизация

#Область ИСМПТ

// Возвращает текущий ключ сессии для обмена с ИСМП.
// 
// Параметры:
// 	ПараметрыЗапроса - (См. ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии).
// 	СрокДейтвия - Дата, Неопределено - Срок действия ключа сессии.
// Возвращаемое значение:
// 	Строка, Неопределено - Действующий ключ сессии для организации.
Функция ТекущийКлючСессииИСМПТ(ПараметрыЗапроса, Знач СрокДействия = Неопределено) Экспорт
	
	Попытка
		ДанныеКлючаСессии = ПараметрыСеанса[ПараметрыЗапроса.ИмяПараметраСеанса].Получить();
	Исключение
		ДанныеКлючаСессии = Неопределено;
	КонецПопытки;
	
	// Ключ сессии еще не установлен
	Если ДанныеКлючаСессии = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СрокДействия = Неопределено Тогда
		
		Таймаут      = 60;
		СрокДействия = ТекущаяДатаСеанса() + Таймаут;
		
	КонецЕсли;
	
	Если ПараметрыЗапроса.Организация <> Неопределено Тогда
		
		ДанныеКлючаСессииДляОрганизации = ДанныеКлючаСессии.Получить(ПараметрыЗапроса.Организация);
		
		Если ДанныеКлючаСессииДляОрганизации = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		// Ключ сессии устарел
		Если ДанныеКлючаСессииДляОрганизации.ДействуетДо <= СрокДействия Тогда
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		
		Для Каждого КлючИЗначение Из ДанныеКлючаСессии Цикл
			Если КлючИЗначение.Значение.ДействуетДо > СрокДействия Тогда
				ДанныеКлючаСессииДляОрганизации = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДанныеКлючаСессииДляОрганизации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КлючСессии = ДанныеКлючаСессииДляОрганизации.КлючСессии;
	
	Возврат КлючСессии;
	
КонецФункции

// Запросить из сервиса ИС параметры авторизации.
// 
// Параметры:
// 	ПараметрыЗапроса - (См. ПараметрыЗапросаКлючаСессии) - Параметры запроса ключа сессии.
// 
// Возвращаемое значение:
// 	Структура - Описание:
// * ПараметрыАвторизации - (См. ИнтерфейсАвторизацииИСМПСлужебный.ПараметрыАвторизации). - Параметры авторизации
//                        - Неопределено - Если при получении параметров авторизации возникла ошибка.
// * ТекстОшибки          - Строка - Текст сообщения об ошибке.
Функция ЗапроситьПараметрыАвторизации(ПараметрыЗапроса) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПараметрыАвторизации", Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки", "");
	
	РезультатЗапроса = ИнтеграцияИСМПТК.ПолучитьДанныеИзСервиса(ПараметрыЗапроса.АдресЗапросаПараметровАвторизации, Неопределено, ПараметрыЗапроса);
	РезультатОтправкиЗапроса = ИнтеграцияИСМПТК.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса);
	Если РезультатОтправкиЗапроса.ОтветПолучен Тогда
		
		Если РезультатОтправкиЗапроса.КодСостояния = 200 Тогда
			
			ДанныеОтвета = ИнтеграцияИСМПТК.ТекстJSONВОбъект(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияJSON);
			Если ДанныеОтвета = Неопределено Тогда
				ВозвращаемоеЗначение.ТекстОшибки = ИнтеграцияИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(ПараметрыЗапроса.АдресЗапросаПараметровАвторизации, РезультатОтправкиЗапроса);
			Иначе
				
				ПараметрыАвторизации = ИнтерфейсИСМПТК.ПараметрыАвторизации();
				ПараметрыАвторизации.Идентификатор = ДанныеОтвета.uuid;
				ПараметрыАвторизации.Данные        = ДанныеОтвета.data;
				ВозвращаемоеЗначение.ПараметрыАвторизации = ПараметрыАвторизации;
				
			КонецЕсли;
			
		Иначе
			ВозвращаемоеЗначение.ТекстОшибки = ИнтеграцияИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(ПараметрыЗапроса.АдресЗапросаПараметровАвторизации, РезультатОтправкиЗапроса);
		КонецЕсли;
	Иначе
		ВозвращаемоеЗначение.ТекстОшибки = ИнтеграцияИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(ПараметрыЗапроса.АдресЗапросаПараметровАвторизации, РезультатОтправкиЗапроса);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Выполнить запрос ключа сессии.
// 
// Параметры:
// 	ПараметрыЗапросаПоОрганизации - Структура - Структура со свойствами:
//	* ПараметрыЗапроса
//	* ПараметрыАвторизации
//	* СвойстваПодписи
//
// Возвращаемое значение:
// 	Структура - Описание:
// * Результат   - (См. ИнтерфейсИСМПТК.ПараметрыКлючаСессии).
//               - Неопределено - При получении параметров ключа сессии произошла ошибка.
// * ТекстОшибки - Строка - Текст ошибки.
Функция ЗапроситьКлючСессииИСМПТ(ПараметрыЗапросаПоОрганизации) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПараметрыКлючаСессии", Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки", "");
	
	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("uuid", ПараметрыЗапросаПоОрганизации.ПараметрыАвторизации.Идентификатор);
	ТелоЗапроса.Вставить("data", ПараметрыЗапросаПоОрганизации.СвойстваПодписи.Подпись);
		
	РезультатЗапроса = ИнтеграцияИСМПТК.ОтправитьДанныеВСервис(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии, ТелоЗапроса, Неопределено, "POST",
															   ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса);
	
	РезультатОтправкиЗапроса = ИнтеграцияИСМПТК.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса);
	
	Если РезультатОтправкиЗапроса.ОтветПолучен Тогда
		
		Если РезультатОтправкиЗапроса.КодСостояния = 200 Тогда
			
			ДанныеОтвета = ИнтеграцияИСМПТК.ТекстJSONВОбъект(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияJSON);
			Если ДанныеОтвета = Неопределено Тогда
				ВозвращаемоеЗначение.ТекстОшибки = ИнтеграцияИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии, РезультатОтправкиЗапроса);
			Иначе
				
				ДействуетДо = ТекущаяДатаСеанса() + 900; // 15 минут
				РезультатРазбораТокена = ИнтеграцияИСМПТК.РасшифроватьТокенJWT(ДанныеОтвета.token);
				Если РезультатРазбораТокена <> Неопределено Тогда
					ДействуетДо = ОбщегоНазначенияИСМПТК.ДатаИзСтрокиUNIX(РезультатРазбораТокена.exp, 1);
				КонецЕсли;
				
				ПараметрыКлючаСессии = ИнтерфейсИСМПТК.ПараметрыКлючаСессии();
				ПараметрыКлючаСессии.КлючСессии  = ДанныеОтвета.token;
				ПараметрыКлючаСессии.ДействуетДо = ДействуетДо;
				
				ВозвращаемоеЗначение.ПараметрыКлючаСессии = ПараметрыКлючаСессии;
				
			КонецЕсли;
			
		Иначе
			ВозвращаемоеЗначение.ТекстОшибки = ИнтеграцияИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии, РезультатОтправкиЗапроса);
		КонецЕсли;
		
	Иначе
		ВозвращаемоеЗначение.ТекстОшибки = ИнтеграцияИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии,РезультатОтправкиЗапроса);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Выполняет запрос ключа сессии для организации с учетом результата подписания.
// 
// Параметры:
// 	ПараметрыЗапросовПоОрганизациям - (См. ИнтерфейсАвторизацииИСМПТКСлужебныйКлиент.РезультатПодписания).
// Возвращаемое значение:
// 	Соответствие - Результат запроса ключей сессий по организациям.
Функция ЗапроситьКлючиСессий(ПараметрыЗапросовПоОрганизациям) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие;
	
	Для Каждого ПараметрыЗапросаПоОрганизации Из ПараметрыЗапросовПоОрганизациям Цикл
		
		РезультатЗапросаКлючаСессии = ЗапроситьКлючСессииИСМПТ(ПараметрыЗапросаПоОрганизации);
		
		Если РезультатЗапросаКлючаСессии.ПараметрыКлючаСессии <> Неопределено Тогда
			
			ИнтерфейсИСМПТК.УстановитьКлючСессии(
				ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса,
				РезультатЗапросаКлючаСессии.ПараметрыКлючаСессии);
			
			// Ключ сессии обновлен
			ВозвращаемоеЗначение.Вставить(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.Организация, Истина);
			
		Иначе
			
			// Ключ сессии не обновлен
			ВозвращаемоеЗначение.Вставить(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.Организация, РезультатЗапросаКлючаСессии.ТекстОшибки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПроверитьОбновитьКлючСессииИСМПТ(ПараметрыЗапросаКлючаСессии, СрокДействия = Неопределено, ОбновлятьКлючСессииНаСервере = Ложь) Экспорт
	
	Возврат ИнтерфейсИСМПТК.ПроверитьОбновитьКлючСессииИСМПТ(ПараметрыЗапросаКлючаСессии, СрокДействия, ОбновлятьКлючСессииНаСервере);
	
КонецФункции

Функция ЗапроситьУстановитьКлючСессииИСМПТ(ПараметрыЗапросаКлючаСессии, ПараметрыАвторизации, Подпись) Экспорт 
	
	Возврат ИнтерфейсИСМПТК.ЗапроситьУстановитьКлючСессииИСМПТ(ПараметрыЗапросаКлючаСессии, ПараметрыАвторизации, Подпись);

КонецФункции

#КонецОбласти

#Область ИСЦЭДМ

// Возвращает текущий ключ сессии для обмена с ИСМП.
// 
// Параметры:
// 	ПараметрыЗапроса - (См. ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии).
// 	СрокДейтвия - Дата, Неопределено - Срок действия ключа сессии.
// Возвращаемое значение:
// 	Строка, Неопределено - Действующий ключ сессии для организации.
Функция ТекущийКлючСессииИСЦЭДМ(ПараметрыЗапроса, Знач СрокДействия = Неопределено) Экспорт
	
	Возврат ИнтерфейсИСМПТК.ТекущийКлючСессииИСЦЭДМ(ПараметрыЗапроса, СрокДействия);
	
КонецФункции

Функция ПолучитьЗаголовки()

	Headers = Новый Соответствие;
	Headers.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Возврат Headers;
	
КонецФункции

Функция JSON21C(СтрокаJSON) Экспорт
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	Структура = ПрочитатьJSON(ЧтениеJSON, Истина);	
	ЧтениеJSON.Закрыть();
	
	Возврат Структура;
	
КонецФункции

Функция ИзвлечьЗначениеКлюча(Данные, ИмяИскомогоКлюча)
	
	Для Каждого КлючЗнач Из Данные Цикл
		Если КлючЗнач.Ключ = ИмяИскомогоКлюча Тогда
			Возврат КлючЗнач.Значение;
		КонецЕсли;
	КонецЦикла;
		              
КонецФункции

Функция ПроверитьОбновитьКлючСессииИСЦЭДМ(ПараметрыЗапросаКлючаСессии, СрокДействия = Неопределено, ОбновлятьКлючСессииНаСервере = Ложь) Экспорт
	
	Возврат ИнтерфейсИСМПТК.ПроверитьОбновитьКлючСессииИСЦЭДМ(ПараметрыЗапросаКлючаСессии, СрокДействия, ОбновлятьКлючСессииНаСервере);
	
КонецФункции

Функция ПолучитьДанныеРегистраПрофильДоступаКЭДО(СписокОрганизаций = Неопределено) Экспорт
	
	Возврат ИнтеграцияИСМПТКПереопределяемый.ПолучитьДанныеРегистраПрофильДоступаКЭДО(СписокОрганизаций);
	
КонецФункции

Функция ПолучитьДанныеПрофиляДоступаКЭДО(Организация, Пользователь) Экспорт
	
	Возврат ИнтеграцияИСМПТКПовтИсп.ПолучитьДанныеПрофиляДоступаКЭДО(Организация, Пользователь);
	
КонецФункции 

#КонецОбласти

#КонецОбласти

