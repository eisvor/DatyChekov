
#Область СлужебныеПроцедурыИФункции

//СтруктураОтбора - должна содержать имя реквизита учетного документа и значение отбора.
//
Процедура ДополнитьСтруктуруОтбораПервичногоДокумента(СтруктураОтбора, ДокументИсточник, ДополнительныеПараметры = Неопределено) Экспорт
	
	//ИС МПТ
	Если ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК") Тогда 
		
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК") Тогда 
			
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") Тогда 
		
	//ИС ЦЭДМ
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.АктВнутреннегоПеремещенияИСЦЭДМ") Тогда
		
		Если ЗначениеЗаполнено(ДокументИсточник.СкладПоставщик) Тогда
			СтруктураОтбора.Вставить("СкладОтправитель", ДокументИсточник.СкладПоставщик);
		КонецЕсли;
		Если ЗначениеЗаполнено(ДокументИсточник.СкладПолучатель) Тогда
			СтруктураОтбора.Вставить("СкладПолучатель", ДокументИсточник.СкладПолучатель);
		КонецЕсли; 
		
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ") Тогда 
			
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ") Тогда 
		
	//СУЗ
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.ЗаказКодовМаркировкиСУЗИСМПТК") Тогда
		
		Если Не ДополнительныеПараметры = Неопределено Тогда
			Если ДополнительныеПараметры.ИмяДокумента = "ЗаказПоставщику" Тогда
				
				МассивВидовОперации = Новый Массив();
				МассивВидовОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеТоваров"));
				МассивВидовОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту"));
				МассивВидовОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПриемНаКомиссию"));
				
				СтруктураОтбора.Вставить("ХозяйственнаяОперация", МассивВидовОперации);
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИмяФормыВыбораСтраны() Экспорт
	
	Возврат "ОбщаяФорма.ФормаВыбораЗначенияИзСпискаИСМПТК";
	//Возврат "Справочник.СтраныМира.ФормаВыбора";
	
КонецФункции

//Определяет параметры открытия общей формы ФормаВыбораЗначенияИзСпискаИСМПТК
//
Функция ПолучитьПараметрыОткрытияФормыВыбора(ИмяФормы) Экспорт
	
	ПараметрыФормы = Новый Структура();
	
	Если ИмяФормы = "ОбщаяФорма.ФормаВыбораЗначенияИзСпискаИСМПТК" Тогда
		ПараметрыФормы.Вставить("МножественныйВыбор", 		Ложь);
		ПараметрыФормы.Вставить("ЗначениеВыбораДляЗапроса", "Справочник.СтраныМира");
		ПараметрыФормы.Вставить("ЗаголовокФормы", 			НСтр("ru = 'Выбор страны'"));
		ПараметрыФормы.Вставить("ЗаголовокКолонкиТаблицы",  НСтр("ru = 'Страна'"));
	КонецЕсли;
	
	Возврат ПараметрыФормы;
	
КонецФункции

Функция ПолучитьИмяОбщейФормыПросмотрСпискаДокументов() Экспорт
	
	Возврат "ОбщаяФорма.ПросмотрСпискаДокументов";
	
КонецФункции

#КонецОбласти

#Область ДокументыИСМПТ

#Область ВводНаОсновании

Функция ПроверитьИмяДокументаПТУ(ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "ПоступлениеТоваров" Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(ИмяДокумента) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИмяФормыДокументаИСМПТ(ДокументИсточник, ТипДокументаИСМПТ = Неопределено) Экспорт
	
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваров")	
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")	
		 Тогда
		
		Если Не ТипДокументаИСМПТ = Неопределено
			И Не ТипДокументаИСМПТ = Тип("СписокЗначений") Тогда
			
			Если ТипДокументаИСМПТ = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК") Тогда
				Возврат "Документ.АктПриемаПередачиИСМПТК.ФормаОбъекта";
			ИначеЕсли ТипДокументаИСМПТ = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК") Тогда
				Возврат "Документ.УведомлениеОВвозеИзЕАЭСИСМПТК.ФормаОбъекта";
			Иначе
		        Возврат "Документ.УведомлениеОВвозеИзТретьихСтранИСМПТК.ФормаОбъекта";
			КонецЕсли;
		КонецЕсли;
		
		Возврат "Документ.АктПриемаПередачиИСМПТК.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваров")
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Возврат "Документ.АктПриемаПередачиИСМПТК.ФормаОбъекта";

	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда

		Возврат "Документ.УведомлениеОВводеВОборотИСМПТК.ФормаОбъекта";

	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров") Тогда	

		Возврат "Документ.УведомлениеОВыводеИзОборотаИСМПТК.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда 

		Возврат "Документ.ЗаказКодовМаркировкиСУЗИСМПТК.ФормаОбъекта";
	КонецЕсли;
		
КонецФункции

#КонецОбласти

#Область ОбщегоНазначенияИСМПТ

Процедура ОбработкаОповещенияДокументыИСМПТ(Форма, ДокументСсылка, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "ВыполненаЗаписьДокумента" Тогда
		Если ТипЗнч(Параметр) = Тип("Массив")
			И Не Параметр.Количество() = 0
			И ДокументСсылка = Параметр[0] Тогда
			Форма.Прочитать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеДокумента

Процедура СоздатьДокументИСМПТПоОснованию(ДокументИсточник, ИмяКоманды = Неопределено) Экспорт
	
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваров") Тогда  
	  	
		Если ИмяКоманды = "СоздатьЭкспортЕАЭС"
			И ИнтеграцияИСМПТКПереопределяемый.ПроверитьКонтрагентаДляСхемыВзаимногоПризнанияИСМПТ(ДокументИсточник) Тогда
			
			СоздатьЭкспортЕАЭСИСМПТ(ДокументИсточник);
			
		ИначеЕсли ИмяКоманды = "СоздатьАППИсход"
			И НЕ ИнтеграцияИСМПТКПереопределяемый.КонтрагентНерезидент(ДокументИсточник) Тогда 
			
			СоздатьАППИсходящийИСМПТ(ДокументИсточник);
			
		ИначеЕсли ИмяКоманды = "СоздатьУведОВыводе"
			И НЕ ИнтеграцияИСМПТКПереопределяемый.КонтрагентНерезидент(ДокументИсточник) Тогда 
			
			СоздатьВыводИзОборотаИСМПТ(ДокументИсточник);
			
		Иначе				
			ТекстСообщения = НСтр("ru = 'Указанный контрагент не соответствует требованиям создаваемого документа ИС МПТ!'");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СоздатьАППИсходящийИСМПТ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров")
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда  
		
		СоздатьВводВОборотИСМПТ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров") Тогда 
	
		СоздатьВыводИзОборотаИСМПТ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				
		СоздатьЗаказКМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда 
		
		Если ИмяКоманды = "СоздатьВвозЕАЭС" Тогда
			СоздатьВвозЕАЭСИСМПТ(ДокументИсточник);
		ИначеЕсли ИмяКоманды = "СоздатьВвозИмпорт" Тогда
			СоздатьВвозИмпортИСМПТ(ДокументИсточник);
		Иначе
			ТекстСообщения = НСтр("ru='Для документов: %СписокДокументов% не может быть введен указанный документ ИС МПТ.'");
			СтрокаПодстановки = Символы.ПС + ДокументИсточник + Символы.ПС;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СписокДокументов%", СтрокаПодстановки); 
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
				
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.УведомлениеОбОтгрузкеЕАЭСИСМПТК") Тогда 
		
		СоздатьПриемкаЕАЭСИСМПТ(ДокументИсточник);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЗаказКМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВыводИзОборотаИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВыводеИзОборотаИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВводВОборотИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВводеВОборотИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьАППИсходящийИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.АктПриемаПередачиИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозЕАЭСИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзЕАЭСИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозИмпортИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзТретьихСтранИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьЭкспортЕАЭСИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОбЭкспортеЕАЭСИСМПТК.ФормаОбъекта", ПараметрыФормы);
		
КонецПроцедуры

Процедура СоздатьПриемкаЕАЭСИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОПриемкеЕАЭСИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

#КонецОбласти

#Область ВыборДокумента

Функция ВыбратьДокументИСМПТПоОснованию(ДокументИсточник) Экспорт
	
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваров")
		ИЛИ ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда 
		Возврат Истина;
	Иначе
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти  

#Область ДокументыИСЦЭДМ

#Область ВводНаОсновании

Функция ПолучитьИмяФормыДокументаИСЦЭДМ(ДокументИсточник, ТипДокументаИСЦЭДМ = Неопределено) Экспорт
	
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		// Для ПТУ, т.к. нет вида операции, не можем определить АПП или какой-то из Ввозов товаров ввели. 
		// Поэтому ориентируемся на связанный документ маркировки.
		Если Не ТипДокументаИСЦЭДМ = Неопределено
			И Не ТипДокументаИСЦЭДМ = Тип("СписокЗначений") Тогда
			
			Если ТипДокументаИСЦЭДМ = Тип("ДокументСсылка.АктПриемаПередачиИСЦЭДМ") Тогда
				Возврат "Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта";
			ИначеЕсли ТипДокументаИСЦЭДМ = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ") Тогда
				Возврат "Документ.УведомлениеОВвозеИзЕАЭСИСЦЭДМ.ФормаОбъекта";
			Иначе
		        Возврат "Документ.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ.ФормаОбъекта";
			КонецЕсли;
		КонецЕсли;
		
		Возврат "Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваров") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")	
        Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				
		Возврат "Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров")
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Возврат "Документ.УведомлениеОВводеВОборотИСЦЭДМ.ФормаОбъекта";

	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваров") Тогда	
		
		Возврат "Документ.УведомлениеОВыводеИзОборотаИСЦЭДМ.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПеремещениеТоваров") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
				
		Возврат "Документ.АктВнутреннегоПеремещенияИСЦЭДМ.ФормаОбъекта";
		
	КонецЕсли;
		
КонецФункции

#КонецОбласти

Процедура СоздатьДокументИСЦЭДМПоОснованию(ДокументИсточник, ИмяКоманды = Неопределено) Экспорт

	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваров") Тогда	
		
		Если ИмяКоманды = "СоздатьАППИсход" Тогда
			СоздатьАППИсходящийИСЦЭДМ(ДокументИсточник);
		ИначеЕсли ИмяКоманды = "СоздатьУведОВыводе" Тогда
			СоздатьВыводИзОборотаИСЦЭДМ(ДокументИсточник);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СоздатьАППИсходящийИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		СоздатьВводВОборотИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
				
		СоздатьВводВОборотИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров") Тогда	
	
		СоздатьВыводИзОборотаИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПеремещениеТоваров")
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда	
	
		СоздатьАктыПеремещенияИСЦЭДМ(ДокументИсточник);
	
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваров") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ") Тогда
				
		Если ИмяКоманды = "СоздатьВвозЕАЭС_ЦЭДМ" Тогда
			СоздатьВвозЕАЭСИСЦЭДМ(ДокументИсточник);
		Иначе
			СоздатьВвозИмпортИСЦЭДМ(ДокументИсточник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВыводИзОборотаИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВыводеИзОборотаИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВводВОборотИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВводеВОборотИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьАППИсходящийИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьАктыПеремещенияИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.АктВнутреннегоПеремещенияИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозЕАЭСИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзЕАЭСИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозИмпортИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

#КонецОбласти

#Область ДокументыСУЗ_БМ

Функция ПодобратьНоменклатуруВЗаказ(Форма, УникальныйИдентификатор) Экспорт
	
	Объект = Форма.Объект;
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в %Документ%'");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", Объект.Ссылка);
	Иначе
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru = 'Заказ на эмиссию кодов маркировки.'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("Дата", 	   Объект.Дата);
	ПараметрыФормы.Вставить("Валюта", 	   РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьВалютуРегламентированногоУчета());
	
	ПараметрыФормы.Вставить("РежимПодбораИспользоватьСкладыВТабличнойЧасти", Истина);
	ПараметрыФормы.Вставить("Документ", Объект.Ссылка);
	
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров", Истина);
	
	ОткрытьФорму("Обработка.ПодборТоваров.Форма", ПараметрыФормы, Форма, УникальныйИдентификатор);
		
КонецФункции

Функция ПолучитьИмяФормыПодбораНоменклатуры() Экспорт
	
	Возврат "Обработка.ПодборТоваровВДокументПродажи.Форма.Форма";
		
КонецФункции

#КонецОбласти

#Область ФормаПодбораНоменклатурыИРегистрацииновыхШК

Процедура УстановитьЗначениеХарактеристикПоУмолчанию(Форма, Элемент, ИмяТаблицы = "ШтрихкодыНоменклатуры") Экспорт
	
	ТекущиеДанные = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыНоменклатуры = ОбщегоНазначенияИСМПТКВызовСервера.ЗначенияРеквизитовОбъекта(ТекущиеДанные.Номенклатура, Новый Структура("ЕдиницаИзмерения, ВидНоменклатуры"));
	
	Если ЗначениеЗаполнено(РеквизитыНоменклатуры.ВидНоменклатуры) Тогда
		
		Если ИнтеграцияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик() Тогда //Использование хар-к в целом в базе
			
			//Использование хар-к у номенклатуры выбора
			ИспользоватьХарактеристики = ИнтеграцияИСМПТКПереопределяемый.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Номенклатура.ВидНоменклатуры, "ИспользованиеХарактеристик");
			
			Если ИспользоватьХарактеристики = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать")
				ИЛИ ИспользоватьХарактеристики = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ПустаяСсылка") Тогда
				
				ТекущиеДанные.ХарактеристикиИспользуются = Ложь;
			Иначе
				ТекущиеДанные.ХарактеристикиИспользуются = Истина;
			КонецЕсли;
			
		Иначе
			ТекущиеДанные.ХарактеристикиИспользуются = Ложь;
		КонецЕсли;
		
		Если Не ТекущиеДанные.ХарактеристикиИспользуются Тогда
			ТекущиеДанные.Характеристика = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти