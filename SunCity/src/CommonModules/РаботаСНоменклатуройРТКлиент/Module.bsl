#Область ПрограммныйИнтерфейс

#Область ФормаПоискНоменклатурыПоШтрихкоду

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриОткрытии.
Процедура ПоискНоменклатурыПоШтрихкодуПриОткрытии(Форма) Экспорт
	
	#Если Не ВебКлиент Тогда
		Сигнал();
	#КонецЕсли
	
	// Подключение сканера штрихкодов
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, Форма, "СканерШтрихкода");
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриЗакрытии.
Процедура ПоискНоменклатурыПоШтрихкодуПриЗакрытии(Форма, ЗавершениеРаботы) Экспорт
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуОбработкаОповещения.
Процедура ПоискНоменклатурыПоШтрихкодуОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ШтрихКоды) Экспорт
	
	Если Источник = "ПодключаемоеОборудование" И Форма.ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(Форма, МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении.
Процедура ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(Форма, Элемент) Экспорт
	
	ТекущиеДанные = Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		
		РеквизитыНоменклатуры = ОбщегоНазначенияРТВызовСервера.ЗначенияРеквизитовОбъекта(
			ТекущиеДанные.Номенклатура,
			Новый Структура("ЕдиницаИзмерения, ВидНоменклатуры"));
		
		Если ЗначениеЗаполнено(РеквизитыНоменклатуры.ВидНоменклатуры) Тогда
			
			ИспользоватьХарактеристики = ОбщегоНазначенияРТВызовСервера.
				ЗначениеРеквизитаОбъекта(РеквизитыНоменклатуры.ВидНоменклатуры, "ИспользоватьХарактеристики");
			
			ТекущиеДанные.ХарактеристикиИспользуются = ИспользоватьХарактеристики;
			
		КонецЕсли;
		
		ТекущиеДанные.ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
	Иначе
		ТекущиеДанные.ЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуХарактеристикаСоздание.
Процедура ПоискНоменклатурыПоШтрихкодуХарактеристикаСоздание(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	ОбработкаТабличнойЧастиТоварыКлиент.СоздатьХарактеристикуНоменклатуры(
		Форма, Элемент, СтандартнаяОбработка, Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуХарактеристикаНачалоВыбора.
Процедура ПоискНоменклатурыПоШтрихкодуХарактеристикаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(
		Форма, Элемент, СтандартнаяОбработка, Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьНоменклатуруИнтерактивно.
Процедура СоздатьНоменклатуруИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы ,,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьВидНоменклатурыИнтерактивно.
Процедура СоздатьВидНоменклатурыИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаЭлемента", 
	ПараметрыФормы, , , , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоЗначения.
Процедура ОткрытьФормуДополнительногоЗначения(ПараметрыФормы, Форма) Экспорт
	
	ИспользоватьДополнительныеРеквизитыИСведения = ОбщегоНазначенияРТВызовСервера.ФункциональнаяОпция(
													"ИспользоватьДополнительныеРеквизитыИСведения");
	Если ИспользоватьДополнительныеРеквизитыИСведения Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Владелец",     ПараметрыФормы.РеквизитСсылка);
		ЗначенияЗаполнения.Вставить("Наименование", ПараметрыФормы.Наименование);
		
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.ЗначенияСвойствОбъектов.Форма.ФормаЭлемента", ПараметрыФормы, Форма);
		
	Иначе
		Текст = НСтр("ru = 'Отключено использование дополнительных реквизитов'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоРеквизита.
Процедура ОткрытьФормуДополнительногоРеквизита(ПараметрыФормы, Владелец) Экспорт
	
	ИспользоватьДополнительныеРеквизитыИСведения = ОбщегоНазначенияРТВызовСервера.ФункциональнаяОпция(
												   "ИспользоватьДополнительныеРеквизитыИСведения");
	Если ИспользоватьДополнительныеРеквизитыИСведения Тогда
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента", ПараметрыФормы, Владелец);
	Иначе
		Текст = НСтр("ru = 'Отключено использование дополнительных реквизитов'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуНоменклатуры.
Процедура ОткрытьФормуНоменклатуры(НоменклатураСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", 
		Новый Структура("Ключ", НоменклатураСсылка), Владелец);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуВидаНоменклатуры.
Процедура ОткрытьФормуВидаНоменклатуры(ВидНоменклатурыСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаЭлемента", 
		Новый Структура("Ключ", ВидНоменклатурыСсылка), Владелец);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры.
// Открытие формы списка вида номенклатуры.
//
// Параметры:
//  ВидНоменклатурыСсылка		 - Ссылка							 - ссылка на вид номенклатуры.
//  Владелец					 - УправляемаяФорма					 - форма владелец.
//  ОписаниеОповещенияОЗакрытии	 - ОписаниеОповещения, Неопределено	 - оповещение о закрытии.
//
Процедура ОткрытьФормуСпискаВидаНоменклатуры(ВидНоменклатурыСсылка, Владелец, ОписаниеОповещенияОЗакрытии) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",       Новый Структура("Ссылка", ВидНоменклатурыСсылка));
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаСписка", 
		ПараметрыФормы, Владелец, Новый УникальныйИдентификатор,,,ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаНоменклатуры.
Процедура ОткрытьФормуСпискаНоменклатуры(НоменклатураСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка",,Владелец);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры.
Процедура ОткрытьФормуВыбораНоменклатуры(ПараметрыФормы, 
	Владелец = Неопределено,
	ОписаниеОповещенияОЗакрытии = Неопределено, 
	РежимОткрытияОкнаФормы = Неопределено) Экспорт
	
	КлючУникальности = Новый УникальныйИдентификатор;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Владелец, "УникальныйИдентификатор") Тогда
		КлючУникальности = Владелец.УникальныйИдентификатор;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбора", 
		ПараметрыФормы, Владелец, КлючУникальности,,,ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуПодбораНоменклатурыСХарактеристиками.
Процедура ОткрытьФормуПодбораНоменклатурыСХарактеристиками(Владелец = Неопределено,
	ОписаниеОповещенияОЗакрытии = Неопределено, 
	РежимОткрытияОкнаФормы = Неопределено) Экспорт
	
	ИдентификаторФормы = Новый УникальныйИдентификатор;
	Если ТипЗнч(Владелец) = Тип("ФормаКлиентскогоПриложения") Тогда
		ИдентификаторФормы = Владелец.УникальныйИдентификатор;
	КонецЕсли;
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров для выгрузки'");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", ПараметрЗаголовок);
	ПараметрыФормы.Вставить("РежимПодбораБезСертификатов", Истина);
	ПараметрыФормы.Вставить("РежимПодбораБезУслуг", Истина);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров", Истина);
	ПараметрыФормы.Вставить("РежимПодбораСУчетомАссортимента", Ложь);
	ПараметрыФормы.Вставить("РежимПодбораСУчетомЗапрещенныхКПродаже", Ложь);
	ПараметрыФормы.Вставить("ПродажиОптовые", Ложь);
	ПараметрыФормы.Вставить("РежимПодбораТоваровДляВыгрузкиНоменклатуры", Истина);
	
	ОткрытьФорму("Обработка.ПодборТоваров.Форма", ПараметрыФормы, ЭтотОбъект, ИдентификаторФормы,,, ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоказатьНезаполненныеДанныеНоменклатуры.
Процедура ПоказатьНезаполненныеДанныеНоменклатуры(НоменклатураСсылка, НезаполненныеДанные, Форма, ОписаниеОповещения) Экспорт
	
	ФормаЭлемента = ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", Новый Структура("Ключ", НоменклатураСсылка), Форма, 
		НоменклатураСсылка,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	ОчиститьСообщения();
	
	Если НезаполненныеДанные.Количество() = 1 И НезаполненныеДанные[0] = "Штрихкоды" Тогда
		ПараметрыОткрытия = Новый Структура("Отбор", Новый Структура("Номенклатура", НоменклатураСсылка));
		ФормаШтрихкоды = ОткрытьФорму("РегистрСведений.Штрихкоды.ФормаСписка", ПараметрыОткрытия,,, ФормаЭлемента.Окно,);
		ТекстСообщения = НСтр("ru = 'Номенклатура не имеет ни одного штрихкода'");
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Поле = "Список";
		СообщениеПользователю.Текст = ТекстСообщения;
		СообщениеПользователю.ИдентификаторНазначения = ФормаШтрихкоды.УникальныйИдентификатор;
		СообщениеПользователю.Сообщить();
	Иначе 
		СоответствиеЭлементовФормы = Новый Структура;
		СоответствиеЭлементовФормы.Вставить("Наименование",     "Объект.Наименование");
		СоответствиеЭлементовФормы.Вставить("ЕдиницаИзмерения", "Объект.ЕдиницаИзмерения");
		СоответствиеЭлементовФормы.Вставить("СтавкаНДС",        "Объект.СтавкаНДС");
		СоответствиеЭлементовФормы.Вставить("Артикул",          "Объект.Артикул");
		
		НетШтрихкода = Ложь;
		Для каждого Реквизит Из НезаполненныеДанные Цикл
			Если СоответствиеЭлементовФормы.Свойство(Реквизит) Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнено значение реквизита ""%1""'"), Реквизит);
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, СоответствиеЭлементовФормы[Реквизит]);
			ИначеЕсли Реквизит = "Штрихкоды" Тогда
				НетШтрихкода = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НетШтрихкода = Истина Тогда
			ТекстСообщения = НСтр("ru = 'Номенклатура не имеет ни одного штрихкода'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Поиск номенклатуры в сервисе 1С:Номенклатура по штрихкоду.
//  В случае успеха открывается карточка номенклатуры, из которой можно загрузить номенклатуру
//  в информационную базу.
//
// Параметры:
//  ШтрихКод			 - Строка	 - строка штрихкода.
//
// Возвращаемое значение:
//  Массив - идентификаторы номенклатуры.
//
Функция НайтиНоменклатуруПоШтрихкодуВСервисе(ШтрихКод) Экспорт
	
	Если Не РаботаСНоменклатуройКлиент.ДоступнаФункциональностьПодсистемы() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МодульРаботаСНоменклатуройСлужебныйВызовСервера = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСНоменклатуройСлужебныйВызовСервера");
	
	ИдентификаторыНоменклатуры 
		= МодульРаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеПоНоменклатуреПоШтрихкоду(ШтрихКод);
	
	Если Не ЗначениеЗаполнено(ИдентификаторыНоменклатуры) Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Номенклатура не найдена'"),,
			СтрШаблон(НСтр("ru = 'По штрихкоду %1 номенклатура не найдена.'"), ШтрихКод),,
			СтатусОповещенияПользователя.Информация);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ИдентификаторыНоменклатуры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьШтрихкоды(Форма, ДанныеШтрихкодов)
	
	Для Каждого ЭлементДанных Из ДанныеШтрихкодов Цикл
		
		СимволGS1 = МенеджерОборудованияМаркировкаКлиентСервер.РазделительGS1();
		Разделитель = МенеджерОборудованияМаркировкаКлиентСервер.ЭкранированныйСимволGS1();
		
		ШтрихкодПоиска = СтрЗаменить(ЭлементДанных.Штрихкод, СимволGS1, Разделитель);
		ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьШтриховойКодТовара(ШтрихкодПоиска);
		
		Если ЭтоКодМаркировки(ДанныеМаркировки) Тогда
			Если НЕ ДанныеМаркировки.EAN = Неопределено Тогда
				ШтрихкодПоиска = ДанныеМаркировки.EAN;
			КонецЕсли;
		КонецЕсли;
		
		НайденныеСтроки = Форма.ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Штрихкод", ШтрихкодПоиска));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество + ЭлементДанных.Количество;
		ИначеЕсли НЕ Форма.Элементы.ШтрихкодыНоменклатуры.ТекущаяСтрока = Неопределено Тогда
			СтрокаШтрихкода = Форма.ШтрихкодыНоменклатуры.НайтиПоИдентификатору(Форма.Элементы.ШтрихкодыНоменклатуры.ТекущаяСтрока);
			ДанныеШтрихкода = ОбщегоНазначенияРТВызовСервера.ПолучитьДанныеШтрихкода(ШтрихкодПоиска);
			Если Не ДанныеШтрихкода = Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаШтрихкода, ДанныеШтрихкода);
				ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(Форма, СтрокаШтрихкода);
			Иначе
				НовыйШтрихкод = Форма.ШтрихкодыНоменклатуры.Добавить();
				НовыйШтрихкод.Штрихкод = ШтрихкодПоиска;
				НовыйШтрихкод.Количество = ЭлементДанных.Количество;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЭтоКодМаркировки(ДанныеМаркировки)
	
	Если Не ОбщегоНазначенияРМККлиентСервер.ЕстьСвойство(ДанныеМаркировки, "ТипИдентификатораТовара") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТипИдентификатораТовара = ДанныеМаркировки.ТипИдентификатораТовара;
	
	ТипыШтрихкодовМарок = Новый СписокЗначений;
	ИмяМаркировкиМех = "Перечисление.ТипыИдентификаторовТовараККТ.ИзделияИзНатуральногоМеха";
	ИмяМаркировкиGS1 = "Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеDataMatrixGS1";
	ИмяМаркировкиВФорматеЕГАИС2 = "Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеЕГАИС2";
	ИмяМаркировкиВФорматеЕГАИС3 = "Перечисление.ТипыИдентификаторовТовараККТ.КодТовараВФорматеЕГАИС3";
	
	ТипыШтрихкодовМарок.Добавить(ПредопределенноеЗначение(ИмяМаркировкиМех));
	ТипыШтрихкодовМарок.Добавить(ПредопределенноеЗначение(ИмяМаркировкиGS1));
	ТипыШтрихкодовМарок.Добавить(ПредопределенноеЗначение(ИмяМаркировкиВФорматеЕГАИС2));
	ТипыШтрихкодовМарок.Добавить(ПредопределенноеЗначение(ИмяМаркировкиВФорматеЕГАИС3));
	
	Возврат НЕ ТипыШтрихкодовМарок.НайтиПоЗначению(ТипИдентификатораТовара) = Неопределено;
	
КонецФункции

#КонецОбласти
