#Область ПрограммныйИнтерфейс

// Возвращает признак использования расширенного режима настройки обмена.
//
// Возвращаемое значение:
//  Булево - Истина, если используется расширенный режим настройки обмена с 1С:РМК.
//
Функция ИспользоватьРасширенныйРежимНастройкиУРМК() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныйРежимНастройкиУРМК");
	
КонецФункции

// Менеджер по определяемому типу.
//
// Параметры:
//  ИмяОпределяемогоТипа - Строка - наименование определяемого типа.
// 
// Возвращаемое значение:
//  Произвольный - метаданные переданного типа.
//
Функция МетаданныеПоОпределяемомуТипу(ИмяОпределяемогоТипа) Экспорт
	
	Менеджер = Неопределено;
	
	ОпределяемыйТип = Метаданные.ОпределяемыеТипы.Найти(ИмяОпределяемогоТипа);
	Если ОпределяемыйТип <> Неопределено Тогда
	
		Тип = ОпределяемыйТип.Тип.Типы()[0];
		Менеджер = Метаданные.НайтиПоТипу(Тип);
		
	КонецЕсли;
	
	Возврат Менеджер;
	
КонецФункции

// Возвращает имена реквизитов объекта заданного типа.
//
// Параметры:
//  Ссылка - ЛюбаяСсылка - ссылка на элемент базы данных, для которого требуется получить результат функции;
//  Тип    - Тип - тип значения реквизита.
// 
// Возвращаемое значение:
//  Строка - строка реквизитов объекта метаданных конфигурации, разделенных символом ",".
//
// Пример:
//  РеквизитыОрганизации = ОбщегоНазначения.ИменаРеквизитовПоТипу(Документ.Ссылка, Тип("СправочникСсылка.Организации"));
//
Функция ИменаРеквизитовПоТипу(Ссылка, Тип) Экспорт
	
	Результат = "";
	МетаданныеОбъекта = Ссылка.Метаданные();
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.Тип.СодержитТип(Тип) Тогда
			Результат = Результат + ?(ПустаяСтрока(Результат), "", ", ") + Реквизит.Имя;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.Тип.СодержитТип(Тип) Тогда
			Результат = Результат + ?(ПустаяСтрока(Результат), "", ", ") + Реквизит.Имя;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;
КонецФункции

// Конструктор общих параметров.
//
// Возвращаемое значение:
//  Структура - структура параметров.
//
Функция СтруктураОбщихПараметров() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ТорговыйОбъект");
	Результат.Вставить("ВидЦен");
	
	Возврат Результат;
	
КонецФункции

// Формирует изображение QR-кода.
//
// Параметры: 
//   ПараметрыКартинки - Структура - см. ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода.
//   Штрихкод - Строка - Строка для кодирования.
//
// Возвращаемое значение: 
//   Структура:
//      Результат - Булево - результат генерации штрихкода.
//      ДвоичныеДанные - ДвоичныеДанные - двоичные данные изображения штрихкода.
//      Картинка - Картинка - картинка с сформированным штрихкодом или НЕОПРЕДЕЛЕНО.
//
Функция ПолучитьКартинкуQRКода(ПараметрыКартинки, Штрихкод) Экспорт
	
	ПараметрыШтрихкода = Новый Структура;
	ПараметрыШтрихкода.Вставить("Ширина",          ПараметрыКартинки.Ширина);
	ПараметрыШтрихкода.Вставить("Высота",          ПараметрыКартинки.Высота);
	ПараметрыШтрихкода.Вставить("Штрихкод",        Штрихкод);
	ПараметрыШтрихкода.Вставить("ТипКода",         16);
	ПараметрыШтрихкода.Вставить("ОтображатьТекст", Ложь);
	
	Возврат ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	
КонецФункции

// Возвращает таблицу Организаций касс ККМ.
//
// Параметры:
//  КассыККМ - ТаблицаЗначений - Таблица КассыККМ;
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица Организаций касс ккм.
//
// Пример:
//  ТаблицаОрганизации = ИнтеграцияУРМКСлужебный.ОрганизацииУРМК(ТаблицаКассыККМ);
//
Функция ОрганизацииУРМК(КассыККМ) Экспорт
	
	ПустаяСсылкаКассаККМ = Метаданные.ОпределяемыеТипы.КассаККМУРМК.Тип.ПривестиЗначение();
	ПустаяСсылкаОрганизация = Метаданные.ОпределяемыеТипы.ОрганизацияУРМК.Тип.ПривестиЗначение();
	
	ОрганизацияТипРеквизитаСтрокой = ОбщегоНазначения.СтроковоеПредставлениеТипа(ТипЗнч(ПустаяСсылкаОрганизация));
	ИмяРеквизитаОрганизация = ИнтеграцияУРМКСлужебный.ИменаРеквизитовПоТипу(ПустаяСсылкаКассаККМ, Тип(ОрганизацияТипРеквизитаСтрокой));
	
	Если Не ЗначениеЗаполнено(ИмяРеквизитаОрганизация) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	таб.КассаККМ КАК КассаККМ
		|ПОМЕСТИТЬ таб
		|ИЗ
		|	&КассыККМ КАК таб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	[Организация]
		|ИЗ
		|	таб КАК таб
		|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "[Организация]", "таб.КассаККМ." +ИмяРеквизитаОрганизация+ " КАК Организация");

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("КассыККМ", КассыККМ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция БлокировкаСнятияРасширенногоРежима() Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(УРМККассыККМ.КассаККМ) КАК Сч
		|ИЗ
		|	Справочник.УниверсальныеРабочиеМестаКассиров.КассыККМ КАК УРМККассыККМ
		|
		|СГРУППИРОВАТЬ ПО
		|	УРМККассыККМ.Ссылка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(УРМККассыККМ.КассаККМ) > 1
		|"; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти
