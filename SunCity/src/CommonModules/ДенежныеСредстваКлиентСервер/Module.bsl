
#Область СлужебныеПроцедурыИФункции

// Возвращает массив типов документов, доступных в качестве аналитики (документ расчетов)
// для хозяйственной операции.
//
// Параметры:
//   ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации;
//   ТипДокумента - Тип - Тип документа для которого необходимо вернуть массив доступных документов расчета.
//
// Возвращаемое значение: 
//   Массив типов.
//
Функция ДоступныеТипыДокументовРасчета(ХозяйственнаяОперация, ТипДокумента = Неопределено) Экспорт
	
	ДоступныеТипы = Новый Массив;
	Если ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика") Тогда
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ВозвратТоваровПоставщику"));
	ИначеЕсли ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаПоставщику") Тогда 
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ПоступлениеТоваров"));
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ОтчетКомитентуОПродажах"));
	ИначеЕсли ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента") Тогда 
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.РеализацияТоваров"));
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ЧекККМ"));
	ИначеЕсли ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту") Тогда 
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
	ИначеЕсли ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВознаграждениеОтКомитента") Тогда
		ДоступныеТипы.Добавить(Тип("ДокументСсылка.ОтчетКомитентуОПродажах"));
	КонецЕсли;
	
	// Для операций возврата ДС доступны также "зеркальные" документы оплаты.
	Если НЕ ТипДокумента = Неопределено
		И (ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика")
		ИЛИ ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту")) Тогда
		
		Если ТипДокумента = Тип("ДокументСсылка.ОплатаОтПокупателяПлатежнойКартой")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.РегистрацияБезналичнойОплаты") Тогда
			ДоступныеТипы.Добавить(ТипДокумента);
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			ДоступныеТипы.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
			ДоступныеТипы.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДоступныеТипы;
	
КонецФункции

// Возвращает массив хозяйственных операций, доступных для выбора в документе
// "Регистрация безналичной оплаты".
//
// Параметры:
//   ПараметрыПлатежа - Структура:
//     ИсходящийПлатеж - Булево;
//     Покупатель      - Булево;
//     Поставщик       - Булево;
//     Прочее          - Булево;
//
// Возвращаемое значение: 
//   Массив - Перечисление.ХозяйственныеОперации.
//
Функция ДоступныеОперацииРегистрацииБезналичнойОплаты(ПараметрыПлатежа) Экспорт
	
	ДоступныеОперации = Новый Массив;
	
	ИсходящийПлатеж = Неопределено;
	Покупатель      = Неопределено;
	Поставщик       = Неопределено;
	Прочее          = Неопределено;
	
	ПараметрыПлатежа.Свойство("ИсходящийПлатеж", ИсходящийПлатеж);
	ПараметрыПлатежа.Свойство("Покупатель",      Покупатель);
	ПараметрыПлатежа.Свойство("Поставщик",       Поставщик);
	ПараметрыПлатежа.Свойство("Прочее",          Прочее);
	
	// Добавим операции исходящего платежа.
	Если НЕ ИсходящийПлатеж = Ложь Тогда
		Если НЕ Поставщик = Ложь Тогда
			ДоступныеОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаПоставщику"));
		КонецЕсли;
		Если НЕ Покупатель = Ложь Тогда
			ДоступныеОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту"));
		КонецЕсли;
		Если НЕ Прочее = Ложь Тогда
			ДоступныеОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеРасходы"));
		КонецЕсли;
	КонецЕсли;
	
	// Добавим операции входящего платежа.
	Если НЕ ИсходящийПлатеж = Истина Тогда
		Если НЕ Покупатель = Ложь Тогда
			ДоступныеОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента"));
		КонецЕсли;
		Если НЕ Поставщик = Ложь Тогда
			ДоступныеОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика"));
		КонецЕсли;
		Если НЕ Прочее = Ложь Тогда
			ДоступныеОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеДоходы"));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДоступныеОперации;
	
КонецФункции

Функция РассчитатьПоказателиАгентскогоПлатежа(ДанныеАгентскогоДоговора, Платеж, ПлатежСАгентскимВознаграждением, АгентскоеВознаграждение = Неопределено) Экспорт
	
	ПроцентВознаграждения = ДанныеАгентскогоДоговора.ПроцентВознаграждения / 100;
	
	Если ЗначениеЗаполнено(Платеж) Тогда
		// Агентское вознаграждение не включено в сумму.
		Если ДанныеАгентскогоДоговора.ВознаграждениеВключеноВСтоимость Тогда
			ПлатежСАгентскимВознаграждением = Окр(Платеж / (1 - ПроцентВознаграждения), 2);
		Иначе
			ПлатежСАгентскимВознаграждением = Платеж + Окр(Платеж * ПроцентВознаграждения, 2);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ПлатежСАгентскимВознаграждением) Тогда
		// Агентское вознаграждение уже включено в сумму.
		Если ДанныеАгентскогоДоговора.ВознаграждениеВключеноВСтоимость Тогда
			Платеж = ПлатежСАгентскимВознаграждением - Окр(ПлатежСАгентскимВознаграждением * ПроцентВознаграждения, 2);
		Иначе
			Платеж = Окр(ПлатежСАгентскимВознаграждением / (1 + ПроцентВознаграждения), 2);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ АгентскоеВознаграждение = Неопределено Тогда
		АгентскоеВознаграждение = ПлатежСАгентскимВознаграждением - Платеж;
	КонецЕсли;
	
КонецФункции

#КонецОбласти