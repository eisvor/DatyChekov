
#Область ПрограммныйИнтерфейс

#Область ПроверкаКонтрагентовВДокументах

// Определение вида документа.
//
// Параметры:
//  Форма								 - ФормаКлиентскогоПриложения - Форма документа, для которого необходимо получить описание.
//	Результат							 - Структура - Описывает вид документа. Ключи:
//  		"КонтрагентНаходитсяВШапке"			 	- Булево - Признак того, есть у документа контрагент в шапке
//  		"КонтрагентНаходитсяВТабличнойЧасти"	- Булево - Признак того, есть у документа контрагенты в табличных частях
//  		"СчетФактураНаходитсяВПодвале"		 	- Булево - Признак того, есть у документа счет-фактура в подвале
//  		"ЯвляетсяСчетомФактурой"				- Булево - Признак того, является ли сам документ счетом-фактурой.
//
Процедура ОпределитьВидДокумента(Форма, Результат) Экспорт
	
	ТипИсточника = ТипЗнч(Форма);
	
	// Определение типа источника
	Если ТипИсточника = Тип("УправляемаяФорма") Тогда
		ДокументСсылка = Форма.Объект.Ссылка;
		ТипСсылки = ТипЗнч(ДокументСсылка);
	ИначеЕсли ТипИсточника = Тип("ДокументСсылка.РеализацияТоваров")
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ПоступлениеТоваров") 
		ИЛИ ТипИсточника = Тип("ДокументСсылка.СчетФактураВыданный") 
		ИЛИ ТипИсточника = Тип("ДокументСсылка.СчетФактураПолученный") 
		Тогда
		ТипСсылки = ТипИсточника;
	КонецЕсли;
	
	// Определение вида по типу источника.
	Если ТипСсылки = Тип("ДокументСсылка.РеализацияТоваров") 
		ИЛИ ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		ИЛИ ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		ИЛИ ТипСсылки = Тип("ДокументСсылка.ПоступлениеТоваров") 
		Тогда
		
		Результат.Вставить("КонтрагентНаходитсяВШапке", Истина);
		
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.СчетФактураВыданный") 
		ИЛИ ТипСсылки = Тип("ДокументСсылка.СчетФактураПолученный")
		Тогда
		
		Результат.Вставить("ЯвляетсяСчетомФактурой", Истина);
		
	КонецЕсли;
КонецПроцедуры

// Получение счета-фактуры, находящегося в подвале документа-основания, чья форма передана в качестве
//             параметра.
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения - Форма документа-основания, для которой необходимо получить счет-фактуру.
//  СчетФактура	 - ДокументСсылка - Счет-фактура, полученная для данного документа-основания.
//
Процедура ПолучитьСчетФактуру(Форма, СчетФактура) Экспорт
	
	ТипИсточника = ТипЗнч(Форма);
	
	// Определение типа источника
	Если ТипИсточника = Тип("УправляемаяФорма") Тогда
		ДокументСсылка = Форма.Объект.Ссылка;
		ТипСсылки = ТипЗнч(ДокументСсылка);
	ИначеЕсли ТипИсточника = Тип("ДокументСсылка.РеализацияТоваров")
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		ТипСсылки = ТипИсточника;
		ДокументСсылка = ТипИсточника
	КонецЕсли;
	
	Если ТипСсылки = Тип("ДокументСсылка.РеализацияТоваров") 
		ИЛИ ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		СчетФактура = ПродажиВызовСервера.СчетФактураДокумента(ДокументСсылка);
	ИначеЕсли ТипСсылки = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		ИЛИ ТипСсылки = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		СчетФактура = ЗакупкиВызовСервера.СчетФактураДокумента(ДокументСсылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедуры

// Получение объекта (ДанныеФормыСтруктура) и ссылки(ДокументСсылка, СправочникСсылка) документа или
// справочника,  в котором выполняется проверка контрагента, по форме.
// Обязательна к заполнению.
//
// Параметры:
//	Форма     - ФормаКлиентскогоПриложения - Форма документа или справочника, в котором выполняется проверка контрагента.
//	Результат - Структура - Объект и Ссылка, полученные по форме документа.
//		Ключи: "Объект" (Тип ДанныеФормыСтруктура) и "Ссылка" (Тип ДокументСсылка, СправочникСсылка).
//
Процедура ПриОпределенииОбъектаИСсылкиПоФорме(Форма, Результат) Экспорт
	
	ИсточникОбъект = Форма.Объект;
	ИсточникСсылка = ИсточникОбъект.Ссылка; 
	
	Результат.Вставить("Объект", ИсточникОбъект); 
	Результат.Вставить("Ссылка", ИсточникСсылка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
