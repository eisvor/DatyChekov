#Область ПрограммныйИнтерфейс

// Определяет соответствие переданного документа типу "ПриобретениеТоваровУслуг".
//
// Параметры:
// 	Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа.
//
Функция ЭтоДокументПоступления(Контекст) Экспорт
	
	ЭтоПриобретение = Ложь;
	ТипКонтекста    = ТипЗнч(Контекст);
	
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, "Документ.ПоступлениеТоваров") Тогда
			ЭтоПриобретение = Истина;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда 
		ЭтоПриобретение = Истина;
	ИначеЕсли ТипКонтекста = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда 
		ЭтоПриобретение = Истина;
	КонецЕсли;
	
	Возврат ЭтоПриобретение;
	
КонецФункции

// Определяет соответствие проверяемому типу документа.
//
// Параметры:
// 	Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа.
//
Функция ЭтоЧекККМ(Контекст) Экспорт
	
	ЭтоЧек       = Ложь;
	ТипКонтекста = ТипЗнч(Контекст);
	
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, "Документ.ЧекККМ") Тогда
			ЭтоЧек = Истина;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = Тип("ДокументСсылка.ЧекККМ") Тогда 
		ЭтоЧек = Истина;
	КонецЕсли;
	
	Возврат ЭтоЧек;
	
КонецФункции

Функция ЭтоФормаРМК(Контекст) Экспорт
	
	ЭтоРМК       = Ложь;
	ТипКонтекста = ТипЗнч(Контекст);
	
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, "Обработка.РМКУправляемыйРежим.Форма.Форма") Тогда
			ЭтоРМК = Истина;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = Тип("ДанныеФормыСтруктура") Тогда 
		ЭтоРМК = Истина;
	КонецЕсли;
	
	Возврат ЭтоРМК;
	
КонецФункции

// Определяет соответствие переданного документа проверяемому типу.
//
// Параметры:
// 	Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа.
// 	Имя      - Строка - имя объекта метаданного документа.
//
Функция ЭтоДокументПоНаименованию(Контекст, Имя) Экспорт
	
	Результат = Ложь;
	ТипКонтекста = ТипЗнч(Контекст);
	ТипДокумента = Тип(СтрШаблон("ДокументСсылка.%1",Имя));
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, СтрШаблон("Документ.%1",Имя)) Тогда
			Результат = Истина;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = ТипДокумента Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область Серии

//Подготовливает структуру, массив которых в дальнейшем будет передан в процедуру генерации серий.
//   Дополняется необходимыми полями, специфичными конкретному виду продукции.
//
//Параметры:
//   ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции генерации серии
//Возвращаемое значение:
//   Структура - источник данных генерации серий с обязательными полями:
//    * Номенклатура - ОпределяемыйТип.Номенклатура - Номенклатура, для которой будет генерироваться серия.
//    * Серия        - ОпределяемыйТип.СерииНоменклатуры   - В данное значение будет записана сгенерированная серия.
//    * ЕстьОшибка   - Булево - Будет установлено в Истина, если по каким то причинам серия сгенерирована не будет.
//    * ТекстОшибки  - Строка - причина, по которой серия не генерировалась.
Функция СтруктураДанныхДляГенерацииСерии(ВидМаркируемойПродукции) Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Номенклатура", Неопределено);
	СтруктураДанных.Вставить("Серия",        Неопределено);
	СтруктураДанных.Вставить("ЕстьОшибка",   Ложь);
	СтруктураДанных.Вставить("ТекстОшибки",  "");
	
	ДополнитьДанныеДляГенерацииСерииПоВидуПродукции(СтруктураДанных, ВидМаркируемойПродукции);
	
	Возврат СтруктураДанных;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Серии

Процедура ДополнитьДанныеДляГенерацииСерииПоВидуПродукции(СтруктураДанных, ВидМаркируемойПродукции)

	Если ВидМаркируемойПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Табак") Тогда
		СтруктураДанных.Вставить("МРЦ", 0);
	ИначеЕсли ВидМаркируемойПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС") Тогда
		СтруктураДанных.Вставить("ГоденДо", '00010101');
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
