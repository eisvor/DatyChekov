
#Область ФормаВводаКодаМаркировки

Функция ПредставлениеНоменклатурыФорматированнойСтрокой(Номенклатура) Экспорт
	
	Возврат ПолучитьНавигационнуюСсылку(Номенклатура);
			
КонецФункции

#КонецОбласти

#Область Штрихкодирование

#Область НормализацияКодаМаркировки

#Область Табак

// Проверяет код маркировки на соответствие шаблону табачной пачки
//
// Параметры:
//   КодМаркировки - Строка - Код маркировки.
//   GTIN          - Строка - GTIN [Возвращаемое значение].
//Возвращаемое значение:
//   Булево - Истина, если код соответствует табачной пачке.
Функция ЭтоКодМаркировкиТабачнойПачки(КодМаркировки, EAN = Неопределено, МРЦ = Неопределено) Экспорт

	ДлинаКодаМаркировки = СтрДлина(КодМаркировки);
	
	Если ДлинаКодаМаркировки  <> 29
		И ДлинаКодаМаркировки <> 25
		И ДлинаКодаМаркировки <> 21 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	EAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоКодуМаркировки(КодМаркировки);
	Если EAN = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Алфавит = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.АлфавитКодаМаркировки();
	Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(КодМаркировки, Алфавит) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ДлинаКодаМаркировки > 21 Тогда
		МРЦ = МРЦКодаМаркировкиТабачнойПачки(КодМаркировки);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

//Проверяет код маркировки на соответствие шаблону блока табачных пачек
//
// Параметры:
//   КодМаркировки - Строка - Код маркировки.
//   GTIN          - Строка - GTIN [Исходящий].
//   МРЦ           - Число  - МРЦ [Исходящий].
//   СерийныйНомер - Строка - Серийный номер [Исходящий].
//Возвращаемое значение:
//   Булево - Истина, если код соответствует блоку табачных пачек.
//
Функция ЭтоКодМаркировкиБлока(КодМаркировки, EAN = Неопределено, МРЦ = Неопределено, СерийныйНомер = Неопределено) Экспорт
	
	Если РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.НайденНедопустимыйСимволXML(КодМаркировки) > 0 Тогда
		КодМаркировки = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ЗаменитьНедопустимыеСимволыXML(КодМаркировки, "");
	КонецЕсли;
	
	Если Не СтрНачинаетсяС(СокрЛП(КодМаркировки), "(") Тогда
		
		ЭтоКМ25 = (СтрДлина(КодМаркировки) = 25);
		ЭтоКМ35 = (СтрДлина(КодМаркировки) = 35);
		ЭтоКМ46 = (СтрДлина(КодМаркировки) = 46);
		
		Если ЭтоКМ25 Или ЭтоКМ35 Или ЭтоКМ46 Тогда
			
			Алфавит = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.АлфавитКодаМаркировки();
			
			ИдентификаторПрименения = Сред(КодМаркировки, 1, 2);
			Если ИдентификаторПрименения <> "01" Тогда
				Возврат Ложь;
			КонецЕсли;
			
			// "01" + 14 знаков GTIN
			ЗначениеEAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоКодуМаркировки(Сред(КодМаркировки, 3, 14));
			Если ЗначениеEAN = Неопределено Тогда
				Возврат Ложь;
			КонецЕсли;
			
			ИдентификаторПрименения = Сред(КодМаркировки, 17, 2);
			Если ИдентификаторПрименения <> "21" Тогда
				Возврат Ложь;
			КонецЕсли;
			
			// "21" + 7 знаков Серийный номер
			ЗначениеСерийныйНомер = Сред(КодМаркировки, 19, 7);
			Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(ЗначениеСерийныйНомер, Алфавит) Тогда
				Возврат Ложь;
			КонецЕсли;
			
			Если ЭтоКМ35 Тогда
				
				ИдентификаторПрименения = Сред(КодМаркировки, 26, 2);
				Если ИдентификаторПрименения <> "93" Тогда
					Возврат Ложь;
				КонецЕсли;
				
				// "93" + 8 Код проверки
				Криптохвост = Сред(КодМаркировки, 28, 8);
				Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Криптохвост, Алфавит) Тогда
					Возврат Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЭтоКМ46 Тогда
				
				ИдентификаторПрименения = Сред(КодМаркировки, 26, 2);
				Если ИдентификаторПрименения <> "93" Тогда
					Возврат Ложь;
				КонецЕсли;
				
				// "93" + 8 знаков Код проверки
				ЗначениеКодТНВЭД = Сред(КодМаркировки, 28, 8);
				Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(ЗначениеСерийныйНомер, Алфавит) Тогда
					Возврат Ложь;
				КонецЕсли;
				
				
				ИдентификаторПрименения = Сред(КодМаркировки, 36, 3);
				Если ИдентификаторПрименения <> "240" Тогда
					Возврат Ложь;
				КонецЕсли;
				
				// "240" + 8 знаков КодТНВЭД
				ЗначениеКодТНВЭД = Сред(КодМаркировки, 39, 8);
				Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(ЗначениеСерийныйНомер, Алфавит) Тогда
					Возврат Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			EAN           = ЗначениеEAN;
			СерийныйНомер = ЗначениеСерийныйНомер;
			
			Возврат Истина;
			
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	Иначе
		
		РезультатРазбора = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.РазобратьСтрокуШтрихкодаGS1(КодМаркировки);
		
		Если Не РезультатРазбора.Разобран Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Обязательный элемент кода маркировки блока.
		Идентификатор01 = РезультатРазбора.ДанныеШтрихкода["01"];
		Если Идентификатор01 = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ЗначениеEAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоКодуМаркировки(Идентификатор01.Значение);
		Если ЗначениеEAN = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Алфавит = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.АлфавитКодаМаркировки();
		
		// Обязательный элемент кода маркировки блока.
		Идентификатор21 = РезультатРазбора.ДанныеШтрихкода["21"];
		Если Идентификатор21 = Неопределено
				Или СтрДлина(Идентификатор21.Значение) <> 7
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор21.Значение, Алфавит) Тогда // Серийный номер
			Возврат Ложь;
		КонецЕсли;
		
		// Необязательный элемент кода маркировки блока.
		Идентификатор93 = РезультатРазбора.ДанныеШтрихкода["93"];
		Если Идентификатор93 <> Неопределено Тогда
			
			Если СтрДлина(Идентификатор93.Значение) <> 8
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор93.Значение, Алфавит) Тогда // Код проверки
				Возврат Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		// Необязательный элемент кода маркировки блока.
		Идентификатор8005 = РезультатРазбора.ДанныеШтрихкода["8005"];
		Если Идентификатор8005 <> Неопределено Тогда // МРЦ
			
			Если СтрДлина(Идентификатор8005.Значение) <> 6
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор8005.Значение, АлфавитМРЦ()) Тогда
				Возврат Ложь;
			КонецЕсли;
			
			МРЦ = Число(Идентификатор8005.Значение) / 100;
			
		КонецЕсли;
		
		EAN           = ЗначениеEAN;
		СерийныйНомер = Идентификатор21.Значение;
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

Функция МРЦКодаМаркировкиТабачнойПачки(КодМаркировки) Экспорт
	
	ДлинаКода = СтрДлина(КодМаркировки);
	
	Если ДлинаКода < 25 Тогда
		// МРЦ может быть рассчитано только для кодов длиной 29 и 25 знаков.
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокаМРЦ = Сред(КодМаркировки, 22, 4);
	
	Алфавит = АлфавитМРЦ();
	
	МРЦ    = 0;
	Индекс = 1;
	Пока Индекс <= 4 Цикл
		
		Символ = Сред(СтрокаМРЦ, Индекс, 1);
		ИндексСимвола = СтрНайти(Алфавит, Символ) - 1;
		Если ИндексСимвола < 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		МРЦ = МРЦ + Pow(80, 4 - Индекс) * ИндексСимвола;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	// Если цена <= 5000 и нет копеек, то высокая вероятность, что это реальное МРЦ.
	Если МРЦ <= 500000
		И МРЦ%100 = 0 Тогда
		Возврат МРЦ / 100;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ВсеОстальное

Функция ЭтоКодМаркировкиПотребительскойУпаковки(КодМаркировки, EAN = Неопределено, СерийныйНомер = Неопределено, КодТНВЭД = Неопределено) Экспорт
	
	Алфавит = ДопустимыеСимволыВКодеМаркировки();
	
	Если Не СтрНачинаетсяС(СокрЛП(КодМаркировки), "(") Тогда
		
		ЭтоКМ38 = (СтрДлина(КодМаркировки) = 38);
		ЭтоКМ32 = (СтрДлина(КодМаркировки) = 31);
		
		Если ЭтоКМ38 Или ЭтоКМ32 Тогда
			
			ОсновнойАлфавит = "0123456789";
			
			ИдентификаторПрименения = Сред(КодМаркировки, 1, 2);
			Если ИдентификаторПрименения <> "01" Тогда
				Возврат Ложь;
			КонецЕсли;
			
			// "01" + 14 знаков GTIN
			ЗначениеEAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоКодуМаркировки(Сред(КодМаркировки, 3, 14));
			Если ЗначениеEAN = Неопределено Тогда
				Возврат Ложь;
			КонецЕсли;
			
			ИдентификаторПрименения = Сред(КодМаркировки, 17, 2);
			Если ИдентификаторПрименения <> "21" Тогда
				Возврат Ложь;
			КонецЕсли;
			
			// "21" + 13 знаков Серийный номер
			ЗначениеСерийныйНомер = Сред(КодМаркировки, 19, 13);
			Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(ЗначениеСерийныйНомер, РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.АлфавитКодаМаркировки()) Тогда
				Возврат Ложь;
			КонецЕсли;
			
			Если ЭтоКМ38 Тогда
				
				ИдентификаторПрименения = Сред(КодМаркировки, 32, 3);
				Если ИдентификаторПрименения <> "240" Тогда
					Возврат Ложь;
				КонецЕсли;
				
				ЗначениеКодТНВЭД = Сред(КодМаркировки, 35, 4);
				
				// "240" + 4 знака Код ТН ВЭД
				Если Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(ЗначениеКодТНВЭД, ОсновнойАлфавит) Тогда
					Возврат Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			EAN           = ЗначениеEAN;
			СерийныйНомер = ЗначениеСерийныйНомер;
			КодТНВЭД      = ЗначениеКодТНВЭД;
			
			Возврат Истина;
			
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	Иначе
		
		РезультатРазбора = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.РазобратьСтрокуШтрихкодаGS1(КодМаркировки);
		
		Если Не РезультатРазбора.Разобран Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Обязательный элемент кода маркировки.
		Идентификатор01 = РезультатРазбора.ДанныеШтрихкода["01"];
		Если Идентификатор01 = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ЗначениеEAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоКодуМаркировки(Идентификатор01.Значение);
		Если ЗначениеEAN = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		// Обязательный элемент кода маркировки.
		Идентификатор21 = РезультатРазбора.ДанныеШтрихкода["21"];
		Если Идентификатор21 = Неопределено
				Или СтрДлина(Идентификатор21.Значение) <> 13
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор21.Значение, РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.АлфавитКодаМаркировки()) Тогда // Серийный номер
			Возврат Ложь;
		КонецЕсли;
		
		// Необязательный элемент кода маркировки.
		Идентификатор240 = РезультатРазбора.ДанныеШтрихкода["240"];
		Если Идентификатор240 <> Неопределено Тогда // Ключ проверки
			
			Если СтрДлина(Идентификатор240.Значение) <> 4
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор240.Значение, "0123456789") Тогда // Код ТН ВЭД
				Возврат Ложь;
			КонецЕсли;
			
			ЗначениеКодТНВЭД = Идентификатор240.Значение;
			
		КонецЕсли;
		
		// Необязательный элемент кода маркировки.
		Идентификатор91 = РезультатРазбора.ДанныеШтрихкода["91"];
		Если Идентификатор91 <> Неопределено Тогда // Ключ проверки
			
			Если СтрДлина(Идентификатор91.Значение) <> 4
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор91.Значение, Алфавит.БуквыЦифрыЗнаки) Тогда
				Возврат Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		// Необязательный элемент кода маркировки.
		Идентификатор92 = РезультатРазбора.ДанныеШтрихкода["92"];
		Если Идентификатор92 <> Неопределено Тогда // Подпись
			
			Если (СтрДлина(Идентификатор92.Значение) <> 88
				И СтрДлина(Идентификатор92.Значение) <> 44)
				Или Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КодСоответствуетАлфавиту(Идентификатор92.Значение, РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.АлфавитКодаМаркировки()) Тогда
				Возврат Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
		EAN           = ЗначениеEAN;
		СерийныйНомер = Идентификатор21.Значение;
		КодТНВЭД      = ЗначениеКодТНВЭД;
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

Функция ЭтоКодЛогистическойУпаковки(КодМаркировки, ЗначениеSSCC = Неопределено) Экспорт
	
	ЭтоGTIN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ПроверитьКорректностьGTIN(КодМаркировки);
	Если ЭтоGTIN Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(КодМаркировки) = 18
		И РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КонтрольноеЧислоSSCC(Сред(КодМаркировки, 1, СтрДлина(КодМаркировки) - 1)) = Число(Прав(КодМаркировки, 1)) Тогда
		ЗначениеSSCC = КодМаркировки;
	КонецЕсли;
	
	Если ЗначениеSSCC = Неопределено Тогда
		
		РезультатРазбора = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.РазобратьСтрокуШтрихкодаGS1(КодМаркировки);
		Если Не РезультатРазбора.Разобран Тогда // Проверка на штрихкод GS1.
			
			Если СтрДлина(КодМаркировки) = 18
				И РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.КонтрольноеЧислоSSCC(Сред(КодМаркировки, 1, СтрДлина(КодМаркировки) - 1)) = Число(Прав(КодМаркировки, 1)) Тогда
				ЗначениеSSCC = КодМаркировки;
			Иначе
				Возврат Ложь;
			КонецЕсли;
			
		Иначе
			
			Если РезультатРазбора.ДанныеШтрихкода.Количество() > 1 Тогда
				Возврат Ложь;
			КонецЕсли;
			
			ДанныеШтрихкода00 = РезультатРазбора.ДанныеШтрихкода.Получить("00");
			Если ДанныеШтрихкода00 <> Неопределено Тогда
				ЗначениеSSCC = ДанныеШтрихкода00.Значение;
			Иначе
				Возврат Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИфункции

Функция ДопустимВидПродукции(ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если ПараметрыСканирования = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат ПараметрыСканирования.ДопустимыеВидыПродукции.Найти(ВидПродукции) <> Неопределено;
	
КонецФункции

Функция АлфавитМРЦ()
	
	Возврат "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!""%&'*+-./_,:;=<>?";
	
КонецФункции

Функция ДопустимыеСимволыВКодеМаркировки() Экспорт
	
	Алфавит = Новый Структура;
	Алфавит.Вставить("БуквыЦифры",         "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
	Алфавит.Вставить("БуквыЦифрыЗнаки",    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!”""%&’'()*+,-./_:;=<>?");
	Алфавит.Вставить("БуквыЦифрыЗнакиМРЦ", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!""%&'*+-./_,:;=<>?");
	Алфавит.Вставить("Цифры",              "0123456789");
	
	Возврат Алфавит;
	
КонецФункции

Процедура ДополнитьСтруктуруДействиямиНДСИСМПТК(СтруктураДействий, ВестиУчетМаркировки) Экспорт 
	
	Если ВестиУчетМаркировки Тогда
		СтруктураДействий.Вставить("ЗаполнитьФлагНДСПоСтрочно");
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполнитьКлючСвязи(ТабличнаяЧасть, СтрокаТабличнойЧасти, ИмяРеквизитаСвязи, ВремКлючСвязи = 0) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти[ИмяРеквизитаСвязи]) Тогда
		Если ВремКлючСвязи = 0 Тогда
			Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
				Если ВремКлючСвязи < СтрокаТЧ[ИмяРеквизитаСвязи] Тогда
					ВремКлючСвязи = СтрокаТЧ[ИмяРеквизитаСвязи];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		СтрокаТабличнойЧасти[ИмяРеквизитаСвязи] = ВремКлючСвязи + 1;
	КонецЕсли;
	
	Возврат СтрокаТабличнойЧасти[ИмяРеквизитаСвязи];
	
КонецФункции

#КонецОбласти

#Область РозничныеПродажи

Функция ПодготовитьПредставлениеКодаМаркировкиДляРозницы(КодМаркировки) Экспорт
	
	СтруктураКодаМаркировки = Новый Структура("Штрихкод, ФорматBase64", КодМаркировки, Истина);
	ДанныеРазбораКМ = РозничноеВыбытиеИСМПТКВызовСервера.ПолучитьКодыМаркировкиПриРозничнойПродаже(СтруктураКодаМаркировки);
	
	Если Не ДанныеРазбораКМ = Неопределено 
		И Не ТипЗнч(ДанныеРазбораКМ) = Тип("Строка") Тогда 
		Возврат ДанныеРазбораКМ.КодИдентификации;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти