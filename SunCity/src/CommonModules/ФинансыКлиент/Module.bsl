////////////////////////////////////////////////////////////////////////////////
// ФинансыКлиент содержит процедуры и функции для работы 
// с финансами и обработки действий пользователя с финансами.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Пересчитывает сумму в шапке документа, если она отличается от сумм в табличной части.
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - Текущий документ.
//  Формы - УправляемаяФорма - форма родитель.
//  Отказ - Булево - признак отказа от проведения операции.
//  ПараметрыЗаписи - Структура - структура параметров записи.
//
Процедура ПересчетСуммыДокументаПоРасшифровкеПлатежа(Объект, Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	Если Объект.РасшифровкаПлатежа.Количество() > 0
		И Объект.СуммаДокумента <> Объект.РасшифровкаПлатежа.Итог("Сумма") Тогда
		
		Отказ = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Объект", Объект);
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ПараметрыЗаписи", ПараметрыЗаписи);
		
		ТекстВопроса = НСтр("ru = 'Сумма по строкам в табличной части не равна сумме документа, пересчитать сумму документа?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеПересчетСуммыДокумента", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

// Оповещение процедуры ПересчетСуммыДокументаПоРасшифровкеПлатежа.
//
// Параметры:
//  КодОтвета - КодВозвратаДиалога - ответ на диалог.
//  ДополнительныеПараметры - Структура - структура дополнительных параметров выполнения операции.
//
Процедура ОповещениеПересчетСуммыДокумента(КодОтвета, ДополнительныеПараметры) Экспорт
	
	Объект = ДополнительныеПараметры.Объект;
	ПараметрыЗаписи = ДополнительныеПараметры.ПараметрыЗаписи;
	Форма = ДополнительныеПараметры.Форма;
	
	Если КодОтвета = КодВозвратаДиалога.Да Тогда
		Объект.СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("Сумма");
	КонецЕсли;
	
	Форма.Модифицированность = Ложь;
	Форма.Записать(ПараметрыЗаписи);
	
КонецПроцедуры

// Пересчитывает сумму в строке табличной части "Расшифровка платежа" при изменении суммы в шапке документа.
//
// Параметры:
//	Объект - ДанныеФормыСтруктура - Текущий документ.
//	СуммаДокумента - Число - Сумма документа.
//
Процедура ПересчетСуммыВСтрокеРасшифровкиПлатежа(Объект, СуммаДокумента) Экспорт
	
	Если Объект.РасшифровкаПлатежа.Количество() = 1 Тогда
		
		СтрокаТаблицы = Объект.РасшифровкаПлатежа[0];
		СтрокаТаблицы.Сумма = СуммаДокумента;
		
	КонецЕсли;
	
КонецПроцедуры // ПересчетСуммыВСтрокеРасшифровкиПлатежа()

// Проверяет возможность печати чека на фискальном регистраторе.
//
// Параметры:
//  ОбработчикОповещения - ОписаниеОповещения - оповещение, выполняемое в случае успешной проверки.
//  Форма - УправляемаяФорма - Форма документа.
//
Процедура ПроверитьВозможностьПечатиЧека(ОбработчикОповещения, Форма) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОбработчикОповещения", ОбработчикОповещения);
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ПроверитьМодифицированнсть(ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьМодифицированнсть(ДополнительныеПараметры)
	
	Форма  = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если Форма.Модифицированность
		ИЛИ НЕ (Объект.Проведен И ЗначениеЗаполнено(Объект.Ссылка)) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаМодифицированность", ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = НСтр("ru='Перед пробитием чека будет выполнено проведение документа. Продолжить?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ПроверитьРасчетныеДокументы(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗакрытияВопросаМодифицированность(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Попытка
			Если Форма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
				ПроверитьРасчетныеДокументы(ДополнительныеПараметры);
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки());
			ПоказатьПредупреждение(,НСтр("ru = 'Не удалось выполнить проведение документа'"));
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьРасчетныеДокументы(ДополнительныеПараметры)
	
	ОбработчикОповещения = ДополнительныеПараметры.ОбработчикОповещения;
	Форма                = ДополнительныеПараметры.Форма;
	Объект               = Форма.Объект;
	
	ТипыПлатежныхДокументов = Новый Массив;
	ТипыПлатежныхДокументов.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
	ТипыПлатежныхДокументов.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	ТипыПлатежныхДокументов.Добавить(Тип("ДокументСсылка.РегистрацияБезналичнойОплаты"));
	ТипыПлатежныхДокументов.Добавить(Тип("ДокументСсылка.ОплатаОтПокупателяПлатежнойКартой"));
	
	ПлатежныеДокументы = Новый Массив;
	ДокументыВозврата = Новый Массив;
	
	Если НЕ ТипыПлатежныхДокументов.Найти(ТипЗнч(Объект.Ссылка)) = Неопределено Тогда
		Для Каждого СтрокаРасшифровки Из Объект.РасшифровкаПлатежа Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаРасшифровки.ДокументРасчетовСКонтрагентом) Тогда
				Продолжить;
			КонецЕсли;
			
			ТипДокументаРасчетов = ТипЗнч(СтрокаРасшифровки.ДокументРасчетовСКонтрагентом);
			
			Если НЕ ТипыПлатежныхДокументов.Найти(ТипДокументаРасчетов) = Неопределено Тогда
				ПлатежныеДокументы.Добавить(СтрокаРасшифровки.ДокументРасчетовСКонтрагентом);
			ИначеЕсли ТипДокументаРасчетов = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
				ДокументыВозврата.Добавить(СтрокаРасшифровки.ДокументРасчетовСКонтрагентом);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПлатежныеДокументы.Количество() > 0
		И ДенежныеСредстваВызовСервера.ПрисутствуютРасчетыЗаНоменклатурныеПозиции(ПлатежныеДокументы)
		ИЛИ ДокументыВозврата.Количество() > 0
		И ДенежныеСредстваВызовСервера.ПрисутствуютРасчетыЗаВозвратБезМарки(ДокументыВозврата, Объект.Дата) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаРасчетныеДокументы", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru = 'Возможно некорректное формирование фискальных данных. Продолжить печать чека?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработчикОповещения, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗакрытияВопросаРасчетныеДокументы(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработчикОповещения, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти