
#Область ПрограммныйИнтерфейс

#Область Локализация

Процедура ПриОпределенииМенеджераОбъектаПоПолномуИмени(МенеджерОбъекта, ПолноеИмя) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ПриОпределенииМенеджераОбъектаПоСсылке(МенеджерОбъекта, Ссылка) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОрганизацииИКонтрагенты

// Требуется определить массив ссылок служебных организаций, исключаемых из списков выбора в библиотеке.
// 
// Параметры:
//  СписокОрганизаций - Массив из ОпределяемыйТип.Организация - переопределяемый параметр, массив организаций, исключаемых из списков.
Процедура ПриОпределенииСпискаОрганизацийНедоступныхДляВыбора(СписокОрганизаций) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Проверяет использование подразделений в информационной базе.
// 
// Параметры:
//  Использовать - Булево - Подразделения используются (исходящий).
//
Процедура ИспользованиеПодразделений(Использовать) Экспорт
	
	
КонецПроцедуры

// Определяет использование в инофрмационной базе обособленных подразделений выделенных на отдельный баланс
// 
// Параметры:
//  Использовать - Булево - Используются подразделения, выделенных на обособленный баланс
//
Процедура ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс(Использовать) Экспорт
	
	
КонецПроцедуры

// В процедуре нужно реализовать заполнение структуры данными ИНН/КПП из информационной базы.
//
// Параметры:
//  Сведения    - Структура - структура с реквизитами организации/контрагента, которые требуется заполнить,
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС, ОпределяемыйТип.КонтрагентГосИС - ссылка на 
//                                                                                              собственную организацию или контрагента
//  ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на торговый объект для определения КПП.
Процедура ЗаполнитьИННКПППоОрганизацииКонтрагенту(Сведения, Организация, ТорговыйОбъект = Неопределено) Экспорт
	
	ИнтеграцияИСРТ.ЗаполнитьИННКПППоОрганизацииКонтрагенту(Сведения, Организация, ТорговыйОбъект);
	
КонецПроцедуры

// Работа с регистром "ОписаниеНоменклатурыИС" при использовании значений описания номенклатуры отличных от напрямую
//   записанных в регистре:
//   * Модифицирует соединение с регистром если в качестве источника описания может использоваться не номенклатура,
//   * Получает значение служебного реквизита "Произвольная единица учета" (для номенклатуры единица учета отличается от
//     маркированной потребительской упаковки),
//   * Получает значение служебного реквизита "Требует взвешивания" (маркированные потребительские упаковки имеют
//     индивидуальный вес).
//
// Параметры:
//  ТекстЗапроса           - Строка - текст запроса с регистром "ОписаниеНоменклатурыИС" (исходящий),
//  ПутьКРегистру          - Строка - имя таблицы регистра "ОписаниеНоменклатурыИС" в запросе,
//  ПутьКПолюНоменклатура  - Строка - путь к номенклатуре в запросе
//  ПутьКИсточникуОписания - Строка - путь к источнику описания
Процедура ОбновитьТекстЗапросаСРегистромОписаниеНоменклатурыИС(ТекстЗапроса, ПутьКРегистру, ПутьКПолюНоменклатура, ПутьКИсточникуОписания) Экспорт
	
	// Соединение с регистром
	ИмяПоляЗамены = "&ТоварыОписаниеНоменклатурыИС";
	ТекстЗамены = СтрШаблон("%2.Номенклатура = %1", ПутьКПолюНоменклатура, ПутьКРегистру);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПоляЗамены, ТекстЗамены);
	// Получение признака Произвольная единица учета
	ИмяПоляЗамены = "&ПроизвольнаяЕдиницаУчета";
	ТекстЗамены = СтрШаблон("ЕСТЬNULL(%1.КоличествоВПотребительскойУпаковке, 1) <> 1
	|	ИЛИ ЕСТЬNULL(%1.ЕмкостьПотребительскойУпаковки, 1) > 1
	|	ИЛИ (%1.Номенклатура ЕСТЬ NULL
	|		И %2.ОсобенностьУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезалкогольноеПиво),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС))
	|		И %2.Весовой)
	|", ПутьКРегистру, ПутьКПолюНоменклатура);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПоляЗамены, ТекстЗамены);
	// Получение признака Требует взвешивания
	ИмяПоляЗамены = "&ТребуетВзвешивания";
	ТекстЗамены = СтрШаблон("ЕСТЬNULL(%1.КоличествоВПотребительскойУпаковке, 1) = 0
	|	ИЛИ (%1.Номенклатура ЕСТЬ NULL
	|		И %2.ОсобенностьУчета В (
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезалкогольноеПиво),
	|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС))
	|		И %2.Весовой)
	|", ПутьКРегистру, ПутьКПолюНоменклатура);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПоляЗамены, ТекстЗамены);
	
	// Серии изделий из натурального меха.
	ИмяПоляЗамены = "ШтрихкодыУпаковок.Серия";
	ТекстЗамены = "Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПоляЗамены, ТекстЗамены);
	
КонецПроцедуры

// Работа с регистром "ОписаниеНоменклатурыИС" при использовании значений описания номенклатуры отличных от напрямую
//   записанных в регистре, а также при использовании режима "ВариантыИспользованияЕдиницыХраненияИС.ЗаданУпаковками":
//   * Дополняет входящий текст запроса.
//
// Параметры:
//  ТекстЗапроса - Строка - Текст запроса получения описания номенклатуры ИС.
Процедура ДополнитьТекстЗапросаОписанияНоменклатуры(ТекстЗапроса) Экспорт
	
	// Дополняем:
	// 1. Получение реквизита "Вариант частичного выбытия" из явного указания субпотребительской упаковки
	// 2. Получение реквизита "ЕмкостьПотребительскойУпаковки" в зависимости от указания упаковок
	// 3. Изменение значения по-умолчанию для продукции с мерным типом измеряемой величины единицы хранения
	// 4. Не для алкоголя и немаркируемой продукции
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОписаниеНоменклатурыИС.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.ЗаданУпаковками)
		|				И ОписаниеНоменклатурыИС.ПотребительскаяУпаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|				И ОписаниеНоменклатурыИС.УпаковкаЧастичногоВыбытия <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ОписаниеНоменклатурыИС.ЕмкостьПотребительскойУпаковки
		|		КОГДА ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.ЗаданУпаковками)
		|			ТОГДА 0
		|		ИНАЧЕ ОписаниеНоменклатурыИС.ЕмкостьПотребительскойУпаковки
		|	КОНЕЦ                               КАК ЕмкостьПотребительскойУпаковки,
		|	ОписаниеНоменклатурыИС.КоличествоВПотребительскойУпаковке  КАК КоличествоВПотребительскойУпаковке,
		|	ВЫБОР
		|		КОГДА ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.ЗаданУпаковками)
		|			ТОГДА ОписаниеНоменклатурыИС.ВариантЧастичногоВыбытия
		|		КОГДА ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.ЧастьПотребительскойУпаковки)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ТекущаяНоменклатура)
		|		КОГДА ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.ГрупповаяЛогистическаяУпаковка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ПустаяСсылка)
		|		КОГДА ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.ПотребительскаяУпаковка)
		|			ТОГДА ОписаниеНоменклатурыИС.ВариантЧастичногоВыбытия
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ПустаяСсылка)
		|	КОНЕЦ                                                      КАК ВариантЧастичногоВыбытия,
		|	ОписаниеНоменклатурыИС.ВариантИспользованияЕдиницыХранения КАК ВариантИспользованияЕдиницыХранения,
		|	ОписаниеНоменклатурыИС.ПотребительскаяУпаковка             КАК ПотребительскаяУпаковка,
		|	ОписаниеНоменклатурыИС.УпаковкаЧастичногоВыбытия           КАК УпаковкаЧастичногоВыбытия
		|ИЗ
		|	РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
		|ГДЕ
		|	ОписаниеНоменклатурыИС.Номенклатура В (&Номенклатура)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СправочникНоменклатура.Ссылка,
		|	Неопределено,
		|	ВЫБОР
		|		КОГДА СправочникНоменклатура.ОсобенностьУчета В (
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезалкогольноеПиво),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС))
		|		И СправочникНоменклатура.Весовой
		|			ТОГДА 0
		|		ИНАЧЕ Неопределено
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СправочникНоменклатура.ОсобенностьУчета <> ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Духи)
		|			И СправочникНоменклатура.ОсобенностьУчета <> ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АльтернативныйТабак)
		|			И СправочникНоменклатура.ОсобенностьУчета <> ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
		|		ТОГДА ЗНАЧЕНИЕ (Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ПустаяСсылка)
		|		ИНАЧЕ Неопределено
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СправочникНоменклатура.ОсобенностьУчета В (
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезалкогольноеПиво),
		|			ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС))
		|		И СправочникНоменклатура.Весовой
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияЕдиницыХраненияИС.МернаяПродукцияТребуетУказанияЗначения)
		|		ИНАЧЕ Неопределено
		|	КОНЕЦ,
		|	Неопределено,
		|	Неопределено
		|ИЗ Справочник.Номенклатура КАК СправочникНоменклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
		|	ПО ОписаниеНоменклатурыИС.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	СправочникНоменклатура.Ссылка В (&Номенклатура)
		|	И ОписаниеНоменклатурыИС.Номенклатура ЕСТЬ NULL
		|";
	
КонецПроцедуры

// Работа с регистром "ОписаниеНоменклатурыИС" при использовании источника описания номенклатуры отличного от ссылки 
//   на номенклатуру:
//   * Дополняет входящий массив классами номенклатуры,
//   * Возвращает соответствие добавленных классов и исходной номенклатуры.
//
// Параметры:
//  Номенклатура - Массив Из ОпределяемыйТип.ИсточникОписанияноменклатурыИС - Источник описания номенклатуры.
//  СоответстиеИсточникаНоменклатуре - Соответствие из КлючИЗначение - описание добавленных классов номенклатуры:
//   * Ключ - ОпределяемыйТип.ИсточникОписанияНоменклатурыИС - Источник описания номенклатуры,
//   * Значение - Массив Из ОпределяемыйТип.Номенклатура - номенклатура из входящего массива
Процедура ДополнитьИсточникиОписанияНоменклатуры(Номенклатура, СоответстиеИсточникаНоменклатуре) Экспорт
	
	Возврат;
	
КонецПроцедуры

// В процедуре нужно реализовать поиск организации предприятия по ИНН и/или КПП.
//
// Параметры:
//  Организация - ОпределяемыйТип.ОрганизацияКонтрагентГосИС - найденная организация (исходящий),
//              - Неопределено - организация не найдена (исходящий),
//  ИНН - Строка - ИНН искомой организации,
//  КПП - Строка - КПП искомой организации.
//
Процедура ЗаполнитьОрганизациюПоИННКПП(Организация, ИНН, КПП) Экспорт
	
	ИнтеграцияИСРТ.ЗаполнитьОрганизациюПоИННКПП(Организация, ИНН, КПП);
	
КонецПроцедуры

// В процедуре необходимо реализовать проверку возможности выбора серии для номенклатуры.
// 
// Параметры:
//  ДанныеДляРасчетаСерии  - Структура - Данные для расчета серий.
//  ПараметрыУказанияСерий - Структура - Параметры указания серий.
//  ТребуетсяВыбор         - Булево - исходящий, признак необходимости выбора серии.
//  СерияДолжнаБытьУказана - Булево - исходящий, признак обязательного заполнения серии.
//  КэшированныеЗначения   - Произвольный - кэшированные значения
//
Процедура ПриОпределенииНеобходимостиВыбораСерии(ДанныеДляРасчетаСерии, ПараметрыУказанияСерий, ТребуетсяВыбор, СерияДолжнаБытьУказана, КэшированныеЗначения = Неопределено) Экспорт
	
	Возврат;
	
КонецПроцедуры

// В процедуре требуется определить наличие маркируемых товаров для которых нет стандартной фабричной упаковки
//   (настраиваемых не в регистре ОписаниеноменклатурыИС).
//
// Параметры:
//  Использование - Булево - Признак использования произвольных единиц учета (исходящий).
//
Процедура ИспользованиеПродукцииТребующейВзвешивания(Использование) Экспорт
	
	Запрос = Новый Запрос;
	
	ОсобенностьУчета = Новый Массив;
	Для Каждого ВидПродукции Из ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции() Цикл
		ОсобенностьУчета.Добавить(ИнтеграцияИСРТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ВидПродукции));
	КонецЦикла;
	Запрос.УстановитьПараметр("ОсобенностьУчета", ОсобенностьУчета);
	
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
		|		ПО (ОписаниеНоменклатурыИС.Номенклатура = СправочникНоменклатура.Ссылка)
		|ГДЕ
		|	СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
		|	И (СправочникНоменклатура.Весовой
		|			ИЛИ ЕСТЬNULL(ОписаниеНоменклатурыИС.КоличествоВПотребительскойУпаковке, 1) = 0)";
	
	Использование = Не Запрос.Выполнить().Пустой();
	
КонецПроцедуры

// Для БРМК. Определяет коды маркировки на оборудовании розлива по переданной таблице товаров.
// Необходимо заполнить выходной параметр КегиНаОборудованииРозлива
// 
// Параметры:
//  ВскрытыеПотребительскиеУпаковки - ТаблицаЗначений - Коды маркировки подключенные к оборудованию розлива:
//  * Номенклатура - ОпределяемыйТип.Номенклатура - номенклатура кода маркировки кега
//  * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика кода маркировки кега
//  * Серия - ОпределяемыйТип.СерияНоменклатуры - серия кода маркировки кега
//  * ИндексИсходнойСтроки - Число - Служебный, в переопределении можно не заполнять
//  * УчитыватьСерии - Булево - учитвать серии исходной таблицы товаров
//  * ВариантЧастичногоВыбытия - ПеречислениеСсылка.ВариантыУчетаЧастичногоВыбытияИС - настройка частичного выбытия номенклатуры
//  * КодМаркировки - ОпределяемыйТип.ШтрихкодУпаковкиИС - код маркировки кега
//  * Комментарий - ОпределяемыйТип.ОборудованиеРозливаИСМП - описание оборудования, к которому подключен кег см. РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС
//  * КодМаркировкиСтрокой - Строка - представление кода маркировки см. РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС
//  * ПолныйКодМаркировки - Строка - полный код маркировки кега Base64 см. РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС
//  ТаблицаТовары - см. РегистрыСведений.ВскрытыеПотребительскиеУпаковкиИС.НоваяТаблицаПоискаВскрытыхПотребительскихУпаковок
//  ПараметрыСканирования - см. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования
//  ТолькоПолноеСоответствие - Булево - Искать без учета подменной номенклатуры
Процедура ПриОпределенииВскрытыхПотребительскихУпаковок(ВскрытыеПотребительскиеУпаковки, ТаблицаТовары, ПараметрыСканирования, ТолькоПолноеСоответствие) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти
