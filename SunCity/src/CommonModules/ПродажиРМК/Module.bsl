
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает значение системы налогообложения организации на указанную дату.
//
//  Параметры:
//   Организация - СправочникСсылка.Организации - организация для которой нужно определить СНО.
//   Дата - Дата, Неопределено - дата на которую нужно определить тип СНО.
//  
// Возвращаемое значение:
//  СистемыНалогообложенияККТ - ОпределяемыйТип.ТипыСистемНалогообложенияККТРМК - значение СНО.
//
Функция ТипСистемыНалогообложенияККТ(Организация, Дата = Неопределено) Экспорт
	
	СНОККТ = Неопределено;
	ОбщегоНазначенияРМКПереопределяемый.ОпределитьСНОККТДляОрганизации(Организация, Дата, СНОККТ);
	
	Возврат СНОККТ;
	
КонецФункции

// Подготавливает массив для передачи в алкогольных данных в ЕГАИС
//
// Параметры:
//  ПодготовленнаяСтрока - СтрокаТабличнойЧасти - строка с данными.
//
// Возвращаемое значение:
//  Массив
//
Функция ПараметрыАлкогольнойПродукции(ПодготовленнаяСтрока) Экспорт
	
	ПараметрыАлкогольнойПродукции = Новый Массив;
	Если ПодготовленнаяСтрока.АлкогольнаяПродукция Тогда
		
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.Маркируемый);      // 1 - Признак передаваемой акцизной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.КодАкцизнойМарки); // 2 - Штрихкод марки алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(10 * ПодготовленнаяСтрока.ОбъемДАЛ);    // 3 - Объем алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.Крепость);         // 4 - Крепость алкогольной продукции
		ПараметрыАлкогольнойПродукции.Добавить(ПодготовленнаяСтрока.КодВидаПродукции); // 5 - КодВидаПродукции - код вида продукции по классификатору
		
	КонецЕсли;
	
	Возврат ПараметрыАлкогольнойПродукции;
	
КонецФункции // ПараметрыАлкогольнойПродукции()

// Проверяет наличие в таблице товаров алкогольной продукция ЕГАИС по реквизиту НеобходимостьВводаКодаМаркировки
//
// Параметры:
//  ЧекККМ - ОпределяемыйТип.ЧекККМРМК
//
// Возвращаемое значение:
//  ЕстьПродукцияЕГАИС - Булево
//
Функция ЕстьПродукцияЕГАИС(ЧекККМ) Экспорт
	
	Результат = Ложь;
	ОбщегоНазначенияРМКПереопределяемый.ПроверитьНаличиеПродукцииЕГАИСВЧекККМ(ЧекККМ, Результат);
	
	Возврат Результат;
	
КонецФункции

// Функция получает реквизиты кассы.
//
// Параметры:
//  КассаККМ - ОпределяемыйТип.КассыККМРМК - Ссылка на кассу ККМ.
//  РабочееМесто - ОпределяемыйТип.РабочееМестоРМК, Неопределено - (необязательный) ссылка на рабочее место.
//
// Возвращаемое значение:
//  Структура - параметры кассы ккм.
//
Функция РеквизитыКассыККМ(КассаККМ, РабочееМесто = Неопределено) Экспорт
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Организация");
	Реквизиты.Вставить("ТорговыйОбъект");
	Реквизиты.Вставить("РабочееМесто");
	Реквизиты.Вставить("КассаККМ");
	
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьРеквизитыКассыККМ(КассаККМ, РабочееМесто, Реквизиты);
	
	Возврат Реквизиты;
	
КонецФункции

// Определяет актуальную ставку НДС для товара по данным СНО
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - данные текущего объекта.
//  ТекущаяСтрока - СтрокаТабличнойЧасти - текущая строка.
//  СистемаНалогообложенияПоУмолчанию - ОпределяемыйТип.ТипыСистемНалогообложенияККТРМК - СНО по умолчанию в РМК.
//
// Возвращаемое значение:
//  АктуальнаяСтавкаНДС - ОпределяемыйТип.СтавкаНДСРМК.
//
Функция АктуальнаяСтавкаНДСДляТовара(Объект, ТекущаяСтрока, СистемаНалогообложенияПоУмолчанию = Неопределено) Экспорт
	
	СтавкаНДС = ТекущаяСтрока.СтавкаНДС;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьСтавкуНДС(Объект,
			ТекущаяСтрока,
			СистемаНалогообложенияПоУмолчанию,
			СтавкаНДС);
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

// Структура строки таблицы товаров, аналогичная строке ТЧ Товары.
//
// Параметры:
//  ТекущийВыбор - Структура - основные данные товара для формирования.
//  ДополнительныеИсходящиеДанные - Структура - дополнительные данные, связанные с получаемым товаром,
//												но не относящиеся к добавляемой строке товара непосредственно.
//
// Возвращаемое значение:
//  Структура - содержит все колонки строки таблицы товаров.
//
Функция СтрокаТовара(Знач ТекущийВыбор, ДополнительныеИсходящиеДанные = Неопределено) Экспорт
	
	МассивТоваров = Новый Массив;
	МассивТоваров.Добавить(ТекущийВыбор.Номенклатура);
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьТаблицуТовары(МассивТоваров, ТаблицаТовары,
		ДополнительныеИсходящиеДанные);
	ЭтотОбъект = ТекущийВыбор.РеквизитыФормыРМК;
	СтруктураСтрокиТовара = ЭтотОбъект.ПустаяСтрокаТаблицыТоваров;
	
	Типы = Новый Массив;
	Типы.Добавить(ТипЗнч(СтруктураСтрокиТовара.Партия));
	ОписаниеТипаПартия = Новый ОписаниеТипов(Типы);
	
	Типы = Новый Массив;
	Типы.Добавить(ТипЗнч(СтруктураСтрокиТовара.Серия));
	ОписаниеТипаСерия = Новый ОписаниеТипов(Типы);
	
	Типы = Новый Массив;
	Типы.Добавить(ТипЗнч(СтруктураСтрокиТовара.Упаковка));
	ОписаниеТипаУпаковка = Новый ОписаниеТипов(Типы);
	
	СтруктураДополнительная = Новый Структура;
	
	Для Каждого КолонкаТаблицы Из ТаблицаТовары.Колонки Цикл
		СтруктураДополнительная.Вставить(КолонкаТаблицы.Имя);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(СтруктураДополнительная, ТаблицаТовары[0]);
	СтруктураДополнительная.Вставить("Номенклатура", ТекущийВыбор.Номенклатура);
	
	Для Каждого Элемент Из СтруктураДополнительная Цикл
		СтруктураСтрокиТовара.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Для Каждого Элемент Из ТекущийВыбор Цикл
		СтруктураСтрокиТовара.Вставить(Элемент.Ключ, Элемент.Значение); 
	КонецЦикла;
	
	Объект = ЭтотОбъект.Объект;
	
	ОсновнаяОрганизация = ЭтотОбъект.ОсновнаяОрганизация;
	МассивОрганизаций = ЭтотОбъект.МассивОрганизаций;
	ОтображатьОстаток = ЭтотОбъект.ОтображатьОстаток;
	ИспользоватьВыборСкладаПриПродаже = ЭтотОбъект.ИспользоватьВыборСкладаПриПродаже;
	
	НоваяСтрока = СтруктураСтрокиТовара;
	
	Если НЕ ИспользоватьВыборСкладаПриПродаже Тогда
		НоваяСтрока.ТорговыйОбъект = Объект.ТорговыйОбъект;
	КонецЕсли;
	
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьОрганизациюПродажи(НоваяСтрока, ЭтотОбъект);
	Если НЕ ЗначениеЗаполнено(НоваяСтрока.Организация) Тогда
		НоваяСтрока.Организация = ОсновнаяОрганизация;
	Иначе
		НоваяСтрока.ОплатаНедоступна = МассивОрганизаций.Найти(НоваяСтрока.Организация) = Неопределено;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НоваяСтрока.СистемаНалогообложения) Тогда
		НоваяСтрока.СистемаНалогообложения = ОбщегоНазначенияРМК.СНОККТДляОрганизации(ЭтотОбъект, НоваяСтрока);
	КонецЕсли;
	
	ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьВозможностьОплатыЭС(НоваяСтрока, ЭтотОбъект);
	
	СтавкаНДС = ПродажиРМК.АктуальнаяСтавкаНДСДляТовара(Объект, НоваяСтрока, НоваяСтрока.СистемаНалогообложения);
	НоваяСтрока.СтавкаНДС = СтавкаНДС;
	
	ОбщегоНазначенияРМКПереопределяемый.СкорректироватьЦенуПодарочногоСертификата(ЭтотОбъект, НоваяСтрока);
	ШтрихкодированиеРМК.ЗаполнитьПредставлениеЕдиницыИзмерения(НоваяСтрока);
	ОбщегоНазначенияРМКПереопределяемый.ПереопределитьПараметрыЗаполненияСерийИПартий(НоваяСтрока, ЭтотОбъект);
	ДополнитьСтрокуТовараВычисляемымиДанными(НоваяСтрока, Объект, ОтображатьОстаток);
	
	ПартияВТаблице = ОписаниеТипаПартия.ПривестиЗначение(СтруктураСтрокиТовара.Партия);
	СтруктураСтрокиТовара.Партия = ПартияВТаблице;
	
	СерияВТаблице = ОписаниеТипаСерия.ПривестиЗначение(СтруктураСтрокиТовара.Серия);
	СтруктураСтрокиТовара.Серия = СерияВТаблице;
	
	УпаковкаВТаблице = ОписаниеТипаУпаковка.ПривестиЗначение(СтруктураСтрокиТовара.Упаковка);
	СтруктураСтрокиТовара.Упаковка = УпаковкаВТаблице;
	
	СтруктураСтрокиТовара.Удалить("РеквизитыФормыРМК");
	
	СтруктураСтрокиТовара.Вставить("СтрокаТовараПолученаИзКэша", Ложь);
	СтруктураСтрокиТовара.Вставить("ДобавлятьСтрокуВКэшСтрок", Истина);
	
	Возврат СтруктураСтрокиТовара;
	
КонецФункции

// Добавляет на форму РМК (чека ККМ, чека на возврат) реквизиты ГосИС
//
// Параметры:
//   Форма - УправляемаяФорма - ФормаДокументаРМК
//
Процедура МодифицироватьИнициализироватьФормуРМК(Форма) Экспорт
	
	Если ИнициализацияФормыВыполнена(Форма, Ложь) Тогда
		ИнициализироватьФормуРМК(Форма);
		Возврат;
	КонецЕсли;
	
	ЕстьЕГАИС = Форма.КэшДанныхГОСИС.Свойство("ИнтеграцияЕГАИС");
	ЕстьИСМП  = Форма.КэшДанныхГОСИС.Свойство("ИнтеграцияИСМП");
	
	ИмяТабличнойЧасти = "Товары";
	Форма.КэшДанныхГОСИС.Вставить("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
	
#Область Реквизиты
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Реквизит = Новый РеквизитФормы("АдресСоответствияАкцизныхМарок", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("КодМаркировкиДляУточнения", Новый ОписаниеТипов);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("ДанныеДляУточненияСведенийПользователя", Новый ОписаниеТипов);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("ИспользоватьАкцизныеМарки", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("ТребуетсяПересчетМарокПослеУдаленияСтрок", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("ДанныеВыбораПоМаркируемойПродукции", Новый ОписаниеТипов);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("СохраненВыборПоМаркируемойПродукции", Новый ОписаниеТипов("Булево"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("КоличествоВБазовыхЕдиницахГосИС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)),
		"Объект." + ИмяТабличнойЧасти, НСтр("ru = 'Количество в базовых единицах ГосИС'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("КоэффициентЕдиницыИзмеренияГосИС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,3)),
		"Объект." + ИмяТабличнойЧасти, НСтр("ru = 'Коэффициент единицы измерения ГосИС'"));
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	Реквизит = Новый РеквизитФормы("ПараметрыСканирования", Новый ОписаниеТипов);
	ДобавляемыеРеквизиты.Добавить(Реквизит);
	
	Если ЕстьЕГАИС Тогда
		
		Колонка = Новый РеквизитФормы("СопоставлениеАлкогольнаяПродукция", Новый ОписаниеТипов("Строка"), "Объект.Товары");
		ДобавляемыеРеквизиты.Добавить(Колонка);
		
	КонецЕсли;
	
	Если ЕстьИСМП Тогда
		Реквизит = Новый РеквизитФормы("КонтролироватьСтатусыКодовМаркировкиВРознице", Новый ОписаниеТипов("Булево"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ОбщегоНазначенияРМКПереопределяемый.ДобавитьРеквизитыПроверкиСредствамиККТ(Форма, ДобавляемыеРеквизиты);
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьСтрокуТовараВычисляемымиДанными(СтрокаТовара, Объект, ОтображатьОстаток)
	Если Не СтрокаТовара = Неопределено Тогда
		СтрокаТовара.ЭтоТабачнаяПродукция = ЭтоТабачнаяПродукция(СтрокаТовара.ОсобенностьУчета);
		СтрокаТовара.ЭтоАлкогольнаяПродукция = ЭтоАлкогольнаяПродукция(СтрокаТовара.ОсобенностьУчета);
		СтрокаТовара.ЭтоПодарочныйСертификат = ЭтоПодарочныйСертификат(СтрокаТовара.ТипНоменклатуры);
		СтрокаТовара.ЭтоПивнаяПродукция = ЭтоПивнаяПродукция(СтрокаТовара.ОсобенностьУчета);
		ОбщегоНазначенияРМККлиентСервер.УстановитьНомерКартинкиСтрокиТовара(СтрокаТовара);
		Если ОтображатьОстаток Тогда
			ОбщегоНазначенияРМКПереопределяемый.ЗаполнитьКолонкуОстаток(СтрокаТовара, Объект.ТорговыйОбъект);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ЭтоТабачнаяПродукция(ОсобенностьУчета)
	
	Возврат ОбщегоНазначенияРМК.ЭтоАльтернативныйТабак(ОсобенностьУчета)
		Или ОбщегоНазначенияРМК.ЭтоТабачнаяПродукция(ОсобенностьУчета);
		
КонецФункции

Функция ЭтоАлкогольнаяПродукция(ОсобенностьУчета)
	
	Возврат ОбщегоНазначенияРМК.ЭтоАлкогольнаяПродукция(ОсобенностьУчета);
		
КонецФункции

Функция ЭтоПивнаяПродукция(ОсобенностьУчета)
	
	Возврат ОбщегоНазначенияРМККлиентСервер.ЭтоПивнаяПродукция(ОсобенностьУчета);
	
КонецФункции

Функция ЭтоПодарочныйСертификат(ТипНоменклатуры)
	
	Возврат ОбщегоНазначенияРМК.ЭтоТипНоменклатурыПодарочныйСертификат(ТипНоменклатуры);
		
КонецФункции

Функция ИнициализацияФормыВыполнена(Форма, СтандартнаяОбработка = Истина)
	
	Если Форма.КэшДанныхГОСИС = Неопределено Тогда
		Форма.КэшДанныхГОСИС = Новый Структура;
	КонецЕсли;
	
	ИнициализацияВыполнена = Форма.КэшДанныхГОСИС.Свойство("Инициализация");
	
	Если НЕ ИнициализацияВыполнена Тогда
		Форма.КэшДанныхГОСИС.Вставить("Инициализация");
		Если СтандартнаяОбработка Тогда
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС")<>Неопределено Тогда
				Форма.КэшДанныхГОСИС.Вставить("ИнтеграцияЕГАИС");
			КонецЕсли;
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП")<>Неопределено Тогда
				Форма.КэшДанныхГОСИС.Вставить("ИнтеграцияИСМП");
			КонецЕсли;
		Иначе
			Если ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
				Форма.КэшДанныхГОСИС.Вставить("ИнтеграцияЕГАИС");
			КонецЕсли;
			Если ОбщегоНазначенияРМК.ВестиУчетМаркируемойПродукции() Тогда
				Форма.КэшДанныхГОСИС.Вставить("ИнтеграцияИСМП");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ИнициализацияВыполнена;
	
КонецФункции

Процедура ИнициализироватьФормуРМК(Форма)
	
	Если Форма.КэшДанныхГОСИС.Свойство("ИнтеграцияИСМП") Тогда
		Форма.КонтролироватьСтатусыКодовМаркировкиВРознице = Истина; //ИнтеграцияИСМПКлиентСерверПовтИсп.КонтролироватьСтатусыКодовМаркировкиВРознице();
		Форма.ИспользоватьАкцизныеМарки = Истина;
	КонецЕсли;
	
	Если Форма.КэшДанныхГОСИС.Свойство("ИнтеграцияЕГАИС") Тогда
		Форма.ИспользоватьАкцизныеМарки = Истина;
	КонецЕсли;
	
	//СлужебныеРеквизиты = Новый Структура("МаркируемаяПродукция, ВидПродукцииИС, КоэффициентЕдиницыИзмеренияГосИС, КоличествоВБазовыхЕдиницахГосИС");
	//ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, Форма.Объект.Запасы, СлужебныеРеквизиты);
	
	//ПроверкаИПодборПродукцииИС.ЗаполнитьКешШтрихкодовУпаковок(Форма, НастройкиИсточникаКешаЧека(), Истина);
	//ПроверкаИПодборПродукцииИС.ПрименитьКешШтрихкодовУпаковок(Форма, НастройкиИсточникаКешаЧека());
	//ШтрихкодированиеИС.ОбновитьКэшМаркируемойПродукции(Форма);
	
КонецПроцедуры

#КонецОбласти

