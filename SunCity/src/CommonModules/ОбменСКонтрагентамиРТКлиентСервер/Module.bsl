#Область ПрограммныйИнтерфейс

// Возвращает представление номенклатуры контрагента.
//
// Параметры:
//  НоменклатураКонтрагента - Структура - номенклатура контрагента. См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураКонтрагента
//
// Возвращаемое значение:
//  Строка - представление номенклатуры контрагента.
//
Функция ПредставлениеНоменклатурыКонтрагента(НоменклатураКонтрагента) Экспорт
	
	Представление = НоменклатураКонтрагента.Наименование;
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.Характеристика) Тогда
		Представление = Представление + ", " + НоменклатураКонтрагента.Характеристика;
	КонецЕсли;
	Если ЗначениеЗаполнено(НоменклатураКонтрагента.ЕдиницаИзмерения) Тогда
		Представление = Представление + ", " + НоменклатураКонтрагента.ЕдиницаИзмерения;
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

// Получает наименование организации без организационно-правовой Формы.
//
// Параметры:
//  Наименование - Строка - полное или сокращенное наименование организации.
//  ЮрФизЛицо - ПеречислениеСсылка.ЮрФизЛицо - вид лица.
//
// Возвращаемое значение:
//  Структура - части наименования организации.
//     * Наименование - Строка - наименование организации без организационно-правовой Формы.
//     * ОрганизационноПравоваяФорма - Строка - организационно-правовая форма предприятия.
//     * ОрганизационноПравоваяФормаСокращенно - Строка - организационно-правовая форма предприятия сокращенно.
//
Функция РазложитьСтрокуНаименованияОрганизации(Знач Наименование, ЮрФизЛицо) Экспорт
	
	Результат = Новый Структура("Наименование,ОрганизационноПравоваяФорма,ОрганизационноПравоваяФормаСокращенно");
	
	Наименование = СокрЛП(Наименование);
	
	Если УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='ООО'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Общество с ограниченной ответственностью'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ООО'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='ОАО'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Открытое акционерное общество'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ОАО'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='ЗАО'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Закрытое акционерное общество'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ЗАО'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='ИП'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Индивидуальный предприниматель'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ИП'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='Общество с ограниченной ответственностью'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Общество с ограниченной ответственностью'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ООО'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='Открытое акционерное общество'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Открытое акционерное общество'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ОАО'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='Закрытое акционерное общество'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Закрытое акционерное общество'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ЗАО'");
	ИначеЕсли УбратьИзНаименованияОрганизационнуюФорму(Наименование, НСтр("ru='Индивидуальный предприниматель'")) Тогда
		ОрганизационноПравоваяФорма           = НСтр("ru='Индивидуальный предприниматель'");
		ОрганизационноПравоваяФормаСокращенно = НСтр("ru='ИП'");
	Иначе
		ОрганизационноПравоваяФорма           = "";
		ОрганизационноПравоваяФормаСокращенно = "";
	КонецЕсли;
	
	Если ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
		И ЗначениеЗаполнено(ОрганизационноПравоваяФорма) Тогда
		КоличествоКавычек = СтрЧислоВхождений(Наименование, """");
		Если КоличествоКавычек > 1 Тогда
			// Наименование организации внутри внешних кавычек
			ПозицияПервойКавычки = Найти(Наименование, """");
			ПозицияПоследнейКавычки = 0;
			
			ВремНаименование = Наименование;
			
			ПозицияКавычки = ПозицияПервойКавычки;
			Пока ПозицияКавычки > 0 Цикл
				ПозицияПоследнейКавычки = ПозицияПоследнейКавычки + ПозицияКавычки;
				ВремНаименование = Сред(ВремНаименование, ПозицияКавычки + 1);
				ПозицияКавычки = Найти(ВремНаименование, """");
			КонецЦикла;
			
			Наименование = Сред(Наименование, ПозицияПервойКавычки + 1, ПозицияПоследнейКавычки - ПозицияПервойКавычки - 1);
			Если НЕ КоличествоКавычек % 2 = 0 Тогда
				Наименование = Наименование + """";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Результат.Наименование = СокрЛП(Наименование);
	Результат.ОрганизационноПравоваяФорма = ОрганизационноПравоваяФорма;
	Результат.ОрганизационноПравоваяФормаСокращенно = ОрганизационноПравоваяФормаСокращенно;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьИдентификаторСтроки(Строка) Экспорт

	Строка.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);

КонецПроцедуры

Функция УбратьИзНаименованияОрганизационнуюФорму(Наименование, ИмяОрганизационнойФормы)

	Результат = Ложь;
	
	Наименование = СокрЛП(Наименование);
	
	ДлинаНаименования         = СтрДлина(Наименование);
	ДлинаОрганизационнойФормы = СтрДлина(ИмяОрганизационнойФормы);
	
	Если Лев(Наименование, ДлинаОрганизационнойФормы) = ИмяОрганизационнойФормы Тогда
		Наименование = СокрЛ(Сред(Наименование, ДлинаОрганизационнойФормы + 1));
		Результат = Истина;
	КонецЕсли;
	
	Если Прав(Наименование, ДлинаОрганизационнойФормы) = ИмяОрганизационнойФормы Тогда
		Наименование = СокрП(Лев(Наименование, ДлинаНаименования - ДлинаОрганизационнойФормы - 1));
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
