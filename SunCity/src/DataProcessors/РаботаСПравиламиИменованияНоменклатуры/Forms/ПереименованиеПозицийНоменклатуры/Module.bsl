
#Область ОбработчикиСобытийФормы

&НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыВыбораВидаНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ВидНоменклатурыПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПараметрИменованияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущийИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		ПараметрИменованияПриИзмененииСервер(ТекущийИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаНоменклатуры

&НаКлиенте
Процедура ТаблицаНоменклатурыНоменклатураОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОбработчикОповещения =
			Новый ОписаниеОповещения("РедактированиеНоменклатурыЗавершение", ЭтотОбъект, ТекущиеДанные.Номенклатура);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента",
			Новый Структура("Ключ", ТекущиеДанные.Номенклатура), ЭтаФорма,,,, ОбработчикОповещения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьЗначенияИзБазы(Команда)
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ЗаполнитьДанныеОбработки();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначенияВБазу(Команда)
	
	КоличествоОбработанныхСтрок = 0;
	ЗаписатьЗначенияВБазуСервер(КоличествоОбработанныхСтрок);
	Если КоличествоОбработанныхСтрок <> 0 Тогда
		ПоказатьОповещениеПользователя("Изменение:",,
			Нстр("ru='Переименовано позиций номенклатуры: '") + КоличествоОбработанныхСтрок,БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Вставить(Команда)
	
	ТекстБуфераОбмена = ПолучитьТекстБуфераОбмена();
	Если ТекстБуфераОбмена = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееПоле = Элементы.ТаблицаНоменклатуры.ТекущийЭлемент;
	Если ТекущееПоле = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТекущейКолонки = СтрЗаменить(ТекущееПоле.Имя, "ТаблицаНоменклатуры", "");
	ЗначениеБуфераОбмена = ПолучитьЗначениеБуфераОбмена(ИмяТекущейКолонки, ТекстБуфераОбмена);
	
	Если ЗначениеБуфераОбмена = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполитьПараметрыВВыделенныхСтроках(ИмяТекущейКолонки, ЗначениеБуфераОбмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидНоменклатурыПриИзмененииСервер()
	
	ЗаполнитьДанныеОбработки();
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		УстановитьДоступностьЭлементовФормы();
		ПроверитьДублиНоменклатуры();
	Иначе
		УстановитьПараметрыВыбораВидаНоменклатуры();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполитьПараметрыВВыделенныхСтроках(ИмяТекущейКолонки, ЗначениеБуфераОбмена)
	
	ВыделенныеСтроки = Элементы.ТаблицаНоменклатуры.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		СтрокаНоменклатуры = ТаблицаНоменклатуры.НайтиПоИдентификатору(ВыделеннаяСтрока);
		СтрокаНоменклатуры[ИмяТекущейКолонки] = ЗначениеБуфераОбмена;
		СформироватьНаименованиеВСтроке(ВыделеннаяСтрока);
	КонецЦикла;
	
	ПроверитьДублиНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОбработки()
	
	ЗаполнитьПараметрыИменования();
	Правило = ПолучитьПравило();
	ЗаполнитьТаблицуНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыИменования()
	
	УдалитьРеквизитыИЭлементыПравилаИменования();
	ЗаполнитьТаблицуПараметровПравилаИменования();
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияВБазуСервер(КоличествоОбработанныхСтрок)
	
	КлючиСтруктуры = "Номенклатура,Наименование";
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		КлючиСтруктуры = КлючиСтруктуры + "," + СтрокаПараметр.ИмяЭлемента;
	КонецЦикла;

	ОбработанныеСтроки = Новый Массив;
	КоличествоПропущенныхСтрок = 0;
	ВыделенныеСтроки = Элементы.ТаблицаНоменклатуры.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ТекущаяСтрока = ТаблицаНоменклатуры.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Если ТекущаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если ТекущаяСтрока.Наименование = "" Тогда
			Продолжить;
		КонецЕсли;
		СтруктураСтроки = Новый Структура(КлючиСтруктуры);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, ТекущаяСтрока);
		СтрокаОбработана = ЗаписатьИзмененияВБазу(СтруктураСтроки);
		Если СтрокаОбработана = Неопределено Тогда
			КоличествоПропущенныхСтрок = КоличествоПропущенныхСтрок + 1;
			ОбработанныеСтроки.Добавить(ВыделеннаяСтрока);
		ИначеЕсли СтрокаОбработана Тогда
			ОбработанныеСтроки.Добавить(ВыделеннаяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоОбработанныхСтрок = ОбработанныеСтроки.Количество() - КоличествоПропущенныхСтрок;
	
	Для Каждого ОбработаннаяСтрока Из ОбработанныеСтроки Цикл
		ТекущаяСтрока = ТаблицаНоменклатуры.НайтиПоИдентификатору(ОбработаннаяСтрока);
		Если ТекущаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТаблицаНоменклатуры.Удалить(ТекущаяСтрока);
	КонецЦикла;
	
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		УдалитьНоменклатуруКПереименованию();
		ВидНоменклатуры = ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.ПустаяСсылка");
		УстановитьПараметрыВыбораВидаНоменклатуры();
		Элементы.ДекорацияПодсказка.Видимость = Ложь;
	Иначе
		Элементы.ДекорацияИнформация.Подсказка =
			Нстр("ru='Позиций номенклатуры к переименованию: '") + ТаблицаНоменклатуры.Количество();
		ПроверитьДублиНоменклатуры();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатуры()
	
	ТаблицаНоменклатуры.Очистить();
	
	РезультатЗапроса =
		РаботаСПравиламиИменования.ЗначенияПараметровНоменклатуры(ВидНоменклатуры, ПараметрыПравилаИменования);
	Выборка			 = РезультатЗапроса.Выбрать();
	
	КлючиСтруктуры	 = "Номенклатура,ТекущееНаименование,Наименование,ОформитьНаименование";
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		КлючиСтруктуры = КлючиСтруктуры + ", " + СтрокаПараметр.ИмяЭлемента+ ", Оформить" + СтрокаПараметр.ИмяЭлемента;
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		
		НСтр = Новый Структура(КлючиСтруктуры);
		
		ЗаполнитьЗначенияСвойств(НСтр,Выборка);
		НСтр.ТекущееНаименование = Выборка.НоменклатураНаименование;
		
		Структура = Новый Структура;
		ПараметрыИменованияЗаполнены = Истина;
		Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
			Структура.Вставить(СтрокаПараметр.ИмяЭлемента,
				Формат(Выборка[СтрокаПараметр.ИмяЭлемента],
				"ДЛФ=Д; БЛ='Ложь'; БИ='" + СтрокаПараметр.ИмяПараметра + "'"));
			Если ЗначениеЗаполнено(Выборка[СтрокаПараметр.ИмяЭлемента]) Тогда
				НСтр["Оформить" + СтрокаПараметр.ИмяЭлемента] = 1;
			Иначе
				ПараметрыИменованияЗаполнены = Ложь;
			КонецЕсли;
		КонецЦикла;
		Если ПараметрыИменованияЗаполнены Тогда
			НСтр.Наименование =
				РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(Правило, Структура, "Ключ", "Значение");
		КонецЕсли;
		
		НСтр.ОформитьНаименование = НСтр.ТекущееНаименование <> НСтр.Наименование;

		Если НСтр.ТекущееНаименование <> НСтр.Наименование Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаНоменклатуры.Добавить(),НСтр);
		КонецЕсли;
		
	КонецЦикла;

	СтрокаСортировки = "";
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		СтрокаСортировки = ", Оформить" + СтрокаПараметр.ИмяЭлемента + " Убыв " + СтрокаСортировки;
	КонецЦикла;
	СтрокаСортировки =  "Наименование Убыв" + СтрокаСортировки;
	
	ТаблицаНоменклатуры.Сортировать(СтрокаСортировки);
	
	Элементы.ДекорацияИнформация.Подсказка =
		Нстр("ru='Позиций номенклатуры к переименованию:'") + " " + ТаблицаНоменклатуры.Количество();
	
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		УдалитьНоменклатуруКПереименованию();
		ВидНоменклатуры = ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.ПустаяСсылка");
		УстановитьПараметрыВыбораВидаНоменклатуры();
		Элементы.ДекорацияПодсказка.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПараметровПравилаИменования()
	
	СтруктураПараметров = РаботаСПравиламиИменования.СтруктураПараметровПравилаИменования(ВидНоменклатуры);

	ПараметрыПравилаИменования.Очистить();
	
	МассивПараметровПравила = Новый Массив;
	
	Для Каждого Строка Из СтруктураПараметров.ПараметрыПравилаИменования Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыПравилаИменования.Добавить(),Строка);
		МассивПараметровПравила.Добавить(
			Новый РеквизитФормы(Строка.ИмяЭлемента, Строка.ТипРеквизита, "ТаблицаНоменклатуры"));
		МассивПараметровПравила.Добавить(
			Новый РеквизитФормы("Оформить" + Строка.ИмяЭлемента, Новый ОписаниеТипов("Число"), "ТаблицаНоменклатуры"));
	КонецЦикла;
	ИзменитьРеквизиты(МассивПараметровПравила);
	
	Для Каждого Строка Из СтруктураПараметров.ПараметрыПравилаИменования Цикл
		
		НовыйЭлемент = Элементы.Добавить(
			"ТаблицаНоменклатуры" + Строка.ИмяЭлемента, Тип("ПолеФормы"), Элементы["ТаблицаНоменклатуры"]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "ТаблицаНоменклатуры" + "." + Строка.ИмяЭлемента;
		НовыйЭлемент.Заголовок = Строка.ИмяПараметра;
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрИменованияПриИзменении");
		
		Если Строка.ДополнительныеЗначенияИспользуются Тогда
			МассивПараметровВыбора = Новый Массив;
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Строка.ВладелецДопЗначений));
			НовыйЭлемент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
		КонецЕсли;
		
		Если Строка.ПутьКДанным = "ВидНоменклатуры" Тогда
			НовыйЭлемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьПравило()
	
	Возврат РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(
		ВидНоменклатуры.ПравилоИменования.Правило, ПараметрыПравилаИменования, "ИмяПараметра", "ИмяЭлемента", Ложь);
	
КонецФункции

&НаСервере
Процедура УдалитьРеквизитыИЭлементыПравилаИменования()
	
	МассивУдаляемыхРеквизитов = Новый Массив;
	
	Для Каждого Строка Из ПараметрыПравилаИменования Цикл
		
		МассивУдаляемыхРеквизитов.Добавить("ТаблицаНоменклатуры." + Строка.ИмяЭлемента);
		МассивУдаляемыхРеквизитов.Добавить("ТаблицаНоменклатуры.Оформить" + Строка.ИмяЭлемента);
		
		УдаляемыйЭлемент = Элементы.Найти("ТаблицаНоменклатуры" + Строка.ИмяЭлемента);
		Если УдаляемыйЭлемент <> Неопределено Тогда
			ЭтаФорма.Элементы.Удалить(УдаляемыйЭлемент);
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораВидаНоменклатуры()
	
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь));

	ТаблицаДоступныхПараметров = РаботаСПравиламиИменования.ДоступныеПараметры();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НоменклатураКПереименованию.ВидНоменклатуры КАК ВидНоменклатуры,
	|	НоменклатураКПереименованию.ВидНоменклатуры.НаборСвойств КАК ВидНоменклатурыНаборСвойств
	|ИЗ
	|	РегистрСведений.НоменклатураКПереименованию КАК НоменклатураКПереименованию";
	
	Выборка = Запрос.Выполнить().Выбрать();
	МассивДоступныхВидовНоменклатур = Новый Массив;
	Пока Выборка.Следующий() Цикл
		РезультатПроверкиПравила = РаботаСПравиламиИменования.ПроверитьИспользованиеПравилаИменования(
			Выборка.ВидНоменклатуры.ПравилоИменования, ТаблицаДоступныхПараметров, Выборка.ВидНоменклатурыНаборСвойств);
		Если РезультатПроверкиПравила.ЕстьОшибки Или
			РезультатПроверкиПравила.Свойство("ПравилоНельзяИспользоватьДляНабора") Тогда
			Продолжить;
		КонецЕсли;
		МассивДоступныхВидовНоменклатур.Добавить(Выборка.ВидНоменклатуры);
	КонецЦикла;
	
	МассивПараметровВыбора.Добавить(
		Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивДоступныхВидовНоменклатур)));
	ПараметрыВыбораПравилаИменования = Новый ФиксированныйМассив(МассивПараметровВыбора);
	Элементы.ВидНоменклатуры.ПараметрыВыбора = ПараметрыВыбораПравилаИменования;

	Элементы.ДекорацияИнформация.Подсказка =
		Нстр("ru='Видов номенклатуры к обработке:'") + " " + МассивДоступныхВидовНоменклатур.Количество();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветПодписи);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт",
		Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатурыНаименование");

	ОтборЭлементаУсловногоОформления =
		ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлементаУсловногоОформления.ЛевоеЗначение =
		Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.ОформитьНаименование");
	ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлементаУсловногоОформления.ПравоеЗначение = Истина;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаПодсказки);

	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатурыНоменклатура");
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатурыНаименование");
	
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры" + СтрокаПараметр.ИмяЭлемента);
	КонецЦикла;

	ОтборЭлементаУсловногоОформления =
		ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлементаУсловногоОформления.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.ОформитьДубль");
	ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлементаУсловногоОформления.ПравоеЗначение = Истина;
	
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветПодписи);
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт",
			Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры" + СтрокаПараметр.ИмяЭлемента);
		
		ОтборЭлементаУсловногоОформления =
			ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлементаУсловногоОформления.ЛевоеЗначение =
			Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.Оформить"+ СтрокаПараметр.ИмяЭлемента);
		ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлементаУсловногоОформления.ПравоеЗначение = 2;
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст","<Заполнить>");
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветИнформацияОшибочна);
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт",
			Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста));
		
		ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры" + СтрокаПараметр.ИмяЭлемента);
		
		ОтборЭлементаУсловногоОформления =
			ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлементаУсловногоОформления.ЛевоеЗначение =
			Новый ПолеКомпоновкиДанных("ТаблицаНоменклатуры.Оформить" + СтрокаПараметр.ИмяЭлемента);
		ОтборЭлементаУсловногоОформления.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлементаУсловногоОформления.ПравоеЗначение = 0;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СформироватьНаименованиеВСтроке(ТекущийИдентификатор)

	СтрокаНоменклатуры = ТаблицаНоменклатуры.НайтиПоИдентификатору(ТекущийИдентификатор);
	Если СтрокаНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура;
	ПараметрыИменованияЗаполнены = Истина;
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		Структура.Вставить(СтрокаПараметр.ИмяЭлемента,
			Формат(СтрокаНоменклатуры[СтрокаПараметр.ИмяЭлемента],
			"ДЛФ=Д; БЛ='Ложь'; БИ='" + СтрокаПараметр.ИмяПараметра + "'"));
		Если Не ЗначениеЗаполнено(СтрокаНоменклатуры[СтрокаПараметр.ИмяЭлемента]) Тогда
			ПараметрыИменованияЗаполнены = Ложь;
		КонецЕсли;
	КонецЦикла;
	Если ПараметрыИменованияЗаполнены Тогда
		СтрокаНоменклатуры.Наименование =
			РаботаСПравиламиИменованияКлиентСервер.ПреобразоватьСтрокуПоПравилу(Правило, Структура, "Ключ", "Значение");
	Иначе
		СтрокаНоменклатуры.Наименование = "";
	КонецЕсли;
	
	СтрокаНоменклатуры.ОформитьНаименование = СтрокаНоменклатуры.ТекущееНаименование <> СтрокаНоменклатуры.Наименование;
	ЗначенияПараметровНоменклатуры = РаботаСПравиламиИменованияВызовСервера.ЗначенияПараметровНоменклатуры(
		ВидНоменклатуры, ПараметрыПравилаИменования, СтрокаНоменклатуры.Номенклатура);
	Если ЗначенияПараметровНоменклатуры.Количество() > 0 Тогда
		ДанныеНоменклатуры = ЗначенияПараметровНоменклатуры[0];
		Для Каждого ЭлементСтруктуры Из ДанныеНоменклатуры Цикл
			Если Не ЗначениеЗаполнено(СтрокаНоменклатуры[ЭлементСтруктуры.Ключ]) Тогда
				СтрокаНоменклатуры["Оформить" + ЭлементСтруктуры.Ключ] = 0;
			ИначеЕсли СтрокаНоменклатуры[ЭлементСтруктуры.Ключ] <> ЭлементСтруктуры.Значение Тогда
				СтрокаНоменклатуры["Оформить" + ЭлементСтруктуры.Ключ] = 2;
			Иначе
				СтрокаНоменклатуры["Оформить" + ЭлементСтруктуры.Ключ] = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УдалитьНоменклатуруКПереименованию()
	
	РаботаСПравиламиИменования.УдалитьНоменклатуруКПереименованию(ВидНоменклатуры);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьИзмененияВБазу(СтруктураСтроки)
	
	НоменклатураОбъект = СтруктураСтроки.Номенклатура.ПолучитьОбъект();
	Если НоменклатураОбъект.Наименование = СтруктураСтроки.Наименование Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Если НоменклатураОбъект.НаименованиеПолное = НоменклатураОбъект.Наименование Тогда
		НоменклатураОбъект.НаименованиеПолное = СтруктураСтроки.Наименование;
	КонецЕсли;
	НоменклатураОбъект.Наименование = СтруктураСтроки.Наименование;
	
	МассивДопСведений = Новый Массив;
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		
		Если СтрокаПараметр.ЭтоДопРеквизит Тогда
			СтрокиДопРеквизитНоменклатуры =
				НоменклатураОбъект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", СтрокаПараметр.Свойство));
			Если СтрокиДопРеквизитНоменклатуры.Количество() = 0 Тогда
				СтрокаДопРеквизит = НоменклатураОбъект.ДополнительныеРеквизиты.Добавить();
			Иначе
				СтрокаДопРеквизит = СтрокиДопРеквизитНоменклатуры[0];
			КонецЕсли;
			СтрокаДопРеквизит.Свойство = СтрокаПараметр.Свойство;
			СтрокаДопРеквизит.Значение = СтруктураСтроки[СтрокаПараметр.ИмяЭлемента];
		ИначеЕсли СтрокаПараметр.ЭтоДопСведение Тогда
			СтруктураЗаписи = Новый Структура;
			СтруктураЗаписи.Вставить("Свойство", СтрокаПараметр.Свойство);
			СтруктураЗаписи.Вставить("Значение", СтруктураСтроки[СтрокаПараметр.ИмяЭлемента]);
			МассивДопСведений.Добавить(СтруктураЗаписи);
		Иначе
			НоменклатураОбъект[СтрокаПараметр.ПутьКДанным] = СтруктураСтроки[СтрокаПараметр.ИмяЭлемента];
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаОбработана = Ложь;
	
	НачатьТранзакцию();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.Номенклатура");
	ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрСведений.ДополнительныеСведения");
	БлокировкаДанных.Заблокировать();
	
	Попытка
		
		НоменклатураОбъект.Записать();
		
		Для Каждого ЭлементДопСведение Из МассивДопСведений Цикл
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = СтруктураСтроки.Номенклатура;
			МенеджерЗаписи.Свойство = ЭлементДопСведение.Свойство;
			МенеджерЗаписи.Значение = ЭлементДопСведение.Значение;
			МенеджерЗаписи.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
		СтрокаОбработана = Истина;
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;

	КонецПопытки;
	
	Возврат СтрокаОбработана;
	
КонецФункции

&НаСервере
Процедура ПараметрИменованияПриИзмененииСервер(ТекущийИдентификатор)
	
	СформироватьНаименованиеВСтроке(ТекущийИдентификатор);
	ПроверитьДублиНоменклатуры();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеБуфераОбмена(ИмяТекущейКолонки,ТекстБуфераОбмена)
	
	Если ИмяТекущейКолонки = "Наименование" Или ИмяТекущейКолонки = "Номенклатура" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПромежуточнаяТЗ = ТаблицаНоменклатуры.Выгрузить(, ИмяТекущейКолонки + ", Оформить" + ИмяТекущейКолонки);
	ПромежуточнаяТЗ.Свернуть(ИмяТекущейКолонки);

	Сравнение = "Строка";
	Если ПромежуточнаяТЗ.Колонки[ИмяТекущейКолонки].ТипЗначения.СодержитТип(Тип("Число")) Тогда
		Сравнение = "Число";
	ИначеЕсли ПромежуточнаяТЗ.Колонки[ИмяТекущейКолонки].ТипЗначения.СодержитТип(Тип("Дата")) Тогда
		Сравнение = "Дата";
	КонецЕсли;
	
	Для Каждого СтрокаТЗ Из ПромежуточнаяТЗ Цикл
		Если Сравнение = "Число" Тогда
			Если СтрокаТЗ[ИмяТекущейКолонки] = Число(ТекстБуфераОбмена) Тогда
				Возврат СтрокаТЗ[ИмяТекущейКолонки];
			КонецЕсли;
		ИначеЕсли Сравнение = "Дата" Тогда
			Если Формат(СтрокаТЗ[ИмяТекущейКолонки],Нстр("ru='ДФ=dd.MM.yyyy'") = ТекстБуфераОбмена) Тогда
				Возврат СтрокаТЗ[ИмяТекущейКолонки];
			КонецЕсли;
		Иначе
			Если Строка(СтрокаТЗ[ИмяТекущейКолонки]) = ТекстБуфераОбмена Тогда
				Возврат СтрокаТЗ[ИмяТекущейКолонки];
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекстБуфераОбмена() Экспорт
	
	ТекстБуфераОбмена = "";
	
	#Если Клиент Тогда
		COMОбъект = Новый COMОбъект("htmlfile");
		ТекстБуфераОбмена = COMОбъект.ParentWindow.ClipboardData.Getdata("Text");
	#КонецЕсли

	Возврат ТекстБуфераОбмена;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступностьЭлементовФормы()
	
	Если ВидНоменклатуры.ЗапретитьРедактированиеНаименования И Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		Элементы.ТаблицаНоменклатурыНаименование.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ТаблицаНоменклатурыНаименование.ТолькоПросмотр = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактированиеНоменклатурыЗавершение(Результат, Номенклатура) Экспорт
	
	МассивСтрокНоменклатуры = ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура));
	Если МассивСтрокНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийИдентификатор = МассивСтрокНоменклатуры[0].ПолучитьИдентификатор();
	РедактированиеНоменклатурыЗавершениеСервер(ТекущийИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура РедактированиеНоменклатурыЗавершениеСервер(ТекущийИдентификатор)
	
	СтрокаНоменклатура = ТаблицаНоменклатуры.НайтиПоИдентификатору(ТекущийИдентификатор);
	Если СтрокаНоменклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = РаботаСПравиламиИменованияВызовСервера.ЗначенияПараметровНоменклатуры(
		ВидНоменклатуры, ПараметрыПравилаИменования, СтрокаНоменклатура.Номенклатура);
	Если ДанныеСтроки.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(СтрокаНоменклатура, ДанныеСтроки[0]);
		СформироватьНаименованиеВСтроке(ТекущийИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДублиНоменклатуры()
	
	СтрокиДубли = ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("ОформитьДубль", Истина));
	Для Каждого Стр Из СтрокиДубли Цикл
		Стр.ОформитьДубль = Ложь;
	КонецЦикла;
	
	КлючиСтруктуры = "Наименование";
	Для Каждого СтрокаПараметр Из ПараметрыПравилаИменования Цикл
		КлючиСтруктуры = КлючиСтруктуры + "," + СтрокаПараметр.ИмяЭлемента;
	КонецЦикла;
	
	Таб = ТаблицаНоменклатуры.Выгрузить(,КлючиСтруктуры);
	
	Таб.Колонки.Добавить("Счетчик");
	
	Таб.ЗаполнитьЗначения(1,"Счетчик");
	
	Таб.Свернуть(КлючиСтруктуры,"Счетчик");
	
	МассивПустых = Таб.НайтиСтроки(Новый Структура("Наименование",""));
	Для Каждого СтрокаПустоеНаименование Из МассивПустых Цикл
		Таб.Удалить(СтрокаПустоеНаименование);
	КонецЦикла;
	
	МассивРазличных = Таб.НайтиСтроки(Новый Структура("Счетчик",1));
	Для Каждого Строка Из МассивРазличных Цикл
		Таб.Удалить(Строка);
	КонецЦикла;
	
	КоличествоНекорректныхСтрок = 0;
	Для Каждого Строка Из Таб Цикл
		СтруктураПоиск = Новый Структура(КлючиСтруктуры);
		ЗаполнитьЗначенияСвойств(СтруктураПоиск,Строка);
		ОформляемыеСтроки = ТаблицаНоменклатуры.НайтиСтроки(СтруктураПоиск);
		Для Каждого СтрокаТаб Из ОформляемыеСтроки Цикл
			СтрокаТаб.ОформитьДубль = Истина;
			КоличествоНекорректныхСтрок = КоличествоНекорректныхСтрок + 1;
		КонецЦикла;
	КонецЦикла;
	
	Элементы.ДекорацияПодсказка.Подсказка =
		Нстр("ru='Позиций с одинаковым наименованием:'") + " " + КоличествоНекорректныхСтрок;
	Элементы.ДекорацияПодсказка.Видимость = Таб.Количество() > 0;
	
КонецПроцедуры

#КонецОбласти
