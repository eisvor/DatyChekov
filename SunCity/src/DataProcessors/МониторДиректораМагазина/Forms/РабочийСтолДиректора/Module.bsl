#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьПлитки();
	ИнициализироватьДанныеФормы();
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ИзменитьИнтерфейсФормы();
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗапуститьОбновлениеПоказателей();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияПлитка1ЗаголовокПоказателяНажатие(Элемент)
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	
	Период = Новый СтандартныйПериод;
	Период.Вариант = ВариантСтандартногоПериода.Последние7Дней;
	
	Отбор = Новый Структура("Период", Период);
	
	ПараметрыОтчета.Вставить("Отбор", Отбор);
	ПараметрыОтчета.Вставить("КлючВарианта", "ВыручкаПоДням");
	
	ОткрытьФорму("Отчет.Выручка.Форма",ПараметрыОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлитка2ЗаголовокПоказателяНажатие(Элемент)
	
	ОткрытьРасшифровкуПоказателя_ДанныеПоЧекам();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлитка3ЗаголовокПоказателяНажатие(Элемент)
	
	ОткрытьРасшифровкуПоказателя_ДанныеПоЧекам();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлитка4ЗаголовокПоказателяНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ДанныеДляОтображения", ПолучитьПараметрыПоказателя_ДенежныеСредства());
	
	ОткрытьФорму("Отчет.МониторПоказателей.Форма.ФормаОтчета",  ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлитка5ЗаголовокПоказателяНажатие(Элемент)
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	
	ДатаОтчета = Новый СтандартнаяДатаНачала;
	ДатаОтчета.Вариант = ВариантСтандартнойДатыНачала.НачалоЭтогоДня;
	
	Отбор = Новый Структура("ДатаОтчета", ДатаОтчета);
	
	ПараметрыОтчета.Вставить("Отбор", Отбор);
	ПараметрыОтчета.Вставить("КлючВарианта", "СтоимостнаяОценкаСкладаВРозничныхЦенах");
	
	ОткрытьФорму("Отчет.СтоимостнаяОценкаСклада.Форма",ПараметрыОтчета);

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПлитка6ЗаголовокПоказателяНажатие(Элемент)
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	
	Период = Новый СтандартныйПериод;
	Период.Вариант = ВариантСтандартногоПериода.Последние7Дней;
	
	Отбор = Новый Структура("Период", Период);
	
	ПараметрыОтчета.Вставить("Отбор", Отбор);
	ПараметрыОтчета.Вставить("КлючВарианта", "ПланОплатыПоставок");
	
	ОткрытьФорму("Отчет.ПланОплатыПоставок.Форма",ПараметрыОтчета);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗапуститьОбновлениеПоказателей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация

&НаСервере
Процедура ИнициализироватьПлитки()
	
	Элементы.ДекорацияПлитка1ЗаголовокПоказателя.Заголовок = НСтр("ru = 'Выручка за 7 дней'");
	
	Элементы.ДекорацияПлитка2ЗаголовокПоказателя.Заголовок = НСтр("ru = 'Чеков продажи'");
	
	Элементы.ДекорацияПлитка3ЗаголовокПоказателя.Заголовок = НСтр("ru = 'Средний чек'");
	
	Элементы.ДекорацияПлитка4ЗаголовокПоказателя.Заголовок = НСтр("ru = 'Остаток денежных средств'");
	
	Элементы.ДекорацияПлитка5ЗаголовокПоказателя.Заголовок = НСтр("ru = 'Товарный остаток'");
	
	Элементы.ДекорацияПлитка6ЗаголовокПоказателя.Заголовок = НСтр("ru = 'Платежи поставщикам'");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанныеФормы()
	
	ЗаполнитьСписокДоступныхМагазинов();
	ЗаполнитьПоказателиДляРасшифровки();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхМагазинов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Магазины.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	НЕ Магазины.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Магазины.Наименование";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокМагазинов.Добавить(Выборка.Магазин);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПоказателиДляРасшифровки()
	
	НовыйПоказатель = ПоказателиДляРасшифровки.Добавить();
	НовыйПоказатель.Доступность 	= Истина;
	НовыйПоказатель.Показатель 		= Перечисления.ВидыАнализаМонитора.КоличествоЧеков;
	НовыйПоказатель.ВидОтображения 	= Перечисления.ВидыДиаграмм.ГистограммаСНакоплением;
	НовыйПоказатель.ПалитраЦветов	= ПалитраЦветовДиаграммы.Мягкая;
	НовыйПоказатель.ЛинияТренда		= Ложь;
	
	НовыйПоказатель = ПоказателиДляРасшифровки.Добавить();
	НовыйПоказатель.Доступность 	= Истина;
	НовыйПоказатель.Показатель 		= Перечисления.ВидыАнализаМонитора.СреднийЧек;
	НовыйПоказатель.ВидОтображения 	= Перечисления.ВидыДиаграмм.ГистограммаСНакоплением;
	НовыйПоказатель.ПалитраЦветов	= ПалитраЦветовДиаграммы.Мягкая;
	НовыйПоказатель.ЛинияТренда		= Ложь;
	
	НовыйПоказатель = ПоказателиДляРасшифровки.Добавить();
	НовыйПоказатель.Доступность 	= Истина;
	НовыйПоказатель.Показатель 		= Перечисления.ВидыАнализаМонитора.ОстаткиДС;
	НовыйПоказатель.ВидОтображения 	= Перечисления.ВидыДиаграмм.Круговая;
	НовыйПоказатель.ПалитраЦветов	= ПалитраЦветовДиаграммы.Теплая;
	НовыйПоказатель.ЛинияТренда		= Ложь;
	
	НовыйПоказатель = ПоказателиДляРасшифровки.Добавить();
	НовыйПоказатель.Доступность 	= Истина;
	НовыйПоказатель.Показатель 		= Перечисления.ВидыАнализаМонитора.ОстаткиДСККМ;
	НовыйПоказатель.ВидОтображения 	= Перечисления.ВидыДиаграмм.Круговая;
	НовыйПоказатель.ПалитраЦветов	= ПалитраЦветовДиаграммы.Теплая;
	НовыйПоказатель.ЛинияТренда		= Ложь;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеПоказателей

&НаКлиенте
Процедура ЗапуститьОбновлениеПоказателей()
	
	ДлительнаяОперация = ЗапуститьОбновлениеПоказателейСервер(УникальныйИдентификатор);
	
	АдресХранилища = ДлительнаяОперация.АдресРезультата;
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		Элементы.СтраницыГлавные.ТекущаяСтраница = Элементы.СтраницаПоказателиОбновляются;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбновлениеПоказателейЗавершение", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтаФорма);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ОтобразитьЗначенияПоказателей();
		
	ИначеЕсли ДлительнаяОперация.Статус = "Ошибка" Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьОбновлениеПоказателейСервер(УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0.1;
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ДиаграммаВыручка", ДиаграммаВыручка);
	ПараметрыРасчета.Вставить("ДоступныеМагазины", СписокМагазинов.ВыгрузитьЗначения());
	ПараметрыРасчета.Вставить("ПоказателиДляРасшифровки", ПоказателиДляРасшифровки.Выгрузить());
	
	РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.МониторДиректораМагазина.РассчитатьЗначенияПоказателейВФоне",
		ПараметрыРасчета,
		ПараметрыВыполнения);
	
	Возврат РезультатФоновогоЗадания;
КонецФункции

&НаКлиенте
Процедура ОбновлениеПоказателейЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		АдресХранилища = Результат.АдресРезультата;
		ОтобразитьЗначенияПоказателей();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьЗначенияПоказателей()
	
	ЗначенияПоказателей = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(ЗначенияПоказателей) = Тип("Структура") Тогда
		
		Элементы.СтраницыГлавные.ТекущаяСтраница = Элементы.СтраницаПоказатели;
		
		Выручка = ЗначенияПоказателей.Выручка;
		Если Выручка.ВыполнениеПоказателя < 0 Тогда
			Выручка.ВыполнениеПоказателя = Выручка.ВыполнениеПоказателя * (-1);
			Элементы.ДекорацияИзменениеПоказателя.Картинка = БиблиотекаКартинок.СтрелкаВнизБольшая;
		Иначе
			Элементы.ДекорацияИзменениеПоказателя.Картинка = БиблиотекаКартинок.СтрелкаВверхБольшая;
		КонецЕсли;
		
		Показатель1ВыполнениеПоказателя = ПоказательСтрокой(Выручка.ВыполнениеПоказателя, "%");
		Показатель1ТекущийПериод = ПоказательСтрокой(Выручка.ВыручкаТекущая);
		ДиаграммаВыручка = Выручка.ДиаграммаВыручка;
		
		ДанныеПоЧекам = ЗначенияПоказателей.ДанныеПоЧекам;
		Показатель2 = ПоказательСтрокой(ДанныеПоЧекам.КоличествоЧеков, "");
		Показатель3 = ПоказательСтрокой(ДанныеПоЧекам.СреднийЧек);
		
		Показатель4 = ПоказательСтрокой(ЗначенияПоказателей.ДенежныеСредства);
		Показатель5 = ПоказательСтрокой(ЗначенияПоказателей.ТоварныйОстаток);
		
		ПлатежиПоставщикам = ЗначенияПоказателей.ПлатежиПоставщикам;
		
		ШаблонЗначения = "Показатель6_%1Значение";
		ШаблонИмени = "Показатель6_%1Имя";
		
		ТекПоказательПлитки = 1;
		Для Каждого ЗначениеПоказателя Из ПлатежиПоставщикам Цикл
			Значение = Окр(ЗначениеПоказателя.Значение,0);
			
			ЭтотОбъект[СтрШаблон(ШаблонИмени, ТекПоказательПлитки)] = ЗначениеПоказателя.ИмяЗначения;
			ЭтотОбъект[СтрШаблон(ШаблонЗначения, ТекПоказательПлитки)] = 
			ПоказательСтрокой(Значение);
			ТекПоказательПлитки = ТекПоказательПлитки + 1;
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОткрытьРасшифровкуПоказателя_ДанныеПоЧекам()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ДанныеДляОтображения", ПолучитьПараметрыПоказателя_ДанныеПоЧекам());
	
	ОткрытьФорму("Отчет.МониторПоказателей.Форма.ФормаОтчета",  ПараметрыОткрытия);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыПоказателя_ДанныеПоЧекам()
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ДоступныеМагазины", СписокМагазинов.ВыгрузитьЗначения());
	ПараметрыРасчета.Вставить("ПоказателиДляРасшифровки", ПоказателиДляРасшифровки.Выгрузить());
	
	Возврат Обработки.МониторДиректораМагазина.ПолучитьПараметрыПоказателя_ДанныеПоЧекам(ПараметрыРасчета);

КонецФункции

&НаСервере
Функция ПолучитьПараметрыПоказателя_ДенежныеСредства()
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("ДоступныеМагазины", СписокМагазинов.ВыгрузитьЗначения());
	ПараметрыРасчета.Вставить("ПоказателиДляРасшифровки", ПоказателиДляРасшифровки.Выгрузить());
	
	Возврат Обработки.МониторДиректораМагазина.ПолучитьПараметрыПоказателя_ДенежныеСредства(ПараметрыРасчета);

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПоказательСтрокой(Знач Показатель, ПоказательСуффикс = Неопределено)
	
	Если ПоказательСуффикс = Неопределено Тогда
		Суффикс = " ₽";
	ИначеЕсли ЗначениеЗаполнено(ПоказательСуффикс) Тогда
		Суффикс = " " + ПоказательСуффикс;
	Иначе
		Суффикс = "";
	КонецЕсли;
	
	ПоказательСтрокой = Формат(Показатель, "ЧДЦ=0; ЧН=0; ЧФ=Ч") + Суффикс;
	
	Возврат ПоказательСтрокой;
КонецФункции

&НаСервере
Процедура ИзменитьИнтерфейсФормы()
	
	Элементы.ДекорацияПлитка6ЗаголовокПоказателяОтступ.Видимость = Ложь;
	ШрифтЭлементов = Новый Шрифт(, 17, Истина, , , );
	Элементы.Показатель6_1Значение.Шрифт = ШрифтЭлементов;
	Элементы.Показатель6_2Значение.Шрифт = ШрифтЭлементов;
	Элементы.Показатель6_3Значение.Шрифт = ШрифтЭлементов;
	Элементы.Показатель5.Шрифт = ШрифтЭлементов;
	Элементы.Показатель4.Шрифт = ШрифтЭлементов;
	Элементы.Показатель3.Шрифт = ШрифтЭлементов;
	Элементы.Показатель2.Шрифт = ШрифтЭлементов;
	Элементы.Показатель1ВыполнениеПоказателя.Шрифт = ШрифтЭлементов;
	
КонецПроцедуры
#КонецОбласти
