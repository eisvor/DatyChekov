
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВводаТелефона(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.ВведенноеЧисло) Тогда
			ПодключаемоеОборудованиеРТКлиент.ПреобразоватьТелефонКПользовательскомуВиду(РезультатОткрытияФормы.ВведенноеЧисло, Телефон, ТелефонСтрокой);
			Email = "";
			ОтказКлиентаОтСохраненияТелефонаEmail = РезультатОткрытияФормы.ОтказКлиентаОтСохраненияТелефона;
			ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент();
		Иначе
			Телефон = 0;
			ТелефонСтрокой = "";
			Email = "";
		КонецЕсли;
		
		ОбновитьДанныеSMSEmail();
		
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВводаEmail(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.Email) Тогда
			Email = РезультатОткрытияФормы.Email;
			Телефон = 0;
			ТелефонСтрокой = "";
			ОтказКлиентаОтСохраненияТелефонаEmail = РезультатОткрытияФормы.ОтказКлиентаОтСохраненияEmail;
			ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент();
		Иначе
			Телефон = 0;
			ТелефонСтрокой = "";
			Email = "";
		КонецЕсли;
		
		ОбновитьДанныеSMSEmail();
		
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВопросаНеПечататьБумажныйЧек(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если НЕ ВРЕГ(РезультатОткрытияФормы) = "НЕТ" Тогда
			Возврат;
		КонецЕсли;
		
		НеПечататьБумажныйЧек = Ложь;
		ПодключитьОбработчикОжидания("ПолучитьСсылкуНаКлиенте", 0.1, Истина);
	
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОснованиеПлатежа = Параметры.ЧекККМВОбработке;
	ОбъектПлатежа = ОснованиеПлатежа.ПолучитьОбъект();
	
	Если ЗначениеЗаполнено(ОбъектПлатежа.СсылкаЯндексКассы) Тогда
		СсылкаНаОплату = ОбъектПлатежа.СсылкаЯндексКассы;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	ИдентификаторСтрокиЧека = Параметры.ИдентификаторСтроки;
	
	Если Параметры.Свойство("НаличиеДоговора") Тогда
		НаличиеДоговора = Параметры.НаличиеДоговора;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресТаблицыЧеков")
		И ЗначениеЗаполнено(Параметры.АдресТаблицыЧеков) Тогда
		ТабличноеПолеЧеков.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыЧеков));
		
		Для каждого СтрокаТаблицы Из ТабличноеПолеЧеков Цикл
			
			ВозможностьЭлектронногоПлатежа = ПодключаемоеОборудованиеРТ.ВозможностьЭлектронногоПлатежа(СтрокаТаблицы.КассаККМ.ПодключаемоеОборудование);
			Если ВозможностьЭлектронногоПлатежа Тогда
				КассаККМ = СтрокаТаблицы.КассаККМ;
				ПередачаEmailЧерезПрограмму = КассаККМ.ЭлектронныйЧекEmailПередаютсяПрограммой1С;
				ПередачаSMSЧерезПрограмму  = КассаККМ.ЭлектронныйЧекSMSПередаютсяПрограммой1С;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Элементы.КомандаEmail.Видимость = ВозможностьЭлектронногоПлатежа;
		Элементы.КомандаSMS.Видимость   = ВозможностьЭлектронногоПлатежа;
		
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	НеПечататьБумажныйЧек = ПодключаемоеОборудованиеРТ.ПроверитьВозможностьПечатиБумажногоЧека(КассаККМ);
	Параметры.Свойство("ДисконтнаяКарта"  , 	ДисконтнаяКарта);
	
	Если ВозможностьЭлектронногоПлатежа 
		И НеПечататьБумажныйЧек Тогда
		Параметры.Свойство("Телефон", 				Телефон); 
		Параметры.Свойство("Email", 				Email);
	КонецЕсли;
	
	ОтказКлиентаОтСохраненияТелефонаEmail = ЗначениеЗаполнено(Телефон) ИЛИ ЗначениеЗаполнено(Email);
	
	ПечатьЧека = Истина;
	
	ПараметрыЯндексКассы = ОнлайнОплатыРТ.ПараметрыОнлайнОплаты(Организация);
	ВидОплаты                = ПараметрыЯндексКассы.ВидОплаты;
	ОтправкаЧековЧерезСервис = ПараметрыЯндексКассы.ОтправкаЧековЧерезСервис;
	
	Если Параметры.Свойство("НадписьЗаголовок") Тогда
		ЭтоПродажа = Истина;
		НадписьЗаголовок = Параметры.НадписьЗаголовок;
		Если Параметры.Свойство("ЦветТекстаЗаголовка") Тогда
			Элементы.НадписьЗаголовок.ЦветТекстаЗаголовка = Параметры.ЦветТекстаЗаголовка;
		КонецЕсли;
	Иначе
		Элементы.НадписьЗаголовок.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Товары") Тогда
		
		Для Каждого Товар Из Параметры.Товары Цикл
			Если Товар.Организация = Организация Тогда
				НовыйТовар = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйТовар, Товар);
				НовыйТовар.ЕдиницаИзмерения = Товар.Номенклатура.ЕдиницаИзмерения;
				НовыйТовар.СуммаСкидки = Товар.СуммаРучнойСкидки + Товар.СуммаАвтоматическойСкидки;
				НовыйТовар.Наименование = Товар.Номенклатура.Наименование;
				НовыйТовар.Артикул = Товар.Номенклатура.Артикул;
				ИтогПоЧеку = ИтогПоЧеку + Товар.СуммаВсего;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СуммаОплаты   = ИтогПоЧеку;
	СуммаМожетБытьНулевой = СуммаОплаты = 0;
	ИтогПоЧеку    = СуммаОплаты;
	ВводимоеЧисло = Формат(СуммаОплаты, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(СсылкаНаОплату) Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДанныеПокупки;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОсновнаяСтраница;
	КонецЕсли;
	
	Элементы.ДекорацияОшибка.Видимость = Ложь;
	
	Если ВозможностьЭлектронногоПлатежа Тогда
		ОбновитьДанныеSMSEmail();
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПолучитьСсылку(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВопросаНеПечататьБумажныйЧек", ЭтотОбъект);
	
	Если ВозможностьЭлектронногоПлатежа
		И НеПечататьБумажныйЧек
		И НЕ ОбщегоНазначенияРТКлиент.ПроверитьДанныеЭлектронногоЧека(Телефон, Email, ОбработчикОповещения) Тогда
		Возврат;
	КонецЕСли;
	
	ПодключитьОбработчикОжидания("ПолучитьСсылкуНаКлиенте", 0.1, Истина);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаSMS(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВводаТелефона", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок" , НСтр("ru = 'Введите номер телефона'"));
	ПараметрыФормы.Вставить("ДисконтнаяКарта", ДисконтнаяКарта);
	ПараметрыФормы.Вставить("ЧислоВвода", Телефон);
	ПараметрыФормы.Вставить("ОтказКлиентаОтСохраненияТелефона", ОтказКлиентаОтСохраненияТелефонаEmail);
	
	ПодключаемоеОборудованиеРТКлиент.ОткрытьФормуВводаТелефонаДляОтправкиЧерезОФД(ОбработчикОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаEmail(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВводаEmail", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Email", Email);
	ПараметрыФормы.Вставить("ДисконтнаяКарта", ДисконтнаяКарта);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Введите адрес электронной почты (Email)'"));
	ПараметрыФормы.Вставить("ОтказКлиентаОтСохраненияEmail", ОтказКлиентаОтСохраненияТелефонаEmail);
	
	ПодключаемоеОборудованиеРТКлиент.ОткрытьФормуВводаEmailОтправкиЧерезОФД(ОбработчикОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьПречек(Команда)
	
	ЭтотОбъект.Доступность = Ложь;
	ДанныеДляПечати = "QR код заказа:" + Символы.ПС +  "|ШтрихКод|QR|" + ИдентификаторQRКода;
	
	Оповещение = Новый ОписаниеОповещения("ПечатьПречека", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПечатьТекста(
			Оповещение, УникальныйИдентификатор, ДанныеДляПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатус(Команда)
	ОпределитьСтатусОплаты();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПечатьПречека(РезультатВыполнения, Параметры) Экспорт
	
	ЭтотОбъект.Доступность = Истина;
	Если НЕ РезультатВыполнения.Результат Тогда  
		ЗаголовокИнформации = НСтр("ru = 'Печать последнего слип чека'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЗавершитьОплатуКлиент()
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Действие"   , НСтр("ru = 'Закрыть чек'"));
	
	СуммаОплатыЧисло = ПривестиСтрокуКЧислу(ВводимоеЧисло, Ложь);
	СтруктураОтбора = Новый Структура("КлючСвязиТПЧеков", ИдентификаторСтрокиЧека);
	ЧекиЯндексКассы = ТабличноеПолеЧеков.НайтиСтроки(СтруктураОтбора);
	СтрокаТабличноеПолеЧеков = ЧекиЯндексКассы[0];
	
	СтрокаОплаты = Оплата.Добавить();
	СтрокаОплаты.ВидОплаты   = ВидОплаты;
	СтрокаОплаты.Организация = СтрокаТабличноеПолеЧеков.Организация;
	СтрокаОплаты.Сумма       = СтрокаТабличноеПолеЧеков.Сумма;
	СтрокаОплаты.КлючСвязиТПЧеков = СтрокаТабличноеПолеЧеков.КлючСвязиТПЧеков;
	СтрокаОплаты.СуммаКомиссии = СуммаКомиссии;
	
	Сдача = СуммаОплатыЧисло - Оплата.Итог("Сумма");
	Если Сдача > 0 Тогда
		СтрокаОплаты.Сумма = СтрокаОплаты.Сумма + Сдача;
	КонецЕсли;
	
	СтруктураОтвета.Вставить("АдресТаблицыОплата", АдресТаблицыОплата());
	
	Если ЗначениеЗаполнено(ДисконтнаяКарта) 
		И НЕ ОтказКлиентаОтСохраненияТелефонаEmail Тогда
		СтруктураОтвета.Вставить("СохранятьТелефонEmail");
	КонецЕсли;
	СтруктураОтвета.Вставить("Email"  , 				 Email);
	СтруктураОтвета.Вставить("Телефон", 				 Формат(Телефон, "ЧЦ=10; ЧДЦ=; ЧГ=0"));
	СтруктураОтвета.Вставить("ОтправкаЧековЧерезСервис", ОтправкаЧековЧерезСервис);
	СтруктураОтвета.Вставить("НеПечататьБумажныйЧек", 	 НеПечататьБумажныйЧек);
	СтруктураОтвета.Вставить("ИдентификаторСтрокиЧека", ИдентификаторСтрокиЧека);
	
	Закрыть(СтруктураОтвета);
	
КонецФункции

&НаКлиенте
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь)
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСсылкуНаКлиенте()
	
	ТребуетсяОтмена = Истина;
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПолучитьСсылкуОплатыНаСервере();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьСсылкуОплатыЗавершение",
		ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
		
КонецФункции

&НаСервере
Функция ПолучитьСсылкуОплатыНаСервере()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ОснованиеПлатежа", ОснованиеПлатежа);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование ссылки на оплату.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"ОнлайнОплатыРТ.ПлатежнаяСсылкаВФоне",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьСсылкуОплатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если Не ЗначениеЗаполнено(РезультатОперации) Тогда
			УстановитьОтображениеОшибки(
				Элементы,
				"Не удалось создать платежную ссылку");
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДанныеПокупки;
			Элементы.ПолучитьСсылку.КнопкаПоУмолчанию = Ложь;
			Элементы.РаспечататьЧек.КнопкаПоУмолчанию = Истина;
			СсылкаНаОплату = РезультатОперации;
			СформироватьДанныеQRКода(РезультатОперации);
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		УстановитьОтображениеОшибки(
			Элементы,
			"Не удалось создать платежную ссылку");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСтатусОплаты()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ОпределитьСтатусОплатыОплатыНаСервере();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ОпределитьСтатусОплатыЗавершение",
		ЭтотОбъект);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ОпределитьСтатусОплатыЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ОпределитьСтатусОплатыОплатыНаСервере()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Организация", Организация);
	ПараметрыПроцедуры.Вставить("СДоговором", НаличиеДоговора);
	ПараметрыПроцедуры.Вставить("ЭтоРМК", Истина);
	Период = Новый СтандартныйПериод;
	Период.ДатаНачала = ОснованиеПлатежа.Дата;
	Период.ДатаОкончания = ТекущаяДата();
	ПараметрыПроцедуры.Вставить("Период", Период);
	ПараметрыПроцедуры.Вставить("ОснованиеПлатежа", ОснованиеПлатежа);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка статуса оплаты.'");
	
	ОбъектПлатежа = ОснованиеПлатежа.ПолучитьОбъект();
	ОбъектПлатежа.СсылкаЯндексКассы = СсылкаНаОплату;
	ОбъектПлатежа.Записать();
		
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"ОнлайнОплатыРТ.ЗагрузитьОперацииОнлайнОплаты",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ОпределитьСтатусОплатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации) Тогда
			СуммаОперации = 0;
			Если ЗначениеЗаполнено(РезультатОперации.СуммаЧека) Тогда
				СуммаОперации = РезультатОперации.СуммаЧека;
			ИначеЕсли ЗначениеЗаполнено(РезультатОперации.СуммаДокумента) Тогда
				СуммаОперации = РезультатОперации.СуммаДокумента;
			КонецЕсли;
			СуммаКомиссии = СуммаОперации - РезультатОперации.СуммаКЗачислениюНаСчетОрганизации;
			ЗавершитьОплатуКлиент();
		Иначе
			Элементы.ДекорацияОшибка.Видимость = Истина;
		КонецЕсли;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		УстановитьОтображениеОшибки(
			Элементы,
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДанныеQRКода(Идентификатор)
	
	ИдентификаторQRКода = Идентификатор;
	ДанныеQRКода = ПоместитьВоВременноеХранилище(
		ГенерацияШтрихкода.ДанныеQRКода(
			Идентификатор,
			0,
			400),
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеОшибки(Элементы, ОписаниеОшибки)
	
	ЧастиСтрок = Новый Массив;
	ЧастиСтрок.Добавить(ОписаниеОшибки);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница    = Элементы.ГруппаОшибка;
	Элементы.Отмена.КнопкаПоУмолчанию  = Истина;
	Элементы.ДекорацияОписаниеОшибка.Заголовок = Новый ФорматированнаяСтрока(ЧастиСтрок);
	
КонецПроцедуры

&НаСервере
Функция АдресТаблицыОплата()
	
	АдресТаблицыОплата = ПоместитьВоВременноеХранилище(Оплата.Выгрузить(), Новый УникальныйИдентификатор);
	
	Возврат АдресТаблицыОплата;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент()
	
	ВозможностьОтправкиSMS = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтправкиEmail = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтказаОтПечатиЧека = Ложь;
	Если (ВозможностьОтправкиSMS И ЗначениеЗаполнено(Телефон) И НЕ ПередачаSMSЧерезПрограмму)
		ИЛИ (ВозможностьОтправкиEmail И ЗначениеЗаполнено(Email) И НЕ ПередачаEmailЧерезПрограмму) Тогда
		
		ВозможностьОтказаОтПечатиЧека = Истина;
		
	КонецЕсли;
	
	Элементы.КомандаEmail.Видимость                 = ВозможностьОтправкиEmail;
	Элементы.КомандаSMS.Видимость                   = ВозможностьОтправкиSMS;
	Элементы.ГруппаДанныеSMSИEmail.Видимость        = ВозможностьЭлектронногоПлатежа;
	
	Если ВозможностьОтказаОтПечатиЧека Тогда
		ПечатьЧека = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеSMSEmail()
	
	КонтрольЗаполненияДанных = ВозможностьЭлектронногоПлатежа И НеПечататьБумажныйЧек;
	
	РозничныеПродажиКлиент.ОбновитьДанныеSMSEmail(Телефон, Email, КонтрольЗаполненияДанных, ДанныеSMSИлиEmail, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	
	Элементы.КомандаEmail.Доступность = ВозможностьЭлектронногоПлатежа;
	Элементы.КомандаSMS.Доступность   = ВозможностьЭлектронногоПлатежа;
	
	Если (ЗначениеЗаполнено(Телефон)
			ИЛИ ЗначениеЗаполнено(Email))
		И ЗначениеЗаполнено(ДисконтнаяКарта) Тогда
		Если ОтказКлиентаОтСохраненияТелефонаEmail Тогда
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.НеСохранять16;
		Иначе
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.Сохранить16;
		КонецЕсли;
	Иначе
		Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.Пустая;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
