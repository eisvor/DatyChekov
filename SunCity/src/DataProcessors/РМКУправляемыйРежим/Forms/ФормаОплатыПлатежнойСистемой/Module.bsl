
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если НЕ РезультатВыполнения.Результат Тогда
		ЗаголовокИнформации = НСтр("ru = 'При подключении оборудования произошла ошибка:'");
		ТекстИнформации     = РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстИнформации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	СтруктураПараметров = ПодключаемоеОборудованиеРТКлиент.СтруктураДанныхПоиска();
	СтруктураПараметров.ДанныеПО = Штрихкод;
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ОбработатьПолученныеДанные(ЭтотОбъект, СтруктураПараметров, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВводаТелефона(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.ВведенноеЧисло) Тогда
			ПодключаемоеОборудованиеРТКлиент.ПреобразоватьТелефонКПользовательскомуВиду(РезультатОткрытияФормы.ВведенноеЧисло, Телефон, ТелефонСтрокой);
			Email = "";
			ОтказКлиентаОтСохраненияТелефонаEmail = РезультатОткрытияФормы.ОтказКлиентаОтСохраненияТелефона;
			ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент();
		Иначе
			Телефон = 0;
			ТелефонСтрокой = "";
			Email = "";
		КонецЕсли;
		
		ОбновитьДанныеSMSEmail();
		
	КонецЕсли;
	
	НастроитьФормуЭлектронныйПлатеж();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВводаEmail(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.Email) Тогда
			Email = РезультатОткрытияФормы.Email;
			Телефон = 0;
			ТелефонСтрокой = "";
			ОтказКлиентаОтСохраненияТелефонаEmail = РезультатОткрытияФормы.ОтказКлиентаОтСохраненияEmail;
			ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент();
		Иначе
			Телефон = 0;
			ТелефонСтрокой = "";
			Email = "";
		КонецЕсли;
		
		ОбновитьДанныеSMSEmail();
			
	КонецЕсли;
	
	НастроитьФормуЭлектронныйПлатеж();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытиеФормыВопросаНеПечататьБумажныйЧек(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		
		Если НЕ ВРЕГ(РезультатОткрытияФормы) = "НЕТ" Тогда
			Возврат;
		КонецЕсли;
		
		НеПечататьБумажныйЧек = Ложь;
		
		ЗавершитьОплатуФрагмент();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("НадписьЗаголовок") 
		И ЗначениеЗаполнено(Параметры.НадписьЗаголовок) Тогда
		
		НадписьЗаголовок = Параметры.НадписьЗаголовок;
		
		Если Параметры.Свойство("ЦветТекстаЗаголовка") Тогда
			Элементы.НадписьЗаголовок.ЦветТекстаЗаголовка = Параметры.ЦветТекстаЗаголовка;
		КонецЕсли;
	КонецЕсли;
	
	ИнтеграцияСПлатежнымиСистемамиРТСервер.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Если Параметры.Свойство("ВозможностьЭлектронногоПлатежа") Тогда
		ВозможностьЭлектронногоПлатежа  = Параметры.ВозможностьЭлектронногоПлатежа;
	Иначе
		ВозможностьЭлектронногоПлатежа 	= ПодключаемоеОборудованиеРТ.ВозможностьЭлектронногоПлатежа(Параметры.КассаККМ);
	КонецЕсли;
	
	ДисконтнаяКарта					= Параметры.ДисконтнаяКарта;
	НеПечататьБумажныйЧек			= ПодключаемоеОборудованиеРТ.ПроверитьВозможностьПечатиБумажногоЧека(Параметры.КассаККМ);
	
	Если ВозможностьЭлектронногоПлатежа Тогда
		ПередачаEmailЧерезПрограмму = Параметры.КассаККМ.ЭлектронныйЧекEmailПередаютсяПрограммой1С;
		ПередачаSMSЧерезПрограмму  	= Параметры.КассаККМ.ЭлектронныйЧекSMSПередаютсяПрограммой1С;
	КонецЕсли;
	
	Если ВозможностьЭлектронногоПлатежа 
		И НеПечататьБумажныйЧек Тогда
		Параметры.Свойство("Телефон",	Телефон); 
		Параметры.Свойство("Email", 	Email);
	КонецЕсли;
	
	ОтказКлиентаОтСохраненияТелефонаEmail = ЗначениеЗаполнено(Телефон) ИЛИ ЗначениеЗаполнено(Email);
	ИспользоватьПодключаемоеОборудование  = ЗначениеНастроекВызовСервера.ИспользоватьПодключаемоеОборудование();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
		ОповещенияПриПодключении, 
		ЭтотОбъект, 
		"СканерШтрихкода, СчитывательМагнитныхКарт, ДисплейПокупателя");
	// Конец ПодключаемоеОборудование
	
	Если ВозможностьЭлектронногоПлатежа Тогда
		ОбновитьДанныеSMSEmail();
	КонецЕсли;
	
	НастроитьФормуЭлектронныйПлатеж();
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудованияРМК(ЭтотОбъект, Источник, Событие, Данные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ПередЗакрытием(ЭтотОбъект, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидыОплатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗавершитьОплату(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОплатыПлатежнойСистемыПриИзменении(Элемент)
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоВидуОплаты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОписаниеОшибкиОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗавершитьПринудительно(Команда)
	
	ОповещениеЗавершитьОплату = Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
		
		ТекстИнформации = НСтр("ru = 'Проверьте выполнение операции оплаты платежной системы.'") + Символы.ПС;
		ТекстИнформации = ТекстИнформации + НСтр("ru = 'Сумма операции:'")        + " "+ ИтогПоОрганизации  + Символы.ПС;
		ТекстИнформации = ТекстИнформации;
		ЗаголовокИнформации = НСтр("ru = 'Операция оплаты прошла успешно?'");
		
		ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМКУправляемой(ЗаголовокИнформации, ТекстИнформации,,ОповещениеЗавершитьОплату);
		
	Иначе
		
		ТекстИнформации = НСтр("ru = 'Проверьте выполнение операции возврата платежной системы.'") + Символы.ПС;
		ТекстИнформации = ТекстИнформации + НСтр("ru = 'Сумма операции:'")        + " "+ ИтогПоОрганизации + Символы.ПС;
		ТекстИнформации = ТекстИнформации;
		ЗаголовокИнформации = НСтр("ru = 'Операция возврата оплаты прошла успешно?'");
		
		ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМКУправляемой(ЗаголовокИнформации, ТекстИнформации,,ОповещениеЗавершитьОплату);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОплату(Команда)
	
	ГруппаСтраницы 							= Элементы.ГруппаСтраницы;
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	Если ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОсновнаяСтраница Тогда
		
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
		
			ТекущаяСтрока = Элементы.ВидыОплатПС.ТекущаяСтрока;
		
			Если ТекущаяСтрока = Неопределено Тогда
			
				ТекстСообщения = НСтр("ru = 'Не выбран способ оплаты'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);

				Возврат;
			
			КонецЕсли;
		
			ВидОплатыПлатежнойСистемы = ВидыОплат.НайтиПоИдентификатору(ТекущаяСтрока).ВидОплаты;
	
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоВидуОплаты(ЭтотОбъект);
			
			Если Оплачивается Тогда
				ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
			Иначе
				ПодключитьОбработчикОжидания("ПолучитьИдентификаторОплаты", 0.1, Истина);
			КонецЕсли;
			
		Иначе
			
			Если Оплачивается Тогда
				
				ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
				
			ИначеЕсли ЗначениеЗаполнено(ДокументОплаты)
				И Не ЗначениеЗаполнено(ИдентификаторОплаты) Тогда
				
				ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
				
			Иначе
				ИнтеграцияСПлатежнымиСистемамиРТКлиент.ВозвратОплаты(ЭтотОбъект, ОповещениеЗавершитьОплату);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодтверждение Тогда
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиент.ПодтвердитьВозврат(ЭтотОбъект, ДокументВозврата, Интеграция, ОповещениеЗавершитьОплату);
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаQRКод Тогда
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиент.ПечатьПречека(ЭтотОбъект, ТипПлатежнойСистемы, ИдентификаторQRКода, Неопределено, Истина);
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыполняется Тогда
		
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
			ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
		Иначе
			ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибкаПолученияСтатуса Тогда
		
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
			ПодключитьОбработчикОжидания("ОпределитьСтатусОплаты", 0.1, Истина);
		Иначе
			ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		КонецЕсли;
		
	ИначеЕсли ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка Тогда
		
		ЭтотОбъект.Закрыть();
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ОповещениеЗавершитьОплату, "ЗакрытьЧек");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИнструкция(Команда)
	
	ГруппаСтраницы	= Элементы.ГруппаСтраницы;
	
	Если ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаQRКод Тогда
		ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнструкция;
	Иначе
		ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаQRКод;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОплату(Команда)
	
	ГруппаСтраницы = Элементы.ГруппаСтраницы;
	
	Если ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка Тогда
		
		Закрыть();
		
	Иначе
		
		Отказ = Ложь;
		ОповещениеЗавершитьОплату = Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
		
		ИнтеграцияСПлатежнымиСистемамиРТКлиент.ОтменитьОплату(ЭтотОбъект, 
																ДокументОплаты, 
																Интеграция, 
																ИдентификаторЗаданияФормированияQRКода, 
																ИдентификаторЗаданияПроверкиСтатуса, 
																ИдентификаторЗаданияВозврата, 
																ОповещениеЗавершитьОплату,
																Отказ);
		
		Если Не Отказ Тогда
			ЭтотОбъект.Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтложить(Команда)
	
	СанкционированноеЗакрытие = Истина;
	
	ЭтотОбъект.Закрыть("ОтложитьЧек");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаSMS(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВводаТелефона", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок" , НСтр("ru = 'Введите номер телефона'"));
	ПараметрыФормы.Вставить("ДисконтнаяКарта", ДисконтнаяКарта);
	ПараметрыФормы.Вставить("ЧислоВвода", Телефон);
	ПараметрыФормы.Вставить("ОтказКлиентаОтСохраненияТелефона", ОтказКлиентаОтСохраненияТелефонаEmail);
	
	ПодключаемоеОборудованиеРТКлиент.ОткрытьФормуВводаТелефонаДляОтправкиЧерезОФД(ОбработчикОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаEmail(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВводаEmail", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Email", Email);
	ПараметрыФормы.Вставить("ДисконтнаяКарта", ДисконтнаяКарта);
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Введите адрес электронной почты (Email)'"));
	ПараметрыФормы.Вставить("ОтказКлиентаОтСохраненияEmail", ОтказКлиентаОтСохраненияТелефонаEmail);
	
	ПодключаемоеОборудованиеРТКлиент.ОткрытьФормуВводаEmailОтправкиЧерезОФД(ОбработчикОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеПечатиЧека(Команда)
	
	ПечатьЧека = НЕ ПечатьЧека;
	
	КомандаИзменениеПечатиЧекаКлиент(ПечатьЧека);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьОплатуВозвратПлатежнойСистемой(Действие, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытиеФормыВопросаНеПечататьБумажныйЧек", ЭтотОбъект);
	
	Если Действие = "ДобавитьВидОплаты" Тогда
		
		БылоПодтверждениеПлатежнойСистемы = Истина;
		
	ИначеЕсли Действие = "ЗакрытьЧек"
		ИЛИ Действие = "Да" Тогда
		
		Если Действие = "Да" Тогда
		
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЗавершение;
			ИнтеграцияСПлатежнымиСистемамиРТКлиентСервер.НастроитьФормуПоИнтеграции(ЭтотОбъект);
			
		КонецЕсли;
		
		Если ВозможностьЭлектронногоПлатежа
			И НеПечататьБумажныйЧек
			И НЕ ОбщегоНазначенияРТКлиент.ПроверитьДанныеЭлектронногоЧека(Телефон, Email, ОбработчикОповещения) Тогда
			Возврат;
		КонецЕСли;
		
		ЗавершитьОплатуФрагмент();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЗавершитьОплатуФрагмент()
	
	СанкционированноеЗакрытие = Истина;
		
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Действие"   , НСтр("ru = 'Закрыть чек'"));

	НастройкиВидаОплаты = ВидыОплат.НайтиСтроки(Новый Структура("ВидОплаты", ВидОплатыПлатежнойСистемы));
	НастройкиВидаОплаты = ?(НастройкиВидаОплаты.Количество(), НастройкиВидаОплаты[0], Неопределено);
	
	СтрокаОплаты = Оплата.Добавить();
	СтрокаОплаты.ВидОплаты   	  				= ВидОплатыПлатежнойСистемы;
	СтрокаОплаты.Организация 	  				= Организация;
	СтрокаОплаты.Сумма       	  				= ИтогПоОрганизации;
	СтрокаОплаты.КлючСвязиТПЧеков 				= КлючСвязиТПЧеков;
	СтрокаОплаты.ИнтеграцияСПлатежнымиСистемами	= Интеграция;
	СтрокаОплаты.ИдентификаторПлатежнойСистемы  = ?(НастройкиВидаОплаты <> Неопределено,
		НастройкиВидаОплаты.ИдентификаторПС, Неопределено);
	
	Если БылоПодтверждениеПлатежнойСистемы
		И ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
		СтрокаОплаты.СсылочныйНомер	  			= ИнтеграцияСПлатежнымиСистемамиРТВызовСервера.ИдентификаторыОперацииОплаты(Интеграция, ДокументОплаты);
	КонецЕсли;
		
	Сдача = ИтогПоОрганизации - Оплата.Итог("Сумма");
	Если Сдача > 0 Тогда
		СтрокаОплаты.Сумма = СтрокаОплаты.Сумма + Сдача;
	КонецЕсли;
		
	СтруктураОтвета.Вставить("АдресТаблицыОплата", АдресТаблицыОплата());
		
	Если ЗначениеЗаполнено(ДисконтнаяКарта) 
		И НЕ ОтказКлиентаОтСохраненияТелефонаEmail Тогда
		СтруктураОтвета.Вставить("СохранятьТелефонEmail");
	КонецЕсли;
	СтруктураОтвета.Вставить("Email"  , 				Email);
	СтруктураОтвета.Вставить("Телефон", 				Формат(Телефон, "ЧЦ=10; ЧДЦ=; ЧГ=0"));
	СтруктураОтвета.Вставить("НеПечататьБумажныйЧек", 	НеПечататьБумажныйЧек);
		
	Закрыть(СтруктураОтвета);
	
КонецФункции

&НаКлиенте
Процедура ПолучитьИдентификаторОплаты()
	
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ПолучитьИдентификаторОплаты(ЭтотОбъект, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСтатусОплаты()
	
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ОпределитьСтатусОплаты(ЭтотОбъект, ДокументОплаты, Интеграция, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСтатусВозврата()
	
	ОповещениеЗавершитьОплату 				= Новый ОписаниеОповещения("ЗавершитьОплатуВозвратПлатежнойСистемой", ЭтотОбъект);
	
	ИнтеграцияСПлатежнымиСистемамиРТКлиент.ОпределитьСтатусВозврата(ЭтотОбъект, ДокументВозврата, Интеграция, ОповещениеЗавершитьОплату);
	
КонецПроцедуры

&НаСервере
Функция АдресТаблицыОплата()
	
	АдресТаблицыОплата = ПоместитьВоВременноеХранилище(Оплата.Выгрузить(), Новый УникальныйИдентификатор);
	
	Возврат АдресТаблицыОплата;
	
КонецФункции

&НаКлиенте
Процедура КомандаИзменениеПечатиЧекаКлиент(ВключитьКартинкуПечати)
	
	Если ВключитьКартинкуПечати Тогда
		Элементы.КомандаИзменениеПечатиЧека.Картинка = БиблиотекаКартинок.ПечатьЧека;
	Иначе
		Элементы.КомандаИзменениеПечатиЧека.Картинка = БиблиотекаКартинок.ОтказОтПечатиЧека;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВариантыПлатежаУстановитьВидимостьИДоступностьКлиент()
	
	ВозможностьОтправкиSMS = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтправкиEmail = ВозможностьЭлектронногоПлатежа;
	ВозможностьОтказаОтПечатиЧека = Ложь;
	Если (ВозможностьОтправкиSMS И ЗначениеЗаполнено(Телефон) И НЕ ПередачаSMSЧерезПрограмму)
		ИЛИ (ВозможностьОтправкиEmail И ЗначениеЗаполнено(Email) И НЕ ПередачаEmailЧерезПрограмму) Тогда
		
		ВозможностьОтказаОтПечатиЧека = Истина;
		
	КонецЕсли;
	
	Если ВозможностьОтказаОтПечатиЧека Тогда
		ПечатьЧека = Истина;
	КонецЕсли;
	
	НастроитьФормуЭлектронныйПлатеж();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеSMSEmail()
	
	КонтрольЗаполненияДанных = ВозможностьЭлектронногоПлатежа И НеПечататьБумажныйЧек;
	
	РозничныеПродажиКлиент.ОбновитьДанныеSMSEmail(Телефон, Email, КонтрольЗаполненияДанных, ДанныеSMSИлиEmail, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуЭлектронныйПлатеж()
	
	Элементы.КомандаEmail.Доступность 						= ВозможностьЭлектронногоПлатежа;
	Элементы.КомандаSMS.Доступность   						= ВозможностьЭлектронногоПлатежа;
	Элементы.ГруппаДанныеSMSИEmail.Видимость        		= ВозможностьЭлектронногоПлатежа;
	Элементы.ГруппаSMSиEmail.Видимость						= ВозможностьЭлектронногоПлатежа;
	Элементы.КомандаИзменениеПечатиЧека.Доступность 		= ВозможностьОтказаОтПечатиЧека;
	
	Если (ЗначениеЗаполнено(Телефон)
			ИЛИ ЗначениеЗаполнено(Email))
		И ЗначениеЗаполнено(ДисконтнаяКарта) Тогда
		Если ОтказКлиентаОтСохраненияТелефонаEmail Тогда
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка 		= БиблиотекаКартинок.НеСохранять16;
		Иначе
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка 		= БиблиотекаКартинок.Сохранить16;
		КонецЕсли;
	Иначе
		Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка 		= БиблиотекаКартинок.Пустая;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
