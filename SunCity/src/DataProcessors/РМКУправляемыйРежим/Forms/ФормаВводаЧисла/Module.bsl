
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеОткрытьФормуВопроса(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		Если ВРЕГ(РезультатОткрытияФормы) = "ДА" Тогда
			ЗакрытьСПередачейРезультата();
		КонецЕсли;
	КонецЕсли;
	ПервыйВвод = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСимволовПослеЗапятой = 2;
	ПервыйВвод = Истина;
	
	Если Параметры.Свойство("ФорматироватьСтроку") Тогда
		ФорматироватьСтроку = Параметры.ФорматироватьСтроку;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("МаксимальноеЗначение") Тогда
		МаксимальноеЗначение = Параметры.МаксимальноеЗначение;
	КонецЕсли;
	
	Если Параметры.Свойство("МинимальноеЗначение") Тогда
		МинимальноеЗначение = Параметры.МинимальноеЗначение;
	КонецЕсли;
	
	Если Параметры.Свойство("ЧислоВвода") Тогда
		ЧислоВвода    = Параметры.ЧислоВвода;
		ВводимоеЧисло = Формат(ЧислоВвода, "ЧЦ=15 ЧДЦ=2");
	КонецЕсли;
	
	Если Параметры.Свойство("Отрицательное") Тогда
		Отрицательное = Параметры.Отрицательное;
	КонецЕсли;
	
	Если Параметры.Свойство("АвторизацияЭТ") Тогда
		АвторизацияЭТ = Параметры.АвторизацияЭТ;
	КонецЕсли;
	
	Если Параметры.Свойство("ВозвращатьЧислоСтрокой") Тогда
		ВозвращатьЧислоСтрокой = Параметры.ВозвращатьЧислоСтрокой;
	КонецЕсли;
	
	ВидимостьОстаткиВКассе                    = Ложь;
	ВидимостьМинимальноеЗначение              = Ложь;
	ВидимостьДоговорКонтрагента               = Ложь;
	ВидимостьВознаграждениеВключеноВСтоимость = Ложь;
	Если Параметры.Свойство("ПараметрыВыемки") Тогда
		
		ПараметрыВыемки = Параметры.ПараметрыВыемки;
		// Инициализируем при необходимости.
		Если ПараметрыВыемки.СуммаОстаток = Неопределено Тогда
			РозничныеПродажиСервер.ИнициализироватьПараметрыВыемкиИзКассы(ПараметрыВыемки);
		КонецЕсли;
		
		ВидимостьОстаткиВКассе = Истина;
		МаксимальноеЗначение = ПараметрыВыемки.СуммаОстаток;
		ШаблонПредупрежденияМаксимальноеЧисло = НСтр("ru='Сумма выемки не может превышать сумму остатка: %1'");
		
		Если ПараметрыВыемки.ИспользоватьАгентскиеПлатежиИРазделениеВыручки Тогда
			Если ПараметрыВыемки.ДоговорКонтрагента = Неопределено Тогда
				// Выемка при закрытии смены.
				ВидимостьМинимальноеЗначение = Истина;
				МинимальноеЗначение = ПараметрыВыемки.СуммаОстатокАгентские;
				ШаблонПредупрежденияМинимальноеЧисло = НСтр("ru='Сумма выемки должны быть не менее остатка агентских средств: %1'");
			Иначе
				// Выемка в течение кассовой смены.
				ОбновитьЗаголовокДоговорКонтрагента(ЭтотОбъект);
				ВидимостьДоговорКонтрагента = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ДанныеАгентскогоДоговора", ДанныеАгентскогоДоговора)
		И ЗначениеЗаполнено(ДанныеАгентскогоДоговора) Тогда
		ВидимостьВознаграждениеВключеноВСтоимость = Истина;
		
		Если НЕ Параметры.Свойство("ВознаграждениеВключеноВСтоимость", ВознаграждениеВключеноВСтоимость) Тогда
			ВознаграждениеВключеноВСтоимость = ДанныеАгентскогоДоговора.ВознаграждениеВключеноВСтоимость;
		КонецЕсли;
		Если ВознаграждениеВключеноВСтоимость Тогда
			ВознаграждениеВключеноВСтоимостьПриИзмененииКлиентСервер(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ШаблонПредупрежденияМаксимальноеЧисло) Тогда
		ШаблонПредупрежденияМаксимальноеЧисло = НСтр("ru='Введенное значение не может превышать: %1'");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ШаблонПредупрежденияМинимальноеЧисло) Тогда
		ШаблонПредупрежденияМинимальноеЧисло = НСтр("ru='Введенное значение не может быть менее: %1'");
	КонецЕсли;
	
	Элементы.ДекорацияНомерКарты.Видимость              = АвторизацияЭТ;
	Элементы.ГруппаОстатокВКассе.Видимость              = ВидимостьОстаткиВКассе;
	Элементы.МинимальноеЗначение.Видимость              = ВидимостьМинимальноеЗначение;
	Элементы.ГруппаДоговорКонтрагента.Видимость         = ВидимостьДоговорКонтрагента;
	Элементы.ВознаграждениеВключеноВСтоимость.Видимость = ВидимостьВознаграждениеВключеноВСтоимость;
	
	ВидимостьКомандыПовтора = Ложь;
	Если Параметры.Свойство("КодПроверкиСМС") Тогда
		КодПроверкиСМС = Параметры.КодПроверкиСМС;
		ВидимостьКомандыПовтора = Истина;
		// эти параметры должны идти только вместе
		НомерТелефонаСМС = Параметры.НомерТелефонаСМС;
	КонецЕсли;
	Элементы.ОтправитьКодПодтвержденияПовторноПраваяКлавиатура.Видимость = ВидимостьКомандыПовтора;
	Элементы.ОтправитьКодПодтвержденияПовторно.Видимость                 = ВидимостьКомандыПовтора;
	Элементы.ПолеКартинкаПустая.Видимость                                = НЕ ВидимостьКомандыПовтора;
	Элементы.ПолеКартинкаПустаяПраваяКлавиатура.Видимость                = НЕ ВидимостьКомандыПовтора;
	
	Элементы.ДекорацияНомерКарты.Заголовок = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:
				|""%ОписаниеОшибки%"".'" );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если АвторизацияЭТ Тогда
		// Проверка и подключение считывателей МК.
		ПоддерживаемыеТипыПО = Новый Массив();
		ПоддерживаемыеТипыПО.Добавить("СчитывательМагнитныхКарт");
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);  
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(,ЭтотОбъект, ПоддерживаемыеТипыПО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если АвторизацияЭТ Тогда
		// Отключение считывателей МК
		ПоддерживаемыеТипыПО = Новый Массив();
		ПоддерживаемыеТипыПО.Добавить("СчитывательМагнитныхКарт");

		МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(,ЭтотОбъект, ПоддерживаемыеТипыПО);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
	   И ВводДоступен() Тогда
		Если ИмяСобытия = "TracksData" Тогда
			ТекКод = Параметр[0];
			ПодключаемоеОборудованиеРТКлиент.ВыбратьМагнитныйКод(ТекКод);
			Если ПустаяСтрока(ТекКод) Тогда
				Возврат;
			КонецЕсли;
			ВводимоеЧисло = ТекКод;
			ПервыйВвод = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ОписаниеСобытия = Новый Структура();
		ОписаниеОшибки  = "";
		ОписаниеСобытия.Вставить("Источник", Источник);
		ОписаниеСобытия.Вставить("Событие",  Событие);
		ОписаниеСобытия.Вставить("Данные",   Данные);
		
		Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Если Результат = Неопределено Тогда 
			ЗаголовокСообщения = НСтр("ru = 'При обработке внешнего события от устройства произошла ошибка:'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокСообщения, ОписаниеОшибки);
		Иначе
			ОбработкаОповещения(Результат.ИмяСобытия, Результат.Параметр, Результат.Источник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВознаграждениеВключеноВСтоимостьПриИзменении(Элемент)
	
	ВознаграждениеВключеноВСтоимостьПриИзмененииКлиентСервер(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Если ВводимоеЧисло = "" Тогда
		ВводимоеЧисло = "0";
	КонецЕсли;
	
	ЧислоВхождений = СтрЧислоВхождений(ВводимоеЧисло, ",");
	
	Если Не ЧислоВхождений > 0 Тогда
		ВводимоеЧисло = ВводимоеЧисло + ",";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	ВводимоеЧисло = "";
	ЧислоВвода    = 0;
	ПервыйВвод = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаEnter(Команда)
	
	ВведенноеЧисло = ПривестиСтрокуКЧислу(ВводимоеЧисло, Ложь);
	
	ТекстПредупреждения = "";
	Если НЕ МаксимальноеЗначение = Неопределено
		И ТипЗнч(МаксимальноеЗначение) = Тип("Число")
		И ВведенноеЧисло > МаксимальноеЗначение Тогда
		
		ТекстПредупреждения = СтрШаблон(ШаблонПредупрежденияМаксимальноеЧисло, Формат(МаксимальноеЗначение, "ЧДЦ=2; ЧН="));
		
		ЧислоВвода    = МаксимальноеЗначение;
		ВводимоеЧисло = Формат(МаксимальноеЗначение, "ЧЦ=15; ЧДЦ=2");
		
	ИначеЕсли НЕ МинимальноеЗначение = Неопределено
		И ТипЗнч(МинимальноеЗначение) = Тип("Число")
		И ВведенноеЧисло < МинимальноеЗначение Тогда
		
		ТекстПредупреждения = СтрШаблон(ШаблонПредупрежденияМинимальноеЧисло, Формат(МинимальноеЗначение, "ЧДЦ=2; ЧН="));
		
		ЧислоВвода    = МинимальноеЗначение;
		ВводимоеЧисло = Формат(МинимальноеЗначение, "ЧЦ=15; ЧДЦ=2");
		
	КонецЕсли;
	
	// Введенное значение не удовлетворяет диапазону.
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ПроверитьДополнительныеУсловияПередЗакрытием() Тогда
		ЗакрытьСПередачейРезультата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьДополнительныеУсловияПередЗакрытием()
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВопроса", ЭтотОбъект);
	
	ТекстВопроса = "";
	Если НЕ ПараметрыВыемки = Неопределено Тогда
		// Выполним дополнительные проверки при выемке денежных средств из кассы.
		Если ПараметрыВыемки.ДоговорКонтрагента = Неопределено
			И ПараметрыВыемки.МаксимальнаяСуммаРазмена < ПараметрыВыемки.СуммаОстаток - ЧислоВвода Тогда
			
			ТекстВопроса = НСтр("ru = 'Сумма остатка ДС в кассе ККМ будет превышать максимальную сумму размена. Продолжить закрытие кассы?'");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстВопроса) Тогда
		ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМКУправляемой(ЭтотОбъект.Заголовок, ТекстВопроса,, ОбработчикОповещения);
	КонецЕсли;
	
	Возврат НЕ ЗначениеЗаполнено(ТекстВопроса);
	
КонецФункции

&НаКлиенте
Процедура ОтправитьКодПроверкиПовторно(Команда)
	
	РезультатОтправки = ОтправитьСообщениеСКодом();
	Если НЕ РезультатОтправки.Результат Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось отправить сообщение с кодом проверки по причине:'") + Символы.ПС + РезультатОтправки.ОписаниеОшибки;
		ЗаголовокИнформации = НСтр("ru = 'Выбор карты не возможен'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьДоговорКонтрагента(Команда)
	ОбработчикОповещения = Новый ОписаниеОповещения("ВыбратьДоговорКонтрагентаЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КассаККМ", ПараметрыВыемки.КассаККМ);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ОткрытьФорму("Обработка.РМКУправляемыйРежим.Форма.ФормаВыбораДоговораКонтрагента",
		ПараметрыФормы, ЭтотОбъект,,,, ОбработчикОповещения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Запятая = Сред(ВводимоеЧисло, СтрДлина(ВводимоеЧисло) - КоличествоСимволовПослеЗапятой, 1);
	
	Если НЕ Запятая = "," Тогда
		ВводимоеЧисло = ВводимоеЧисло + ВведеннаяЦифраСтрокой;
	КонецЕсли;
	
	ЧислоВвода = ПривестиСтрокуКЧислу(ВводимоеЧисло, Истина);
	
	ТекущийЭлемент = Элементы.КомандаEnter;
	
	Если ФорматироватьСтроку 
		И СтрДлина(ВводимоеЧисло)>20 Тогда
		ВводимоеЧисло = Формат(ЧислоВвода, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	
КонецПроцедуры

// Функция выполняет приведение строки к числу.
// Параметры:
//  ЧислоСтрокой           - Строка - Строка приводимая к числу.
//  ВозвращатьНеопределено - Булево - Если Истина и строка содержит некорректное значение, то возвращать Неопределено.
//
// Возвращаемое значение:
//  Число
//
&НаКлиенте
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь)
	
	Если ЗначениеЗаполнено(ЧислоСтрокой) Тогда
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
		ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	Иначе
		ЗначениеЧисла = 0;
	КонецЕсли;
		
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаКлиенте
Процедура ЗакрытьСПередачейРезультата()
	
	СтруктураОтвета = Новый Структура;
	Если ВозвращатьЧислоСтрокой Тогда
		СтруктураОтвета.Вставить("ВведенноеЧисло", ВводимоеЧисло);
	Иначе
		СтруктураОтвета.Вставить("ВведенноеЧисло", ПривестиСтрокуКЧислу(ВводимоеЧисло, Истина));
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыВыемки) Тогда
		СтруктураОтвета.Вставить("ПараметрыВыемки", ПараметрыВыемки);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеАгентскогоДоговора) Тогда
		Если ВознаграждениеВключеноВСтоимость Тогда
			Платеж                          = 0;
			ПлатежСАгентскимВознаграждением = ЧислоВвода;
		Иначе
			Платеж                          = ЧислоВвода;
			ПлатежСАгентскимВознаграждением = 0;
		КонецЕсли;
		ДенежныеСредстваКлиентСервер.РассчитатьПоказателиАгентскогоПлатежа(ДанныеАгентскогоДоговора, Платеж, ПлатежСАгентскимВознаграждением);
		
		СтруктураОтвета.Вставить("Платеж",                          Платеж);
		СтруктураОтвета.Вставить("ПлатежСАгентскимВознаграждением", ПлатежСАгентскимВознаграждением);
	КонецЕсли;
	
	СтруктураОтвета.Вставить("ДанныеКарты", ДанныеКарты);
	
	Закрыть(СтруктураОтвета)
	
КонецПроцедуры

&НаСервере
Функция ОтправитьСообщениеСКодом()
	
	Возврат РозничныеПродажиСервер.ОтправитьСообщениеСКодом(КодПроверкиСМС, НомерТелефонаСМС);
	
КонецФункции

&НаКлиенте
Процедура ВыбратьДоговорКонтрагентаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВыемки.ДоговорКонтрагента = РезультатЗакрытия.ДоговорКонтрагента;
	ПараметрыВыемки.СуммаОстаток       = РезультатЗакрытия.СуммаОстаток;
	МаксимальноеЗначение               = РезультатЗакрытия.СуммаОстаток;
	
	Если НЕ ЗначениеЗаполнено(ЧислоВвода) И ЗначениеЗаполнено(ПараметрыВыемки.ДоговорКонтрагента) Тогда
		ЧислоВвода    = РезультатЗакрытия.СуммаОстаток;
		ВводимоеЧисло = Формат(ЧислоВвода, "ЧЦ=15; ЧДЦ=2");
	КонецЕсли;
	
	ОбновитьЗаголовокДоговорКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовокДоговорКонтрагента(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ДекорацияДоговорКонтрагента.Заголовок = ?(ЗначениеЗаполнено(Форма.ПараметрыВыемки.ДоговорКонтрагента),
		Форма.ПараметрыВыемки.ДоговорКонтрагента,
		НСтр("ru='Собственные средства'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВознаграждениеВключеноВСтоимостьПриИзмененииКлиентСервер(Форма)
	
	Если НЕ ЗначениеЗаполнено(Форма.ЧислоВвода) Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ВознаграждениеВключеноВСтоимость Тогда
		Платеж                          = Форма.ЧислоВвода;
		ПлатежСАгентскимВознаграждением = 0;
	Иначе
		Платеж                          = 0;
		ПлатежСАгентскимВознаграждением = Форма.ЧислоВвода;
	КонецЕсли;
	ДенежныеСредстваКлиентСервер.РассчитатьПоказателиАгентскогоПлатежа(Форма.ДанныеАгентскогоДоговора, Платеж, ПлатежСАгентскимВознаграждением);
	
	Форма.ЧислоВвода = ?(Форма.ВознаграждениеВключеноВСтоимость, ПлатежСАгентскимВознаграждением, Платеж);
	Форма.ВводимоеЧисло = Формат(Форма.ЧислоВвода, "ЧЦ=15; ЧДЦ=2");
	
КонецПроцедуры

#КонецОбласти