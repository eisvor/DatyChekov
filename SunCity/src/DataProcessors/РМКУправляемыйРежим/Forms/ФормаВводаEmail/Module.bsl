#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	ОбработатьПолученныеДанные(Штрихкод, ДополнительныеПараметры);
	
КонецПроцедуры


&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	ОбработатьПолученныеДанные(ТекКод, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Email") Тогда
		Email = Параметры.Email;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтказКлиентаОтСохраненияEmail") Тогда
		ОтказКлиентаОтСохраненияEmail = Параметры.ОтказКлиентаОтСохраненияEmail;
	КонецЕсли;
	
	Если Параметры.Свойство("ДисконтнаяКарта") Тогда
		ДисконтнаяКарта = Параметры.ДисконтнаяКарта;
	КонецЕсли;
		
	ОбработатьДисконтнуюКарту();
		
	ТекущийЭлемент = Элементы.ВведенныйEmail;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыОборудования = "СканерШтрихкода, СчитывательМагнитныхКарт";
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудованияРМК(ЭтотОбъект, Источник, Событие, Данные);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСтереть(Команда)
	
	Email = "";
	
	ТекущийЭлемент = Элементы.ВведенныйEmail;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПередатьДанные(Команда)
	
	ЗакрытьСПередачейРезультата();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранениеЗначения(Команда)
	
	ОтказКлиентаОтСохраненияEmail = НЕ ОтказКлиентаОтСохраненияEmail;
	ВывестиКартинкуСохраненияEmailКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры
&НаКлиенте
Процедура ЗакрытьСПередачейРезультата()
	
	Отказ = НЕ ДанныеКорректны(Email);
	
	Если НЕ Отказ Тогда
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("Email", Email);
		СтруктураОтвета.Вставить("ОтказКлиентаОтСохраненияEmail", ОтказКлиентаОтСохраненияEmail);
		
		Закрыть(СтруктураОтвета)
	Иначе
		ЗаголовокИнформации = НСтр("ru = 'Email введен не правильно'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, Email);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДисконтнуюКарту()
	
	Если ЗначениеЗаполнено(ДисконтнаяКарта) Тогда
		
		СписокАдресовЭП = ПодключаемоеОборудованиеРТ.EmailОбъектаДляЧека(ДисконтнаяКарта);

		ЕстьEmail = Ложь;
		Для Каждого АдресЭП ИЗ СписокАдресовЭП Цикл
			Если НЕ ЗначениеЗаполнено(Email) Тогда
				Email = АдресЭП.Значение;
			КонецЕсли;
			
			Элементы.ВведенныйEmail.СписокВыбора.Добавить(АдресЭП.Значение);
			ЕстьEmail = Истина;
		КонецЦикла;
		
		Если ЕстьEmail Тогда
			Элементы.ВведенныйEmail.КнопкаВыпадающегоСписка = Истина;
			Элементы.ВведенныйEmail.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСписке;
		КонецЕсли;
		ВывестиКартинкуСохраненияEmailСервер();
	Иначе
		Элементы.КомандаСохранениеЗначения.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиКартинкуСохраненияEmailКлиент()
	
	Если ОтказКлиентаОтСохраненияEmail Тогда
		Элементы.КомандаСохранениеЗначения.Картинка = БиблиотекаКартинок.НеСохранять32;
	Иначе
		Элементы.КомандаСохранениеЗначения.Картинка = БиблиотекаКартинок.Сохранить32;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиКартинкуСохраненияEmailСервер()
	
	Если ОтказКлиентаОтСохраненияEmail Тогда
		Элементы.КомандаСохранениеЗначения.Картинка = БиблиотекаКартинок.НеСохранять32;
	Иначе
		Элементы.КомандаСохранениеЗначения.Картинка = БиблиотекаКартинок.Сохранить32;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьДанные(Знач Данные)
	Данные = СтрЗаменить(Данные, " ", "");
	Данные = СтрЗаменить(Данные, ";", "@");
	
	Возврат Данные;
	
КонецФункции

&НаКлиенте
Функция ДанныеКорректны(Данные)
	
	Возврат ШтрихкодированиеРТКлиентСервер.ЕмаилКорректен(Данные);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьПолученныеДанные(Данные, ДополнительныеПараметры)
	Если НЕ ПустаяСтрока(Данные) Тогда
		
		// Подготовка штрихкода
		Данные = ПодготовитьДанные(Данные);
		
		// Проверка считанных данных
		Если НЕ ДанныеКорректны(Данные) Тогда
			ЗаголовокИнформации = НСтр("ru = 'Считан некорректный E-mail'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, Email);
			Возврат;
		КонецЕсли;
		
		Email = Данные;
		
	КонецЕсли;
КонецПроцедуры
 
#КонецОбласти
