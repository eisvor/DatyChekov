
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	
	Если Параметры.Свойство("МассивСтруктурОтбора") Тогда
		ЗаполнитьСписокВыбора(Параметры.МассивСтруктурОтбора);
		Если Параметры.Свойство("НадписьПустогоСписка") Тогда
			Элементы.ДекорацияСписокПуст.Заголовок = Параметры.НадписьПустогоСписка;
		КонецЕсли;
		
		Если Список.Количество() = 0 Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСписокПуст;
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	ИспользоватьОбменССайтом = ПолучитьФункциональнуюОпцию("ИспользоватьОбменССайтом");
	Элементы.СписокНомерЗаказаНаСайте.Видимость = ИспользоватьОбменССайтом;
	Элементы.НомерЗаказаНаСайте.Видимость       = ИспользоватьОбменССайтом;
	
	// Почта
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПочта.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элементы.СписокПочта.ПутьКДанным);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	ОтборЭлемента.ПравоеЗначение = НСтр("ru='<Пустое значение>'");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru=''"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
 Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСписокПустНажатие(Элемент)
	
	Закрыть()
	
КонецПроцедуры

&НаКлиенте
Процедура НомерЗаказаПриИзменении(Элемент)
	
	ИзменитьОтборыВСписке("Номер", 
						  НомерЗаказа, 
						  ВидСравненияКомпоновкиДанных.Содержит, 
						  ЗначениеЗаполнено(НомерЗаказа));
	
КонецПроцедуры

&НаКлиенте
Процедура НомерЗаказаНаСайтеПриИзменении(Элемент)
	
	ИзменитьОтборыВСписке("НомерЗаказаНаСайте", 
						  НомерЗаказаНаСайте, 
						  ВидСравненияКомпоновкиДанных.Содержит, 
						  ЗначениеЗаполнено(НомерЗаказаНаСайте));
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	ИзменитьОтборыВСписке("Телефон", 
						  Телефон, 
						  ВидСравненияКомпоновкиДанных.Содержит,
						  ЗначениеЗаполнено(Телефон));
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	ИзменитьОтборыВСписке("СуммаДокумента", 
						  СуммаДокумента, 
						  ВидСравненияКомпоновкиДанных.Равно, 
						  ЗначениеЗаполнено(СуммаДокумента));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВниз(Команда)
	
	ПередвинутьПозицию(1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВверх(Команда)
	
	ПередвинутьПозицию(-1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Передвинуть позицию в списке.
//
// Параметры:
// Движение = 1 (вниз) или -1 (вверх).
// 
&НаКлиенте
Процедура ПередвинутьПозицию(Движение)
	// Вставить содержимое обработчика.
	Если Список.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено  Тогда
		ИндексСтроки = 0;
	Иначе
		ИндексСтроки = Список.Индекс(ТекущиеДанные);
	КонецЕсли;
	
	ИндексСтроки = ИндексСтроки + Движение;
	
	Если ИндексСтроки > (Список.Количество() - 1) Тогда
		ИндексСтроки = 0;
	ИначеЕсли ИндексСтроки < 0 Тогда
		ИндексСтроки = Список.Количество() - 1;
	КонецЕсли;
	
	ТекущиеДанные = Список[ИндексСтроки];
	Элементы.Список.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьВыборСтроки()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Закрыть();
	Иначе
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("ЗаказПокупателя", ТекущиеДанные.Ссылка);
		Закрыть(СтруктураСтроки)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбора(МассивСтруктурОтбора)
	
	СКД = Обработки.РМКУправляемыйРежим.ПолучитьМакет("МакетВыбораЗаказаПокупателя");
	Настройки = СКД.НастройкиПоУмолчанию;
	
	Для каждого ЭлементМассива Из МассивСтруктурОтбора Цикл
		ОбщегоНазначенияРТКлиентСервер.НовыйОтбор(Настройки, 
													 Новый ПолеКомпоновкиДанных(ЭлементМассива.Поле), 
													 ЭлементМассива.Значение,
													 ЭлементМассива.ВидСравнения,
													 ЭлементМассива.Использование)
	КонецЦикла;
	
	ФиксированныйМассивСтруктурОтбора = Новый ФиксированныйМассив(МассивСтруктурОтбора);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СКД,Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ТаблицаЗначений.Сортировать("Дата Убыв");
	
	Список.Загрузить(ТаблицаЗначений);
КонецПроцедуры

&НаСервере
Процедура ИзменитьОтборыВСписке(Поле, Значение, ВидСравнения, Использование)
	
	МассивСтруктурОтбора = Новый Массив(ФиксированныйМассивСтруктурОтбора);
	
	НайденЭлементМассива = Ложь;
	Индекс = 0;
	Для каждого ЭлементМассива Из МассивСтруктурОтбора Цикл
		
		Если ЭлементМассива.Поле = Поле Тогда
			Если Использование Тогда
				ЭлементМассива.Значение      = Значение;
				ЭлементМассива.ВидСравнения  = ВидСравнения;
				ЭлементМассива.Использование = Использование;
				НайденЭлементМассива = Истина;
			Иначе
				МассивСтруктурОтбора.Удалить(Индекс);
				НайденЭлементМассива = Истина;
			КонецЕсли;
			Прервать;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Если НЕ НайденЭлементМассива Тогда
		
		ЭлементМассива = Новый Структура;
		ЭлементМассива.Вставить("Поле", Поле);
		ЭлементМассива.Вставить("Значение", Значение);
		ЭлементМассива.Вставить("ВидСравнения", ВидСравнения);
		ЭлементМассива.Вставить("Использование", Использование);
		
		МассивСтруктурОтбора.Добавить(ЭлементМассива);
	КонецЕсли;
	
	ЗаполнитьСписокВыбора(МассивСтруктурОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНомерЗаказа(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НомерЗаказа;
КонецПроцедуры

&НаКлиенте
Процедура КомандаНомерЗаказаНаСайте(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.НомерЗаказаНаСайте;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСуммаДокумента(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.СуммаДокумента;
КонецПроцедуры

&НаКлиенте
Процедура КомандаТелефон(Команда)
	ЭтотОбъект.ТекущийЭлемент = Элементы.Телефон;
КонецПроцедуры

#КонецОбласти



