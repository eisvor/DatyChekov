
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ЗаголовокИнформации = НСтр("ru = 'При подключении оборудования произошла ошибка:'");
		ТекстИнформации     = РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации, ТекстИнформации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	Если Не ПустаяСтрока(ТекКод) Тогда
		СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		ОбработатьДанныеПоКодуКлиент(Результат)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолученМагнитныйКод(МагнитныйКод) Экспорт 
	
	СтруктураРезультат = ДанныеПоискаПоМагнитномуКодуСервер(МагнитныйКод);
	Возврат ПодключаемоеОборудованиеРТКлиент.ПолученМагнитныйКод(ЭтотОбъект, СтруктураРезультат);
	
КонецФункции

&НаСервере
Функция ДанныеПоискаПоМагнитномуКодуСервер(МагнитныйКод)
	
	Возврат ПодключаемоеОборудованиеРТ.ДанныеПоискаПоМагнитномуКоду(МагнитныйКод, ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	СтруктураРезультат = ДанныеПоискаПоШтрихкодуСервер(Штрихкод);
	Возврат ПодключаемоеОборудованиеРТКлиент.ПолученШтрихкодИзСШК(ЭтотОбъект, СтруктураРезультат);
	
КонецФункции

&НаСервере
Функция ДанныеПоискаПоШтрихкодуСервер(Штрихкод)
	
	Возврат ПодключаемоеОборудованиеРТ.ДанныеПоискаПоШтрихкоду(Штрихкод, ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ОповещениеОбработатьДанныеПоКоду(СтруктураРезультат, ДополнительныеПараметры) Экспорт
	
	ОбработатьДанныеПоКодуСервер(СтруктураРезультат);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	Если СтруктураРезультат.Свойство("РегистрацияНовойКарты")
		ИЛИ СтруктураРезультат.Свойство("РегистрацияНовойКартыВыборШаблона") Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтроки = Неопределено;
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	
	Если СтрокаРезультата.Свойство("Карта") Тогда
		
		Если СтрокаРезультата.ЭтоРегистрационнаяКарта Тогда
			ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		Иначе
			
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
				Список,
				"Ссылка",
				СтрокаРезультата.Карта,
				Истина,
				ВидСравненияКомпоновкиДанных.Равно);
			ЭтотОбъект.ТекущийЭлемент = Элементы.Список;
			Элементы.Список.ТекущаяСтрока = СтрокаРезультата.Карта;
		КонецЕсли;
		
	ИначеЕсли СтрокаРезультата.Свойство("СерийныйНомер") Тогда
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиСертификатов(СтруктураРезультат, СтрокаРезультата);
		
	ИначеЕсли СтрокаРезультата.Свойство("ШтрихкодУпаковкиЕГАИС")
		И ЗначениеЗаполнено(СтрокаРезультата.ШтрихкодУпаковкиЕГАИС) Тогда
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиАкцизныхМарок(СтруктураРезультат, СтрокаРезультата);
		
	Иначе
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиНоменклатуры(СтруктураРезультат, СтрокаРезультата);
		
	КонецЕсли;
	
	Если СтрокаРезультата.Свойство("ТекстПредупреждения") Тогда
		СтруктураРезультат.Вставить("ТекстПредупреждения", СтрокаРезультата.ТекстПредупреждения);
	КонецЕсли;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		СтруктураРезультат.Вставить("АктивизироватьСтроку", ИдентификаторСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента) Экспорт
	
	ОткрытаБлокирующаяФорма = Ложь;
	
	ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоКодуРМК(ЭтотОбъект, СтруктураПараметровКлиента, ОткрытаБлокирующаяФорма);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПраваяКлавиатура;
	Элементы.СтраницыВвода.ТекущаяСтраница = Элементы.СтраницаВводимоеЧисло;
	ЭтотОбъект.ТекущийЭлемент = Элементы.ПолеВводимоеЧисло;
	
	ПодключаемоеОборудованиеРТ.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	ПараметрыСобытийПО = Новый Структура;
	ПараметрыСобытийПО.Вставить("РегистрацияНовойКарты", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(ОповещенияПриПодключении, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудованияРМК(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗафиксироватьВыборСтроки(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	ВводимоеЧисло = "";
	КодТелефона = "";
	НомерТелефонаЧасть1 = "";
	НомерТелефонаЧасть2 = "";
	НомерТелефонаЧасть3 = "";
	Если РежимПоискаКарты = 1 Тогда
		ПервыйВвод = Истина;
	Иначе
		ПервыйВвод = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайти(Команда)
	
	СписокКарт = НайтиКарту();
	УстановитьОтборСписка(СписокКарт);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если ПервыйВвод Тогда
		ВводимоеЧисло = "";
		КодТелефона = "";
		НомерТелефонаЧасть1 = "";
		НомерТелефонаЧасть2 = "";
		НомерТелефонаЧасть3 = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	Если РежимПоискаКарты = 1 Тогда
		Если СтрДлина(КодТелефона) = 3 Тогда
			Если СтрДлина(НомерТелефонаЧасть1) = 3 Тогда
				Если СтрДлина(НомерТелефонаЧасть2) = 2 Тогда
					НомерТелефонаЧасть3 = НомерТелефонаЧасть3 + ВведеннаяЦифраСтрокой;
					Если СтрДлина(НомерТелефонаЧасть3) = 2 Тогда
						ТекущийЭлемент = Элементы.КомандаНайтиПраваяКлавиатура;
					КонецЕсли;
				Иначе
					НомерТелефонаЧасть2 = НомерТелефонаЧасть2 + ВведеннаяЦифраСтрокой;
				КонецЕсли;
			Иначе
				НомерТелефонаЧасть1 = НомерТелефонаЧасть1 + ВведеннаяЦифраСтрокой;
			КонецЕсли;
		Иначе
			КодТелефона = КодТелефона + ВведеннаяЦифраСтрокой;
		КонецЕсли;
		ВводимоеЧисло = "7" + КодТелефона + НомерТелефонаЧасть1 + НомерТелефонаЧасть2 + НомерТелефонаЧасть3;
	Иначе
		ВводимоеЧисло = ВводимоеЧисло + ВведеннаяЦифраСтрокой;
		ТекущийЭлемент = Элементы.ПолеВводимоеЧисло;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСписка(СписокКарт)
	
	КоличествоНайденных = СписокКарт.Количество();
	
	Если КоличествоНайденных = 1 Тогда
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			Список,
			"Ссылка",
			СписокКарт[0].Значение,
			Истина,
			ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			Список,
			"Ссылка",
			СписокКарт,
			Истина,
			ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	ЭтотОбъект.ТекущийЭлемент = Элементы.Список;
	Если КоличествоНайденных > 0 Тогда
		Элементы.Список.ТекущаяСтрока = СписокКарт[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПоискаКартыПриИзменении(Элемент)
	КомандаСтереть(Неопределено);
	УстановитьФокусВвода();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФокусВвода()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаПраваяКлавиатура;
	Если РежимПоискаКарты = 1 Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.Команда9ПраваяКлавиатура;
		Элементы.СтраницыВвода.ТекущаяСтраница = Элементы.СтраницаТелефон;
	Иначе
		Элементы.СтраницыВвода.ТекущаяСтраница = Элементы.СтраницаВводимоеЧисло;
		ЭтотОбъект.ТекущийЭлемент = Элементы.ПолеВводимоеЧисло;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТипПоиска(Команда)
	
	КомандаСтереть(Неопределено);
	Если РежимПоискаКарты >= 3 Тогда
		РежимПоискаКарты = 0;
	Иначе
		РежимПоискаКарты = РежимПоискаКарты + 1;
	КонецЕсли;
	
	УстановитьФокусВвода();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьПоиск(Команда)
	
	ПервыйВвод = Истина;
	ВводимоеЧисло = "";
	КодТелефона = "";
	НомерТелефонаЧасть1 = "";
	НомерТелефонаЧасть2 = "";
	НомерТелефонаЧасть3 = "";
	ОтборыСписковКлиентСервер.УдалитьЭлементОтбораСписка(
		Список,
		"Ссылка");
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьВыборСтроки(ВыборИзСписка=Ложь)
	
	Если ВыборИзСписка ИЛИ Не ЗначениеЗаполнено(ВводимоеЧисло) Тогда
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Закрыть();
		Иначе
			СтруктураОтвета = Новый Структура;
			СтруктураОтвета.Вставить("ДисконтнаяКарта", ТекущиеДанные.Ссылка);
		КонецЕсли;
	Иначе
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("ВведенноеЧисло", ВводимоеЧисло);
		Если РежимПоискаКарты = 1 Тогда
			СтруктураОтвета.Вставить("РежимПоискаКарты", "НомерТелефона");
		ИначеЕсли РежимПоискаКарты = 2 Тогда
			СтруктураОтвета.Вставить("РежимПоискаКарты", "ФИО");
		ИначеЕсли РежимПоискаКарты = 3 Тогда
			СтруктураОтвета.Вставить("РежимПоискаКарты", "Email");
		Иначе
			СтруктураОтвета.Вставить("РежимПоискаКарты", "КодКарты");
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(СтруктураОтвета);
КонецПроцедуры

&НаСервере
Функция НайтиКарту()
	
	РезультатыПоиска = Новый СписокЗначений;
	
	ЗапросПоиска = Новый Запрос;
	ЗапросПоиска.Текст = ИнформационныеКартыВызовСервера.ТекстЗапросаПоискаКарты(РежимПоискаКарты);
	Если РежимПоискаКарты = 1 Тогда
		// Точное совпадение телефона.
		ЗапросПоиска.УстановитьПараметр("ВведенноеЧисло", ВводимоеЧисло);
		ЗапросПоиска.УстановитьПараметр("ВведенноеЧислоСВосьмеркой", "8" + Сред(ВводимоеЧисло, 2));
		
	ИначеЕсли РежимПоискаКарты = 2 Тогда
		// Часть наименования.
		ЗапросПоиска.УстановитьПараметр("Наименование", "%" + ВводимоеЧисло + "%");
		
		ТипыИнформации = Новый Массив;
		ТипыИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
		ТипыИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		ЗапросПоиска.УстановитьПараметр("ТипыИнформации", ТипыИнформации);
		
	ИначеЕсли РежимПоискаКарты = 3 Тогда
		// Часть адреса.
		ЗапросПоиска.УстановитьПараметр("АдресЭП", "%" + ВводимоеЧисло + "%");
		
	Иначе
		// Точное совпадение кода
		ЗапросПоиска.УстановитьПараметр("ВводимоеЧисло", ВводимоеЧисло);
		
	КонецЕсли;
	ЗапросПоиска.УстановитьПараметр("ТипКарты", Перечисления.ТипыИнформационныхКарт.Дисконтная);
	
	Выборка = ЗапросПоиска.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РезультатыПоиска.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат РезультатыПоиска;
	
КонецФункции

#КонецОбласти