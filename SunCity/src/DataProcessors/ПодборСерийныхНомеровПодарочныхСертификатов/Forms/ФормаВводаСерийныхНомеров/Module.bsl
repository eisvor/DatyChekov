#Область ОписаниеПеременных

&НаКлиенте
Перем НеПроверятьИзменения;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Функция ПолученМагнитныйКод(МагнитныйКод) Экспорт 
	
	СтруктураРезультат = ДанныеПоискаПоМагнитномуКодуСервер(МагнитныйКод);
	Возврат ПодключаемоеОборудованиеРТКлиент.ПолученМагнитныйКод(ЭтотОбъект, СтруктураРезультат);
	
КонецФункции

&НаКлиенте
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	СтруктураРезультат = ДанныеПоискаПоШтрихкодуСервер(Штрихкод);
	Возврат ПодключаемоеОборудованиеРТКлиент.ПолученШтрихкодИзСШК(ЭтотОбъект, СтруктураРезультат);
	
КонецФункции

&НаСервере
Процедура ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	ИдентификаторСтроки = Неопределено;
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	
	Если СтрокаРезультата.Свойство("Карта") Тогда
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		
	ИначеЕсли СтрокаРезультата.Свойство("СерийныйНомер") Тогда
		
		ИдентификаторСтроки = ДобавитьНайденныеСерийныеНомера(СтрокаРезультата);
		
	ИначеЕсли СтрокаРезультата.Свойство("ШтрихкодУпаковкиЕГАИС")
		И ЗначениеЗаполнено(СтрокаРезультата.ШтрихкодУпаковкиЕГАИС) Тогда
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиАкцизныхМарок(СтруктураРезультат, СтрокаРезультата);
		
	Иначе
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиНоменклатуры(СтруктураРезультат, СтрокаРезультата);
		
	КонецЕсли;
	
	Если СтрокаРезультата.Свойство("ТекстПредупреждения") Тогда
		СтруктураРезультат.Вставить("ТекстПредупреждения", СтрокаРезультата.ТекстПредупреждения);
	КонецЕсли;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		СтруктураРезультат.Вставить("АктивизироватьСтроку", ИдентификаторСтроки);
	КонецЕсли;
	
КонецПроцедуры

// Обработка магнитного или штрихового кода на клиенте.
//
// Параметры:
//  СтруктураПараметровКлиента - структура параметров.
//  ТекКод - Обрабатываемый код.
&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента) Экспорт
	
	ОткрытаБлокирующаяФорма = Ложь;
	
	ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоКоду(ЭтотОбъект, СтруктураПараметровКлиента, ОткрытаБлокирующаяФорма);
	
	Если НЕ ОткрытаБлокирующаяФорма Тогда
		ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьНайденныеСерийныеНомера(СтруктураНомера, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Не ДополнительныеПараметры = Неопределено Тогда
		СтруктураПараметров = ДополнительныеПараметры;
		ИдентификаторСтроки = СтруктураПараметров;
	Иначе
		ИдентификаторСтроки = Неопределено;
	КонецЕсли;
	
	Если СтруктураНомера.Номенклатура = Объект.Номенклатура Тогда
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("СерийныйНомер", СтруктураНомера.СерийныйНомер);
		СтрокиСертификатов = Объект.СерийныеНомера.НайтиСтроки(СтруктураПоиска);
		Если СтрокиСертификатов.Количество() = 0 Тогда
			НоваяСтрока = Объект.СерийныеНомера.Добавить();
			НоваяСтрока.СерийныйНомер = СтруктураНомера.СерийныйНомер;
			ИдентификаторСтроки = НоваяСтрока.ПолучитьИдентификатор();
			Модифицированность = Истина;
		Иначе
			ИдентификаторСтроки = СтрокиСертификатов[0].ПолучитьИдентификатор();
		КонецЕсли;
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Номер сертификата ""%1"" принадлежит подарочному сертификату - ""%2""'");
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПредупреждения, 
			СтруктураНомера.ДанныеПО, 
			СтруктураНомера.Номенклатура);
		СтруктураНомера.Вставить("ТекстПредупреждения", ТекстПредупреждения);
	КонецЕсли;
	
	Если Не ДополнительныеПараметры = Неопределено Тогда
		СтруктураПараметров = ИдентификаторСтроки;
		Возврат СтруктураПараметров;
	Иначе
		Возврат ИдентификаторСтроки;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ДанныеПоискаПоМагнитномуКодуСервер(МагнитныйКод)
	
	Возврат ПодключаемоеОборудованиеРТ.ДанныеПоискаПоМагнитномуКоду(МагнитныйКод, ЭтотОбъект);
	
КонецФункции

&НаСервере
Функция ДанныеПоискаПоШтрихкодуСервер(Штрихкод)
	
	Возврат ПодключаемоеОборудованиеРТ.ДанныеПоискаПоШтрихкоду(Штрихкод, ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ОповещениеОбработатьДанныеПоКоду(СтруктураРезультат, ДополнительныеПараметры) Экспорт
	
	ОбработатьДанныеПоКодуСервер(СтруктураРезультат);
	
КонецПроцедуры

&НаКлиенте
Функция ОбработатьДанныеИзТСДКлиент(СтруктураПараметров, ДополнительныеПараметры) Экспорт
	
	Результат = ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоСертификатамИзТСДКлиент(ЭтотОбъект, СтруктураПараметров);
	ПодключаемоеОборудованиеРТКлиент.СообщитьТекстПредупреждения(СтруктураПараметров);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура", Объект.Номенклатура) Тогда
		Элементы.ГруппаВыборНоменклатуры.Видимость = Ложь;
		Элементы.ГруппаПредставлениеНоменклатуры.Видимость = Истина;
	Иначе
		Элементы.ГруппаВыборНоменклатуры.Видимость = Истина;
		Элементы.ГруппаПредставлениеНоменклатуры.Видимость = Ложь;
	КонецЕсли;
	Заголовок = НСтр("ru = 'Ввод номеров подарочных сертификатов'");

	Для Каждого ТекСерийныйНомер Из Параметры.МассивСерийныхНомеров Цикл
		Объект.СерийныеНомера.Добавить().СерийныйНомер = ТекСерийныйНомер;
	КонецЦикла;
	
	ПодключаемоеОборудованиеРТ.НастроитьПодключаемоеОборудование(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НеПроверятьИзменения = Неопределено И Модифицированность Тогда
		
		Если ЗавершениеРаботы Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'Список номеров подарочных сертификатов был изменен.
		|Перенести изменения в документ?'");
		
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ЗаполнениеДиапазонаСерийныхНомеров.Форма.Форма" Тогда
			
		ОбработкаВыбораДиапазонаНомеров(ВыбранноеЗначение);
			
		Если Окно <> Неопределено Тогда
			
			Окно.Активизировать();
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, "СканерШтрихкода,СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ПоискПоМагнитномуКоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиМагнитныйКод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЕстьКоличество", Ложь);
	ПодключаемоеОборудованиеРТКлиент.ПолучитьДанныеИзТСД(ЭтотОбъект, ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗавершитьВводСерийныхНомеровВыполнить()

	НеПроверятьИзменения = Истина;

	Если Модифицированность Тогда
		ОчиститьСообщения();
		Если ПроверитьЗаполнение() Тогда
			СохранитьВводСерийныхНомеров();
		КонецЕсли;
	Иначе
		ОтменитьВводСерийныхНомеров();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьДиапазон(Команда)
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Номенклатура", Объект.Номенклатура);
	ПараметрыЗаполнения.Вставить("ПеренестиВПодбор", Истина);
	
	ОткрытьФорму("Обработка.ЗаполнениеДиапазонаСерийныхНомеров.Форма", ПараметрыЗаполнения ,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДиапазон(Команда)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Обработка.ЗаполнениеДиапазонаСерийныхНомеров.Форма.Форма.Открытие");

	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Номенклатура", Объект.Номенклатура);
	ПараметрыЗаполнения.Вставить("ВыборВДокумент", Истина);
	
	ОткрытьФорму("Обработка.ЗаполнениеДиапазонаСерийныхНомеров.Форма", ПараметрыЗаполнения ,ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	Если Не ПустаяСтрока(ТекКод) Тогда
		СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		ОбработатьДанныеПоКодуКлиент(Результат)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		НеПроверятьИзменения = Истина;
		СохранитьВводСерийныхНомеров();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		НеПроверятьИзменения = Истина;
		ОтменитьВводСерийныхНомеров();
	Иначе
		НеПроверятьИзменения = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

// Закрывает форму и передает в параметр закрытия массив.
// Серийных номеров
&НаКлиенте
Процедура СохранитьВводСерийныхНомеров()

	МассивСерийныхНомеров = Новый Массив;

	Для Каждого ТекСерийныйНомер Из Объект.СерийныеНомера Цикл
		Если ЗначениеЗаполнено(ТекСерийныйНомер.СерийныйНомер) Тогда
			МассивСерийныхНомеров.Добавить(ТекСерийныйНомер.СерийныйНомер);
		КонецЕсли;
	КонецЦикла;

	Если МассивСерийныхНомеров.Количество() > 0 Тогда
		Закрыть(МассивСерийныхНомеров);
	Иначе
		Закрыть(Неопределено);
	КонецЕсли;

КонецПроцедуры

// Закрывает форму
//
&НаКлиенте
Процедура ОтменитьВводСерийныхНомеров()

	Закрыть();

КонецПроцедуры

// Добавляет полученный массив в таблицу серийных номеров.
//
&НаСервере
Процедура ОбработкаВыбораДиапазонаНомеров(АдресВХранилище)
	
	МассивСерийныхНомеров = ПолучитьИзВременногоХранилища(АдресВХранилище);
	
	СерийныеНомераНаСервере = Объект.СерийныеНомера;
	
	Для каждого СерийныйНомер Из МассивСерийныхНомеров Цикл
		
		ПараметрыОтбора = Новый Структура("СерийныйНомер", СерийныйНомер);
		
		Если СерийныеНомераНаСервере.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			СтрокаСерийныхНомеров = СерийныеНомераНаСервере.Добавить();
			СтрокаСерийныхНомеров.СерийныйНомер = СерийныйНомер;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбработкуДанныхПоКодуКлиент(СтруктураПараметровКлиента)
	
	ИдентификаторСтроки = ПодключаемоеОборудованиеРТКлиент.ЗавершитьОбработкуДанныхПоКодуКлиент(ЭтотОбъект, СтруктураПараметровКлиента, "СерийныеНомера");
	
КонецПроцедуры

#КонецОбласти
