
#Область ОбработчикиСобытийФормы

&НаКлиенте
Перем ОбновитьИнтерфейс;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обновление состояния элементов.
	УстановитьДоступность();
	ОбновитьСвойстваРеквизитаИспользоватьХарактеристикиНоменклатуры();
	ОбновитьСвойстваРеквизитаИспользоватьУпаковкиНоменклатуры();
	ОбновитьСвойстваРеквизитаИспользоватьСерииНоменклатуры();
	ОбновитьСвойстваРеквизитаИспользоватьПроверкуНаВводДробногоКоличества();
	ОбновитьСвойстваРеквизитаИспользоватьУчетИмпортныхТоваров();
	ОбновитьСвойстваРеквизитаИспользоватьКомиссионнуюТорговлю();
	ЗаполнитьПараметрыПодключенияНСПК();
	УстановитьВидимостьПодсказкиКорневыхСертификатов(ЭтотОбъект);
	
	Если Параметры.Свойство("ТекущийЭлементИмя") Тогда
		ТекущийЭлемент = Элементы[Параметры.ТекущийЭлементИмя];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбработчикОповещений(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЕдиницаИзмеренияВесаПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияОбъемаПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьХарактеристикиНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьХарактеристикиНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУпаковкиНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьУпаковкиНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСерииНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьСерииНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПолнотекстовыйПоискПриПодбореТоваровПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНеуникальныеШтрихкодыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксШтрихкодаУзлаРИБПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаПодарочногоСертификатаПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаШтучногоТовараПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкаДляОтображенияНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкаДляПечатиНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаВесовогоТовараПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовараПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура SKUУстанавливаетсяВГлавномУзлеРИБПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическиГенерироватьSKUПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияКомментарийНажатие(Элемент)
	
	ТекстСообщения = Элемент.Подсказка;
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПроверкуНаВводДробногоКоличестваПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьПроверкуНаВводДробногоКоличества();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКомиссионнуюТорговлюПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьКомиссионнуюТорговлю();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетыРеализацииТоваровПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУчетИмпортныхТоваровПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьУчетИмпортныхТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУчетПрослеживаемыхИмпортныхТоваровПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	ОбновитьСвойстваРеквизитаИспользоватьУчетПрослеживаемыхИмпортныхТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваровПриИзменении(Элемент)
	
	ЗначениеКонстанты = НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров;
	НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров = НачалоМесяца(ЗначениеКонстанты);
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПанельАдминистрированияУчетПрослеживаемыхИмпортныхТоваровОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПанельАдминистрированияРНПТ" Тогда
		ОткрытьФорму("Обработка.ПанельАдминистрированияУчетПрослеживаемыхТоваров.Форма.УчетРНПТ", , ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПравилаИменованияНоменклатурыПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУпрощенныйАлгоритмПоискаПоШтрихкодуПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКодыВидовНоменклатурнойКлассификацииПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУчетТоваровФССПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервисаНСПКПриИзменении(Элемент)
	
	АдресСервисаНСПКПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КлючДоступаНСПКПриИзменении(Элемент)
	
	КлючДоступаНСПКПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПроверятьКорневыеСертификатыНСПКПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	УстановитьВидимостьПодсказкиКорневыхСертификатов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДиапазонГенерацииSKU(Команда)
	// &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		Истина, "Обработка.ПанельАдминистрированияРТ.Форма.ВводДиапазонаГенерацииSKU.Открытие");
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияРТ.Форма.ВводДиапазонаГенерацииSKU",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФромуАнализШтрихкодов(Команда)
	
	ОткрытьФорму("ОбщаяФорма.АнализШтрихкодов");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьУчетИмпортныхТоваров()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьУчетИмпортныхТоваров");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьУчетПрослеживаемыхИмпортныхТоваров()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьКомиссионнуюТорговлю()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьКомиссионнуюТорговлю");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьХарактеристикиНоменклатуры()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьХарактеристикиНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьУпаковкиНоменклатуры()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьУпаковкиНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьСерииНоменклатуры()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьСерииНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваРеквизитаИспользоватьПроверкуНаВводДробногоКоличества()
	
	ОбновитьОтображениеПредупрежденияПриРедактировании("ИспользоватьПроверкуНаВводДробногоКоличества");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПредупрежденияПриРедактировании(ИмяЭлемента)
	
	ОтображениеПредупреждения = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	
	Если НаборКонстант[ИмяЭлемента] Тогда
		ОтображениеПредупреждения = ОтображениеПредупрежденияПриРедактировании.Отображать;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		ИмяЭлемента,
		"ОтображениеПредупрежденияПриРедактировании",
		ОтображениеПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещений(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		ЭтаФорма.Прочитать();
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если Результат <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	Результат = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат КонстантаИмя;
	КонецЕсли;
	
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	КонстантыНабор = Константы.СоздатьНабор("ИспользоватьПодключаемоеОборудование,
		|ИспользоватьОбменСПодключаемымОборудованием,
		|ИспользоватьСинхронизациюДанных,
		|ВестиУчетМаркировкиПродукцииВГИСМ,
		|ИспользоватьУчетИмпортныхТоваров,
		|ИспользоватьУчетПрослеживаемыхИмпортныхТоваров,
		|ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров,
		|ИспользоватьПолнотекстовыйПоиск,
		|ИспользоватьОплатуПлатежнымиКартами,
		|ИспользоватьУчетТоваровФСС,
		|ИспользоватьСерииНоменклатуры");
	
	КонстантыНабор.Прочитать();
	
	ИспользоватьПодключаемоеОборудование = КонстантыНабор.ИспользоватьПодключаемоеОборудование;
	ИспользоватьОбменСПодключаемымОборудованием = КонстантыНабор.ИспользоватьОбменСПодключаемымОборудованием;
	ИспользоватьСинхронизациюДанных = КонстантыНабор.ИспользоватьСинхронизациюДанных;
	ВестиУчетМаркировкиПродукцииВГИСМ = КонстантыНабор.ВестиУчетМаркировкиПродукцииВГИСМ;
	ИспользоватьУчетИмпортныхТоваров = КонстантыНабор.ИспользоватьУчетИмпортныхТоваров;
	ИспользоватьСерииНоменклатуры = КонстантыНабор.ИспользоватьСерииНоменклатуры;
	
	ИспользоватьОплатуПлатежнымиКартами = КонстантыНабор.ИспользоватьОплатуПлатежнымиКартами;
	ИспользоватьУчетТоваровФСС = КонстантыНабор.ИспользоватьУчетТоваровФСС;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Элементы.ДекорацияКомментарийАвтоматическиГенерироватьSKU.Видимость = Ложь;
		
		ИспользоватьПолнотекстовыйПоиск = КонстантыНабор.ИспользоватьПолнотекстовыйПоиск;
		
		Элементы.ИспользоватьПолнотекстовыйПоискПриПодбореТоваров.ТолькоПросмотр = НЕ ИспользоватьПолнотекстовыйПоиск;
		Элементы.ДекорацияКомментарийПолнотекстовыйПоискПриПодбореТоваров.Видимость = НЕ ИспользоватьПолнотекстовыйПоиск;
		
		Если НЕ ИспользоватьПодключаемоеОборудование Тогда
			
			КомментарийОбменомСПодключаемымОборудованием =
				НСтр("ru = 'Настройка штрихкодирования товара на весах недоступна, потому что:
				|- выключено использование подключаемого оборудования
				|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Подсказка =
				КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Видимость = Истина;
			
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка кодов SKU недоступна, потому что:
			|- выключено использование подключаемого оборудования
			|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.ДекорацияКомментарийКодыSKU.Подсказка = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийКодыSKU.Видимость = Истина;
			
		ИначеЕсли ИспользоватьПодключаемоеОборудование И НЕ ИспользоватьОбменСПодключаемымОборудованием Тогда
			
			КомментарийОбменомСПодключаемымОборудованием =
				НСтр("ru = 'Настройка штрихкодирования товара на весах недоступна, потому что:
				|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Подсказка =
				КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Видимость = Истина;
			
			КомментарийОбменомСПодключаемымОборудованием =
				НСтр("ru = 'Настройка кодов SKU недоступна, потому что:
				|- выключен обмен с подключаемым оборудованием Offline в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.ДекорацияКомментарийКодыSKU.Подсказка = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ДекорацияКомментарийКодыSKU.Видимость = Истина;
			
		Иначе
			
			Элементы.ДекорацияКомментарийШтрихкодированиеТоваровНаВесах.Видимость = Ложь;
			Элементы.ДекорацияКомментарийКодыSKU.Видимость = Ложь;
			
		КонецЕсли;
		
		Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность =
			ИспользоватьПодключаемоеОборудование И ИспользоватьОбменСПодключаемымОборудованием;
		Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность =
			ИспользоватьПодключаемоеОборудование И ИспользоватьОбменСПодключаемымОборудованием;
		
		Элементы.ОткрытьДиапазонГенерацииSKU.Доступность = ИспользоватьОбменСПодключаемымОборудованием;
		
		Если НЕ ИспользоватьОбменСПодключаемымОборудованием Тогда
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность = Ложь;

		ИначеЕсли НЕ ИспользоватьСинхронизациюДанных Тогда
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Истина;
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность = Истина;
		Иначе
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность = Истина;
			Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
		Если НЕ ИспользоватьСинхронизациюДанных И ИспользоватьОбменСПодключаемымОборудованием Тогда
			Элементы.ДекорацияКомментарийSKUУстанавливаетсяВГлавномУзлеРИБ.Видимость = Истина;
		Иначе
			Элементы.ДекорацияКомментарийSKUУстанавливаетсяВГлавномУзлеРИБ.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Если НаборКонстант.ИспользоватьСинхронизациюДанных Тогда
			Если ОбменДаннымиРТ.ЭтоПодчиненныйУзелПоМагазину() Тогда
				
				Элементы.ИспользоватьХарактеристикиНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьУпаковкиНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ЕдиницаИзмеренияВеса.ТолькоПросмотр = Истина;
				Элементы.ЕдиницаИзмеренияОбъема.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьНеуникальныеШтрихкоды.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьПроверкуНаВводДробногоКоличества.ТолькоПросмотр = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаПодарочногоСертификата.ТолькоПросмотр = Истина;
				
				Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Истина;
				Элементы.ОткрытьДиапазонГенерацииSKU.Доступность =
					ИспользоватьОбменСПодключаемымОборудованием И НЕ НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ;
				Элементы.ИспользоватьКомиссионнуюТорговлю.ТолькоПросмотр = Истина;
				Элементы.ПриоритетыРеализацииТоваров.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьУчетИмпортныхТоваров.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьПравилаИменованияНоменклатуры.ТолькоПросмотр = Истина;
				
				УстановитьПодсказкуАвтоматическиГенерироватьSKU();
				
			ИначеЕсли ОбменДаннымиРТ.ЭтоПодчиненныйУзелПоРабочемуМесту() Тогда
			
				Элементы.ИспользоватьХарактеристикиНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьУпаковкиНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ЕдиницаИзмеренияВеса.ТолькоПросмотр = Истина;
				Элементы.ЕдиницаИзмеренияОбъема.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьПроверкуНаВводДробногоКоличества.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьНеуникальныеШтрихкоды.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаПодарочногоСертификата.ТолькоПросмотр = Истина;
				
				Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр = Истина;
				Элементы.ОткрытьДиапазонГенерацииSKU.Доступность =
					ИспользоватьОбменСПодключаемымОборудованием И НЕ НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ;
				Элементы.ИспользоватьПравилаИменованияНоменклатуры.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьКомиссионнуюТорговлю.ТолькоПросмотр = Истина;
				Элементы.ПриоритетыРеализацииТоваров.ТолькоПросмотр = Истина;
				Элементы.ИспользоватьУчетИмпортныхТоваров.ТолькоПросмотр = Истина;
				
				УстановитьПодсказкуАвтоматическиГенерироватьSKU();
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьИмпортныеТовары"
		Или РеквизитПутьКДанным = "НаборКонстант.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров"
		Или РеквизитПутьКДанным = "НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров"
		Или РеквизитПутьКДанным = "" Тогда
		
		Если Не ИспользоватьУчетИмпортныхТоваров Тогда
			
			НаборКонстант.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров = Ложь;
			НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров = Дата(1, 1, 1);
			
			СохранитьЗначениеРеквизита("НаборКонстант.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров");
			СохранитьЗначениеРеквизита("НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров");
			
		КонецЕсли;
		
		Если НаборКонстант.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			И Не ЗначениеЗаполнено(НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров) Тогда
			
			НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров = НачалоМесяца(ТекущаяДатаСеанса());
			
			СохранитьЗначениеРеквизита("НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров");
			
		ИначеЕсли Не НаборКонстант.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			И ЗначениеЗаполнено(НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров) Тогда
			
			НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров = Дата(1, 1, 1);
			
			СохранитьЗначениеРеквизита("НаборКонстант.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров");
			
		КонецЕсли;
		
		ЗначениеКонстанты = НаборКонстант.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров;
		
		Элементы.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров.Доступность = ЗначениеКонстанты;
		Элементы.ДекорацияПанельАдминистрированияУчетПрослеживаемыхИмпортныхТоваров.Доступность = ЗначениеКонстанты;
		
		Элементы.ГруппаИспользоватьУчетПрослеживаемыхИмпортныхТоваров.Доступность = ИспользоватьУчетИмпортныхТоваров;
		
	КонецЕсли;
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность    = Ложь;
	КонецЕсли;
	
	Если ВестиУчетМаркировкиПродукцииВГИСМ И ИспользоватьСерииНоменклатуры Тогда
		Элементы.ИспользоватьСерииНоменклатуры.Доступность = Ложь;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьУчетТоваровФСС"
		Или РеквизитПутьКДанным = "" Тогда
		
		Если НЕ ИспользоватьУчетТоваровФСС Тогда
			ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища("ЭС_НСПК_МИР", "АдресСервисаНСПК, КлючДоступаНСПК");
			АдресСервисаНСПК = "";
			КлючДоступаНСПК = "";
		КонецЕсли;
		
		Элементы.АдресСервисаНСПК.Доступность = НаборКонстант.ИспользоватьУчетТоваровФСС;
		Элементы.КлючДоступаНСПК.Доступность = НаборКонстант.ИспользоватьУчетТоваровФСС;
		
		Если НЕ ИспользоватьОплатуПлатежнымиКартами И ИспользоватьУчетТоваровФСС Тогда
			Константы.ИспользоватьОплатуПлатежнымиКартами.Установить(Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкуАвтоматическиГенерироватьSKU()
	
	Если НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ Тогда
	
		ЗачеркнутыйШрифт = Новый Шрифт(Элементы.АвтоматическиГенерироватьSKU.ШрифтЗаголовка,,,,,, Истина);
		Элементы.АвтоматическиГенерироватьSKU.ШрифтЗаголовка = ЗачеркнутыйШрифт;
		
		Элементы.ДекорацияКомментарийАвтоматическиГенерироватьSKU.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АдресСервисаНСПКПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(АдресСервисаНСПК) Тогда
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("ЭС_НСПК_МИР", АдресСервисаНСПК, "АдресСервисаНСПК");
	Иначе
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища("ЭС_НСПК_МИР", "АдресСервисаНСПК");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КлючДоступаНСПКПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(КлючДоступаНСПК) Тогда
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище("ЭС_НСПК_МИР", КлючДоступаНСПК, "КлючДоступаНСПК");
	Иначе
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища("ЭС_НСПК_МИР", "КлючДоступаНСПК");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыПодключенияНСПК()
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьПодсказкиКорневыхСертификатов(Форма)
	
	ПроверятьКорневыеСертификатыНСПК = Форма.НаборКонстант.ПроверятьКорневыеСертификатыНСПК;
	ЭлементыФормы = Форма.Элементы;
	
	Если Не ПроверятьКорневыеСертификатыНСПК Тогда
		ЭлементыФормы.ПроверятьКорневыеСертификатыНСПК.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	Иначе
		ЭлементыФормы.ПроверятьКорневыеСертификатыНСПК.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
