
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресВХранилище") Тогда
		
		СтруктураВХранилище = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		СтруктураВХранилище.Свойство("Штрихкод", Штрихкод);
		ТаблицаВХранилище = СтруктураВХранилище.ТаблицаВыбора;
		СтрокиДерева	  = ДеревоВыбора.ПолучитьЭлементы();
		
		Для Каждого СтрокаХранилища Из ТаблицаВХранилище Цикл
			НоваяСтрока = СтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаХранилища);
			
			ПредставлениеНоменклатура = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(СтрокаХранилища.Номенклатура, "Представление");
			ПредставлениеХарактеристика = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(СтрокаХранилища.Характеристика, "Представление");
			ПредставлениеУпаковка = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(СтрокаХранилища.Упаковка, "Представление");
			
			НоваяСтрока.ПредставлениеОбъекта 	   = ПредставлениеНоменклатура + ", " + ПредставлениеХарактеристика + ", " + ПредставлениеУпаковка;
			НоваяСтрокаНоменклатуры = ТаблицаНоменклатурыДляОстатков.Добавить();
			НоваяСтрокаНоменклатуры.Номенклатура   = СтрокаХранилища.Номенклатура;
			НоваяСтрокаНоменклатуры.Характеристика = СтрокаХранилища.Характеристика;
			НоваяСтрокаНоменклатуры.Упаковка 	   = СтрокаХранилища.Упаковка;
		КонецЦикла;
		
		Элементы.ТаблицаВыбора.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаВыбора

&НаКлиенте
Процедура ТаблицаВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Закрыть(ПодготовитьСтруктуруВыбора());
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбораВыбранаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТаблицаВыбора.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПодчиненныеСтроки = ТекущаяСтрока.ПолучитьЭлементы();
		Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
			ПодчиненнаяСтрока.Выбрана = ТекущаяСтрока.Выбрана;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(ПодготовитьСтруктуруВыбора());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПодготовитьСтруктуруВыбора()
	
	СтруктураРезультат = РозничноеВыбытиеИСМПТКПереопределяемый.СтруктураДанныхПоиска();
	СтруктураРезультат.НеизвестныеДанныеПО = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаВыбора.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		СтруктураСтроки = Новый Структура;
		Если ЗначениеЗаполнено(Штрихкод) Тогда
			СтруктураСтроки.Вставить("Штрихкод", Штрихкод);
			СтруктураСтроки.Вставить("ДанныеПО", Штрихкод);
			
			СтруктураРезультат.ДанныеПО    = Штрихкод;
			СтруктураРезультат.ТипДанныхПО = "Штрихкод";
		КонецЕсли;
		СтруктураСтроки.Вставить("ТипШтрихкода",   ТекущиеДанные.ТипШтрихкода);
		СтруктураСтроки.Вставить("Номенклатура",   ТекущиеДанные.Номенклатура);
		СтруктураСтроки.Вставить("Характеристика", ТекущиеДанные.Характеристика);
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Упаковка) 
			И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
			СтруктураСтроки.Вставить("Упаковка",   РозничноеВыбытиеИСМПТКПереопределяемый.ПолучитьЗначениеБазовойЕИНоменклатуры(ТекущиеДанные.Номенклатура));
		Иначе                                      
			СтруктураСтроки.Вставить("Упаковка",   ТекущиеДанные.Упаковка);
		КонецЕсли;
		
		ДанныеМаркировки = РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.РазобратьКодМаркировки(Штрихкод);
				
		Если Не ДанныеМаркировки = Неопределено Тогда
			СтруктураСтроки.Вставить("ДанныеМаркировки", ДанныеМаркировки);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураРезультат.ЗначенияПоиска.Добавить(СтруктураСтроки);

Возврат СтруктураРезультат;
	
КонецФункции

#КонецОбласти
