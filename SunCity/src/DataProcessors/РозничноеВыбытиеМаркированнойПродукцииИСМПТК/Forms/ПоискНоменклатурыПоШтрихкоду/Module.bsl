
#Область ОписаниеПеременных

&НаКлиенте
Перем ВыполняетсяЗакрытие;

&НаКлиенте
Перем ПроверятьТЧПередЗакрытием; //признак необходимости проверки заполненности ТЧ перед закрытием

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВыполняласьРегистрацияШК = Ложь;
	ИспользоватьХарактеристикиНоменклатуры = ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик();
	
	Если Параметры.Операция = "РаботаСТранспортнымиКодами" Тогда 	
		
		//В этом случае Параметры.НеизвестныеШтрихкоды - массив, содержащий два элемента:
		//[0] - это транспортные коды
		//[1] - это групповые коды		
		
		Для Каждого МассивШтрихкодов Из Параметры.НеизвестныеШтрихкоды Цикл
			
			Для Каждого СтрокаШтрихкода Из МассивШтрихкодов Цикл
				НоваяСтрока = ШтрихкодыУпаковок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаШтрихкода);
				НоваяСтрока.ИзменилсяИдентификаторКода = Ложь;
				
				//Дополнительно проверяем и устанавливаем признак использования характеристик
				Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура)
					И ИспользоватьХарактеристикиНоменклатуры Тогда
					Если ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоХарактеристикамУНоменклатуры(НоваяСтрока.Номенклатура) 
						Или ЗначениеЗаполнено(НоваяСтрока.Характеристика) Тогда
						//Значит хар-ки используются
						НоваяСтрока.ХарактеристикиИспользуются = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		Для Каждого СтрокаШтрихкода Из Параметры.НеизвестныеШтрихкоды Цикл
			НоваяСтрока = ШтрихкодыНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаШтрихкода);
			
			//Дополнительно проверяем и устанавливаем признак использования характеристик
			Если ЗначениеЗаполнено(НоваяСтрока.Номенклатура)
				И ИспользоватьХарактеристикиНоменклатуры Тогда
				Если ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоХарактеристикамУНоменклатуры(НоваяСтрока.Номенклатура) 
					Или ЗначениеЗаполнено(НоваяСтрока.Характеристика) Тогда
					//Значит хар-ки используются
					НоваяСтрока.ХарактеристикиИспользуются = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("Направление") Тогда
		НаправлениеИсходногоДокумента = Параметры.Направление;
	Иначе
		НаправлениеИсходногоДокумента = Неопределено;
	КонецЕсли;
	
	СтруктураКодовМаркировки = Параметры.СтруктураКодовМаркировки;
	
	//Выставляем значение по умолчанию из общих настроек ИС МПТ
	ОтображатьДанныеПоНоменклатуре = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьЗначениеКонстантыОтображенияДанныхНоменклатурыСУЗ();
	
	Если Не Параметры.Операция = "РаботаСТранспортнымиКодами" Тогда
		ОбщегоНазначенияИСМПТКПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриСозданииНаСервере(ЭтаФорма);
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПроверятьТЧПередЗакрытием = Ложь;
	УстановитьВидимостьПолейНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
			
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ПоискНоменклатурыПоШтрихкодуОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ШтрихКоды = Новый Массив;
			
	Если ЗначениеЗаполнено(ШтрихКоды) Тогда
		ПолучитьНоменклатуруПоШтрихкодам(ШтрихКоды);
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ВыполняетсяЗакрытие И Не ПроверятьТЧПередЗакрытием И НЕ ЗавершениеРаботы Тогда
		Отказ = Истина;
		
		ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПередЗакрытиемФормыРегистрацииНовогоШК(ДействияСНеизвестнымиШтрихкодами);					
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), ТекстСообщения, РежимДиалогаВопрос.ОКОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШтрихкодыНоменклатуры

&НаКлиенте
Процедура ШтрихкодыНоменклатурыНоменклатураПриИзменении(Элемент)
	
	ИмяТаблицы = ПолучитьИмяТаблицыФормыПодбора();
	РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(ЭтаФорма, Элемент, ИмяТаблицы);
	
	Если ИмяТаблицы = "ШтрихкодыУпаковок" Тогда
		ПодобратьGTINИзРегистраДляНоменклатуры();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыНоменклатурыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяТаблицы = ПолучитьИмяТаблицыФормыПодбора();
	ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	ВидыПродукции = ПолучитьДоступныеВидыПродукции();
	РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентПереопределяемый.ПриНачалеВыбораНоменклатуры(Элемент, ТекущиеДанные, СтандартнаяОбработка, ВидыПродукции);
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыНоменклатурыХарактеристикаПриИзменении(Элемент)
	
	ИмяТаблицы = ПолучитьИмяТаблицыФормыПодбора();
	РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(ЭтаФорма, Элемент, ИмяТаблицы);
		
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьДанныеПоНоменклатуреПриИзменении(Элемент)
	
	УстановитьВидимостьПолейНоменклатуры();
				
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокGTINИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ОчиститьСписокВыбораGTIN();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ОчиститьСообщения();
	ИмяТаблицы = ПолучитьИмяТаблицыФормыПодбора();
	
	Если ИмяТаблицы = "ШтрихкодыНоменклатуры" Тогда
		//Выполняем регистрацию штрихкода номенклатуры, переносим данные в документ-инициатор
		ПараметрЗакрытия = ЗарегистрироватьШтрихкодыНаСервере();
		Если ПараметрЗакрытия = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось зарегистрировать новые штрихкоды!'");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;	
		
		Если ПараметрЗакрытия.НайденыНезарегистрированныеТовары Тогда
			ТекстСообщения 	 = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПереносВДокументИзФормыРегистрацииНовогоШК(ИспользоватьХарактеристикиНоменклатуры);
			РезультатВопроса = Неопределено;
			ПоказатьВопрос(Новый ОписаниеОповещения("ПеренестиВДокументЗавершение", ЭтотОбъект, Новый Структура("ПараметрЗакрытия", ПараметрЗакрытия)), ТекстСообщения, РежимДиалогаВопрос.ОК);
			Возврат;
		КонецЕсли;
		
		ПараметрЗакрытия.Вставить("ФормаПоискаНоменклатуры_Успешно", Истина); //Флаг успешности подбора номенклатуры и регистрации ШК. Если возвращается Ложь, дальнейший разбор КМ в документе не происходит.
		ПараметрЗакрытия.Вставить("СтруктураКодовМаркировки", СтруктураКодовМаркировки); //Входной параметр формы, содержит данные разбора КМ, полученные при сканировании в документе. Возвращаем, чтобы продолжить добавление КМ.
			
	Иначе
		
		ДанныеПроверки   = ПроверитьДанныеУпаковок();
		ПараметрЗакрытия = Новый Структура();
		
		Если ДанныеПроверки.Ошибка Тогда
			ДопПараметры = Новый Структура();
			ДопПараметры.Вставить("ПараметрЗакрытия", ПараметрЗакрытия);
			ДопПараметры.Вставить("СписокОшибок", 	  ДанныеПроверки.СписокОшибок);
			
			ТекстВопроса 	 = НСтр("ru = 'Есть ошибки в заполнении данных! Перенести в документ?'");
			РезультатВопроса = Неопределено;
			ПоказатьВопрос(Новый ОписаниеОповещения("ПеренестиВДокументТранспортныеЗавершение", ЭтотОбъект, ДопПараметры), ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
			Возврат;
		Иначе
			//Ничего не регистрируем, формируем новую структуру данных, заполняем документ-инициатор
			ПараметрЗакрытия.Вставить("ШтрихкодыНоменклатуры", СформироватьДанныеДляПередачиНаСервере());
			ПараметрЗакрытия.Вставить("ЗаполнениеТранспортныхУпаковок_Успешно", Истина);
		КонецЕсли;
	КонецЕсли;
	
	ПеренестиВДокументФрагмент(ПараметрЗакрытия);

КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ПараметрЗакрытия = Новый Структура();
	ПараметрЗакрытия.Вставить("ФормаПоискаНоменклатуры_Успешно", Ложь); //Флаг успешности подбора номенклатуры и регистрации ШК. Если возвращается Ложь, дальнейший разбор КМ в документе не происходит.
	ПараметрЗакрытия.Вставить("СтруктураКодовМаркировки", СтруктураКодовМаркировки);
		
	Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоGTIN(Команда)
	
	ЗаполнитьПоGTINНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьНовыйGTIN(Команда)
	
	ТекстВопроса = НСтр("ru = 'Будут зарегистрированы новые штрихкоды номенклатуры для всех заполненных позиций списка, по которым отсутствуют данные в регистре ""%ИмяРегистраШтрихкоды%"".'")
				 + Символы.ПС
				 + НСтр("ru = 'Продолжить?'");
	ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИмяРегистраШтрихкоды%", ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьПредставлениеРегистраШтрихкоды());
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаписатьШтрихкодНоменклатуры", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеВНесколькихСтроках(Команда)
	
	Если Не Элементы.ШтрихкодыУпаковок.ВыделенныеСтроки.Количество() = 0 Тогда
		
		ПараметрыОткрытияФормы = Новый Структура("Операция", "ГрупповоеРедактированиеСтрок");
		ОповещениеЗакрытияФормыУточнения = Новый ОписаниеОповещения("ЗавершитьЗаполнитьДанныеВНесколькихСтроках", ЭтотОбъект);
		
		ИмяФормыПереопред = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентПереопределяемый.ПолучитьИмяФормыДляКомандыЗаполненияДанных();
		ОткрытьФорму(ИмяФормыПереопред, ПараметрыОткрытияФормы, ЭтотОбъект,,,,ОповещениеЗакрытияФормыУточнения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПеренестиВДокументФрагмент(Знач ПараметрЗакрытия)
	
	ПроверятьТЧПередЗакрытием = Истина;
	
	Если ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
		ПараметрЗакрытия.Вставить("ФормаВладелец", ВладелецФормы.УникальныйИдентификатор);
	КонецЕсли;
	
	Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

&НаСервере
Функция ЗарегистрироватьШтрихкодыНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	
	ЗарегистрироватьШтрихкодыНаСервереПродолжение(Отказ);
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НайденыНезарегистрированныеТовары = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Зарегистрирован, ЗарегистрированОбработкой", Ложь, Ложь));
	
	ЗарегистрированныеШтрихкоды = Новый Массив;
	НайденныеЗарегистрированныеШтрихкоды = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("ЗарегистрированОбработкой", Истина));
	Для Каждого СтрокаШтрихкода Из НайденныеЗарегистрированныеШтрихкоды Цикл
		ЗарегистрированныеШтрихкоды.Добавить(Новый Структура("Штрихкод, Количество", СтрокаШтрихкода.Штрихкод, СтрокаШтрихкода.Количество));
	КонецЦикла;
	
	ОтложенныеТовары = Новый Массив;
	НайденныеОтложенныеТовары = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Зарегистрирован, ЗарегистрированОбработкой", Ложь, Ложь));
	Для Каждого СтрокаШтрихкода Из НайденныеОтложенныеТовары Цикл
		ОтложенныеТовары.Добавить(Новый Структура("Штрихкод, Количество", СтрокаШтрихкода.Штрихкод, СтрокаШтрихкода.Количество));
	КонецЦикла;
	
	ПолученыНовыеШтрихкоды = Новый Массив;
	НайденныеПолученныеШтрихкоды = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Зарегистрирован", Истина));
	Для Каждого СтрокаШтрихкода Из НайденныеПолученныеШтрихкоды Цикл
		ПолученыНовыеШтрихкоды.Добавить(Новый Структура("Штрихкод, Количество", СтрокаШтрихкода.Штрихкод, СтрокаШтрихкода.Количество));
	КонецЦикла;
	
	ПараметрЗакрытия = Новый Структура();
	
	ПараметрЗакрытия.Вставить("ОтложенныеТовары",                  ОтложенныеТовары);
	ПараметрЗакрытия.Вставить("ЗарегистрированныеШтрихкоды",       ЗарегистрированныеШтрихкоды);
	ПараметрЗакрытия.Вставить("ПолученыНовыеШтрихкоды",            ПолученыНовыеШтрихкоды);
	ПараметрЗакрытия.Вставить("НайденыНезарегистрированныеТовары", НайденыНезарегистрированныеТовары.Количество() > 0);
	ПараметрЗакрытия.Вставить("ШтрихкодыНоменклатуры",             ДанныеПоШтрихкодам());
	
	Возврат ПараметрЗакрытия;
			
КонецФункции

&НаСервере
Функция ДанныеПоШтрихкодам()
	
	Штрихкоды = Новый Массив;
	
	Для каждого ЭлементКоллекции Из ШтрихкодыНоменклатуры Цикл
		Если ЗначениеЗаполнено(ЭлементКоллекции.Номенклатура)
			И ЗначениеЗаполнено(ЭлементКоллекции.Штрихкод) Тогда
			
			ДанныеПоШтрихкоды = Новый Структура;
			
			ДанныеПоШтрихкоды.Вставить("Номенклатура",   Неопределено);
			ДанныеПоШтрихкоды.Вставить("Характеристика", Неопределено);
			ДанныеПоШтрихкоды.Вставить("Штрихкод",       "");
			ДанныеПоШтрихкоды.Вставить("Количество",     0);
								
			ЗаполнитьЗначенияСвойств(ДанныеПоШтрихкоды, ЭлементКоллекции);
			
			Штрихкоды.Добавить(ДанныеПоШтрихкоды);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Штрихкоды;	
	
КонецФункции

&НаСервере
Процедура ЗарегистрироватьШтрихкодыНаСервереПродолжение(Отказ)
	
	ШтрихкодыДляОтработки = ШтрихкодыНоменклатуры.Выгрузить().СкопироватьКолонки();
	СтрокиДляОтработки    = Новый Массив;
	
	Для каждого СтрокаШтрихкода Из ШтрихкодыНоменклатуры Цикл
		
		Если СтрокаШтрихкода.Зарегистрирован ИЛИ Не ЗначениеЗаполнено(СтрокаШтрихкода.Номенклатура)
			ИЛИ (СтрокаШтрихкода.ХарактеристикиИспользуются И Не ЗначениеЗаполнено(СтрокаШтрихкода.Характеристика))Тогда
			
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ШтрихкодыДляОтработки.Добавить(), СтрокаШтрихкода);
		
		СтрокиДляОтработки.Добавить(СтрокаШтрихкода);
		
	КонецЦикла;
	
	Если ШтрихкодыДляОтработки.Количество() > 0 Тогда
		
		НачатьТранзакцию();
		
		Попытка
			ОбщегоНазначенияИСМПТКПереопределяемый.ЗарегистрироватьШтрихкоды(ШтрихкодыДляОтработки);
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			ОписаниеОшибки = НСтр("ru = 'При записи штрихкодов произошла ошибка.'")
						   + Символы.ПС
						   + ИнформацияОбОшибке().Описание;
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ОписаниеОшибки);
			
			Отказ = Истина;
			
		КонецПопытки;
		
		Для каждого ЭлементКоллекции Из СтрокиДляОтработки Цикл
			ЭлементКоллекции.ЗарегистрированОбработкой = Истина;	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНоменклатуруПоШтрихкодам(ШтрихКоды = Неопределено)
	
	ПолучитьНоменклатуруПоШтрихкодамВТекущейБазе(ШтрихКоды);
	
	Если ШтрихКоды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры
	
&НаСервере
Процедура ПолучитьНоменклатуруПоШтрихкодамВТекущейБазе(ШтрихКоды = Неопределено)
	
	Если ШтрихКоды = Неопределено Тогда
		ШтрихКоды = ШтрихкодыНоменклатуры.Выгрузить().ВыгрузитьКолонку("Штрихкод");
	Иначе
		НайтиШтрихкодыСредиДобавленных(ШтрихКоды);
	КонецЕсли;
	
	Если ШтрихКоды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПоШтрихкодам = Новый ТаблицаЗначений;
	СообщенияОбОшибках = Новый Соответствие();
	ДанныеПоШтрихкодам = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеНоменклатурыИзРегистраШтрихкодовПоШтрихкоду(Истина, ШтрихКоды,, СообщенияОбОшибках); 
	Если Не СообщенияОбОшибках.Количество() = 0 Тогда
		Для Каждого СообщениеОшибка Из СообщенияОбОшибках Цикл 
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(СообщениеОшибка.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеПоШтрихкодам.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЭлементКоллекции Из ДанныеПоШтрихкодам Цикл
		
		СтрокиПоШтрихкоду = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Штрихкод", ЭлементКоллекции.Штрихкод));
		
		Если СтрокиПоШтрихкоду.Количество() <> 0 Тогда
			
			ТекущаяСтрока = СтрокиПоШтрихкоду[0];
			
			ТекущаяСтрока.Номенклатура     = ЭлементКоллекции.Номенклатура;
			ТекущаяСтрока.ЕдиницаИзмерения = ЭлементКоллекции.ЕдиницаИзмерения;
			ТекущаяСтрока.Характеристика   = ЭлементКоллекции.Характеристика;
			ТекущаяСтрока.Зарегистрирован  = Истина;
			ТекущаяСтрока.Количество       = 1;
			
			ОбщегоНазначенияИСМПТККлиентСервер.УдалитьЗначениеИзМассива(ШтрихКоды, ЭлементКоллекции.Штрихкод);
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура НайтиШтрихкодыСредиДобавленных(ШтрихКоды)
	
	НайденныеШтрихкоды = Новый Массив;
	
	Для каждого ЭлементКоллекции Из ШтрихКоды Цикл
		
		СтрокиШтрихкодов = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Штрихкод", ЭлементКоллекции));
		
		Если СтрокиШтрихкодов.Количество() > 0 Тогда
			Для каждого ЭлементКоллекции Из СтрокиШтрихкодов Цикл
				ЭлементКоллекции.Количество = ЭлементКоллекции.Количество + 1;
			КонецЦикла;
			
			НайденныеШтрихкоды.Добавить(ЭлементКоллекции);
		КонецЕсли;
	КонецЦикла;	
	
	Для каждого ЭлементКоллекции Из НайденныеШтрихкоды Цикл
		ОбщегоНазначенияИСМПТККлиентСервер.УдалитьЗначениеИзМассива(ШтрихКоды, ЭлементКоллекции);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Если Параметры.Операция = "РаботаСТранспортнымиКодами" Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Уточнение данных упаковок'");
		
		//Форма открывается для ручного указания GTIN транспотрных упаковок
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаТранспортные;
		
		//Заголовок кнопки сохранения
		Элементы.ЗаписатьИЗакрыть.Заголовок = НСтр("ru = 'Перенести в документ'");
		
		//Условное офорление в ТЧ
	    ИмяПоляХарактеристика = "ШтрихкодыУпаковокХарактеристика";
		ИмяПоляШтрихкод		  = "ШтрихкодыУпаковокШтрихкод";
		ИмяТаблицы 			  = "ШтрихкодыУпаковок"; 
		
		//Описание
		Элементы.ПояснениеКФорме.Заголовок = НСтр("ru = 'Заполните ""GTIN"", ""Количество вложенных позиций"" и ""Вид продукции"" для каждой упаковки.'")
										   + Символы.ПС
										   + НСтр("ru = 'Данные будут перенесены в документ для отображения в дереве кодов маркировки. Прочие поля заполняются при необходимости регистрации нового штрихкода.'");
		
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихкодыУпаковокРаботаСНоменклатурой", "Доступность", Не ШтрихкодыУпаковок.Количество() = 0);
		
		//Скрываем поля, недоступные для редактирования во входящем документе
		Входящий = (НаправлениеИсходногоДокумента = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Входящий"));
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихкодыУпаковокКоличество",   "Видимость", Не Входящий);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихкодыУпаковокВидПродукции", "Видимость", Не Входящий);
		
		ВыводитьКомандыПреобразования = ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьПоддержкуДвойногоФорматаТранспортныхКодов();
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Идентификаторы", "Видимость", ВыводитьКомандыПреобразования);
		
	Иначе
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Подбор номенклатуры и регистрация штрихкодов для потребительских и групповых кодов'");
		
		//Форма открывается для подбора номенклатуры и регистрации ШК
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПотребительскиеИГрупповые;
		
		//Заголовок кнопки сохранения
		ДействияСНеизвестнымиШтрихкодами = Параметры.ДействияСНеизвестнымиШтрихкодами;
		Если ДействияСНеизвестнымиШтрихкодами = "ТолькоЗарегистрировать" Тогда
			Элементы.ЗаписатьИЗакрыть.Заголовок = НСтр("ru = 'Зарегистрировать штрихкоды'");
		Иначе
			Элементы.ЗаписатьИЗакрыть.Заголовок = НСтр("ru = 'Зарегистрировать и перенести'");
		КонецЕсли;

		//Условное офорление в ТЧ
	    ИмяПоляХарактеристика = "ШтрихкодыНоменклатурыХарактеристика";
		ИмяПоляШтрихкод	= "ШтрихкодыНоменклатурыШтрихкод";
		ИмяТаблицы 		= "ШтрихкодыНоменклатуры"; 
		
		//Описание
		Элементы.ПояснениеКФорме.Заголовок = НСтр("ru = 'Укажите номенклатуру, к которой относится GTIN потребительского или группового кода маркировки. При переносе данных в документ ей будет присвоен новый штрихкод (EAN) по данным текущей формы.'")
		
	КонецЕсли;
	
	////////////////////////////////////////////////////////////////////////////////
	
	УстановитьУсловноеОформлениеТаблицы(ИмяПоляХарактеристика, ИмяПоляШтрихкод, ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьПолейНоменклатуры()
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихкодыУпаковокНоменклатура",   "Видимость", ОтображатьДанныеПоНоменклатуре);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихкодыУпаковокХарактеристика", "Видимость", ОтображатьДанныеПоНоменклатуре И ИспользоватьХарактеристикиНоменклатуры);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ШтрихкодыНоменклатурыХарактеристика", "Видимость", ИспользоватьХарактеристикиНоменклатуры);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеТаблицы(ИмяПоляХарактеристика, ИмяПоляШтрихкод, ИмяТаблицы)
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы[ИмяПоляХарактеристика].Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".ХарактеристикиИспользуются");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(192, 192, 192));
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<характеристики не используются>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	////////////////////////////////////////////////////////////////////////////////
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы[ИмяПоляШтрихкод].Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ".Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуруПродолжение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЗаполнитьНоменклатуру(Результат.НовыеЭлементы);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуру(СозданнаяНоменклатура)
	
	Для каждого ЭлементКоллекции Из СозданнаяНоменклатура Цикл
		
		СтрокиИдентификатору = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры, ИдентификаторХарактеристики", ЭлементКоллекции.ИдентификаторНоменклатуры, ЭлементКоллекции.ИдентификаторХарактеристики));
		
		Для каждого Штрихкод Из СтрокиИдентификатору Цикл
			
			Штрихкод.Номенклатура = ЭлементКоллекции.Номенклатура;
			Штрихкод.Характеристика = ЭлементКоллекции.Характеристика;
			
			Если ЗначениеЗаполнено(Штрихкод.Характеристика) Тогда
				Штрихкод.ХарактеристикиИспользуются = Истина;
			КонецЕсли;
			
			Штрихкод.Зарегистрирован = Истина;
			
			ОбщегоНазначенияИСМПТКПереопределяемый.ПоискНоменклатурыПоШтрихкодуПослеЗагрузкиНоменклатуры(Штрихкод, ЭлементКоллекции.Номенклатура);
			
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ПроверятьТЧПередЗакрытием = Истина;
		ВыполняетсяЗакрытие = Истина;
		
		ПараметрЗакрытия = Новый Структура();
		ПараметрЗакрытия.Вставить("ФормаПоискаНоменклатуры_Успешно", Ложь); //Флаг успешности подбора номенклатуры и регистрации ШК. Если возвращается Ложь, дальнейший разбор КМ в документе не происходит.
	    ПараметрЗакрытия.Вставить("СтруктураКодовМаркировки", СтруктураКодовМаркировки);
		
		Закрыть(ПараметрЗакрытия);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокументЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПараметрЗакрытия = ДополнительныеПараметры.ПараметрЗакрытия;
	
	ПараметрЗакрытия.Вставить("ФормаПоискаНоменклатуры_Успешно", Ложь); //Флаг успешности подбора номенклатуры и регистрации ШК. Если возвращается Ложь, дальнейший разбор КМ в документе не происходит.
	ПараметрЗакрытия.Вставить("СтруктураКодовМаркировки", СтруктураКодовМаркировки);
	ПеренестиВДокументФрагмент(ПараметрЗакрытия);

КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяТаблицыФормыПодбора()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаПотребительскиеИГрупповые" Тогда
		ИмяТаблицы = "ШтрихкодыНоменклатуры";
	Иначе
		ИмяТаблицы = "ШтрихкодыУпаковок";
	КонецЕсли;
	
	Возврат ИмяТаблицы;
	
КонецФункции

&НаСервере
Функция СформироватьДанныеДляПередачиНаСервере() Экспорт
	
	МассивДанныхДляПередачи = Новый Массив();
	Для Каждого Элемент Из ШтрихкодыУпаковок Цикл
		
		EAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(Элемент.GTIN);
		
		ДанныеУпаковкиСтруктура = Новый Структура();
		ДанныеУпаковкиСтруктура.Вставить("Номенклатура", Элемент.Номенклатура);
		ДанныеУпаковкиСтруктура.Вставить("GTIN",         Элемент.GTIN);
		ДанныеУпаковкиСтруктура.Вставить("Количество",   Элемент.Количество);
		ДанныеУпаковкиСтруктура.Вставить("ВидПродукции", Элемент.ВидПродукции);
		ДанныеУпаковкиСтруктура.Вставить("EAN",			 EAN);
						
		ДанныеУпаковок = Новый Структура();
		ДанныеУпаковок.Вставить("КодИдентификации", Элемент.Штрихкод);
		ДанныеУпаковок.Вставить("ДанныеУпаковки",   ДанныеУпаковкиСтруктура);
		ДанныеУпаковок.Вставить("ИзменилсяИдентификаторКода", Элемент.ИзменилсяИдентификаторКода);
		
		МассивДанныхДляПередачи.Добавить(ДанныеУпаковок);
	КонецЦикла;
	
	Возврат МассивДанныхДляПередачи;
	
КонецФункции

&НаКлиенте
Процедура ПеренестиВДокументТранспортныеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ПараметрЗакрытия = ДополнительныеПараметры.ПараметрЗакрытия;
	СписокОшибок	 = ДополнительныеПараметры.СписокОшибок;
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		//Выводим все сообщения об ошибках
		Для Каждого Сообщение Из СписокОшибок Цикл
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(Сообщение);
		КонецЦикла;	
		Возврат;
	КонецЕсли;
	
	ПараметрЗакрытия.Вставить("ШтрихкодыНоменклатуры", СформироватьДанныеДляПередачиНаСервере());
	ПараметрЗакрытия.Вставить("ЗаполнениеТранспортныхУпаковок_Успешно", Истина);
	
	ПеренестиВДокументФрагмент(ПараметрЗакрытия);

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗаполнитьДанныеВНесколькихСтроках(СтруктураКодовМаркировки = Неопределено, ПараметрКоманды = Неопределено) Экспорт
	
	Если Не СтруктураКодовМаркировки = Неопределено Тогда
		Для Каждого НомерСтроки Из  Элементы.ШтрихкодыУпаковок.ВыделенныеСтроки Цикл
			СтрокаРедактирования = ШтрихкодыУпаковок.НайтиПоИдентификатору(НомерСтроки);
			//Заполняем общие данные из формы уточнения
			ЗаполнитьЗначенияСвойств(СтрокаРедактирования, СтруктураКодовМаркировки);
			
			//Дозаполняем дополнительные поля
			ВидПродукции = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьВидПродукцииПоНоменклатуре(СтрокаРедактирования.Номенклатура);
			СтрокаРедактирования.ВидПродукции = ВидПродукции;
			
			Если ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоХарактеристикамУНоменклатуры(СтрокаРедактирования.Номенклатура) 
				Или ЗначениеЗаполнено(СтрокаРедактирования.Характеристика) Тогда
				//Значит хар-ки используются
				СтрокаРедактирования.ХарактеристикиИспользуются = Истина
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	УстановитьУсловноеОформлениеТаблицы("ШтрихкодыУпаковокХарактеристика", "ШтрихкодыУпаковокШтрихкод", "ШтрихкодыУпаковок");

КонецПроцедуры

&НаСервере
Функция ПолучитьДоступныеВидыПродукции()
	
	Возврат ОбщегоНазначенияИСМПТК.МассивДоступныхВидовПродукции();
	
КонецФункции

#Область ПодборGTINВСтроке 

&НаКлиенте
Процедура ПодобратьGTINИзРегистраДляНоменклатуры()
	
	ТекущиеДанные = Элементы.ШтрихкодыУпаковок.ТекущиеДанные;
	ТекущиеДанные.Характеристика = "";
	
	Если Не ТекущиеДанные = Неопределено Тогда
		Штрихкоды = ЗаполнитьGTINПоНоменклатуре(ТекущиеДанные.Номенклатура);
		
		ЗаполнитьШтрихкодыВСтроке(Штрихкоды, ТекущиеДанные);
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура)
			И Не НаправлениеИсходногоДокумента = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Входящий") Тогда //Во входящем документе вид продукции и количество сохраняются по данным документа 
			ВидПродукции = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьВидПродукцииПоНоменклатуре(ТекущиеДанные.Номенклатура);
			ТекущиеДанные.ВидПродукции = ВидПродукции;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьGTINПоНоменклатуре(Номенклатура)
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеШтрихкодов = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйПереопределяемый.ПодобратьGTINДляЗаказа(Номенклатура, "", "", Ложь);
	
	Возврат ДанныеШтрихкодов;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьШтрихкодыВСтроке(Штрихкоды, ТекущиеДанные) Экспорт
	
	ТекущийGTIN = ТекущиеДанные.GTIN;
	
	Если Штрихкоды = Неопределено Тогда
		
		Элементы.ШтрихкодыУпаковокGTIN.РежимВыбораИзСписка = Ложь;
		Элементы.ШтрихкодыУпаковокGTIN.СписокВыбора.Очистить();
		Возврат;
		
	ИначеЕсли Штрихкоды.Количество() = 1 Тогда
		
		Элементы.ШтрихкодыУпаковокGTIN.РежимВыбораИзСписка = Ложь;
		Элементы.ШтрихкодыУпаковокGTIN.СписокВыбора.Очистить();
		//Перезаполняем ШК только если его еще не указали
		Если Не ЗначениеЗаполнено(ТекущийGTIN) Тогда
			ТекущиеДанные.GTIN = Штрихкоды[0];
			Характеристика = ПолучитьХарактеристикуНоменклатуры(Штрихкоды[0], ТекущиеДанные.Номенклатура); 
			ТекущиеДанные.Характеристика = Характеристика;
			Если ЗначениеЗаполнено(Характеристика) И ИспользоватьХарактеристикиНоменклатуры Тогда
				//Значит хар-ки используются
				ТекущиеДанные.ХарактеристикиИспользуются = Истина;
			КонецЕсли;			
		КонецЕсли;
		
	ИначеЕсли Штрихкоды.Количество() > 1 Тогда
		
		Элементы.ШтрихкодыУпаковокGTIN.РежимВыбораИзСписка = Истина;
		Элементы.ШтрихкодыУпаковокGTIN.СписокВыбора.ЗагрузитьЗначения(Штрихкоды);
				
	КонецЕсли;
	
КонецПроцедуры

&Насервере
Функция ПолучитьХарактеристикуНоменклатуры(Штрихкоды, Номенклатура)
	
	EAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(Штрихкоды);
	СообщенияОбОшибках = Новый Соответствие();
	ДанныеПоШтрихкоду = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеНоменклатурыИзРегистраШтрихкодовПоШтрихкоду(, EAN, Номенклатура, СообщенияОбОшибках); 
	Если Не СообщенияОбОшибках.Количество() = 0 Тогда
		Для Каждого СообщениеОшибка Из СообщенияОбОшибках Цикл 
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(СообщениеОшибка.Значение);
		КонецЦикла;
	КонецЕсли;
		
	Возврат ?(ДанныеПоШтрихкоду <> Неопределено, ДанныеПоШтрихкоду.Характеристика, Неопределено);
	
КонецФункции

&НаКлиенте
Процедура ОчиститьСписокВыбораGTIN()
	
	ТекущиеДанные = Элементы.ШтрихкодыУпаковок.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		Элементы.ШтрихкодыУпаковокGTIN.СписокВыбора.Очистить();
		Элементы.ШтрихкодыУпаковокGTIN.РежимВыбораИзСписка = Ложь;
	Иначе
		Если Не ЗначениеЗаполнено(ТекущиеДанные.GTIN) Тогда
			Штрихкоды = ЗаполнитьGTINПоНоменклатуре(ТекущиеДанные.Номенклатура);
			ЗаполнитьШтрихкодыВСтроке(Штрихкоды, ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокGTINНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ШтрихкодыУпаковок.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		Штрихкоды = ЗаполнитьGTINПоНоменклатуре(ТекущиеДанные.Номенклатура);
		ЗаполнитьШтрихкодыВСтроке(Штрихкоды, ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоGTINНаСервере()
	
	ИмяПоляХарактеристика = "ШтрихкодыУпаковокХарактеристика";
	ИмяПоляШтрихкод		  = "ШтрихкодыУпаковокШтрихкод";
	ИмяТаблицы 			  = "ШтрихкодыУпаковок";
	
	ТаблицаКодовGTIN = Новый ТаблицаЗначений();
	ТаблицаКодовGTIN.Колонки.Добавить("Штрихкод");
	ТаблицаКодовGTIN.Колонки.Добавить("Номенклатура");
	ТаблицаКодовGTIN.Колонки.Добавить("Характеристика");
	ТаблицаКодовGTIN.Колонки.Добавить("Упаковка");

	//Формируем ТЧ штрихкодов, для которых нужно подобрать сведения о номенклатуре
	Для Каждого СтрокаТЧ Из ШтрихкодыУпаковок Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.GTIN) Тогда
			НоваяСтрока = ТаблицаКодовGTIN.Добавить();
			Штрихкод = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(СтрокаТЧ.GTIN);
			НоваяСтрока.Штрихкод = Штрихкод;
		КонецЕсли;
		
	КонецЦикла;
	
	//делаем запрос к регистру для получения данных
	ДанныеПоНоменклатуре = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеОНоменклатуреПоGTIN(ТаблицаКодовGTIN); 
	
	Если ДанныеПоНоменклатуре.Количество() <> 0 Тогда
		
		Для Каждого СтрокаНоменклатуры Из ДанныеПоНоменклатуре Цикл 
			
			//Для всех строк с таким штрихкодом (их может быть несколько в ТЧ, если несколько транспортных упаковок с одинаковой вложенностью) 
			//делаем заполнение данными номенклатуры
			СтрокиТЧШтрихкодов = ШтрихкодыУпаковок.НайтиСтроки(Новый Структура("GTIN", РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.GTINПоШтрихкодуEAN(СтрокаНоменклатуры.Штрихкод)));
			
			Для Каждого СтрокаШтрихкод Из СтрокиТЧШтрихкодов Цикл
				
				ЗаполнитьЗначенияСвойств(СтрокаШтрихкод, СтрокаНоменклатуры,, "Штрихкод");
				
				//Дополнительно перезаполняем поле Вид номенклатуры по новым данным строки
				Если ЗначениеЗаполнено(СтрокаНоменклатуры.Номенклатура) 
					И Не НаправлениеИсходногоДокумента = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Входящий") Тогда //Во входящем документе вид продукции и количество сохраняются по данным документа 
					ВидПродукции = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьВидПродукцииПоНоменклатуре(СтрокаНоменклатуры.Номенклатура);
					СтрокаШтрихкод.ВидПродукции = ВидПродукции;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаШтрихкод.Характеристика) Тогда
					СтрокаШтрихкод.ХарактеристикиИспользуются = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;

	УстановитьУсловноеОформлениеТаблицы(ИмяПоляХарактеристика, ИмяПоляШтрихкод, ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаписатьШтрихкодНоменклатуры(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
		
	ПослеЗакрытияВопросаЗаписатьШтрихкодНоменклатурыНаСервере();

КонецПроцедуры

&НаСервере 
Процедура ПослеЗакрытияВопросаЗаписатьШтрихкодНоменклатурыНаСервере()
	
	Попытка
			
		ТаблицаДляСообщения = Новый ТаблицаЗначений;
		ТаблицаДляСообщения.Колонки.Добавить("Номенклатура");
		ТаблицаДляСообщения.Колонки.Добавить("Штрихкод");
		
		НужноВыводитьОповещениеНевозможноЗарегистрировать = Ложь;
		ТекстСообщенияУжеЗарегистрирован = "";
		
		Для Каждого СтрокаТЧ Из ШтрихкодыУпаковок Цикл
			
			Номенклатура   = СтрокаТЧ.Номенклатура;
			EAN   = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(СтрокаТЧ.GTIN);
			GTIN  = СтрокаТЧ.GTIN;
			Характеристика = СтрокаТЧ.Характеристика;
			
			//Исключаем строки, у которых недостаточно данных для регистрации ШК
			Если Не ЗначениеЗаполнено(Номенклатура) 
				ИЛИ (Не ЗначениеЗаполнено(Характеристика) 
				И ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоХарактеристикамУНоменклатуры(Номенклатура)
				И ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик()) Тогда
				НужноВыводитьОповещениеНевозможноЗарегистрировать = Истина;
				Продолжить;
			КонецЕсли;
						
			//Проверяем использование этого ШК в других записях регистра
			НоменклатураИзРегистра = РозничноеВыбытиеИСМПТКПереопределяемый.ПолучитьНоменклатуруПоШтрихкодуВРозничномКонтуре(EAN); //Возвращается структура Или Неопределено
			Если Не НоменклатураИзРегистра = Неопределено Тогда
				Если ЗначениеЗаполнено(НоменклатураИзРегистра.Номенклатура) Тогда //Может быть пустым в конфигурациях, поддерживающих неуникальные ШК номенклатуры
					ТекстСообщенияУжеЗарегистрирован = НСтр("ru='Штрихкод ""%1"" уже зарегистрирован для номенклатуры ""%2"".'");
					ТекстСообщенияУжеЗарегистрирован = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияУжеЗарегистрирован, EAN, НоменклатураИзРегистра.Номенклатура);
				Иначе
				    ТекстСообщенияУжеЗарегистрирован = НСтр("ru='Штрихкод ""%1"" уже зарегистрирован в базе!'");
					ТекстСообщенияУжеЗарегистрирован = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияУжеЗарегистрирован, EAN);
				КонецЕсли;
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияУжеЗарегистрирован);	
				Продолжить;
			КонецЕсли;
			
			//Проверяем корректность формата указанного GTIN
			Если ЗначениеЗаполнено(GTIN) И Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ПроверитьКорректностьGTIN(GTIN) 
				И ЗначениеЗаполнено(Номенклатура) Тогда
				ТекстСообщенияНеФормат = НСтр("ru='У штрихкода ""%1"" указан некорректный GTIN ""%2""!'");
				ТекстСообщенияНеФормат = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияНеФормат, EAN, GTIN);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияНеФормат);	
				Продолжить;
			КонецЕсли;

			//Регистрируем новый ШК для позиции
			ОбщегоНазначенияИСМПТКПереопределяемый.ЗаписатьШтрихкодНоменклатуры(Номенклатура, EAN, Неопределено, Характеристика);
			
			//Формируем список штрихкодов для оповещения
			НоваяСтрокаТаблицыСообщений = ТаблицаДляСообщения.Добавить();
			НоваяСтрокаТаблицыСообщений.Номенклатура = Номенклатура;
			НоваяСтрокаТаблицыСообщений.Штрихкод 	 = EAN;
					
		КонецЦикла;
		
		ТаблицаДляСообщения.Свернуть("Номенклатура, Штрихкод");
		Для Каждого СтрокаДанных Из ТаблицаДляСообщения Цикл
			//Информируем пользователя об успехе
			ТекстСообщения = НСтр("ru='Для номенклатуры ""%1"" был зарегистрирован новый штрихкод ""%2"".'");
			ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаДанных.Номенклатура, СтрокаДанных.Штрихкод);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
		
		Если ТаблицаДляСообщения.Количество() = 0 
			И НужноВыводитьОповещениеНевозможноЗарегистрировать 
			И НЕ ЗначениеЗаполнено(ТекстСообщенияУжеЗарегистрирован) Тогда
			//Данных для регистрации не было
			ТекстСообщения = НСтр("ru = 'Штрихкоды не были зарегистрированы: отсутствуют данные для заполнения!'");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	Исключение
		
		Информация = ИнформацияОбОшибке();
		ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияНеУдалосьЗаписатьШтрихкодПоПричинеСПараметром();
		ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, КраткоеПредставлениеОшибки(Информация));
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере 
Функция ПроверитьДанныеУпаковок() 
	
	//Сообщения об ошибках формируются, когда:
	//1) Номенклатура и GTIN в строке заполнены, при этом GTIN не соответствует номенклатуре по данным регистра;
	//2) GTIN в строке заполнен, при этом для него не найдено соответствий в регистре Штрихкоды;
	//3) GTIN в строке заполнен, при этом он не соответствует формату; 
	//4) GTIN в строке не заполнен;
	//5) Не заполнено количество вложенных.
	
	ДанныеПроверки = Новый Структура();
	СписокОшибок   = Новый Массив();
	СообщенияОбОшибках = Новый Соответствие();
	Для Каждого СтрокаТЧ Из ШтрихкодыУпаковок Цикл
		
		ТекстСообщения = "";
		
		//Проверка GTIN 
		Если Не ЗначениеЗаполнено(СтрокаТЧ.GTIN) Тогда 
			ТекстСообщения = НСтр("ru='У штрихкода %Штрихкод% не указан код GTIN.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", СтрокаТЧ.Штрихкод);
		Иначе
			//Проверяем формат
			GTINКорректногоФормата = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ПроверитьКорректностьGTIN(СтрокаТЧ.GTIN);
			Если СтрДлина(СтрокаТЧ.GTIN) <> 14 Или Не GTINКорректногоФормата Тогда
				ТекстСообщения = НСтр("ru='У штрихкода %Штрихкод% указан не соответствующий установленному формату код GTIN.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", СтрокаТЧ.Штрихкод);
			Иначе
				Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
					//Проверяем, связан ли ШК в регистре с номенклатурой
					ДанныеШтрихкодов = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеНоменклатурыИзРегистраШтрихкодовПоШтрихкоду(Истина, РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(СтрокаТЧ.GTIN),, СообщенияОбОшибках);
					Если ДанныеШтрихкодов.Количество() = 1 Тогда //значит ЕАН в регистре не задублирован 
						Если ЗначениеЗаполнено(ДанныеШтрихкодов[0].Номенклатура)
							И Не СтрокаТЧ.Номенклатура = ДанныеШтрихкодов[0].Номенклатура Тогда
							ТекстСообщения = НСтр("ru='Код GTIN, указанный у штрихкода %Штрихкод%, связан с другой номенклатурой в регистре ""%ИмяРегистраШтрихкоды%"".'");
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", СтрокаТЧ.Штрихкод);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистраШтрихкоды%", ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьПредставлениеРегистраШтрихкоды());
						КонецЕсли;					
					Иначе //штрихкод не уникален
						ЗаписейСЭтойНоменклатурой = ДанныеШтрихкодов.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТЧ.Номенклатура)); 
						Если ЗаписейСЭтойНоменклатурой.Количество() = 0 Тогда
							ТекстСообщения = НСтр("ru='Код GTIN, указанный у штрихкода %Штрихкод%, не зарегистрирован в регистре ""%ИмяРегистраШтрихкоды%"" для номенклатуры %Номенклатура%.'");
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", 	   		   СтрокаТЧ.Штрихкод);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистраШтрихкоды%", ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьПредставлениеРегистраШтрихкоды());
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", 		   СтрокаТЧ.Номенклатура);	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		//Проверка количества
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Количество) Тогда 
			Если Не ТекстСообщения = "" Тогда
				ТекстСообщения = ТекстСообщения + " " + НСтр("ru='Не заполнено количество вложенных товаров в этой упаковке.'");
			Иначе
				//С GTIN все в порядке, не указано только количество
				ТекстСообщения = НСтр("ru='У штрихкода %Штрихкод% не заполнено количество вложенных товаров.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Штрихкод%", СтрокаТЧ.Штрихкод);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			СписокОшибок.Добавить(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	Если Не СообщенияОбОшибках.Количество() = 0 Тогда
		Для Каждого СообщениеОшибка Из СообщенияОбОшибках Цикл 
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(СообщениеОшибка.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если СписокОшибок.Количество() = 0 Тогда
		ДанныеПроверки.Вставить("Ошибка", Ложь);
	Иначе
		ДанныеПроверки.Вставить("Ошибка", Истина);
		ДанныеПроверки.Вставить("СписокОшибок", СписокОшибок);
	КонецЕсли;
	
	Возврат ДанныеПроверки;
	
КонецФункции

&НаКлиенте
Процедура ШтрихкодыУпаковокGTINОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ШтрихкодыУпаковок.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Характеристика = ПолучитьХарактеристикуНоменклатуры(ВыбранноеЗначение, ТекущиеДанные.Номенклатура); 
	ТекущиеДанные.Характеристика = Характеристика;
	Если ЗначениеЗаполнено(Характеристика) И ИспользоватьХарактеристикиНоменклатуры Тогда
		//Значит хар-ки используются
		ТекущиеДанные.ХарактеристикиИспользуются = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ИдентификаторыSSCC

&НаКлиенте
Процедура ДобавитьИдентификаторSSCC(Команда)
	
	Если ПроверкаВыделенныхСтрок() Тогда
		РедактироватьИдентификаторSSCCНаСервере("Добавить");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИдентификаторSSCC(Команда)
	
	Если ПроверкаВыделенныхСтрок() Тогда
		РедактироватьИдентификаторSSCCНаСервере("Удалить");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверкаВыделенныхСтрок()
	
	КоличествоВыделенныхСтрок = Элементы.ШтрихкодыУпаковок.ВыделенныеСтроки.Количество();
	Если КоличествоВыделенныхСтрок = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Строки не выбраны.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура РедактироватьИдентификаторSSCCНаСервере(Действие)
	
	ВыделенныеСтроки = Элементы.ШтрихкодыУпаковок.ВыделенныеСтроки;
	
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		
		СтрокаТЧ = ШтрихкодыУпаковок.НайтиПоИдентификатору(Идентификатор);
		Если Действие = "Добавить" Тогда
			Если СтрДлина(СтрокаТЧ.Штрихкод) = 18 Тогда
				СтрокаТЧ.Штрихкод = "00" + СтрокаТЧ.Штрихкод;
				Если СтрокаТЧ.ИзменилсяИдентификаторКода = Истина Тогда
					СтрокаТЧ.ИзменилсяИдентификаторКода = Ложь; //код вернули к первоначальному значению
				Иначе
					СтрокаТЧ.ИзменилсяИдентификаторКода = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если СтрДлина(СтрокаТЧ.Штрихкод) = 20 Тогда
				СтрокаТЧ.Штрихкод = Сред(СтрокаТЧ.Штрихкод, 3);
				Если СтрокаТЧ.ИзменилсяИдентификаторКода = Истина Тогда
					СтрокаТЧ.ИзменилсяИдентификаторКода = Ложь; //код вернули к первоначальному значению
				Иначе
					СтрокаТЧ.ИзменилсяИдентификаторКода = Истина;
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ВыполняетсяЗакрытие = Ложь;

#КонецОбласти

