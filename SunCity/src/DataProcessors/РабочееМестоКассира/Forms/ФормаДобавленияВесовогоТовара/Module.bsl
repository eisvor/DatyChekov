#Область ОписаниеПеременных

&НаКлиенте
Перем ЭлектронныеВесыЗаняты;

&НаКлиенте
Перем ПоступилоСобытиеВзвешивания;

&НаКлиенте
Перем ПоказанаОшибкаНулевогоВеса;

&НаКлиенте
Перем СчетчикВыводаОшибок;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработатьВходныеПараметры();
	ЦветаФормы = ОбщегоНазначенияРМК.ЦветаФормыРМК();
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	СчетчикВыводаОшибок = 0;
	ЭлектронныеВесыЗаняты = Ложь;
	ПоступилоСобытиеВзвешивания = Ложь;
	ПоказанаОшибкаНулевогоВеса = Ложь;
	Если Не ДляОбучения Тогда
		ЗапуститьПериодическийОпросВеса();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ДляОбучения Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник = "ПодключаемоеОборудование" И ЭтоПолучениеСтабильногоВеса(ИмяСобытия, Параметр) Тогда
		
		ПоступилоСобытиеВзвешивания = Истина;
		ОбработатьПолучениеВесаОтЭлектронныхВесов(Параметр.Вес);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьВес(Команда)
	
	ЗапроситьВесОднократно();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТовар(Команда)
	
	ДобавлениеПодтверждено = Истина;
	Если ДляОбучения Тогда
		ОбработатьПодтверждениеДобавления();
	Иначе
		ЗапроситьВесОднократно();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьПодтверждениеДобавления()
	
	Ответ = Новый Структура("ВесТовара", ТекущийВес);
	Закрыть(Ответ);
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоПолучениеСтабильногоВеса(ИмяСобытия, Параметр)
	Возврат (ИмяСобытия = "Weighting" И Параметр.Вес > 0 И Параметр.Стабилизация = Истина);
КонецФункции

&НаКлиенте
Процедура ОбработатьПолучениеВесаОтЭлектронныхВесов(ВесТовара)
	
	ТекущийВес = ВесТовара;
	Если ТекущийВес > 0 И ПоказанаОшибкаНулевогоВеса Тогда
		СкрытьОшибкуНулевогоВеса();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВходныеПараметры()
	
	Если Параметры.Свойство("ЭтоФормаобучения") Тогда
		ДляОбучения = Параметры.ЭтоФормаобучения;
	КонецЕсли;
	Элементы.ДекорацияНаименование.Заголовок = Параметры.НаименованиеПозиции;
	ИдентификаторФормыВладельца = Параметры.ИдентификаторФормыВладельца;
	Если (Не ДляОбучения) И (Не Параметры.ТекущиеЭлектронныеВесы = Неопределено) Тогда
		ЭлектронныеВесы = Параметры.ТекущиеЭлектронныеВесы;
	КонецЕсли;
	ИзображениеТовара = Параметры.АдресИзображения;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьВесОднократно()
	
	Если Не ЭлектронныеВесыЗаняты Тогда
		ПараметрыВзвешивания = Новый Структура();
		ПараметрыВзвешивания.Вставить("ВключитьОбработчикОжидания", ПоказанаОшибкаНулевогоВеса И Не ДобавлениеПодтверждено);
		ЗапроситьВес(ПараметрыВзвешивания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьВес(ПараметрыВзвешивания)
	
	ЭлектронныеВесыЗаняты = Истина;
	ПараметрыОперации = Новый Структура();
	
	ИдентификаторВесов = Неопределено;
	Если ЗначениеЗаполнено(ЭлектронныеВесы) Тогда
		ИдентификаторВесов = ЭлектронныеВесы;
	КонецЕсли;
	
	ОповещениеЗавершенияВзвешивания = Новый ОписаниеОповещения("ПолучитьВесСЭлектронныхВесовЗавершение",
		ЭтотОбъект, ПараметрыВзвешивания);
		
	МенеджерОборудованияРМККлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеЗавершенияВзвешивания,
		ИдентификаторФормыВладельца, ИдентификаторВесов, ПараметрыОперации);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗапуститьПериодическийОпросВеса()
	
	Если ЭлектронныеВесыЗаняты Тогда
		
		ЭтотОбъект.ПодключитьОбработчикОжидания("ЗапуститьПериодическийОпросВеса", 1, Истина);
		
	Иначе
		
		ПараметрыВзвешивания = Новый Структура();
		ПараметрыВзвешивания.Вставить("ВключитьОбработчикОжидания", Истина);
		ЗапроситьВес(ПараметрыВзвешивания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВесСЭлектронныхВесовЗавершение(Результат, ПараметрыВзвешивания) Экспорт
	
	ЭлектронныеВесыЗаняты = Ложь;
	Если ОбщегоНазначенияРМККлиентСервер.ЕстьСвойство(Результат, "Результат") И Результат.Результат Тогда
		
		Если Не ЗначениеЗаполнено(ЭлектронныеВесы) Тогда
			ЭлектронныеВесы = Результат.ИдентификаторУстройства;
		КонецЕсли;
		ОбработатьПолучениеВесаОтЭлектронныхВесов(Результат.Вес);
		Если (Не ДобавлениеПодтверждено) И (Не ПоступилоСобытиеВзвешивания)
				И ПараметрыВзвешивания.ВключитьОбработчикОжидания Тогда
			ЭтотОбъект.ПодключитьОбработчикОжидания("ЗапуститьПериодическийОпросВеса", 1, Истина);
		КонецЕсли;
		
	Иначе
		
		ТекущийВес = 0;
		
	КонецЕсли;
	Если ДобавлениеПодтверждено Тогда
		Если ТекущийВес = 0 Тогда
			СчетчикВыводаОшибок = 0;
			ПодсветитьОшибкуНулевогоВеса();
			ДобавлениеПодтверждено = Ложь;
		Иначе
			ОбработатьПодтверждениеДобавления();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкуНулевогоВеса()
	
	ТекстСообщения = НСтр("ru='Не указан вес. Положите товары на весы.'");
	Элементы.ДекорацияВертикальныйОтступ.Заголовок = ТекстСообщения;
	Элементы.ТекущийВес.ЦветРамки = ЦветаФормы.ОсобыйТекст;
	Элементы.ИзображениеТовара.ЦветРамки = ЦветаФормы.ОсобыйТекст;
	ПоказанаОшибкаНулевогоВеса = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьОшибкуНулевогоВеса()
	
	Элементы.ДекорацияВертикальныйОтступ.Заголовок = " ";
	Элементы.ТекущийВес.ЦветРамки = ЦветаФормы.Авто;
	Элементы.ИзображениеТовара.ЦветРамки = ЦветаФормы.Авто;
	ПоказанаОшибкаНулевогоВеса = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьОшибкуНулевогоВеса()
	
	КоличествоИтерацийПоказа = 7;
	СчетчикВыводаОшибок = СчетчикВыводаОшибок + 1;
	Если ПоказанаОшибкаНулевогоВеса Тогда
		СкрытьОшибкуНулевогоВеса();
	ИначеЕсли ТекущийВес = 0 Тогда
		ПоказатьОшибкуНулевогоВеса();
	КонецЕсли;
	
	Если ТекущийВес > 0 Или (ПоказанаОшибкаНулевогоВеса И СчетчикВыводаОшибок > КоличествоИтерацийПоказа) Тогда
		ЭтотОбъект.ПодключитьОбработчикОжидания("ЗапуститьПериодическийОпросВеса", 1, Истина);
	Иначе
		ЭтотОбъект.ПодключитьОбработчикОжидания("ПодсветитьОшибкуНулевогоВеса", 0.3, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Если ДляОбучения Тогда
		Элементы.ГруппаВес.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти