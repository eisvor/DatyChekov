
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Кассиры") Тогда
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Организация = Параметры.Организация;
	
	Для Каждого Кассир Из Параметры.Кассиры Цикл
		ЗаполнитьЗначенияСвойств(Кассиры.Добавить(), Новый Структура("ФИО, ИмяПользователя, СвязанныеКассы", 
			Кассир.FullName,
			Кассир.Email,
			СтрСоединить(Кассир.Cashboxes, ",")));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьКомандРегистрации();
	УстановитьДоступностьОперацийПоКассиру(Кассиры.Количество() > 0);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьДоступностьКомандРегистрации();
	Кассиры.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКассиры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСписокКассиров(Команда)
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация", Организация);
	ПараметрыПодключения = Новый Структура;
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОбновитьСписокКассиров_Завершение", ЭтотОбъект);
	ИнтеграцияWebKassaКлиент.НачатьПолучениеСпискаПользователей(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрациюКассира(Команда)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстОшибки = НСтр("ru='Не заполнена огранизация!'");
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Ошибка заполнения", ,);
		Возврат;
	КонецЕсли;
	
	ПараметрыПодключения = Новый Структура;
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация", Организация);
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОткрытьРегистрациюКассира_Завершение", ЭтотОбъект);
	ИнтеграцияWebKassaКлиент.НачатьПолучениеСпискаКасс(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУправлениеПравами(Команда)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстОшибки = НСтр("ru='Не заполнена огранизация!'");
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Ошибка заполнения", ,);
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьВыборКассира() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПодключения = Новый Структура;
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация", Организация);
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОткрытьУправлениеПравами_Завершение", ЭтотОбъект);
	ИнтеграцияWebKassaКлиент.НачатьПолучениеСпискаКасс(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСменаПароля(Команда)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстОшибки = НСтр("ru='Не заполнена огранизация!'");
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Ошибка заполнения", ,);
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьВыборКассира() Тогда
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", ?(Организация=Неопределено,Неопределено, Организация));
	ПараметрыФормы.Вставить("ИмяПользователя", Элементы.Кассиры.ТекущиеДанные.ИмяПользователя);
	ОткрытьФорму("Обработка.Панель1СWebKassa.Форма.СменаПароляПользователя", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьДоступностьКомандРегистрации()
	
	ДоступностьЭлемента = ЗначениеЗаполнено(Организация);
	
	ИнтеграцияWebKassaКлиентСерверПереопределяемый.УстановитьСвойствоЭлементаФормы(Элементы, "РегистрацияКассира"      , "Доступность", ДоступностьЭлемента);
	ИнтеграцияWebKassaКлиентСерверПереопределяемый.УстановитьСвойствоЭлементаФормы(Элементы, "ИзменениеПравДоступа"    , "Доступность", ДоступностьЭлемента);
	ИнтеграцияWebKassaКлиентСерверПереопределяемый.УстановитьСвойствоЭлементаФормы(Элементы, "ОткрытьСменаПароля"      , "Доступность", ДоступностьЭлемента);
	ИнтеграцияWebKassaКлиентСерверПереопределяемый.УстановитьСвойствоЭлементаФормы(Элементы, "Кассиры"                 , "Доступность", ДоступностьЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьОперацийПоКассиру(ДоступностьЭлемента)
	
	ИнтеграцияWebKassaКлиентСерверПереопределяемый.УстановитьСвойствоЭлементаФормы(Элементы, "ИзменениеПравДоступа"    , "Доступность", ДоступностьЭлемента);
	ИнтеграцияWebKassaКлиентСерверПереопределяемый.УстановитьСвойствоЭлементаФормы(Элементы, "ОткрытьСменаПароля"      , "Доступность", ДоступностьЭлемента);
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВыборКассира()
	
	Если Элементы.Кассиры.ТекущиеДанные = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Для выполнения операции необходимо выбрать кассира!'");
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСписокКассиров(МассивКассиров)
	
	Для Каждого Кассир Из МассивКассиров Цикл
		ЗаполнитьЗначенияСвойств(Кассиры.Добавить(), Новый Структура("ФИО, ИмяПользователя, СвязанныеКассы", 
			Кассир.FullName,
			Кассир.Email,
			СтрСоединить(Кассир.Cashboxes, ",")));
	КонецЦикла;
	
КонецПроцедуры

#Область ЗавершениеИнтерактивныхДействий

&НаКлиенте
Процедура ОткрытьРегистрациюКассира_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.РезультатВыполнения Тогда
		Попытка
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("КассыККМ", Новый Массив);
			ПараметрыФормы.Вставить("Организация", ?(Организация=Неопределено,Неопределено, Организация));
			Для Каждого Касса из Результат.ОбъектыJSON.Data Цикл
				ВремСтруктура = Новый Структура("Выбрать, Наименование, СерийныйНомер");
				ВремСтруктура.Выбрать=Ложь;
				ВремСтруктура.Наименование=Касса.ActivationEndDate;
				ВремСтруктура.СерийныйНомер=Касса.CashboxUniqueNumber;
				ПараметрыФормы.КассыККМ.Добавить(ВремСтруктура);
			КонецЦикла;
	
			ОткрытьФорму("Обработка.Панель1СWebKassa.Форма.РегистрацияКассира", ПараметрыФормы, ЭтаФорма);
		Исключение
			ТекстСообщения = НСтр("ru = 'При получении списка касс произошла ошибка.
			                      |Дополнительное описание:
			                      |%ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
		
	Иначе
		ТекстСообщения = НСтр("ru = 'При получении списка касс произошла ошибка.
			                      |Дополнительное описание:
			                      |%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокКассиров_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОчиститьСообщения();
	
	Если Результат.РезультатВыполнения Тогда
		Кассиры.Очистить();
		ЗаполнитьСписокКассиров(Результат.ОбъектыJSON.Data);
		УстановитьДоступностьОперацийПоКассиру(Кассиры.Количество() > 0);
		ТекстСообщения = НСтр("ru = 'Список кассиров успешно обновлен!'");
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	Иначе
		Если Результат.ВыходныеПараметры[0] = 999 Тогда
			ТекстСообщения = НСтр("ru = 'При получении списка кассиров произошла ошибка.
			|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУправлениеПравами_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.РезультатВыполнения Тогда
		Попытка
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("КассыККМ", Новый Массив);
			ПараметрыФормы.Вставить("Организация", ?(Организация=Неопределено,Неопределено, Организация));
			Для Каждого Касса из Результат.ОбъектыJSON.Data Цикл
				ВремСтруктура = Новый Структура("Выбрать, Наименование, СерийныйНомер");
				ВремСтруктура.Выбрать=Ложь;
				ВремСтруктура.Наименование=Касса.ActivationEndDate;
				ВремСтруктура.СерийныйНомер=Касса.CashboxUniqueNumber;
				ПараметрыФормы.КассыККМ.Добавить(ВремСтруктура);
			КонецЦикла;
			ПараметрыФормы.Вставить("ФИО", Элементы.Кассиры.ТекущиеДанные.ФИО);
			ПараметрыФормы.Вставить("ИмяПользователя", Элементы.Кассиры.ТекущиеДанные.ИмяПользователя);
			ПараметрыФормы.Вставить("ДоступныеКассы", ИнтеграцияWebKassaКлиентСерверПереопределяемый.РазложитьСтрокуВМассивСлов(Элементы.Кассиры.ТекущиеДанные.СвязанныеКассы, ","));
			
			ОповещениеПослеИзмененияПрав = Новый ОписаниеОповещения("ОткрытьУправлениеПравами_ПослеИзмененияПрав", ЭтотОбъект);
			ОткрытьФорму("Обработка.Панель1СWebKassa.Форма.УправлениеПравамиКассира", ПараметрыФормы, ЭтотОбъект, , , ,ОповещениеПослеИзмененияПрав);
		Исключение
			ТекстСообщения = НСтр("ru = 'При получении списка касс произошла ошибка.
			                      |Дополнительное описание:
			                      |%ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
		
	Иначе
		ТекстСообщения = НСтр("ru = 'При получении списка касс произошла ошибка.
			                      |Дополнительное описание:
			                      |%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУправлениеПравами_ПослеИзмененияПрав(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.РезультатВыполнения Тогда
		Для Каждого Стр Из Кассиры Цикл
			Если Стр.ИмяПользователя = Результат.ИмяПользователя Тогда
				Стр.СвязанныеКассы = Результат.СвязанныеКассы;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТекстСообщения = НСтр("ru = 'При изменении прав кассира произошла ошибка.
			                      |Дополнительное описание:
			                      |%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти