
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОрганизацииБезНастроек = ИнтеграцияWebKassaВызовСервера.ОрганизацииБезНастроек();
	Элементы.Организация.РежимВыбораИзСписка = Истина;
	Элементы.Организация1.РежимВыбораИзСписка = Истина;
	Для Каждого Орг из ОрганизацииБезНастроек Цикл
		Элементы.Организация.СписокВыбора.Добавить(Орг);
		Элементы.Организация1.СписокВыбора.Добавить(Орг);
	КонецЦикла;
	
	Элементы.СерияНДС.Доступность = ПлательщикНДС;
	Элементы.НомерНДС.Доступность = ПлательщикНДС;
	
	АдресСервиса = "https://kkm.webkassa.kz";
	
КонецПроцедуры

&НаКлиенте
Процедура ПлательщикНДСПриИзменении(Элемент)
	
	Элементы.СерияНДС.Доступность = ПлательщикНДС;
	Элементы.НомерНДС.Доступность = ПлательщикНДС;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьРегистрациюОрганизации(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ВходныеПараметры = ДанныеРегистрацииОрганизации();
	ПараметрыПодключения = Новый Структура;
	ПараметрыПодключения.Вставить("АдресСервиса", АдресСервиса);
	
	Если РежимДобавления = 0 Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьРегистрациюОрганизации_Завершение", ЭтотОбъект, ВходныеПараметры);
		ИнтеграцияWebKassaКлиент.НачатьРегистрациюОрганизации(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	ИначеЕсли РежимДобавления = 1 Тогда
		ВходныеПараметры.Удалить("Организация");
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьИмпортОрганизации_Завершение", ЭтотОбъект, ВходныеПараметры);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеСведенийОрганизацииБезНастроек(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ДанныеРегистрацииОрганизации()
	
	ОбщиеДанныеОрганизации = ИнтеграцияWebKassaВызовСервераПереопределяемый.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата());
	ДанныеОрганизации = Новый Структура;
	ДанныеОрганизации.Вставить("Организация",        Организация);
	ДанныеОрганизации.Вставить("ИНН",                ОбщиеДанныеОрганизации.ИНН);
	ДанныеОрганизации.Вставить("ПризнакЮрЛица",      ОбщиеДанныеОрганизации.ПризнакЮрЛица);
	ДанныеОрганизации.Вставить("ПолноеНаименование", ОбщиеДанныеОрганизации.ПолноеНаименование);
	ДанныеОрганизации.Вставить("ЮридическийАдрес",   ОбщиеДанныеОрганизации.ЮридическийАдрес);
	ДанныеОрганизации.Вставить("ВидНалогообложения", ВидНалогообложения);
	ДанныеОрганизации.Вставить("КодОКЭД",            КодОКЭД);
	ДанныеОрганизации.Вставить("ФИО",                ФИО);
	ДанныеОрганизации.Вставить("НомерТелефона",      "+"+НомерТелефона);
	ДанныеОрганизации.Вставить("Email",              Email);
	ДанныеОрганизации.Вставить("Пароль",             Пароль);
	ДанныеОрганизации.Вставить("АдресСервиса",       АдресСервиса);
	ДанныеОрганизации.Вставить("ПлательщикНДС",      ПлательщикНДС);
	ДанныеОрганизации.Вставить("СерияНДС",           СерияНДС);
	ДанныеОрганизации.Вставить("НомерНДС",           НомерНДС);
	
	Возврат ДанныеОрганизации;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьРегистрациюОрганизации_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		НастройкаСоздана = СоздатьНастройкуИнтеграцииWebKassa(
			ДополнительныеПараметры.Организация,
			ДополнительныеПараметры.Email,
			ДополнительныеПараметры.АдресСервиса);
			
		Если НастройкаСоздана Тогда
			РезультатВыбора = Новый Структура;
			РезультатВыбора.Вставить("РезультатВыполнения", Истина);
			РезультатВыбора.Вставить("Организация", Организация);
			Закрыть(РезультатВыбора);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'При регистрации организации произошла ошибка. Организация не зарегистрирована.
									|Дополнительное описание:
									|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИмпортОрганизации_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		
		//сравнить ИИН с входными параметрами
		Если Результат.ОбъектыJSON.Data.Xin = ДополнительныеПараметры.ИНН Тогда
			//выполнить процедуру получения пользователей
			ДополнительныеПараметры.Email = Результат.ДополнительныеПараметры.ИДУстройства;
			ДополнительныеПараметры.Вставить("Организация", Организация);
			ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьИмпортОрганизации_ПолучениеПользователей", ЭтотОбъект, ДополнительныеПараметры);
			ВходныеПараметры = Новый Структура;
			ВходныеПараметры.Вставить("Токен", Результат.ДополнительныеПараметры.ПараметрыПодключения.ТокенАвторизации);
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Параметры"              , ВходныеПараметры);
			ДополнительныеПараметры.Вставить("ВыходныеПараметры"      , Новый Массив);
			ДополнительныеПараметры.Вставить("ПараметрыПодключения"   , Результат.ДополнительныеПараметры.ПараметрыПодключения);
			ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
			ИнтеграцияWebKassaКлиент.НачатьПолучениеСпискаПользователей_ПослеАутентификации(Результат, ДополнительныеПараметры);
		Иначе
			ТекстСообщения = НСтр("ru = 'ИИН/БИН %1 не найден в системе 1С:WebKassa. Возможно организация не зарегистрирована в сервисе 1С:WebKassa.
			|Попробуйте выполнить регистрацию организации в режиме ""Добавить новую"".'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, ДополнительныеПараметры.ИНН);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
			
	Иначе
		ТекстСообщения = НСтр("ru = 'При получении сведений об организации произошла ошибка. Организация не зарегистрирована.
									|Дополнительное описание:
									|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИмпортОрганизации_ПолучениеПользователей(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		//создаем настройки интеграции
		НастройкаСоздана = СоздатьНастройкуИнтеграцииWebKassa(
			ДополнительныеПараметры.Организация,
			ДополнительныеПараметры.Email,
			ДополнительныеПараметры.АдресСервиса);
			
		Если НастройкаСоздана Тогда
			//выгружаем логины емейлы в массив и добавляем их в настройки
			ПолученныеПользователи = Новый Массив;
			Для Каждого Пользователь из Результат.ОбъектыJSON.Data Цикл
				ПолученныеПользователи.Добавить(Пользователь.Email);
			КонецЦикла;
			
			РезультатВыбора = Новый Структура;
			РезультатВыбора.Вставить("РезультатВыполнения", Истина);
			РезультатВыбора.Вставить("Организация", Организация);
			
			Если Не ДобавитьПользователейВНастройкуИнтеграции(ДополнительныеПараметры.Организация, ПолученныеПользователи) Тогда
				// Настройка создана, но пользователи не добавлены
				РезультатВыбора.Вставить("Сообщение", НСтр("ru = 'Организация зарегистрирована, но при добавлении пользователей организации произошла ошибка. Обновите пользователей вручную.'"));
			КонецЕсли;
			
			Закрыть(РезультатВыбора);
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'При получении пользователей организации произошла ошибка. Организация не зарегистрирована.
									|Дополнительное описание:
									|%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьНастройкуИнтеграцииWebKassa(Организация, Пользователь, АдресСервиса)
	
	Возврат Справочники.НастройкиИнтеграцииWebKassa.СоздатьНастройкуИнтеграцииWebKassa(Организация, Пользователь, АдресСервиса);
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьПользователейВНастройкуИнтеграции(Организация, МассивПользователей)
	
	Возврат Справочники.НастройкиИнтеграцииWebKassa.ДобавитьПользователейВНастройкуИнтеграции(Организация, МассивПользователей);
	
КонецФункции

&НаКлиенте
Процедура РежимДобавленияПриИзменении(Элемент)
	
	ПанельРежим = Элементы.ГруппаРежимДобавления;
	Если РежимДобавления = 1 Тогда
		ПанельРежим.ТекущаяСтраница = ПанельРежим.ПодчиненныеЭлементы.СтраницаДобавлениеЗарегистрированной;
	Иначе
		ПанельРежим.ТекущаяСтраница = ПанельРежим.ПодчиненныеЭлементы.СтраницаРегистрацияНовой;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если РежимДобавления = 1 Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ВидНалогообложения"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("КодОКЭД"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ФИО"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("НомерТелефона"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Email"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Пароль"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("СерияНДС"));
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("НомерНДС"));
	Иначе
		Если Не ПлательщикНДС Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("СерияНДС"));
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("НомерНДС"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
