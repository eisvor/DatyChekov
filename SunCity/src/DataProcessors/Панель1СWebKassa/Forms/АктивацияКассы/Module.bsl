
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Организация")
		ИЛИ НЕ Параметры.Свойство("СерийныйНомер")
		ИЛИ НЕ Параметры.Свойство("ДатаОкончания") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Организация   = Параметры.Организация;
	СерийныйНомер = Параметры.СерийныйНомер;
	ДатаОкончания = Параметры.ДатаОкончания;
	
	ЗаполнитьСписокПартнеров(Параметры.Партнеры);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьАктивациюКассы(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация",   Организация);
	ВходныеПараметры.Вставить("СерийныйНомер", СерийныйНомер);
	ВходныеПараметры.Вставить("НомерКарты",    НомерКарты);
	ВходныеПараметры.Вставить("КодАктивации",  КодАктивации);
	ВходныеПараметры.Вставить("НомерПартнера", НомерПартнера);
	
	ПараметрыПодключения = Новый Структура;
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьАктивациюКассы_Завершение", ЭтотОбъект);
	ИнтеграцияWebKassaКлиент.НачатьАктивациюКассы(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокПартнеров(МассивПартнеров)
	
	СписокВыбора = Новый СписокЗначений;
	
	Для Каждого ЭлементМассива Из МассивПартнеров Цикл
		Элементы.НомерПартнера.СписокВыбора.Добавить(ЭлементМассива.НомерПартнера, ЭлементМассива.Наименование);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАктивациюКассы_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьАктивациюКассы_ОбновлениеИнформации", ЭтотОбъект);
		ВходныеПараметры = Новый Структура;
		ВходныеПараметры.Вставить("СерийныйНомер", СерийныйНомер);
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Параметры"              , ВходныеПараметры);
		ДополнительныеПараметры.Вставить("ВыходныеПараметры"      , Новый Массив);
		ДополнительныеПараметры.Вставить("ПараметрыПодключения"   , Результат.ДополнительныеПараметры.ПараметрыПодключения);
		ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеИнформацииКассы_ПослеАутентификации(Результат, ДополнительныеПараметры)
	Иначе
		Если Результат.ВыходныеПараметры[0] = 999 Тогда
			ТекстСообщения = НСтр("ru = 'При активации кассы произошла ошибка.
			|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАктивациюКассы_ОбновлениеИнформации(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыбора = Новый Структура;
	Если Результат.РезультатВыполнения Тогда
		РезультатВыбора.Вставить("РезультатВыполнения", Истина);
		РезультатВыбора.Вставить("ДатаОкончания", Результат.ОбъектыJSON.Data.ActivationEndDate);
		РезультатВыбора.Вставить("СерийныйНомер", СерийныйНомер);
		Закрыть(РезультатВыбора);
	Иначе
		РезультатВыбора.Вставить("РезультатВыполнения", Ложь);
		Закрыть(РезультатВыбора);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
