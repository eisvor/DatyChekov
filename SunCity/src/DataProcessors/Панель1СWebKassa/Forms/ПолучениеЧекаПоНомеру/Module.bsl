
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Организация") 
		ИЛИ НЕ Параметры.Свойство("СерийныйНомер") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Организация   = Параметры.Организация;
	СерийныйНомер = Параметры.СерийныйНомер;
	СведенияООрганизации = ИнтеграцияWebKassaВызовСервераПереопределяемый.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата());
	НаименованиеОрганизации = СведенияООрганизации.ПолноеНаименование;
	ИИН = СведенияООрганизации.ИНН;
	НомерНДС = Организация.НомерСвидетельстваПоНДС;
	СерияНДС = Организация.СерияСвидетельстваПоНДС;
	ШиринаЛенты = ШиринаЛентыПоУмолчанию(СерийныйНомер);
	
	Элементы.ПринтерЧеков.Доступность = ИспользоватьПринтерЧеков;
	Элементы.ПечатьЧека.Доступность = ИспользоватьПринтерЧеков;
	РабочееМесто = ИнтеграцияWebKassaВызовСервераПереопределяемый.ПолучитьРабочееМестоКлиента();
	
	//принтер чеков
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков));
	Элементы.ПринтерЧеков.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ВидимостьНомерЧека	 = (ВидОперации = 0);
	ВидимостьЯзыкПечати	 = НЕ (ВидОперации = 1);
	
	Элементы.НомерЧека.Видимость	 = ВидимостьНомерЧека;
	Элементы.ЯзыкПечати.Видимость	 = ВидимостьЯзыкПечати;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПринтерЧековПриИзменении(Элемент)
	
	Элементы.ПринтерЧеков.Доступность = ИспользоватьПринтерЧеков;
	Элементы.ПечатьЧека.Доступность = ИспользоватьПринтерЧеков;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьЧекПоНомеру(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация",   Организация);
	ВходныеПараметры.Вставить("СерийныйНомер", СерийныйНомер);
	ВходныеПараметры.Вставить("НомерСмены",    НомерСмены);
	
	ПараметрыПодключения = Новый Структура;
	Если ВидОперации = 1 Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьОтчетПоНомеру_Завершение", ЭтотОбъект);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеОтчетаПоНомеру(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	ИначеЕсли ВидОперации = 2 Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьКонтрольнуюЛенту_Завершение", ЭтотОбъект);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеКонтрольнойЛенты(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	Иначе
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьЧекПоНомеру_Завершение", ЭтотОбъект);
		ВходныеПараметры.Вставить("НомерЧека",                 НомерЧека);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеЧекаПоНомеру(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучитьЧекПоНомеру_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		ИнтеграцияWebKassaКлиентСервер.ДополнитьФорматДанныхЧекаИстории(Результат.ОбъектыJSON.Data);
		
		Для Каждого Позиция Из Результат.ОбъектыJSON.Data.Positions Цикл
			Позиция.Вставить("Discount", Позиция.DiscountTenge);
			Позиция.Вставить("TaxType",  Позиция.TaxPercent);
			Если Позиция.IsNds = Истина И Позиция.Tax <> 0 И Позиция.TaxPercent = 0 Тогда
				Позиция.TaxPercent = Результат.ОбъектыJSON.Data.TaxPercent;
				Позиция.TaxType = Результат.ОбъектыJSON.Data.TaxPercent;
			КонецЕсли;
			
			Если Позиция.Свойство("Mark")
				И ЗначениеЗаполнено(Позиция.Mark) Тогда 
					Позиция.Mark = ИнтеграцияWebKassaКлиентСервер.УдалитьНедопустимыеСимволыXML(Позиция.Mark);
			КонецЕсли;
			
		КонецЦикла;
		
		Результат.ОбъектыJSON.Data.Вставить("ФискальныйНомер",         Результат.ОбъектыJSON.Data.Number);
		Результат.ОбъектыJSON.Data.Вставить("АвтономныйРежимРаботы",   Результат.ОбъектыJSON.Data.IsOffline);
		Результат.ОбъектыJSON.Data.Вставить("НомерСмены",              Результат.ОбъектыJSON.Data.ShiftNumber);
		Результат.ОбъектыJSON.Data.Вставить("НомерВРамкахСмены",       Результат.ОбъектыJSON.Data.OrderNumber);
		Результат.ОбъектыJSON.Data.Вставить("ДатаЧека",                Результат.ОбъектыJSON.Data.RegistratedOn);
		Результат.ОбъектыJSON.Data.Вставить("ИНК",                     Результат.ОбъектыJSON.Data.CashboxIdentityNumber);
		Результат.ОбъектыJSON.Data.Вставить("СерийныйНомерККМ",        Результат.ОбъектыJSON.Data.CashboxUniqueNumber);
		Результат.ОбъектыJSON.Data.Вставить("РегистрационныйНомерККМ", Результат.ОбъектыJSON.Data.CashboxRegistrationNumber);
		Результат.ОбъектыJSON.Data.Вставить("АдресККМ",                Результат.ОбъектыJSON.Data.Address);
		Результат.ОбъектыJSON.Data.Вставить("СсылкаНаЧек",             Результат.ОбъектыJSON.Data.TicketUrl);
		
		ДопДанные = Новый Структура();
		ДопДанные.Вставить("Кассир",                  Результат.ОбъектыJSON.Data.EmployeeName);
		ДопДанные.Вставить("Организация",             НаименованиеОрганизации);
		ДопДанные.Вставить("ИИН",                     ИИН);
		ДопДанные.Вставить("НомерСвидетельстваПоНДС", НомерНДС);
		ДопДанные.Вставить("СерияСвидетельстваПоНДС", СерияНДС);
		ДопДанные.Вставить("ЭтоДубликат",             Истина);
		
		ПараметрыЛенты = Новый Структура("ШиринаЛенты", ШиринаЛенты);//получить из оборудования привязанного к кассе ккм
		ПараметрыЛенты.Вставить("ЯзыкПоУмолчанию", ЯзыкПечати);
		
		Если ИспользоватьПринтерЧеков Тогда
			ШиринаСтрокиПринтера = ПолучитьШиринуСтрокиПринтера(ПринтерЧеков);
			ПараметрыЛенты.ШиринаЛенты = ?(ШиринаСтрокиПринтера<>Неопределено, ШиринаСтрокиПринтера, 32);
			ТекстЧека = ПодключаемоеОборудованиеWebkassaФискальныеРегистраторыКлиент.СформироватьТекстФискальногоЧека(
				Результат.ОбъектыJSON.Data, ПараметрыЛенты, ДопДанные);
			ИнтеграцияWebKassaКлиентПереопределяемый.НачатьПечатьТекста(
				Новый ОписаниеОповещения("ПослеЗавершенияПечатиНаПринтереЧеков", ЭтотОбъект),
				Новый УникальныйИдентификатор(),
				ТекстЧека,
				ПринтерЧеков);
		Иначе
			ТабличныйДокумент = Новый ТабличныйДокумент;
			РезультатПечати = ИнтеграцияWebKassaВызовСервера.ПечатьФискальногоЧека(
				Результат.ОбъектыJSON.Data, 0, ПараметрыЛенты, ТабличныйДокумент, ДопДанные);
			Если ТабличныйДокумент = Неопределено Тогда
				ШаблонСообщения = НСтр("ru = 'Операция успешно проведена в системе Webkassa, но при печати произошла ошибка.
					|Дополнительное описание:
					|%1'");
				ТекстСообщения = ИнтеграцияWebKassaКлиентПереопределяемый.ПодставитьПараметрыВСтроку(ШаблонСообщения, РезультатПечати);
				ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Иначе
				ТабличныйДокумент.АвтоМасштаб = Истина;
				ТабличныйДокумент.Показать();
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если Результат.ВыходныеПараметры[0] = 999 Тогда
			ТекстСообщения = НСтр("ru = 'При получение произошла ошибка.
			|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОтчетПоНомеру_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		
		Результат.ОбъектыJSON.Data.Вставить("TaxPayerName", НаименованиеОрганизации);
		Результат.ОбъектыJSON.Data.Вставить("TaxPayerIN", ИИН);
		Результат.ОбъектыJSON.Data.Вставить("TaxPayerVATSeria", СерияНДС);
		Результат.ОбъектыJSON.Data.Вставить("TaxPayerVATNumber", НомерНДС);
		
		ПараметрыЛенты = Новый Структура("ШиринаЛенты", ШиринаЛенты);//получить из оборудования привязанного к кассе ккм
		ПараметрыЛенты.Вставить("ЯзыкПоУмолчанию", ПредопределенноеЗначение("Перечисление.ЯзыкWebKassaФискальныеРегистраторы.Русский"));
		
		Если ИспользоватьПринтерЧеков Тогда
			ШиринаСтрокиПринтера = ПолучитьШиринуСтрокиПринтера(ПринтерЧеков);
			ПараметрыЛенты.ШиринаЛенты = ?(ШиринаСтрокиПринтера<>Неопределено, ШиринаСтрокиПринтера, 32);
			ТекстОтчета = ПодключаемоеОборудованиеWebkassaФискальныеРегистраторыКлиент.СформироватьТекстОтчета(Результат.ОбъектыJSON, 2, ПараметрыЛенты);
			ИнтеграцияWebKassaКлиентПереопределяемый.НачатьПечатьТекста(
				Новый ОписаниеОповещения("ПослеЗавершенияПечатиНаПринтереЧеков", ЭтотОбъект),
				Новый УникальныйИдентификатор(),
				ТекстОтчета,
				ПринтерЧеков);
		Иначе
			ТабличныйДокумент = Новый ТабличныйДокумент;
			РезультатПечати = ИнтеграцияWebKassaВызовСервера.ПечатьXZОтчета(
				Результат.ОбъектыJSON, 2, ПараметрыЛенты, ТабличныйДокумент);
			Если ТабличныйДокумент = Неопределено Тогда
				ШаблонСообщения = НСтр("ru = 'Операция успешно проведена в системе Webkassa, но при печати произошла ошибка.
					|Дополнительное описание:
					|%1'");
				ТекстСообщения = ИнтеграцияWebKassaКлиентПереопределяемый.ПодставитьПараметрыВСтроку(ШаблонСообщения, РезультатПечати);
				ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Иначе
				ТабличныйДокумент.АвтоМасштаб = Истина;
				ТабличныйДокумент.Показать();
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если Результат.ВыходныеПараметры[0] = 999 Тогда
			ТекстСообщения = НСтр("ru = 'При получение произошла ошибка.
			|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКонтрольнуюЛенту_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.РезультатВыполнения Тогда
		//Лента получена
		ДополнительныеПараметры = Новый Структура("ШиринаЛенты", ШиринаЛенты);//получить из оборудования привязанного к кассе ккм
		ДополнительныеПараметры.Вставить("ЯзыкПоУмолчанию", ЯзыкПечати);
		ДополнительныеПараметры.Вставить("НаименованиеОрганизации", НаименованиеОрганизации);
		ДополнительныеПараметры.Вставить("ИИН", ИИН);
		ДополнительныеПараметры.Вставить("СерияНДС", СерияНДС);
		ДополнительныеПараметры.Вставить("НомерНДС", НомерНДС);
		ДополнительныеПараметры.Вставить("НомерСмены", НомерСмены);
		ДополнительныеПараметры.Вставить("ЗНК", СерийныйНомер);
		
		Если ИспользоватьПринтерЧеков Тогда
			ШиринаСтрокиПринтера = ПолучитьШиринуСтрокиПринтера(ПринтерЧеков);
			ДополнительныеПараметры.ШиринаЛенты = ?(ШиринаСтрокиПринтера<>Неопределено, ШиринаСтрокиПринтера, 32);
			ТекстЛенты = ПодключаемоеОборудованиеWebkassaФискальныеРегистраторыКлиент.СформироватьТекстКонтрольнойЛенты(Результат.ОбъектыJSON, ДополнительныеПараметры);
			ИнтеграцияWebKassaКлиентПереопределяемый.НачатьПечатьТекста(
				Новый ОписаниеОповещения("ПослеЗавершенияПечатиНаПринтереЧеков", ЭтотОбъект),
				Новый УникальныйИдентификатор(),
				ТекстЛенты,
				ПринтерЧеков);
		Иначе
			ТабличныйДокумент = Новый ТабличныйДокумент;
			РезультатПечати = ИнтеграцияWebKassaВызовСервера.ПечатьКонтрольнойЛенты(Результат.ОбъектыJSON, ДополнительныеПараметры, ТабличныйДокумент);
			Если ТабличныйДокумент = Неопределено Тогда
				ШаблонСообщения = НСтр("ru = 'Операция успешно проведена в системе Webkassa, но при печати произошла ошибка.
					|Дополнительное описание:
					|%1'");
				ТекстСообщения = ИнтеграцияWebKassaКлиентПереопределяемый.ПодставитьПараметрыВСтроку(ШаблонСообщения, РезультатПечати);
				ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Иначе
				ТабличныйДокумент.АвтоМасштаб = Истина;
				ТабличныйДокумент.Показать();
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если Результат.ВыходныеПараметры[0] = 999 Тогда
			ТекстСообщения = НСтр("ru = 'При получение произошла ошибка.
			|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если ВидОперации = 1 Или ВидОперации = 2 Тогда
		НепроверяемыеРеквизиты.Добавить("НомерЧека");
	Иначе
		НепроверяемыеРеквизиты.Добавить("НомерСмены");
	КонецЕсли;
	
	Если Не ИспользоватьПринтерЧеков Тогда
		НепроверяемыеРеквизиты.Добавить("ПринтерЧеков");
	КонецЕсли; 
	
	ИнтеграцияWebKassaВызовСервераПереопределяемый.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьЯзыкПечати(Язык)
	Если Язык = Перечисления.ЯзыкWebKassaФискальныеРегистраторы.Казахский Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции


&НаСервере
Функция ШиринаЛентыПоУмолчанию(СерийныйНомер)
	
	ЗначениеПоУмолчанию = "24";
	МассивСерийныхНомеров = Новый Массив;
	МассивСерийныхНомеров.Добавить(СерийныйНомер);
	СоответствиеКассККМСерийнымНомерам = ИнтеграцияWebKassaВызовСервера.СоответствиеКассККМСерийнымНомерам(МассивСерийныхНомеров);
	Если СоответствиеКассККМСерийнымНомерам.Количество() = 0 Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	СписокКассККМ = СоответствиеКассККМСерийнымНомерам[СерийныйНомер];
	Для Каждого КассаККМ Из СписокКассККМ Цикл
		ОборудованиеКассы = КассаККМ;
		Если ЗначениеЗаполнено(ОборудованиеКассы) Тогда
			ПараметрыУстройства = Справочники.ПодключаемоеОборудование.ПолучитьПараметрыУстройства(ОборудованиеКассы);
			Если ПараметрыУстройства.Свойство("ШиринаЛенты") Тогда
				Если ПараметрыУстройства.Свойство("ЯзыкПоУмолчанию") Тогда
					ЯзыкПечати = ПараметрыУстройства.ЯзыкПоУмолчанию;
				КонецЕсли;
				ЗначениеПоУмолчанию = ПараметрыУстройства.ШиринаЛенты;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗавершенияПечатиНаПринтереЧеков(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		//сообщить о проблемах с печатью
		ТекстСообщения = НСтр("ru = 'При печати произошла ошибка.
			|Дополнительное описание:
			|%ДополнительноеОписание%'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", РезультатВыполнения.ОписаниеОшибки);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШиринуСтрокиПринтера(Идентификатор)
	
	ПараметрыУстройства = ИнтеграцияWebKassaВызовСервераПереопределяемый.ПолучитьПараметрыУстройства(Идентификатор);
	ШиринаСтроки = 32;
	Если ПараметрыУстройства.Свойство("ШиринаСтроки") Тогда
		ШиринаСтроки = ПараметрыУстройства.ШиринаСтроки;
	ИначеЕсли ПараметрыУстройства.Свойство("P_LineLength") Тогда
		ШиринаСтроки = ПараметрыУстройства.P_LineLength;
	КонецЕсли;
	Возврат ШиринаСтроки;
	
КонецФункции

&НаКлиенте
Процедура ПечатьЧека(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация",   Организация);
	ВходныеПараметры.Вставить("СерийныйНомер", СерийныйНомер);
	ВходныеПараметры.Вставить("НомерСмены",    НомерСмены);
	
	ПараметрыПодключения = Новый Структура;
	Если ВидОперации = 1 Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьОтчетПоНомеру_Завершение", ЭтотОбъект);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеОтчетаПоНомеру(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	ИначеЕсли ВидОперации = 2 Тогда
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьКонтрольнуюЛенту_Завершение", ЭтотОбъект);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеКонтрольнойЛенты(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	Иначе
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучитьЧекПоНомеру_Завершение", ЭтотОбъект);
		ВходныеПараметры.Вставить("НомерЧека",                 НомерЧека);
		ИнтеграцияWebKassaКлиент.НачатьПолучениеЧекаПоНомеру(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
