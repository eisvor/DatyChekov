
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Организация") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Организация  = Параметры.Организация;
	АдресСервиса = ИнтеграцияWebKassaВызовСервера.АдресСервиса(Организация);
	
	Если Параметры.Свойство("ИмяПользователя") Тогда
		Пользователь = Параметры.ИмяПользователя;
	КонецЕсли;
	
	СписокДоступныхПользователей.ЗагрузитьЗначения(
		Справочники.НастройкиИнтеграцииWebKassa.ПользователиОрганизации(Параметры.Организация));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьСменуПароля(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокДоступныхПользователей.НайтиПоЗначению(Пользователь) = Неопределено Тогда
		ШаблонСообщения = НСтр("ru = 'Пользователь %1 не имеет доступа к организации %2.
									|Обратитесь к администратору.'");
		
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(
			ИнтеграцияWebKassaКлиентПереопределяемый.ПодставитьПараметрыВСтроку(ШаблонСообщения, Пользователь, Организация));
		
		Возврат;
	КонецЕсли;
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("ИмяПользователя", Пользователь);
	ВходныеПараметры.Вставить("ТекущийПароль",   ТекущийПароль);
	ВходныеПараметры.Вставить("НовыйПароль",     НовыйПароль);
	ВходныеПараметры.Вставить("Организация",     Организация);
	
	ПараметрыПодключения = Новый Структура;
	ПараметрыПодключения.Вставить("АдресСервиса", АдресСервиса);
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьСменуПароля_Завершение", ЭтотОбъект, ВходныеПараметры);
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Параметры"              , ВходныеПараметры);
	ДополнительныеПараметры.Вставить("ВыходныеПараметры"      , Новый Массив);
	ДополнительныеПараметры.Вставить("ПараметрыПодключения"   , ПараметрыПодключения);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьСменуПароля_ПослеАутентификации", ИнтеграцияWebKassaКлиент, ДополнительныеПараметры);
	
	ДополнительныеПараметрыАутентификации = Новый Структура;
	ДополнительныеПараметрыАутентификации.Вставить("ОповещениеПриЗавершении", ОписаниеОповещения);
	
	ЛогинПароль = Новый Структура;
	ЛогинПароль.Вставить("Пользователь",       Пользователь);
	ЛогинПароль.Вставить("ПарольПользователя", ТекущийПароль);
	ЛогинПароль.Вставить("ЗапомнитьПароль",    Ложь);
	ИнтеграцияWebKassaКлиент.НачатьАутентификациюПользователя_ПослеВводаДанныхАутентификации(ЛогинПароль, ДополнительныеПараметрыАутентификации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьСменуПароля_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОчиститьСообщения();
	Если Результат.РезультатВыполнения Тогда
		ТекстСообщения = НСтр("ru = 'Пароль пользователя успешно изменен.'");
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	Иначе
		ТекстСообщения = НСтр("ru = 'При смене пароля пользователя произошла ошибка.
			                      |Дополнительное описание:
			                      |%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
		ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

