
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Организация") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Организация = Параметры.Организация;
	
	ЧасовойПоясПрограммы = ПолучитьЧасовойПоясИнформационнойБазы();
	Если ПустаяСтрока(ЧасовойПоясПрограммы) Тогда
		ЧасовойПоясПрограммы = ЧасовойПояс();
	КонецЕсли;
	СмещениеВЧасах = СмещениеСтандартногоВремени(ЧасовойПоясПрограммы)/3600;
	Если СмещениеВЧасах = 5 Тогда //Екатеринбург
		ЧасовойПояс = Элементы.ЧасовойПояс.СписокВыбора[1].Значение;
	Иначе //Астана
		ЧасовойПояс = Элементы.ЧасовойПояс.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Если Элементы.ТипМоделиККМ.СписокВыбора.Количество() > 0 Тогда
		ТипМоделиККМ = Элементы.ТипМоделиККМ.СписокВыбора[0].Значение;
	КонецЕсли;
	
	Элементы.РежимДобавления.Видимость = ЗначениеФункциональнойОпции("ИспользоватьПодключаемоеОборудование");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		Элементы.РежимДобавления.Видимость = ЗначениеФункциональнойОпции("ИспользоватьПодключаемоеОборудование");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если РежимДобавления = 1 Тогда
		НепроверяемыеРеквизиты.Добавить("НаименованиеКассы");
	Иначе
		НепроверяемыеРеквизиты.Добавить("КассаККМ");
	КонецЕсли;
	
	ИнтеграцияWebKassaВызовСервераПереопределяемый.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	СерийныйНомерЗаполнен = СерийныйНомерЗаполнен(КассаККМ);
	Если СерийныйНомерЗаполнен Тогда
		Элементы.ГруппаКассаСообщение.Видимость = Истина;
	Иначе
		Элементы.ГруппаКассаСообщение.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимДобавленияПриИзменении(Элемент)
	
	ПанельКасса = Элементы.ГруппаКасса;
	Если РежимДобавления = 1 Тогда
		ПанельКасса.ТекущаяСтраница = ПанельКасса.ПодчиненныеЭлементы.ГруппаИспользовать;
	Иначе
		ПанельКасса.ТекущаяСтраница = ПанельКасса.ПодчиненныеЭлементы.ГруппаСоздать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьРегистрациюКассы(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКассы = "";
	Если РежимДобавления=0 Тогда
		ИмяКассы = НаименованиеКассы;
	Иначе
		ИмяКассы = Строка(КассаККМ);
	КонецЕсли;
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("Организация",  Организация);
	ВходныеПараметры.Вставить("Наименование", ИмяКассы);
	ВходныеПараметры.Вставить("ЧасовойПояс",  Число(ЧасовойПояс));
	ВходныеПараметры.Вставить("РегистрационныйНомерПродукта", РегистрационныйНомерПродукта);
	ВходныеПараметры.Вставить("ТипМоделиККМ", ТипМоделиККМ);
	ВходныеПараметры.Вставить("АдресККМ",     АдресККМ);
	
	ПараметрыПодключения = Новый Структура;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьРегистрациюКассы_Завершение", ЭтотОбъект);
	ИнтеграцияWebKassaКлиент.НачатьРегистрациюКассы(ОповещениеПриЗавершении, ВходныеПараметры, ПараметрыПодключения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьРегистрациюКассы_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат.РезультатВыполнения Тогда
		УстановитьЗначениеКонстантыПО();
		
		Если РежимДобавления=0 Тогда
			ИмяКассы = НаименованиеКассы;
			КассаККМ = СоздатьПодключаемоеОборудование(Организация, НаименованиеКассы, Результат.ОбъектыJSON.Data.CashboxUniqueNumber);
		Иначе
			ИмяКассы = Строка(КассаККМ);
			ИнтеграцияWebKassaВызовСервераПереопределяемый.ИзменитьСерийныйНомерОборудования(КассаККМ, Результат.ОбъектыJSON.Data.CashboxUniqueNumber);
		КонецЕсли;
		
		РезультатВыбора = Новый Структура;
		РезультатВыбора.Вставить("РезультатВыполнения", Истина);
		РезультатВыбора.Вставить("КассаККМ",            КассаККМ);
		РезультатВыбора.Вставить("СерийныйНомер",       Результат.ОбъектыJSON.Data.CashboxUniqueNumber);
		Закрыть(РезультатВыбора);
	Иначе
		Если Результат.ВыходныеПараметры[0] = 999 Тогда
			ТекстСообщения = НСтр("ru = 'При регистрации кассы произошла ошибка.
				|Дополнительное описание: %ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", Результат.ВыходныеПараметры[1]);
			ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СерийныйНомерЗаполнен(КассаККМ)
	Возврат ИнтеграцияWebKassaВызовСервера.СерийныйНомерЗаполнен(КассаККМ);
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьПодключаемоеОборудование(Организация, ИмяКассы, СерийныйНомер)
	
	НовоеОборудование = ИнтеграцияWebKassaВызовСервераПереопределяемый.СоздатьПодключаемоеОборудованиеWebkassa(Организация, ИмяКассы, СерийныйНомер);
	Если НовоеОборудование=Ложь тогда
		Возврат Неопределено;
	Иначе
		Возврат НовоеОборудование;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьЗначениеКонстантыПО()
	Если Константы.ИспользоватьПодключаемоеОборудование.Получить() <> Истина Тогда
			Константы.ИспользоватьПодключаемоеОборудование.Установить(Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеФункциональнойОпции(ИмяОпции)
	
	Возврат Константы[ИмяОпции].Получить();
	
КонецФункции

#КонецОбласти
