
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ОбновитьДанные(Команда)
	
	Счета.Очистить();
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для получения лицевых счетов необходимо указать организацию.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
	Иначе
		
		ТокенАвторизации = Ждать ИнтеграцияИСМПТККлиент.ПолучитьТокенАвторизации(Организация);
		Если ТокенАвторизации = Неопределено Тогда
			ТекстСообщенияТокенНеПолучен = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОперацияПрерванаНеПолученыДанныеЭЦП();
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияТокенНеПолучен);
			Возврат;
		КонецЕсли;
		
		ОбновитьДанныеПоСчетам(ТокенАвторизации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПолучениеСчета(Команда)
	
	Если Элементы.Счета.ТекущиеДанные = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru = 'Для оформления необходимо выбрать счет.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, );
		
	Иначе
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация",   	  ?(Организация=Неопределено,Неопределено, Организация));
		ПараметрыФормы.Вставить("НомерЛицевогоСчета", Элементы.Счета.ТекущиеДанные.НомерСчета);
		
		ОткрытьФорму("ОбщаяФорма.ПолучениеСчетаИСМПТК", ПараметрыФормы, ЭтотОбъект, , , ,);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеПоСчетам(ТокенАвторизации)
	
	РезультатЗапроса = ИнтеграцияИСМПТК.ПолучитьСостояниеСчетовПоВсемГруппам(ТокенАвторизации);
	Если Не ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки) Тогда
		Счета.Очистить();
		Для каждого ИнформацияПоСчету Из РезультатЗапроса.ДанныеОСчетах Цикл
			
			Если ИнформацияПоСчету.Свойство("contractId") И ИнформацияПоСчету.Свойство("balance") Тогда
				НоваяСтрока = Счета.Добавить();
				НоваяСтрока.НомерСчета = Формат(ИнформацияПоСчету.contractId, "ЧГ=0");
				НоваяСтрока.Баланс 	   = ИнформацияПоСчету.balance;
				НоваяСтрока.ТоварнаяГруппа 	  = ПолучитьТоварнуюГруппу(ИнформацияПоСчету.productGroupId);
				НоваяСтрока.КодТоварнойГруппы = ПолучитьКодИконкиТоварнойГруппы(ИнформацияПоСчету.productGroupId);
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(РезультатЗапроса.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТоварнуюГруппу(КодТоварнойГруппы)
	
	Результат = "";
	Если КодТоварнойГруппы = 2 Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная");
	ИначеЕсли КодТоварнойГруппы = 3 Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная");
	ИначеЕсли КодТоварнойГруппы = 7 Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты");
	ИначеЕсли КодТоварнойГруппы = 8 Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция");
	ИначеЕсли КодТоварнойГруппы = 11 Тогда
		Результат = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Алкогольная");
	Иначе
		Результат = НСтр("ru='Неопределенная товарная группа'"); 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьКодИконкиТоварнойГруппы(КодТоварнойГруппы)
	
	Результат = 0;
	Если КодТоварнойГруппы = 2 Тогда
		Результат = 7;
	ИначеЕсли КодТоварнойГруппы = 3 Тогда
		Результат = 1;
	ИначеЕсли КодТоварнойГруппы = 7 Тогда
		Результат = 17;
	ИначеЕсли КодТоварнойГруппы = 8 Тогда
		Результат = 9;
	ИначеЕсли КодТоварнойГруппы = 11 Тогда
		Результат = 11;
	//ИначеЕсли КодТоварнойГруппы = 15 Тогда
	//	Результат = 13; Одежда (Легкая промышленность)
	//ИначеЕсли КодТоварнойГруппы = 15 Тогда
	//	Результат = 15; Упакованная вода
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
