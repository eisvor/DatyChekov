#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияРТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактура", "Счет-фактура", СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УПД") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УПД", Нстр("ru='УПД (Универсальный передаточный документ)'"), СформироватьПечатнуюФормуУПД(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуУПД(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УПД";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументУПД(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументУПД(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати = Неопределено) Экспорт
	
	Макет    = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент");
	Макет981 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент981");
	Макет534 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент534_ru");
	Макет534Прослеж = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент534Прослеж_ru");
	Макет534Прослеж_4кв2023 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент2023Кв4Прослеж");
	
	ДанныеПечати        = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеПечати.УчитыватьНДС И (ДанныеПечати.СтатусУПД = 2 ИЛИ ДанныеПечати.Номер = Неопределено) Тогда
			
			Если ДанныеПечати.Номер = Неопределено Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 не введен %2'"),
					ДанныеПечати.Ссылка,
					ДанныеПечати.ПредставлениеДокумента);
				ОбщегоНазначения.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка,
					,
					"ТекстСчетФактура");
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 не заполнены данные предъявленной счет-фактуры поставщика'"),
					ДанныеПечати.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка,
					"ПредъявленСчетФактура");
			КонецЕсли;
			
		Иначе
			
			ДействующиеПостановления = Новый Структура;
			ДействующиеПостановления.Вставить("Постановление534_4кв2023",  ДанныеПечати.Дата > '20231001');
			ДействующиеПостановления.Вставить("Постановление534",  ДанныеПечати.Дата > '20210701');
			ДействующиеПостановления.Вставить("Постановление981",  ДанныеПечати.Дата > '20171001' И ДанныеПечати.Дата < '20210701');
			
			Если ДействующиеПостановления.Постановление534_4кв2023 Тогда
				Если УчетПрослеживаемыхТоваровРТ.ЭтоПрослеживаемыйДокумент(ДанныеПечати.Ссылка.Товары, ДанныеПечати.Дата) Тогда
					Макет = Макет534Прослеж_4кв2023;
				Иначе
					Макет = Макет534;
				КонецЕсли;
			ИначеЕсли ДействующиеПостановления.Постановление534 Тогда
				Если УчетПрослеживаемыхТоваровРТ.ЭтоПрослеживаемыйДокумент(ДанныеПечати.Ссылка.Товары, ДанныеПечати.Дата) Тогда
					Макет = Макет534Прослеж;
				Иначе
					Макет = Макет534;
				КонецЕсли;
			ИначеЕсли ДействующиеПостановления.Постановление981 Тогда
				Макет = Макет981;
			КонецЕсли;
			Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки.
			ПредставлениеДокумента = НСтр("ru=''");
			СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			СведенияОКонтрагенте = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
			ЗаполнитьРеквизитыШапкиУПД(ДанныеПечати, СведенияОбОрганизации, СведенияОКонтрагенте, Макет, ТабличныйДокумент, ДействующиеПостановления, ПредставлениеДокумента);
			
			Если ДействующиеПостановления.Постановление534 Тогда
				ОбластьНумерацияЛистов = Макет.ПолучитьОбласть("НумерацияЛистов");
				ОбластьНумерацияЛистов.Параметры.ПредставлениеДокумента = ПредставлениеДокумента;
				
				ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			КонецЕсли;
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			НомерСтраницы = 1;
			
			// Инициализация итогов в документе.
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаУПД(ОбластьПодвал, ДанныеПечати, СведенияОбОрганизации, СведенияОКонтрагенте);
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			ТолькоСтавкаБезНДС = Истина;
			НомерСтроки = 0;
			ИтоговыеСуммыПоСтранице = СтруктураИтоговыеСуммы();
			ИтогиПоСтранице = Ложь;
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьСтрока, НомерСтроки);
				
				ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьСтрока);
				
				СтруктураПараметров = Новый Структура;
				Если СтрокаТовары.СтавкаНДС = Справочники.СтавкиНДС.ПолучитьСтавкуНДСБезНДС() Тогда
					СтруктураПараметров.Вставить("СтавкаНДС", НСтр("ru='без НДС'"));
					СтруктураПараметров.Вставить("СуммаНДС", НСтр("ru='без НДС'"));
				ИначеЕсли СтрокаТовары.СтавкаНДС = Справочники.СтавкиНДС.ПолучитьСтавкуНДСНоль() Тогда
					СтруктураПараметров.Вставить("СуммаНДС", 0);
					ТолькоСтавкаБезНДС = Ложь;
				Иначе
					ТолькоСтавкаБезНДС = Ложь;
				КонецЕсли;
				ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
				ОбластьСтрока.Параметры.Акциз = Нстр("ru='без акциза'");
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьИтого);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				КонецЕсли;
				
				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					Если Не ОбластьИтогоПоСтранице = Неопределено Тогда
						ИтогиПоСтранице = Истина;
						Если ТолькоСтавкаБезНДС Тогда
							ИтоговыеСуммыПоСтранице.ИтогоСуммаНДС = НСтр("ru='без НДС'");
						КонецЕсли;
						ОбластьИтогоПоСтранице.Параметры.Заполнить(ИтоговыеСуммыПоСтранице);
						ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
					КонецЕсли;
					ИтоговыеСуммыПоСтранице = СтруктураИтоговыеСуммы();
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					Если Не ОбластьНумерацияЛистов = Неопределено Тогда
						ОбластьНумерацияЛистов.Параметры.НомерЛиста = НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьНумерацияЛистов);
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммыПоСтранице, СтрокаТовары);
				
			КонецЦикла;
			
			Если ИтогиПоСтранице Тогда
				Если ТолькоСтавкаБезНДС Тогда
					ИтоговыеСуммыПоСтранице.ИтогоСуммаНДС = НСтр("ru='без НДС'");
				КонецЕсли;
				ОбластьИтогоПоСтранице.Параметры.Заполнить(ИтоговыеСуммыПоСтранице);
				ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
			КонецЕсли;
			
			Если ТолькоСтавкаБезНДС Тогда
				ИтоговыеСуммы.ИтогоСуммаНДС = НСтр("ru='без НДС'");
			КонецЕсли;
			ОбластьИтого.Параметры.Заполнить(ИтоговыеСуммы);
			ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьИтого);
			ТабличныйДокумент.Вывести(ОбластьИтого);
			
			// Выводим итоги по документу
			ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки);
			
			КоличествоСтраниц = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ составлен на %1 %2'"),
				НомерСтраницы,
				ОбщегоНазначенияРТКлиентСервер.ФормаМножественногоЧисла(
					НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), НомерСтраницы));
			СтруктураПараметров = Новый Структура("КоличествоСтраниц", КоличествоСтраниц);
			ОбластьПодвал.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			// Выведем нужное количество экземпляров (при печати комплектов).
			Если КомплектыПечати <> Неопределено
				И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено
				И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
				
				ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
				Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьКопирования);
				КонецЦикла;
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати,
				ДанныеПечати.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСчетФактура(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактура";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионераОСписании" Тогда
			Продолжить;
		КонецЕсли;
			
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		СчетФактураНаАванс = ДанныеДляПечати.Свойство("СчетФактураНаАванс");
		ЗаполнитьТабличныйДокументСчетФактура(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			КомплектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументСчетФактура(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати = Неопределено) Экспорт
	
	ДатаНачалаПримененияПостановления1137 = Константы.ДатаНачалаПримененияПостановления1137.Получить();
	
	Макет451  = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура451");
	Макет1137 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура1137");
	Макет981 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура981");
	Макет534 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура534_ru");
	Макет534Прослеж = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура534Прослеж_ru");
	Макет534Прослеж_4кв2023 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_СчетФактура2023Кв4Прослеж");
	
	ДанныеПечати        = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТекущееПостановление1137 = Неопределено;
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДанныеПечати.Номер) Тогда
			
			Если ДанныеПечати.Номер = Неопределено Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 не введен %2'"),
					ДанныеПечати.Ссылка,
					ДанныеПечати.ПредставлениеДокумента);
				ОбщегоНазначения.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка,
					, // "ТекстСчетФактура",
					"ТекстСчетФактура");
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для документа %1 не заполнены данные предъявленной счет-фактуры поставщика'"),
					ДанныеПечати.Ссылка);
				ОбщегоНазначения.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка,
					"ПредъявленСчетФактура");
			КонецЕсли;
			
			
		Иначе
			
			ДействующиеПостановления = Новый Структура;
			ДействующиеПостановления.Вставить("Постановление534_4кв2023",  ДанныеПечати.Дата > '20231001');
			ДействующиеПостановления.Вставить("Постановление534",  ДанныеПечати.Дата > '20210701');
			ДействующиеПостановления.Вставить("Постановление981",  ДанныеПечати.Дата > '20171001' И ДанныеПечати.Дата < '20210701');
			ДействующиеПостановления.Вставить("Постановление914",  ДанныеПечати.Дата < ДатаНачалаПримененияПостановления1137);
			ДействующиеПостановления.Вставить("Постановление1137", НЕ (ДанныеПечати.Дата < ДатаНачалаПримененияПостановления1137) И ДанныеПечати.Дата < '20171001');
			
			Если ТекущееПостановление1137 = Неопределено Тогда
				ТекущееПостановление1137 = ДействующиеПостановления.Постановление1137;
			КонецЕсли;
			Если ТекущееПостановление1137 <> ДействующиеПостановления.Постановление1137 Тогда
				
				Текст = НСтр("ru = 'Недоступна одновременная печать счетов-фактур, сформированных до и после начала применения постановления Правительства РФ №1137 ('")
					+ Формат(ДатаНачалаПримененияПостановления1137, "ru='ДФ=dd.MM.yyyy'") + ")";
				ОбщегоНазначения.СообщитьПользователю(
					Текст,
					ДанныеПечати.Ссылка);
				
				ТабличныйДокумент.Очистить();
				Прервать;
				
			КонецЕсли;
			
			Если ДействующиеПостановления.Постановление534_4кв2023 Тогда
				Если УчетПрослеживаемыхТоваровРТ.ЭтоПрослеживаемыйДокумент(ДанныеПечати.Ссылка.Товары, ДанныеПечати.Дата) Тогда
					Макет = Макет534Прослеж_4кв2023;
				Иначе
					Макет = Макет534;
				КонецЕсли;
			ИначеЕсли ДействующиеПостановления.Постановление534 Тогда
				Если УчетПрослеживаемыхТоваровРТ.ЭтоПрослеживаемыйДокумент(ДанныеПечати.Ссылка.Товары, ДанныеПечати.Дата) Тогда
					Макет = Макет534Прослеж;
				Иначе
					Макет = Макет534;
				КонецЕсли;
			ИначеЕсли ДействующиеПостановления.Постановление981 Тогда 
				Макет  = Макет981;
			ИначеЕсли ДействующиеПостановления.Постановление914 Тогда
				Макет = Макет451;
			Иначе
				Макет = Макет1137;
			КонецЕсли;
			Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки.
			СведенияОбОрганизации = Новый Структура;
			ПредставлениеДокумента = НСтр("ru=''");
			ЗаполнитьРеквизитыШапкиСчетФактура(ДанныеПечати, СведенияОбОрганизации, Макет, ТабличныйДокумент, ДействующиеПостановления, ПредставлениеДокумента);
			
			Если ДействующиеПостановления.Постановление534 Тогда
				ОбластьНумерацияЛистов = Макет.ПолучитьОбласть("НумерацияЛистов");
				ОбластьНумерацияЛистов.Параметры.ПредставлениеДокумента = ПредставлениеДокумента;
				
				ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			КонецЕсли;
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			Если ДействующиеПостановления.Постановление914 Тогда
				ЗаголовокТаблицы.Параметры.Валюта = НСтр("ru='KZT'");
			КонецЕсли;
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			НомерСтраницы = 1;
			
			// Инициализация итогов в документе.
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьИтого = Макет.ПолучитьОбласть("Итого");
			ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаСчетФактура(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации);
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			ТолькоСтавкаБезНДС = Истина;
			НомерСтроки = 0;
			ИтоговыеСуммыПоСтранице = СтруктураИтоговыеСуммы();
			ИтогиПоСтранице = Ложь;
			
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, НомерСтроки);
				
				ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьМакета);
				
				Если СтрокаТовары.СтавкаНДС = Справочники.СтавкиНДС.ПолучитьСтавкуНДСБезНДС() Тогда
					ОбластьМакета.Параметры.СтавкаНДС = НСтр("ru='без НДС'");
					ОбластьМакета.Параметры.СуммаНДС  = НСтр("ru='без НДС'");
				ИначеЕсли СтрокаТовары.СтавкаНДС = Справочники.СтавкиНДС.ПолучитьСтавкуНДСНоль() Тогда
					ОбластьМакета.Параметры.СуммаНДС = 0;
					ТолькоСтавкаБезНДС = Ложь;
				Иначе
					ТолькоСтавкаБезНДС = Ложь;                    
					
				КонецЕсли;
				
				Если ДействующиеПостановления.Постановление914 Тогда
					ОбластьМакета.Параметры.Акциз = НСтр("ru='--'");
				Иначе
					ОбластьМакета.Параметры.Акциз = Нстр("ru='без акциза'");
				КонецЕсли;
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьИтого);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				КонецЕсли;
				
				Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					Если Не ОбластьИтогоПоСтранице = Неопределено Тогда
						ИтогиПоСтранице = Истина;
						Если ТолькоСтавкаБезНДС Тогда
							ИтоговыеСуммыПоСтранице.ИтогоСуммаНДС = НСтр("ru='без НДС'");
						КонецЕсли;
						ОбластьИтогоПоСтранице.Параметры.Заполнить(ИтоговыеСуммыПоСтранице);
						ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
					КонецЕсли;
					ИтоговыеСуммыПоСтранице = СтруктураИтоговыеСуммы();
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					Если Не ОбластьНумерацияЛистов = Неопределено Тогда
						ОбластьНумерацияЛистов.Параметры.НомерЛиста = НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьНумерацияЛистов);
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммыПоСтранице, СтрокаТовары);
				
			КонецЦикла;
			
			Если ИтогиПоСтранице Тогда
				Если ТолькоСтавкаБезНДС Тогда
					ИтоговыеСуммыПоСтранице.ИтогоСуммаНДС = НСтр("ru='без НДС'");
				КонецЕсли;
				ОбластьИтогоПоСтранице.Параметры.Заполнить(ИтоговыеСуммыПоСтранице);
				ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
			КонецЕсли;
			
			// Выводим итоги по документу
			ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки);
			
			Если ДействующиеПостановления.Постановление1137
				И ТолькоСтавкаБезНДС Тогда
				ИтоговыеСуммы.ИтогоСуммаНДС = НСтр("ru='без НДС'");
			КонецЕсли;
			ОбластьИтого.Параметры.Заполнить(ИтоговыеСуммы);
			ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьИтого);
			ТабличныйДокумент.Вывести(ОбластьИтого);
			
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
			// Выведем нужное количество экземпляров (при печати комплектов).
			Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
				ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
				Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьКопирования);
				КонецЦикла;
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыШапкиУПД(ДанныеПечати, СведенияОПоставщике, СведенияОПокупателе, Макет, ТабличныйДокумент, ДействующиеПостановления, ПредставлениеДокумента = "")
	
	Если Не ДействующиеПостановления.Постановление534 Тогда
		ПредставлениеПоставщика = НСтр("ru='Продавец: '");
		АдресПоставщика = НСтр("ru='Адрес: '");
		ИННПоставщика = Нстр("ru='ИНН/КПП продавца: '");
		ПредставлениеГрузоотправителя = Нстр("ru='Грузоотправитель и его адрес: '");
		ПредставлениеГрузополучателя = Нстр("ru='Грузополучатель и его адрес: '");
		ПоДокументу = Нстр("ru='К платежно-расчетному документу № '");
		ПредставлениеПокупателя = НСтр("ru='Покупатель: '");
		АдресПокупателя = НСтр("ru='Адрес: '");
		ИННПокупателя = Нстр("ru='ИНН/КПП покупателя: '");
	Иначе
		ПредставлениеПоставщика = "";
		АдресПоставщика = "";
		ИННПоставщика = "";
		ПредставлениеГрузоотправителя = "";
		ПредставлениеГрузополучателя = "";
		ПоДокументу = "";
		ПредставлениеПокупателя = "";
		АдресПокупателя = "";
		ИННПокупателя = "";
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПФ");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	СведенияОГрузоотправителе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата); 
	
	СведенияОГрузополучателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	
	Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Ложь);
	Если Лев(Номер, 1) = НСтр("ru='И'") Тогда
		Номер = Прав(Номер, СтрДлина(Номер)-1);
	КонецЕсли;
	Дата = Формат(ДанныеПечати.Дата, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'");
	НомерИсправления = ?(ДанныеПечати.Исправление, ДанныеПечати.НомерИсправления, НСтр("ru='--'"));
	ДатаИсправления = ?(ДанныеПечати.Исправление, Формат(ДанныеПечати.ДатаИсправления, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'"), НСтр("ru='--'"));
	
	ПараметрыШапки = Новый Структура;
	
	ПараметрыШапки.Вставить("Номер", Номер);
	ПараметрыШапки.Вставить("Дата", Дата);
	ПараметрыШапки.Вставить("НомерИсправления", НомерИсправления);
	ПараметрыШапки.Вставить("ДатаИсправления", ДатаИсправления);
		
	ПредставлениеДокумента = СтрШаблон(НСтр("ru = 'Универсальный передаточный документ № %1 от %2'"), Номер, Дата) + Символы.ПС+
							СтрШаблон(НСтр("ru = 'Исправление № %1 от %2'"), НомерИсправления, ДатаИсправления);
		
	// Выводим данные о поставщике.
	ПараметрыШапки.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика + СведенияОПоставщике.ПолноеНаименование);
	ПараметрыШапки.Вставить("АдресПоставщика", АдресПоставщика
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес"));
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	ПараметрыШапки.Вставить("ИННПоставщика", ИННПоставщика 
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь)
		+ ?(Не ПустаяСтрока(КПП), НСтр("ru='/'") + КПП, ""));
	
	// Выводим данные грузоотправителя.
	Если ДанныеПечати.ТолькоУслуги ИЛИ ДанныеПечати.Грузоотправитель = Неопределено Тогда
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + НСтр("ru='--'");
	ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель 
			И Не ДанныеПечати.ОбособленноеПодразделение Тогда
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + Нстр("ru='он же'");
	Иначе
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя 
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ПочтовыйАдрес");
	КонецЕсли;
	ПараметрыШапки.Вставить("ПредставлениеГрузоотправителя", ПредставлениеГрузоотправителя);
	
	// Выводим данные грузополучателя и покупателя.
	Если ДанныеПечати.ТолькоУслуги ИЛИ ДанныеПечати.Грузополучатель = Неопределено Тогда
		ПредставлениеГрузополучателя = ПредставлениеГрузополучателя + НСтр("ru='--'");
	Иначе
		Если Не ПустаяСтрока(ДанныеПечати.АдресДоставки) Тогда
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
				+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование", Ложь)
				+ ", " + СокрЛП(ДанныеПечати.АдресДоставки);
		Иначе
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
				+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
					СведенияОГрузополучателе,
					"ПолноеНаименование,ФактическийАдрес",
					Ложь);
		КонецЕсли;
	КонецЕсли;
	ПараметрыШапки.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);
	
	Если ДействующиеПостановления.Постановление534 Тогда
		Если ЗначениеЗаполнено(ДанныеПечати.НомерДокументаОтгрузки) Тогда
			КоличествоСтрок = ДанныеПечати.Ссылка.Товары.Количество();
			Если КоличествоСтрок = 1 Тогда
				ДокументыОбОтгрузке = СтрШаблон(НСтр("ru = '№ п/п 1 № %1 от %2'"),
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.НомерДокументаОтгрузки),
				Формат(ДанныеПечати.ДатаДокументаОтгрузки, "ДЛФ=D"));
			Иначе
				ДокументыОбОтгрузке = СтрШаблон(НСтр("ru = '№ п/п 1-%3 № %1 от %2'"),
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.НомерДокументаОтгрузки),
				Формат(ДанныеПечати.ДатаДокументаОтгрузки, "ДЛФ=D"),
				КоличествоСтрок);
			КонецЕсли;
		Иначе
			ДокументыОбОтгрузке = НСтр("ru = '-- от --'");
		КонецЕсли;
		ПараметрыШапки.Вставить("ДокументыОбОтгрузке", ДокументыОбОтгрузке);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу) Тогда
		ПараметрыШапки.Вставить("ПоДокументу", ПоДокументу + ДанныеПечати.СтрокаПоДокументу);
	Иначе
		ПараметрыШапки.Вставить("ПоДокументу", ПоДокументу +  НСтр("ru = '-- от --'"));
	КонецЕсли;
	
	ПараметрыШапки.Вставить("ПредставлениеПокупателя", ПредставлениеПокупателя 
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь));
	ПараметрыШапки.Вставить("АдресПокупателя", АдресПокупателя
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь));
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
	ПараметрыШапки.Вставить("ИННПокупателя", ИННПокупателя
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, ""));
	
	Если ДействующиеПостановления.Постановление981 Тогда
		ОбластьМакета.Параметры.Валюта = НСтр("ru='Валюта: наименование, код Российский рубль, 643'");
	ИначеЕсли ДействующиеПостановления.Постановление534 Тогда
		ОбластьМакета.Параметры.Валюта = НСтр("ru='Российский рубль, 643'");
	КонецЕсли;
	
	ОбластьМакета.Параметры.Заполнить(ПараметрыШапки);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ДанныеПечати.Дата > Дата('20171001') И ДанныеПечати.Дата < Дата('20210701') Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка625");
		ОбластьМакета.Параметры.ИдентификаторГосударственногоКонтракта = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения) (при наличии)'");;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;

	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаУПД(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации, СведенияОКонтрагенте)
	
	ОбластьПодвала.Параметры.Заполнить(ДанныеПечати);
	
	СтруктураПараметров = Новый Структура;
	
	Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Организация, ДанныеПечати.Дата);
	
	Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		СтруктураПараметров.Вставить("ФИОРуководителя", Руководители.Руководитель);
		СтруктураПараметров.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	Иначе
		СтруктураПараметров.Вставить("ФИОПБОЮЛ", Руководители.Руководитель);
		СтруктураПараметров.Вставить("Свидетельство", СведенияОбОрганизации.Свидетельство);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПечати.Кладовщик) Тогда
		ФамилияИмяОтчество = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.Кладовщик, ДанныеПечати.Дата);
		СтруктураПараметров.Вставить("ФИОКладовщика", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФамилияИмяОтчество));
	Иначе
		СтруктураПараметров.Вставить("ФИОКладовщика", "");
	КонецЕсли;
	
	ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, НСтр("ru='ДФ=""дд ММММ гггг """"года""""""'"));
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
	СтруктураПараметров.Вставить("ДатаДокумента",
		"""" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """ "
		+ Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1) + " "
		+ Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель));
	
	КПППоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "КПП,", Ложь);
	ИННПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ИНН,", Ложь);
	Если ЗначениеЗаполнено(КПППоставщика) Тогда
		ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
			СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам,
			ИННПоставщика,
			КПППоставщика);
	ИначеЕсли ЗначениеЗаполнено(ИННПоставщика) Тогда
		ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
			СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам,
			ИННПоставщика);
	Иначе
		ПредставлениеОрганизации = СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам;
	КонецЕсли;
	СтруктураПараметров.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
	
	КПППокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "КПП,", Ложь);
	ИННПокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ИНН,", Ложь);
	Если ЗначениеЗаполнено(КПППокупателя) Тогда
		ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
			ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование", Ложь),
			ИННПокупателя,
			КПППокупателя);
	ИначеЕсли ЗначениеЗаполнено(ИННПокупателя) Тогда
		ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
			ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование", Ложь),
			ИННПокупателя);
	Иначе
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование", Ложь);
	КонецЕсли;
	СтруктураПараметров.Вставить("ПредставлениеКонтрагента", ПредставлениеКонтрагента);
	
	Если ЗначениеЗаполнено(ДанныеПечати.ДоверенностьНомер) И ЗначениеЗаполнено(ДанныеПечати.ДоверенностьДата)
		И (ЗначениеЗаполнено(ДанныеПечати.ДоверенностьВыдана) Или ЗначениеЗаполнено(ДанныеПечати.ДоверенностьЛицо)) Тогда
		
		ТекстОснования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'по доверенности №%1 от %2, выданной %3 %4'"),
				ДанныеПечати.ДоверенностьНомер,
				Формат(ДанныеПечати.ДоверенностьДата, "ru='ДФ=дд ММММ гггг'"),
				ДанныеПечати.ДоверенностьВыдана,
				ДанныеПечати.ДоверенностьЛицо);
		СтруктураПараметров.Вставить("Основание", ТекстОснования);
		
	КонецЕсли;
	
	ОбластьПодвала.Параметры.Заполнить(СтруктураПараметров);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаСчетФактура(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации)
	
	Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Организация, ДанныеПечати.Дата);
	
	Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ОбластьПодвала.Параметры.ФИОРуководителя 		= Руководители.Руководитель;
		ОбластьПодвала.Параметры.ФИОГлавногоБухгалтера 	= Руководители.ГлавныйБухгалтер;
	Иначе
		ОбластьПодвала.Параметры.ФИОПБОЮЛ 				= Руководители.Руководитель;
		ОбластьПодвала.Параметры.Свидетельство 			= СведенияОбОрганизации.Свидетельство;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыШапкиСчетФактура(ДанныеПечати, СведенияОПоставщике, Макет, ТабличныйДокумент, ДействующиеПостановления, ПредставлениеДокумента = "")
	
	Если Не ДействующиеПостановления.Постановление534 Тогда
		ПредставлениеПоставщика = НСтр("ru='Продавец: '");
		АдресПоставщика = НСтр("ru='Адрес: '");
		ИННПоставщика = Нстр("ru='ИНН/КПП продавца: '");
		ПредставлениеГрузоотправителя = Нстр("ru='Грузоотправитель и его адрес: '");
		ПредставлениеГрузополучателя = Нстр("ru='Грузополучатель и его адрес: '");
		ПоДокументу = Нстр("ru='К платежно-расчетному документу № '");
		ПредставлениеПокупателя = НСтр("ru='Покупатель: '");
		АдресПокупателя = НСтр("ru='Адрес: '");
		ИННПокупателя = Нстр("ru='ИНН/КПП покупателя: '");
	Иначе
		ПредставлениеПоставщика = "";
		АдресПоставщика = "";
		ИННПоставщика = "";
		ПредставлениеГрузоотправителя = "";
		ПредставлениеГрузополучателя = "";
		ПоДокументу = "";
		ПредставлениеПокупателя = "";
		АдресПокупателя = "";
		ИННПокупателя = "";
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПФ");
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	СведенияОПоставщике = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
	
	СведенияОГрузоотправителе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
	СведенияОГрузополучателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	НомераДаты = Новый Структура("Номер, Дата, НомерИсправления, ДатаИсправления, НомерСчетаФактуры, ДатаСчетаФактуры, НомерИсправленияСчетаФактуры, ДатаИсправленияСчетаФактуры, НомерОтгрузки, ДатаОтгрузки");
	
	НомераДаты.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Ложь);
	Если Лев(НомераДаты.Номер, 1) = НСтр("ru='И'") Тогда
		НомераДаты.Номер = Прав(НомераДаты.Номер, СтрДлина(НомераДаты.Номер)-1);
	КонецЕсли;
	
	НомераДаты.Дата = Формат(ДанныеПечати.Дата, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'");
	НомераДаты.НомерИсправления = ?(ДанныеПечати.Исправление, ДанныеПечати.НомерИсправления, НСтр("ru='--'"));
	НомераДаты.ДатаИсправления = ?(ДанныеПечати.Исправление, Формат(ДанныеПечати.ДатаИсправления, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'"), НСтр("ru='--'"));
	
	НомераДаты.НомерСчетаФактуры = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.НомерСчетаФактуры, Ложь, Ложь);
	Если Лев(НомераДаты.НомерСчетаФактуры, 1) = НСтр("ru='И'") Тогда
		НомераДаты.НомерСчетаФактуры = Прав(НомераДаты.НомерСчетаФактуры, СтрДлина(НомераДаты.НомерСчетаФактуры)-1);
	КонецЕсли;
	
	НомераДаты.ДатаСчетаФактуры = Формат(ДанныеПечати.ДатаСчетаФактуры, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'");
	НомераДаты.НомерИсправленияСчетаФактуры = ДанныеПечати.НомерИсправленияСчетаФактуры;
	НомераДаты.ДатаИсправленияСчетаФактуры = Формат(ДанныеПечати.ДатаИсправленияСчетаФактуры, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'");
	
	НомераДаты.НомерОтгрузки = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Ссылка.Номер, Ложь, Ложь);
	НомераДаты.ДатаОтгрузки = Формат(ДанныеПечати.Ссылка.Дата, НСтр("ru='ДФ=''дд ММММ гггг'''"))+ НСтр("ru=' г.'");
	
	ОбластьМакета.Параметры.Заполнить(НомераДаты);
	
	ПредставлениеДокумента = СтрШаблон(НСтр("ru = 'Счет-фактура № %1 от %2'"), НомераДаты.Номер, НомераДаты.Дата) + Символы.ПС+
							СтрШаблон(НСтр("ru = 'Исправление № %1 от %2'"), НомераДаты.НомерИсправления, НомераДаты.ДатаИсправления);
	
	// Выводим данные о поставщике.
	ПредставлениеПоставщика = ПредставлениеПоставщика + СведенияОПоставщике.НаименованиеПолноеПоУчредительнымДокументам;
	Если (ДействующиеПостановления.Постановление914 ИЛИ ДействующиеПостановления.Постановление534) И СведенияОПоставщике.НаименованиеПолноеПоУчредительнымДокументам <> СведенияОПоставщике.ПолноеНаименование Тогда
		ПредставлениеПоставщика = ПредставлениеПоставщика
			+ НСтр("ru=' ('")
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование")
			+ НСтр("ru=')'");
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	
	ОбластьМакета.Параметры.АдресПоставщика = АдресПоставщика + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес");
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	
	ОбластьМакета.Параметры.ИННПоставщика = ИННПоставщика
	+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь)
	+ ?(Не ПустаяСтрока(КПП), НСтр("ru='/'") + КПП, "");
	
	// Выводим данные грузоотправителя.	
	Если ДанныеПечати.ТолькоУслуги Тогда
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + НСтр("ru='--'");
	ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель 
			И Не ДанныеПечати.ОбособленноеПодразделение Тогда
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + Нстр("ru='он же'");
	Иначе
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя 
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ПочтовыйАдрес");
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя;
	
	// Выводим данные грузополучателя и покупателя.
	Если ДанныеПечати.ТолькоУслуги Тогда
		ПредставлениеГрузополучателя = ПредставлениеГрузополучателя + НСтр("ru='--'");
	Иначе
		Если Не ПустаяСтрока(ДанныеПечати.АдресДоставки) Тогда
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование", Ложь)
			+ ", " + СокрЛП(ДанныеПечати.АдресДоставки);
		Иначе
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес");
			
		КонецЕсли;
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ПредставлениеГрузополучателя;
	
	Если ДействующиеПостановления.Постановление534 Тогда
		КоличествоСтрок = ДанныеПечати.Ссылка.Товары.Количество();
		Если КоличествоСтрок = 1 Тогда
			ОбластьМакета.Параметры.ДокументыОбОтгрузке = СтрШаблон(НСтр("ru = '№ п/п 1 № %1 от %2'"), НомераДаты.НомерОтгрузки, Формат(НомераДаты.ДатаОтгрузки, "ДЛФ=D"));
		Иначе
			ОбластьМакета.Параметры.ДокументыОбОтгрузке = СтрШаблон(НСтр("ru = '№ п/п 1-%3 № %1 от %2'"), НомераДаты.НомерОтгрузки, Формат(НомераДаты.ДатаОтгрузки, "ДЛФ=D"), КоличествоСтрок);
		КонецЕсли;
	КонецЕсли;
	Если Не ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу) Тогда
		ОбластьМакета.Параметры.ПоДокументу = ПоДокументу + ДанныеПечати.СтрокаПоДокументу;
	Иначе
		ОбластьМакета.Параметры.ПоДокументу = ПоДокументу + НСтр("ru = '-- от --'");
	КонецЕсли;
	
	ОбластьМакета.Параметры.ПредставлениеПокупателя = ПредставлениеПокупателя 
	+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь);
	ОбластьМакета.Параметры.АдресПокупателя = АдресПокупателя
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь);
		
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
	ОбластьМакета.Параметры.ИННПокупателя = ИННПокупателя
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, "");
	
	Если ДействующиеПостановления.Постановление1137 Или ДействующиеПостановления.Постановление981 Тогда
		ОбластьМакета.Параметры.Валюта = НСтр("ru='Валюта: наименование, код Российский рубль, 643'");
	ИначеЕсли ДействующиеПостановления.Постановление534 Тогда
		ОбластьМакета.Параметры.Валюта = НСтр("ru='Российский рубль, 643'");
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ДанныеПечати.Дата > Дата('20170701') И ДанныеПечати.Дата < Дата('20210701')Тогда
		
		Если ДанныеПечати.Дата > Дата('20171001') Тогда 
			ИдентификаторГосКонтракта = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения) (при наличии)'");
		Иначе 
			ИдентификаторГосКонтракта = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения)'");
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка625");
		ОбластьМакета.Параметры.ИдентификаторГосударственногоКонтракта = ИдентификаторГосКонтракта;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураИтоговыеСуммы()
	
	Структура = Новый Структура;
	
	СтруктураРесурсовДляИтогов = СтруктураРесурсовДляИтогов();
	
	Для Каждого Элемент Из СтруктураРесурсовДляИтогов Цикл
		Структура.Вставить("Итого"+Элемент.Ключ+"НаСтранице", 0);
		Структура.Вставить("Итого"+Элемент.Ключ, 0);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

Функция СтруктураРесурсовДляИтогов()
	
	Структура = Новый Структура;
	
	Структура.Вставить("СуммаБезНДС",       0);
	Структура.Вставить("СуммаНДС",          0);
	Структура.Вставить("СуммаСНДС",         0);
	Структура.Вставить("Количество",        0);
	Структура.Вставить("КоличествоМест",    0);
	Структура.Вставить("КоличествоПринято", 0);
	Структура.Вставить("МассаБрутто",       0);
	Структура.Вставить("МассаНетто",        0);
	
	Структура.Вставить("РазницаБезНДСУвеличение", 0);
	Структура.Вставить("РазницаБезНДСУменьшение", 0);
	Структура.Вставить("РазницаНДСУвеличение",    0);
	Структура.Вставить("РазницаНДСУменьшение",    0);
	Структура.Вставить("РазницаСНДСУвеличение",   0);
	Структура.Вставить("РазницаСНДСУменьшение",   0);
	
	Возврат Структура;
	
КонецФункции

Процедура ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, НомерСтроки)
	
	ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
	СтруктураПараметров.Вставить("ПредставлениеНоменклатуры", ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
		СтрокаТовары.НоменклатураНаименование,
		СтрокаТовары.ХарактеристикаНаименование));
		
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	Если СтрокаТовары.ПрослеживаемыйТовар = Истина Тогда
		
		СтруктураПараметровРНПТ = УчетПрослеживаемыхТоваровРТ.ПолучитьСтруктуруПараметровРНПТ();
		ЗаполнитьЗначенияСвойств(СтруктураПараметровРНПТ, СтрокаТовары);
		СтруктураПараметровРНПТ.КоличествоРНПТ = СтрокаТовары.КоличествоПрослеж;
		СтруктураСтоимПрослеж = Новый Структура("СтоимПрослеж", УчетПрослеживаемыхТоваровРТ.ПолучитьСтоимостьРНПТ(СтруктураПараметровРНПТ));
		ОбластьМакета.Параметры.Заполнить(СтруктураСтоимПрослеж);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьМакета)

	Для т = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		
		ТекПараметр = ОбластьМакета.Параметры.Получить(т);
		
		Если НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
			ОбластьМакета.Параметры.Установить(т, "--");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары)
	
	СтруктураСуммПоСтроке = СтруктураРесурсовДляИтогов();
	
	ЗаполнитьЗначенияСвойств(СтруктураСуммПоСтроке, СтрокаТовары);
	
	Для Каждого Элемент Из СтруктураСуммПоСтроке Цикл
		Если ЗначениеЗаполнено(Элемент.Значение) Тогда
			ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] = ИтоговыеСуммы["Итого"+Элемент.Ключ+"НаСтранице"] + Элемент.Значение;
			ИтоговыеСуммы["Итого"+Элемент.Ключ] = ИтоговыеСуммы["Итого"+Элемент.Ключ] + Элемент.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, ВсегоНомеров)
	
	ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ВсегоНомеров, ,",,,,,,,,0"));
	ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
