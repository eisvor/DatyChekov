
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВосстановитьНастройкиФормы();
	
	УправлениеФормой();
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КонстантыМаркировки_Изменение" Тогда
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ДокументыИСМП

#Область Производство

#Область ЗаказНаЭмиссиюКодовМаркировкиСУЗ

&НаКлиенте
Процедура ОткрытьЗаказНаЭмиссиюКодовМаркировкиСУЗ(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.Форма.ФормаСписка", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область НанесениеКодовМаркировкиСУЗ

&НаКлиенте
Процедура ОткрытьНанесениеКодовМаркировкиСУЗ(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.НанесениеКодовМаркировкиСУЗИСМПТК.Форма.ФормаСписка", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область АгрегацияКодовМаркировкиСУЗ

&НаКлиенте
Процедура ОткрытьАгрегацияКодовМаркировкиСУЗ(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.АгрегацияКодовМаркировкиСУЗИСМПТК.Форма.ФормаСписка", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Запасы

#Область АктПриемаПередачиИСМПТ

&НаКлиенте
Процедура ОткрытьАктПриемаПередачиКодовМаркировкиИСМПВходящие(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
			
	ОткрытьФорму("Документ.АктПриемаПередачиИСМПТК.Форма.ФормаСпискаВходящих", ПараметрыФормыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАктПриемаПередачиКодовМаркировкиИСМПИсходящие(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
			
	ОткрытьФорму("Документ.АктПриемаПередачиИСМПТК.Форма.ФормаСпискаИсходящих", ПараметрыФормыВыбора);
		
КонецПроцедуры

#КонецОбласти

#Область УведомлениеОВыводеИзОборотаИСМПТ

&НаКлиенте
Процедура ОткрытьУведомлениеОВыводеИзОборотаИСМПТ(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
			
	ОткрытьФорму("Документ.УведомлениеОВыводеИзОборотаИСМПТК.Форма.ФормаСпискаИсходящих", ПараметрыФормыВыбора);
	                                       
КонецПроцедуры                             

#КонецОбласти

#Область УведомлениеОРасхожденииИСМПТ

&НаКлиенте
Процедура ОткрытьУведомлениеОРасхожденииИСМПТИсх(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
			
	ОткрытьФорму("Документ.УведомлениеОРасхожденииИСМПТК.Форма.ФормаСпискаИсходящих", ПараметрыФормыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомлениеОРасхожденииИСМПТВход(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
			
	ОткрытьФорму("Документ.УведомлениеОРасхожденииИСМПТК.Форма.ФормаСпискаВходящих", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область УведомлениеОВводеВОборотИСМПТ

&НаКлиенте
Процедура ОткрытьУведомлениеОВводеВОборотИСМПТ(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
	 	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
		
	КонецЕсли;
			
	ОткрытьФорму("Документ.УведомлениеОВводеВОборотИСМПТК.Форма.ФормаСпискаИсходящих", ПараметрыФормыВыбора);
	                                       
КонецПроцедуры                             

#КонецОбласти

#Область УведомлениеОВвозеИСМПТ

#Область ИзЕАЭС

&НаКлиенте
Процедура ОткрытьУведомлениеОВвозеИзЕАЭС(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормыВыбора.Вставить("Отбор", 	   Отбор);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзЕАЭСИСМПТК.Форма.ФормаСпискаИсходящих", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ИзТретьихСтран

&НаКлиенте
Процедура ОткрытьУведомлениеОВвозеНеЕАЭС(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормыВыбора.Вставить("Отбор", 	   Отбор);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзТретьихСтранИСМПТК.Форма.ФормаСпискаИсходящих", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ЭкспортЕАЭС

&НаКлиенте
Процедура ОткрытьУведомлениеОбЭкспортеЕАЭС(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
			
	ОткрытьФорму("Документ.УведомлениеОбЭкспортеЕАЭСИСМПТК.ФормаСписка", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ПриемкаЕАЭС

&НаКлиенте
Процедура ОткрытьУведомлениеОПриемкеЕАЭС(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
			
	ОткрытьФорму("Документ.УведомлениеОПриемкеЕАЭСИСМПТК.ФормаСписка", ПараметрыФормыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУведомлениеОбОтгрузкеЕАЭС(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
			
	ОткрытьФорму("Документ.УведомлениеОбОтгрузкеЕАЭСИСМПТК.ФормаСписка", ПараметрыФормыВыбора);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбъектыИСМП

&НаКлиенте
Процедура ОткрытьСтанцииУправленияЗаказамиИСМП(Команда)
	
	ОткрытьФорму("Справочник.СтанцииУправленияЗаказамиИСМПТК.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ПулКодовМаркировкиСУЗ(Команда)
	
	ОткрытьФорму("РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗависшиеЗаказыКМ(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	Отбор = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
	КонецЕсли;
	
	СписокЗависшихЗаказовСУЗ = РаботаСДокументамиИСМПТКВызовСервера.ПолучитьСписокЗависшихЗаказовСУЗ(Организация);
	Отбор.Вставить("Ссылка", СписокЗависшихЗаказовСУЗ);
	
	ПараметрыФормыВыбора.Вставить("Отбор", 	   Отбор);
	ПараметрыФормыВыбора.Вставить("Заголовок", НСтр("ru = 'Незавершенные ""Заказы на эмиссию кодов маркировки (СУЗ)""'"));
	ПараметрыФормыВыбора.Вставить("ЭтоСписокИсправления", Истина);
	
	ОткрытьФорму("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.ФормаСписка", ПараметрыФормыВыбора);
		
КонецПроцедуры

&НаКлиенте
Процедура КодыГрупповыхУпаковокSSCC(Команда)
	
	ПараметрыФормыВыбора = Новый Структура();
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор.Вставить("Организация", Организация);
		ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.ШтрихкодыSSCCИСМПТК.ФормаСписка", ПараметрыФормыВыбора);
		
КонецПроцедуры

#КонецОбласти

#Область ПрикладныеОбъекты

&НаКлиенте
Процедура ОткрытьВидыНоменклатуры(Команда)
	
	ИнтеграцияИСМПТККлиентПереопределяемый.ОткрытьФормуСпискаВидыНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНоменклатуру(Команда)

	ИнтеграцияИСМПТККлиентПереопределяемый.ОткрытьФормуСпискаНоменклатуры(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

#Область СправочникиИСМП

&НаКлиенте
Процедура ОткрытьШаблоныЭтикеток(Команда)
	
	ОткрытьФорму("Справочник.ХранилищеШаблоновИСМПТК.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОтборПоОрганизации

&НаКлиенте
Процедура ОтборОрганизацииПриИзменении(Элемент)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организации, Ложь, "Отбор");
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "Отбор", , ОповещениеВыбораОрганизаций());
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Ложь, "Отбор");
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Ложь, "Отбор");
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организация, Ложь, "Отбор");
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "Отбор", , ОповещениеВыбораОрганизаций());
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Ложь, "Отбор");
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Ложь, "Отбор");
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДействияСНастройкамиФормы

&НаСервере
Процедура СохранитьНастройкиФормы()
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекСохранить("ПанельОбменИСМПТК", "Организация",              Организация);
	ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекСохранить("ПанельОбменИСМПТК", "ОрганизацииПредставление", ОрганизацииПредставление);
	ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекСохранить("ПанельОбменИСМПТК", "Организации",              Организации);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиФормы()
	
	Организации              = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "Организации");
	//Ответственный            = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "Ответственный", Ответственный);
	Организация              = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "Организация", Организация);
	ОрганизацииПредставление = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "ОрганизацииПредставление", ОрганизацииПредставление);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеЭлементовФормы

&НаСервере
Процедура ОбновитьСпискиДокументов()
	
	УправлениеФормой();
	СохранитьНастройкиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОтборПоОрганизации

&НаКлиенте
Функция ОповещениеВыбораОрганизаций()
	
	Возврат Новый ОписаниеОповещения("ПослеВыбораОрганизации", ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ПослеВыбораОрганизации(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьСпискиДокументов();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УправлениеФормой()
	
	////////ОБЩИЕ СВЕДЕНИЯ////////
	//КОНСТАНТЫ УЧЕТА
	ВедетсяУчетМарокПоОбуви 	 = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойОбувиИСМПТК");
	ВедетсяУчетМарокПоТабаку 	 = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемогоТабакаИСМПТК");
	ВедетсяУчетМарокПоМолочке 	 = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойМолочкиИСМПТК");
	ВедетсяУчетМарокПоАлкоголю 	 = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемогоАлкоголяИСМПТК");
	ВедетсяУчетМарокПоЛекарствам = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемыхЛекарствИСМПТК");
	ВедетсяУчетМарокПоТекстилю 	 = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемогоТекстиляИСМПТК");
	ВедетсяУчетМарокОбщая	 	 = ПолучитьФункциональнуюОпцию("ВестиУчетМаркируемойПродукцииИСМПТК");
	//////////////////////////////
	
	//===========================
	
	///////ПЕРЕОПРЕДЕЛЯЕМЫЕ///////
	//Получение параметров настроек модуля с учетом особенностей конфигурации.
	МассивПереопределяемыхНастроек = СобытияФормИСМПТКПереопределяемый.ПолучитьСписокПереопределяемыхНастроекФормыОсновноеРабочееМестоИСМПТ();
	Для Каждого СтруктураПараметров Из МассивПереопределяемыхНастроек Цикл
		
		ИмяЭлемента = СтруктураПараметров.ИмяЭлементаФормы;
		Свойство	= СтруктураПараметров.Свойство;
		ЗначениеСвойства = СтруктураПараметров.Значение;
		
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, Свойство, ЗначениеСвойства);
		
	КонецЦикла;
	//////////////////////////////
	
	//===========================
	
	//////МАРКИРОВКА ТОВАРОВ/////
	//1. ГРУППА ТОВАРОДВИЖЕНИЕ
	//Акты приема/передачи и Уведомления о расхождениях
	ВидимостьГруппаАППУОР = ПравоДоступа("Просмотр",   Метаданные.Документы.АктПриемаПередачиИСМПТК)
	                        И ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОРасхожденииИСМПТК);												 
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаАктПриемаПередачиМаркировкиИСМП", 		 "Видимость", ВидимостьГруппаАППУОР);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаУведомлениеОРасхожденииМаркировкиИСМП", "Видимость", ВидимостьГруппаАППУОР);
	
	//2. ГРУППА ВВОЗ ТОВАРОВ
	//Уведомления о ввозе товаров (ЕАЭС и Третьи страны)
	ВидимостьВвоз = ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОВвозеИзЕАЭСИСМПТК)
					И ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОВвозеИзТретьихСтранИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаУведомлениеОВвозеМаркировкиИСМП", "Видимость", ВидимостьВвоз);
	
	//Уведомления об Экспорте, Отгрузке и Приемке (ЕАЭС)
	ВидимостьВывозСПризнанием = ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОбЭкспортеЕАЭСИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Продажа", "Видимость", ВидимостьВывозСПризнанием);
	
	ВидимостьВвозСПризнанием = ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОбОтгрузкеЕАЭСИСМПТК)
							   И ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОПриемкеЕАЭСИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Закупка", "Видимость", ВидимостьВвозСПризнанием);
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Декорация4", "Видимость", ВидимостьВывозСПризнанием Или ВидимостьВвозСПризнанием);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Декорация2", "Видимость", ВидимостьВывозСПризнанием Или ВидимостьВвозСПризнанием);
	
	//3. ГРУППА ИНВЕНТАРИЗАЦИЯ
	//Уведомления о вводе в оборот
	ВидимостьВводВОборот = ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОВводеВОборотИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаВозвратВОборотКодовМаркировкиИСМП", "Видимость", ВидимостьВводВОборот);
	
	//Уведомления о вывводе из оборота
	ВидимостьВыводИЗОборота = ПравоДоступа("Просмотр", Метаданные.Документы.УведомлениеОВыводеИзОборотаИСМПТК);							  
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСписаниеКодовМаркировкиИСМП", "Видимость", ВидимостьВыводИЗОборота);
	
	//4. См. также
	ВидимостьСсылкаНаЛК = ВидимостьГруппаАППУОР ИЛИ ВидимостьВвоз ИЛИ ВидимостьВводВОборот ИЛИ ВидимостьВыводИЗОборота;  
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСмТакже3", "Видимость", ВидимостьСсылкаНаЛК);
	///////////////////////////////
	
	//===========================
	
	//СТАНЦИЯ УПРАВЛЕНИЯ ЗАКАЗАМИ//
	//1. ГРУППА ПРОИЗВОДСТВО
	//Заказы на эмиссию кодов маркировки
	ВидимостьЗаказКМ = ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказКодовМаркировкиСУЗИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаЗаказНаЭмиссиюКодовМаркировкиСУЗ", "Видимость", ВидимостьЗаказКМ);
			
	//Отчеты о нанесениеи кодов маркировки
	ВидимостьНанесениеКМ = ПравоДоступа("Просмотр", Метаданные.Документы.НанесениеКодовМаркировкиСУЗИСМПТК)
					   	   И (ВедетсяУчетМарокПоЛекарствам ИЛИ ВедетсяУчетМарокПоМолочке ИЛИ ВедетсяУчетМарокПоТабаку); //Для обуви не поддерживается
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНанесениеКодовМаркировкиСУЗ", "Видимость", ВидимостьНанесениеКМ);
	
	//Агрегации кодов маркировки
	ВидимостьАгрегацияКМ = ПравоДоступа("Просмотр", Метаданные.Документы.АгрегацияКодовМаркировкиСУЗИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаАгрегацияКодовМаркировкиСУЗ", "Видимость", ВидимостьАгрегацияКМ);
	
	//2. ГРУППА СЕРВИС
	//Пул кодов маркировки
	ВидимостьПулКодов = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ПулКодовМаркировкиСУЗИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОткрытьПулКодовМаркировкиСУЗ", "Видимость", ВидимостьПулКодов);
	
	//РМ Создание группы отчетов об агрегации
	ВидимостьРМСозданиеАгрегаций = ПравоДоступа("Просмотр", Метаданные.Обработки.РабочиеМестаИСМПТК.Команды.ОткрытьРМСозданиеГруппыАгрегаций)
								   И ПравоДоступа("Изменение", Метаданные.Документы.АгрегацияКодовМаркировкиСУЗИСМПТК); //Создание документов в РМ
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГрупповоеСозданиеАгрегаций", "Видимость", ВидимостьРМСозданиеАгрегаций);
	
	//РМ Проверка остатков КМ по данным агрегаций
	ВидимостьРМПроверкаОстатковПоАгрегациям = ПравоДоступа("Просмотр", Метаданные.Обработки.РабочиеМестаИСМПТК.Команды.ОткрытьРМПроверкаАгрегации); //Команда и форма РМ
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОбработкаОбменИСМПТКРМПроверкаАгрегации", "Видимость", ВидимостьРМПроверкаОстатковПоАгрегациям);
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Декорация1", "Видимость", ВидимостьРМПроверкаОстатковПоАгрегациям);
	///////////////////////////////
	
	//===========================
	
	////СЕРВИСНЫЕ ВОЗМОЖНОСТИ/////
	//1. НАСТРОЙКИ И СПРАВОЧНИКИ
	//Настройка обмена с ИС МПТ
	ВидимостьНастройкиОбмена = ПравоДоступа("Использование", Метаданные.Обработки.ПанельАдминистрированияИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "НастройкаИСМП", "Видимость", ВидимостьНастройкиОбмена);
							   
	//Справочник Станции управления заказами
	ВидимостьСУЗ = ПравоДоступа("Изменение", Метаданные.Справочники.СтанцииУправленияЗаказамиИСМПТК); //Просматривать рядовому пользователю незачем.
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтанцииУправленияЗаказамиИСМП", "Видимость", ВидимостьСУЗ);
	
	//Справочник Шаблоны этикеток
	ВидимостьШаблоныЭтикетокКМ = ПравоДоступа("Просмотр", Метаданные.Справочники.ХранилищеШаблоновИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОткрытьШаблоныЭтикеток", "Видимость", ВидимостьШаблоныЭтикетокКМ);
	
	//2. РАБОТА С ФАЙЛАМИ
	//РМ Печать КМ из загруженного файла
	ВидимостьРМПечатьИзФайла = ПравоДоступа("Просмотр", Метаданные.Обработки.РабочиеМестаИСМПТК.Команды.ОткрытьРМПечатьКМИзФайла);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПечатьКМИзЗагруженногоФайла", "Видимость", ВидимостьРМПечатьИзФайла);
	
	//РМ Объединение загруженных файлов
	ВидимостьРМОбъединениеФайлов = ПравоДоступа("Просмотр", Метаданные.Обработки.РабочиеМестаИСМПТК.Команды.ОткрытьРМОбъединениеФайлов);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОбъединениеФайлов", "Видимость", ВидимостьРМОбъединениеФайлов);
	
	//3. ПРОИЗВОДСТВО
	//РМ Восстановление зависших операций в заказах
	ВидимостьРМВосстановлениеЗависшихЗаказов = ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказКодовМаркировкиСУЗИСМПТК.Команды.ВосстановлениеЗависшихОпераций)
											   И ПравоДоступа("Изменение", Метаданные.Документы.ЗаказКодовМаркировкиСУЗИСМПТК); 
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗависшиеЗаказыКМ", "Видимость", ВидимостьРМВосстановлениеЗависшихЗаказов);
	
	//Список сгенерированных транспортных КМ
	ВидимостьСписокТранспортныхКодов = ПравоДоступа("Просмотр", Метаданные.Обработки.ГенерацияШтрихкодовИСМПТК);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "КодыГрупповыхУпаковокSSCC", "Видимость", ВидимостьСписокТранспортныхКодов);
	
	//4. ПОЛУЧЕНИЕ ИНФОРМАЦИИ С СЕРВЕРА
	//РМ Проверка статуса и состояния КМ
	ВидимостьРМПроверкаСостоянияКМ = ПравоДоступа("Просмотр", Метаданные.Обработки.РабочиеМестаИСМПТК.Команды.ОткрытьРМПроверкаСостоянияКодовМаркировки);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПроверкаСостоянияКодовМаркировки", "Видимость", ВидимостьРМПроверкаСостоянияКМ);
	
	//РМ Управление счетами
	ВидимостьРМУправлениеСчетами = ПравоДоступа("Просмотр", Метаданные.Обработки.РабочиеМестаИСМПТК.Команды.ОткрытьРМУправлениеЛичнымиСчетами);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УправлениеЛичнымиСчетами", "Видимость", ВидимостьРМУправлениеСчетами);
			
КонецПроцедуры

#КонецОбласти