
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметры.Документ) Тогда
		ГрупповаяПечатьКМ = (ТипЗнч(Параметры.Документ) = Тип("СписокЗначений"));
	КонецЕсли;
	РазрешенаПовторнаяПечать = ОбщегоНазначенияИСМПТКПереопределяемый.РазрешенаПовторнаяПечатьКодовМаркировки();
	Если Параметры.Свойство("РежимВыбораПечати") Тогда
		РежимВыбораПечати = Параметры.РежимВыбораПечати; //Вызов из пула, передается настройка, влияющая на отбор данных
	Иначе
		РежимВыбораПечати = "ВсеДоступныеПоЗаказу" //Вызов из документа, всегда отбираем все доступные КМ
	КонецЕсли;
	РазмещениеЭтикетокНаЛисте = "Замостить";
	
	УстановитьУсловноеОформление();
	ОбработатьИПроверитьПереданныеПараметры(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	ЗаполнитьДанныеФормы(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ИспользоватьХарактеристикиНоменклатуры = ИнтеграцияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик();
	УправлениеЭлементамиФормыПриСоздании();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого СтрокаНоменклатура Из СписокКодовМаркировки Цикл
		
		Если ЗначениеЗаполнено(СтрокаНоменклатура.КоличествоПечать)
			И ВидимостьШаблонаЭтикетки И Не ЗначениеЗаполнено(СтрокаНоменклатура.ШаблонПотребительскойЭтикетки) Тогда
			
			НомерСтроки	   = СписокКодовМаркировки.Индекс(СтрокаНоменклатура) + 1;
			ТекстСообщения = СтрШаблон(НСтр("ru = 'В строке %1 не заполнено поле ""Шаблон этикетки""'"), НомерСтроки);
			Поле = ОбщегоНазначенияИСМПТККлиентСервер.ПутьКТабличнойЧасти("СписокКодовМаркировки", НомерСтроки, "ШаблонПотребительскойЭтикетки");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокКодовМаркировкиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.СписокКодовМаркировки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовМаркировкиКоличествоПечатьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокКодовМаркировки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если ТекущиеДанные.КоличествоПечать > ТекущиеДанные.Количество Тогда
		ТекущиеДанные.КоличествоПечать = ТекущиеДанные.Количество;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовМаркировкиШаблонЭтикеткиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	//Проверка на соответствие выбранного шаблона печати КМ требуемому формату генерации ШК
	Если ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ВестиУчетМаркируемогоТабакаИСМПТК") Тогда
		
		ШаблонПодходитДляGS1 	  = Не ПечатьКодовМаркировкиИСМПТККлиентСервер.ПроверитьПризнакGS1УШаблона(ВыбранноеЗначение);
		ТекущиеДанныеПечатиШаблон = Элементы.СписокКодовМаркировки.ТекущиеДанные.Шаблон;
		
		Если (ТекущиеДанныеПечатиШаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.ТабачнаяПачка") 
			И ШаблонПодходитДляGS1) 
			Или (Не ТекущиеДанныеПечатиШаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.ТабачнаяПачка") 
			И Не ШаблонПодходитДляGS1) Тогда
			
			//Для табачных пачек должен применяться шаблон спризнаком НеGS1, т.к. требуется формат штрихкода обычный DataMatrix
			ТекстОшибки = НСтр("ru = 'Внимание! Выбранный шаблон %1 не соответствует требуемому формату генерации штрихкода при печати для текущей строки номенклатуры.'");
			ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыбранноеЗначение); 
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеВопросПечати = Новый ОписаниеОповещения("ОбработкаОтветаПользователяПриПечати", ЭтотОбъект);
	
	ПоказатьВопрос(ОповещениеВопросПечати, 
		НСтр("ru = 'Распечатать этикетки по выбранным данным можно только один раз. После выполнения команды коды будут отмечены как использованные.
			|Продолжить?'"),
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("ТаблицаДляЗаполнения", "СписокКодовМаркировки");
	ПараметрыОткрытия = Новый Структура("РежимИспользования", "ЗаполнениеШаблона");
	ОповещениеЗаполнения = Новый ОписаниеОповещения("ОбработкаЗакрытияФормыЗаполнения", ЭтотОбъект, ПараметрыЗаполнения);
	
	ОткрытьФорму("Справочник.ХранилищеШаблоновИСМПТК.Форма.ФормаПомощникЗаполненияШаблоновЭтикеток",ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеЗаполнения)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоGTIN(Команда)
	
	ТекстВопроса = НСтр("ru = 'Данные номенклатуры для печати будут получены из регистра ""%НаименованиеРегистра%"", основываясь на указанных GTIN.'")
				 + Символы.ПС
				 + НСтр("ru = 'Выполнить заполнение?'");
	ТекстВопроса = СтрЗаменить(ТекстВопроса, "%НаименованиеРегистра%", ПолучитьПредставлениеРегистраШтрихкоды()); 
	ЗаполнитьПоGTINЗавершение = Новый ОписаниеОповещения("ЗаполнитьПоGTINЗавершение", ЭтаФорма);
	ПоказатьВопрос(ЗаполнитьПоGTINЗавершение, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеРегистраШтрихкоды()

	Возврат ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьПредставлениеРегистраШтрихкоды();
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьКоличествоДляВсех(Команда)
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("ТаблицаДляЗаполнения", "СписокКодовМаркировки");
	ПараметрыОткрытия = Новый Структура("РежимИспользования", "УказаниеКоличества");
	ОповещениеЗаполнения = Новый ОписаниеОповещения("ОбработкаЗакрытиеФормыЗаполненияКоличества", ЭтотОбъект, ПараметрыЗаполнения);
	
	ОткрытьФорму("Справочник.ХранилищеШаблоновИСМПТК.Форма.ФормаПомощникЗаполненияШаблоновЭтикеток",ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеЗаполнения)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКодовМаркировкиОрганизация", "Видимость", ГрупповаяПечатьКМ);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКодовМаркировкиЗаказКМ",     "Видимость", ГрупповаяПечатьКМ);
	
КонецПроцедуры

&НаКлиенте 
Функция ПодготовитьДанныеДляПечати()
	
	ДанныеДляПечати = ДанныеДляПечатиСвободныеКоды();
	ДанныеДляПечати.Вставить("ЕстьПечатьЭтикетокИЦенников", ПроверитьНаличиеМенеджераПечати());
	
	Возврат ДанныеДляПечати;
	
КонецФункции

&НаСервере
Функция ПроверитьНаличиеМенеджераПечати()
	
	Возврат ?(Метаданные.НайтиПоПолномуИмени("Обработка.ПечатьКодовМаркировкиИСМПТК") <> Неопределено, Истина, Ложь);
	
КонецФункции
	
&НаКлиенте 
Функция ДанныеДляПечатиСвободныеКоды()
	
	ОбъектыПечати = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из СписокКодовМаркировки Цикл
		
		Если СтрокаТаблицы.КоличествоПечать = 0
			Или ВидимостьШаблонаЭтикетки И Не ЗначениеЗаполнено(СтрокаТаблицы.ШаблонПотребительскойЭтикетки) Тогда
			Продолжить;
		КонецЕсли;
	
		ПараметрыШтрихкода                    = ПечатьКодовМаркировкиИСМПТККлиентСервер.СтруктураПечатиЭтикетки();
		ПараметрыШтрихкода.Организация        = ?(ЗначениеЗаполнено(Организация), Организация, СтрокаТаблицы.Организация);
		ПараметрыШтрихкода.ВидПродукции       = СтрокаТаблицы.ВидПродукции;
		ПараметрыШтрихкода.Номенклатура       = СтрокаТаблицы.Номенклатура;
		ПараметрыШтрихкода.Характеристика     = СтрокаТаблицы.Характеристика;
		ПараметрыШтрихкода.ШаблонЭтикетки     = СтрокаТаблицы.ШаблонПотребительскойЭтикетки;
		ПараметрыШтрихкода.Количество         = СтрокаТаблицы.КоличествоПечать;
		ПараметрыШтрихкода.СпособВводаВОборот = СтрокаТаблицы.СпособВводаВОборот;
		ПараметрыШтрихкода.Шаблон             = СтрокаТаблицы.Шаблон;
		ПараметрыШтрихкода.GTIN               = СтрокаТаблицы.GTIN;
		ПараметрыШтрихкода.ЗаказКМ			  = СтрокаТаблицы.ЗаказКМ;
	
		ОбъектыПечати.Добавить(ПараметрыШтрихкода);
	
	КонецЦикла;
	
	ИтоговаяСтруктура = Новый Структура;
	ИтоговаяСтруктура.Вставить("ОбъектыПечати",              ОбъектыПечати);
	ИтоговаяСтруктура.Вставить("Документ",                   Документ);
	ИтоговаяСтруктура.Вставить("РежимПечати",                "РезервироватьСвободныеКоды");
	ИтоговаяСтруктура.Вставить("КаждаяЭтикеткаНаНовомЛисте", КаждаяЭтикеткаНаНовомЛисте());
	
	Возврат ИтоговаяСтруктура;
	
КонецФункции

&НаКлиенте 
Функция КаждаяЭтикеткаНаНовомЛисте()
	Возврат РазмещениеЭтикетокНаЛисте = "Отдельно";
КонецФункции

&НаСервере
Процедура ОбработатьИПроверитьПереданныеПараметры(Отказ)
	
	Если Не ЗначениеЗаполнено(Параметры.Документ) Тогда
		ТекстОшибки = НСтр("ru = 'В форму печати кодов маркировки не передан документ.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,,,Отказ);
		Возврат;
	КонецЕсли;

	Если ГрупповаяПечатьКМ Тогда
		//Вызов печати из Пула кодов, поэтому проверки не нужны, т.к. там уже был установлен отбор по доступным к печати Заказам
		//и все данные, которые пришли в текущую форму, точно доступны для печати
		Документ = Параметры.Документ;
		Возврат;
	Иначе
		//Вызов из формы документа, поэтому проверяем, что для него есть данные в Пуле, которые можно распечатать
		ТолькоСвободныеКоды = Параметры.ТолькоСвободныеКоды;
		
		ЭтоЗаказНаЭмиссию = ТипЗнч(Параметры.Документ) = Тип("ДокументСсылка.ЗаказКодовМаркировкиСУЗИСМПТК");
		
		ТекстЗапроса = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПулКодовМаркировки.КодМаркировки КАК КодМаркировки,
		|	ПулКодовМаркировки.ДатаПечати КАК ДатаПечати
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировки
		|ГДЕ
		//Печать может быть вызвана из Нанесения, тогда проверяем связанный с ним Заказ
		|	ПулКодовМаркировки." + ?(ЭтоЗаказНаЭмиссию, "ЗаказНаЭмиссию", "ДокументОснование") + " = &Документ  
		|УПОРЯДОЧИТЬ ПО
		|	ПулКодовМаркировки.ДатаПечати
		|";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Документ", Параметры.Документ);
		Результат = Запрос.Выполнить();
		
		ТекстОшибки = "";
		
		Если Результат.Пустой() Тогда
			Если ЭтоЗаказНаЭмиссию Тогда
				ТекстОшибки = НСтр("ru = 'По документу ""%1"" эмиссия кодов на стороне СУЗ еще не выполнена.'");
			Иначе
				ТекстОшибки = НСтр("ru = 'По документу ""%1"" отсутствуют исполненные документы ""%НаименованиеТипаДокумента%"".'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НаименованиеТипаДокумента%", ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаЗаказКодовМаркировкиСУЗИСМПТК());
			КонецЕсли;
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Если ЗначениеЗаполнено(Выборка.ДатаПечати) Тогда
				Если НЕ РазрешенаПовторнаяПечать Тогда
					ТекстОшибки = НСтр("ru = 'По документу ""%1"" все коды маркировки уже распечатаны.'");
				Иначе
					ТекстОшибки = НСтр("ru = 'По документу ""%1"" все коды уже распечатаны. Для повторной печати воспользуйтесь командой сброса в Пуле кодов.'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ПустаяСтрока(ТекстОшибки) Тогда
			Документ = Параметры.Документ;
			
			Если ОбщегоНазначенияИСМПТККлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Документ, "Организация") Тогда
				Организация = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(Документ, "Организация");
			КонецЕсли;
		Иначе
			ТекстОшибки = СтрШаблон(ТекстОшибки, Параметры.Документ);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,,,Отказ);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормы(Отказ = Неопределено)

	Если ГрупповаяПечатьКМ Тогда
		//Параметр ГрупповаяПечатьКМ всегда устанавливается, когда печать инициируется в Пуле кодов. При этом можт быть доп.параметр,
		//регулирующий печать всего Заказа или только выборочных ШК из него.		
		
		Если РежимВыбораПечати = "ТолькоВыбранные" 
			И Не Параметры.ВыбранныеШК.Количество() = 0 Тогда
			//В этом режиме из Пула кодов приходит дополнительный параметр, ограничивающий список ШК внутри Заказа, по которому(ым) выполняется печать,
			//поэтому запрос данных и их обработка отличаются.
			ЗаполнитьДанныеФормыДляТолькоВыбранныхИзГруппы(Отказ);
			Возврат;
		Иначе		
			//В этом случае обрабатывается группа Заказов (либо один, но данные все равно в Списке значений) и печать
			//происходит по умолчанию сразу для всех доступных ШК (GTIN) в рамках каждого Заказа.
			ТекстЗапроса = "ВЫБРАТЬ
			|	ПулКодовМаркировки.ВидПродукции КАК ВидПродукции,
			|	ПулКодовМаркировки.Номенклатура КАК Номенклатура,
			|	ПулКодовМаркировки.Характеристика КАК Характеристика,
			|	ПулКодовМаркировки.Шаблон КАК Шаблон,
			|	ПулКодовМаркировки.СпособВводаВОборот КАК СпособВводаВОборот,
			|	ПулКодовМаркировки.GTIN КАК GTIN,
			|	КОЛИЧЕСТВО(ПулКодовМаркировки.КодМаркировки) КАК Количество,
			|	СУММА(ВЫБОР
			|			КОГДА ПулКодовМаркировки.ДатаПечати = ДАТАВРЕМЯ(1, 1, 1)
			|				ТОГДА 1
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК КоличествоПечать,
			|	&ПустойШаблонЭтикетки КАК ШаблонПотребительскойЭтикетки,
			|	ПулКодовМаркировки.ЗаказНаЭмиссию КАК ЗаказКМ,
			|	ПулКодовМаркировки.ЗаказНаЭмиссию.Организация КАК Организация
			|ИЗ
			|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировки
			|ГДЕ
			|	ПулКодовМаркировки.ЗаказНаЭмиссию В(&Документ)
			|	И ПулКодовМаркировки.ДатаПечати = ДАТАВРЕМЯ(1, 1, 1)
			|
			|СГРУППИРОВАТЬ ПО
			|	ПулКодовМаркировки.ВидПродукции,
			|	ПулКодовМаркировки.Номенклатура,
			|	ПулКодовМаркировки.Характеристика,
			|	ПулКодовМаркировки.Шаблон,
			|	ПулКодовМаркировки.GTIN,
			|	ПулКодовМаркировки.СпособВводаВОборот,
			|	ПулКодовМаркировки.ЗаказНаЭмиссию,
			|	ПулКодовМаркировки.ЗаказНаЭмиссию.Организация";
		КонецЕсли;
	Иначе
		//Вызов печати произошел из формы документа (Заказ или Нанесение) и обрабатываются только данные этого документа.
		//В этом режиме по умолчанию отбираем для печати все доступные данные по документу без отбора по конкретным GTIN.
		
		//Т.к. для некоторых ТГ печать инициируется из Нанесения, но данные в Пуле хранятся в связке с Заказом, по которому
		//это нанесение оформлялось, необходимо динамическое формирование текста запроса с проверкой типа документа.
		ЭтоЗаказНаЭмиссию = ТипЗнч(Документ) = Тип("ДокументСсылка.ЗаказКодовМаркировкиСУЗИСМПТК");
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ПулКодовМаркировки.ВидПродукции                        КАК ВидПродукции,
		|	ПулКодовМаркировки.Номенклатура                        КАК Номенклатура,
		|	ПулКодовМаркировки.Характеристика                      КАК Характеристика,
		|	ПулКодовМаркировки.Шаблон                              КАК Шаблон,
		|	ПулКодовМаркировки.СпособВводаВОборот                  КАК СпособВводаВОборот,
		|	ПулКодовМаркировки.GTIN                  			   КАК GTIN,
		|	КОЛИЧЕСТВО(ПулКодовМаркировки.КодМаркировки)           КАК Количество,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию КАК ЗаказКМ,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию.Организация КАК Организация,
		|	СУММА(ВЫБОР
		|		КОГДА ПулКодовМаркировки.ДатаПечати = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ)                                                 КАК КоличествоПечать,
		|	&ПустойШаблонЭтикетки                                  КАК ШаблонПотребительскойЭтикетки
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировки
		|ГДЕ
		|	ПулКодовМаркировки." + ?(ЭтоЗаказНаЭмиссию, "ЗаказНаЭмиссию", "ДокументОснование") + " = &Документ
		|";
		
		//Если НЕ РазрешенаПовторнаяПечать Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И ПулКодовМаркировки.ДатаПечати = ДАТАВРЕМЯ(1,1,1)";
		//КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировки.ВидПродукции,
		|	ПулКодовМаркировки.Номенклатура,
		|	ПулКодовМаркировки.Характеристика,
		|	ПулКодовМаркировки.Шаблон,
		|	ПулКодовМаркировки.GTIN,
		|	ПулКодовМаркировки.СпособВводаВОборот,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию.Организация
		|";
		
	КонецЕсли;
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("ПустойШаблонЭтикетки", Справочники.ХранилищеШаблоновИСМПТК.ПустаяСсылка());
		
	ТаблицаСвободныхКодов = Запрос.Выполнить().Выгрузить();
	ТаблицаСвободныхКодов.Колонки.Добавить("Содержимое", ОбщегоНазначенияИСМПТКПереопределяемый.ОписаниеТипаСтрока(500));

	Для Каждого СтрокаТаблицы Из ТаблицаСвободныхКодов Цикл
		СтрокаТаблицы.Содержимое = РаботаСДокументамиИСМПТК.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика);
	КонецЦикла;
	
	СписокКодовМаркировки.Загрузить(ТаблицаСвободныхКодов);
	
	ЕстьСвободныеКоды = СписокКодовМаркировки.Количество() > 0;
	
	Если Отказ <> Неопределено И НЕ ЕстьСвободныеКоды Тогда
		ТекстОшибки = НСтр("ru = 'По документу ""%1"" нет кодов маркировки для печати.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Параметры.Документ);
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,,,Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыДляТолькоВыбранныхИзГруппы(Отказ = Неопределено)

	ОтборДанныхИзПула = Параметры.ВыбранныеШК; 
	//Это массив, в каждом элементе которого структура "ЗаказКМ (ДокументСсылка) + МассивШК (Массив)".
	//В данном массиве содержится отбор из формы Пул кодов, устанавливающий ограничение на заказы, которые печатаем, и ШК из них, которые выбрали:
	//могут печатать не все ШК из заказа, а Заказов в выборке может быть несколько, при этом ШК в них могут совпадать.
	//Поэтому нельзя устанавливать простой отбор "все выбранные заказы и все выбранные ШК", 
	//т.к. в одном Заказе этот ШК мог быть выбран, а в другом он тоже есть, но для печати его не отметили - делаем запрос именно по связке Заказ+Его ШК.
	
	ТаблицаСвободныхКодов = Новый ТаблицаЗначений(); //Итоговая таблица данных для печати
	Для Каждого ЭлементОтбора Из ОтборДанныхИзПула Цикл
		ЗаказКМ  = ЭлементОтбора.ЗаказКМ;  //выбранный документ
		МассивШК = ЭлементОтбора.МассивШК; //набор ШК из этого Заказа, которые выбрали к печати
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ПулКодовМаркировки.ВидПродукции КАК ВидПродукции,
		|	ПулКодовМаркировки.Номенклатура КАК Номенклатура,
		|	ПулКодовМаркировки.Характеристика КАК Характеристика,
		|	ПулКодовМаркировки.Шаблон КАК Шаблон,
		|	ПулКодовМаркировки.СпособВводаВОборот КАК СпособВводаВОборот,
		|	ПулКодовМаркировки.GTIN КАК GTIN,
		|	КОЛИЧЕСТВО(ПулКодовМаркировки.КодМаркировки) КАК Количество,
		|	СУММА(ВЫБОР
		|			КОГДА ПулКодовМаркировки.ДатаПечати = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоПечать,
		|	&ПустойШаблонЭтикетки КАК ШаблонПотребительскойЭтикетки,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию КАК ЗаказКМ,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировки
		|ГДЕ
		|	ПулКодовМаркировки.ЗаказНаЭмиссию = &Документ
		|	И ПулКодовМаркировки.GTIN В(&GTIN)
		|	И ПулКодовМаркировки.ДатаПечати = ДАТАВРЕМЯ(1, 1, 1)
		|	И ПулКодовМаркировки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировки.ВидПродукции,
		|	ПулКодовМаркировки.Номенклатура,
		|	ПулКодовМаркировки.Характеристика,
		|	ПулКодовМаркировки.Шаблон,
		|	ПулКодовМаркировки.GTIN,
		|	ПулКодовМаркировки.СпособВводаВОборот,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию,
		|	ПулКодовМаркировки.ЗаказНаЭмиссию.Организация";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Документ", ЗаказКМ);
		Запрос.УстановитьПараметр("GTIN",     МассивШК);
		Запрос.УстановитьПараметр("ПустойШаблонЭтикетки", Справочники.ХранилищеШаблоновИСМПТК.ПустаяСсылка());
		
		ТаблицаСвободныхКодовПромежуточная = Запрос.Выполнить().Выгрузить(); //Результат запроса в рамках одного набора данных Заказ+Его ШК
		ТаблицаСвободныхКодовПромежуточная.Колонки.Добавить("Содержимое", ОбщегоНазначенияИСМПТКПереопределяемый.ОписаниеТипаСтрока(500));
		
		Если ТаблицаСвободныхКодов.Колонки.Количество() = 0 Тогда
			//Задаем первоначальную структуру итоговой таблице по колонкам таблицы результата запроса
			ТаблицаСвободныхКодов = ТаблицаСвободныхКодовПромежуточная.СкопироватьКолонки(); 
		КонецЕсли;
		
		Для Каждого СтрокаВрем Из ТаблицаСвободныхКодовПромежуточная Цикл
			//Заполняем итоговую таблицу результатом запроса по одному Заказу
			НоваяСтрокаИтог = ТаблицаСвободныхКодов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаИтог, СтрокаВрем);
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ТаблицаСвободныхКодов Цикл
		СтрокаТаблицы.Содержимое = РаботаСДокументамиИСМПТК.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика);
	КонецЦикла;
	
	СписокКодовМаркировки.Загрузить(ТаблицаСвободныхКодов);
	
	ЕстьСвободныеКоды = СписокКодовМаркировки.Количество() > 0;
	
	Если Отказ <> Неопределено И НЕ ЕстьСвободныеКоды Тогда
		ТекстОшибки = НСтр("ru = 'По документу ""%1"" нет кодов маркировки для печати.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, Параметры.Документ);
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,,,Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормыПриСоздании()
	
	Если НЕ ИспользоватьХарактеристикиНоменклатуры Тогда
		Элементы.СписокКодовМаркировкиХарактеристика.Видимость = Ложь;
	КонецЕсли;
	
	ЕстьСвободныеКоды = СписокКодовМаркировки.Количество() > 0;
			
	Если НЕ ЕстьСвободныеКоды Тогда
		Если ЕстьСвободныеКоды Тогда
			Элементы.СписокКодовМаркировкиПечать.КнопкаПоУмолчанию = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ВидимостьШаблонаЭтикетки = Истина;
	
	Элементы.СписокКодовМаркировкиШаблонЭтикетки.Видимость = ЕстьСвободныеКоды;
	Элементы.СписокКодовМаркировкиЗаполнить.Видимость      = ЕстьСвободныеКоды;
			
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоGTINЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ЗаполнитьПоGTINНаСервере();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоGTINНаСервере()
	
	ТаблицаКодовGTIN = Новый ТаблицаЗначений();
	ТаблицаКодовGTIN.Колонки.Добавить("НомерСтрокиВЗаказе");
	ТаблицаКодовGTIN.Колонки.Добавить("Штрихкод");
	ТаблицаКодовGTIN.Колонки.Добавить("Номенклатура");
	ТаблицаКодовGTIN.Колонки.Добавить("Характеристика");
	ТаблицаКодовGTIN.Колонки.Добавить("Упаковка");

	Для Каждого СтрокаТЧ Из СписокКодовМаркировки Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.GTIN) Тогда
			НоваяСтрока = ТаблицаКодовGTIN.Добавить();
			Штрихкод = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(СтрокаТЧ.GTIN);
			НоваяСтрока.Штрихкод = Штрихкод;
		КонецЕсли;
		
	КонецЦикла;
	
	ДанныеПоНоменклатуре = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьДанныеОНоменклатуреПоGTIN(ТаблицаКодовGTIN); 
	
	Если ДанныеПоНоменклатуре.Количество() <> 0 Тогда
		Для Каждого Строка Из ДанныеПоНоменклатуре Цикл
			
			GTIN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.GTINПоШтрихкодуEAN(Строка.Штрихкод);
			ПараметрыОтбора = Новый Структура();
			ПараметрыОтбора.Вставить("GTIN", GTIN);
			
			НайденныеСтроки = СписокКодовМаркировки.НайтиСтроки(ПараметрыОтбора);
			Если Не НайденныеСтроки.Количество() = 0 Тогда
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					НайденнаяСтрока.Номенклатура   = Строка.Номенклатура;
					НайденнаяСтрока.Характеристика = Строка.Характеристика;
				КонецЦикла;	
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОписанияОповещений

&НаКлиенте
Процедура ОбработкаОтветаПользователяПриПечати(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПечати = ПодготовитьДанныеДляПечати();
	
	Если ДанныеПечати.ОбъектыПечати.Количество() = 0 Тогда
		ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияНетДанныхДляПечати();
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения,,, "СписокКодовМаркировки.КоличествоПечать");
		Возврат;
	КонецЕсли;
	
	ПечатьКодовМаркировкиИСМПТККлиент.НапечататьЭтикеткиИСМП(ДанныеПечати, ЭтотОбъект);
	
	Закрыть();
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаЗакрытияФормыЗаполнения(ДанныеЗаполнения, ПараметрыЗаполнения) Экспорт
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляЗаполнения = ЭтаФорма[ПараметрыЗаполнения.ТаблицаДляЗаполнения];
	
	Если ТипЗнч(ДанныеДляЗаполнения) = Тип("ДанныеФормыДерево") Тогда
		ИтераторЗаполнения = ДанныеДляЗаполнения.ПолучитьЭлементы();
	Иначе
		ИтераторЗаполнения = ДанныеДляЗаполнения;
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из ИтераторЗаполнения Цикл
		Для Каждого ЭлементЗаполнения Из ДанныеЗаполнения Цикл
			СтрокаДанных[ЭлементЗаполнения.Ключ] = ЭлементЗаполнения.Значение;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытиеФормыЗаполненияКоличества(ДанныеЗаполнения, ПараметрыЗаполнения) Экспорт
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляЗаполнения = ЭтаФорма[ПараметрыЗаполнения.ТаблицаДляЗаполнения];
	
	Если ТипЗнч(ДанныеДляЗаполнения) = Тип("ДанныеФормыДерево") Тогда
		ИтераторЗаполнения = ДанныеДляЗаполнения.ПолучитьЭлементы();
	Иначе
		ИтераторЗаполнения = ДанныеДляЗаполнения;
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из ИтераторЗаполнения Цикл
		Для Каждого ЭлементЗаполнения Из ДанныеЗаполнения Цикл
			Если СтрокаДанных.Количество >= ЭлементЗаполнения.Значение Тогда //общее кол-во свободных позволяет распечатать выбранное
				СтрокаДанных[ЭлементЗаполнения.Ключ] = ЭлементЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонЭтикеткиНачалоВыбора_Потребительская(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	
	ОткрытьФорму("Справочник.ХранилищеШаблоновИСМПТК.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

#КонецОбласти
	