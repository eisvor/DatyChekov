#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДокументОснованиеДляЗаполнения = ДанныеЗаполнения.ДокументОснование;
		Иначе
	        ДокументОснованиеДляЗаполнения = Неопределено;
		КонецЕсли;
	Иначе
		ДокументОснованиеДляЗаполнения = ДанныеЗаполнения;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДокументОснованиеДляЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	МассивДокументов = Новый Массив();
	МассивДокументов.Добавить(ДокументОснованиеДляЗаполнения);
	
	ПараметрыЗаполнения = РаботаСДокументамиИСМПТК.ПолучитьПараметрыЗаполненияДокументовИСМПТПоУмолчанию();
	ПараметрыЗаполнения.Вставить("МассивДокументов", МассивДокументов);
		
	ТипДокументаИСМПТ = Документы.УведомлениеОВвозеИзЕАЭСИСМПТК.ПустаяСсылка();
	МассивДанныхДляЗаполнения = РаботаСДокументамиИСМПТК.ПодготовитьДанныеДляЗаполненияДокументаИСМПТ(ПараметрыЗаполнения, ТипДокументаИСМПТ);
	
	Если ТипЗнч(МассивДанныхДляЗаполнения) = Тип("Массив") И МассивДанныхДляЗаполнения.Количество() > 0 Тогда
		
		Для Каждого СтруктураДокумента Из МассивДанныхДляЗаполнения Цикл
			
			Если МассивДанныхДляЗаполнения.Найти(СтруктураДокумента) > 0 Тогда
				НовыйУведомлениеОВвозе = Документы.УведомлениеОВвозеИзЕАЭСИСМПТК.СоздатьДокумент();
			Иначе
				НовыйУведомлениеОВвозе = ЭтотОбъект;
			КонецЕсли; 
		
			//Заполняем шапку документа
			ЗаполнитьЗначенияСвойств(НовыйУведомлениеОВвозе, СтруктураДокумента.Реквизиты[0]);
			
			Если ТипЗнч(ДокументОснованиеДляЗаполнения) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК") Тогда
				НовыйУведомлениеОВвозе.ЭтоКорректировка = Истина;
				НовыйУведомлениеОВвозе.ТипУведомления 	= ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исправленный");
				НовыйУведомлениеОВвозе.НомерИСМПТ 	  	= "";
				НовыйУведомлениеОВвозе.Идентификатор  	= "";
				НовыйУведомлениеОВвозе.ИдентификаторВвозПервичный = ДокументОснованиеДляЗаполнения.Идентификатор;
				НовыйУведомлениеОВвозе.РегистрационныйНомерСвязанногоУведомления = ДокументОснованиеДляЗаполнения.НомерИСМПТ; 
				НовыйУведомлениеОВвозе.ДатаСвязанногоУведомления = ДокументОснованиеДляЗаполнения.ДатаВИСМПТ;
				
				Если Не ДокументОснованиеДляЗаполнения.ДокументыСоответствия.Количество() = 0 Тогда
					НовыйУведомлениеОВвозе.ДокументыСоответствия.Загрузить(ДокументОснованиеДляЗаполнения.ДокументыСоответствия.Выгрузить());
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПереопределяемыхРеквизитов = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьЗначенияПоУмолчаниюДляСозданияУведомленияОВвозеЕАЭСИСМПТ(МассивДокументов);
			ЗаполнитьЗначенияСвойств(НовыйУведомлениеОВвозе, СтруктураПереопределяемыхРеквизитов);
			
			НовыйУведомлениеОВвозе.Состояние = Перечисления.СостоянияДокументовИСМПТК.Сформирован;
			НовыйУведомлениеОВвозе.Статус    = Перечисления.СтатусыДокументовИСМПТК.НеОпределен;
			
			ПерезаполнятьИИНБИНПоставщика = Ложь;
			НалоговыйНомер = Неопределено;
			ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеКонтрагентаИзЕАЭС(ПерезаполнятьИИНБИНПоставщика, НалоговыйНомер, НовыйУведомлениеОВвозе.Поставщик);
			Если ПерезаполнятьИИНБИНПоставщика Тогда
				НовыйУведомлениеОВвозе.ПоставщикИдентификационныйНомер = НалоговыйНомер;
			КонецЕсли;
	
			Если СтруктураДокумента.Свойство("Марки")
				И Не СтруктураДокумента.Марки = Неопределено
				И РаботаСДокументамиИСМПТКПереопределяемый.ВДокументеНужноЗаполнятьМаркиИзОснованияИСМПТ(ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК(), ДокументОснованиеДляЗаполнения) Тогда
				Для Каждого СтрокаТЧ Из СтруктураДокумента.Марки Цикл
					НоваяСтрокаТЧ = НовыйУведомлениеОВвозе.Марки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЧ);
				КонецЦикла;
			КонецЕсли;					 
			Если СтруктураДокумента.Свойство("Товары") 
				И Не СтруктураДокумента.Товары = Неопределено Тогда
				Для Каждого СтрокаТЧ Из СтруктураДокумента.Товары Цикл
					НоваяСтрокаТЧ = НовыйУведомлениеОВвозе.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЧ);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Состояние = РаботаСДокументамиИСМПТК.СостояниеДокументаИСМПТ(ЭтотОбъект);
		
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Автор) Тогда
		ЭтотОбъект.Автор = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ТекущийПользователь();
	КонецЕсли;
	
	ЭтотОбъект.Контрагент = ЭтотОбъект.Поставщик;
		
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Статус) Тогда
		ЭтотОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.НеОпределен");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Номер) Тогда
		ЭтотОбъект.Номер = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьНомерНаПечать(ЭтотОбъект);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторВвозПервичный)
		И ЗначениеЗаполнено(ЭтотОбъект.РегистрационныйНомерСвязанногоУведомления) Тогда
		ЭтотОбъект.ИдентификаторВвозПервичный = ЭтотОбъект.РегистрационныйНомерСвязанногоУведомления;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ТипУведомления = ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исправленный") 
		И ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторВвозПервичный) 
		И ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		
		СсылкаНаУведомлениеПервичный = РаботаСДокументамиИСМПТК.ПолучитьДокументДляОбновленияСвязи(
									   ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК(), ЭтотОбъект.ИдентификаторВвозПервичный, "ИдентификаторВвозИсправленный");
		Если Не СсылкаНаУведомлениеПервичный = Неопределено Тогда
			Попытка
				УведОВвозеИсх = СсылкаНаУведомлениеПервичный.ПолучитьОбъект();
				УведОВвозеИсх.ИдентификаторВвозИсправленный = ЭтотОбъект.Идентификатор;
				УведОВвозеИсх.Записать();
			Исключение
				ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПроизошлаОшибкаПриЗаписиДокументаОснования()
							   + Символы.ПС 
							   + ОписаниеОшибки()
							   + Символы.ПС
							   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации();
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", СсылкаНаУведомлениеПервичный);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
								 
				ТекстОшибки = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаПриЗаписиДокументаСПараметром()
							+ Символы.ПС
							+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, СсылкаНаУведомлениеПервичный);								 
				ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияЗаписьДокумента();
				ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ЗаписываемыйДокумент%", Метаданные.Документы.УведомлениеОВвозеИзЕАЭСИСМПТК.Представление()); 
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ЭтотОбъект.ДокументОснование = Неопределено; 
	ЭтотОбъект.Идентификатор 	 = Неопределено;
	ЭтотОбъект.НомерИСМПТ = Неопределено;
	ЭтотОбъект.ДатаВИСМПТ = Неопределено;
	ЭтотОбъект.Контрагент = Неопределено;

	ЭтотОбъект.ИдентификаторВвозИсправленный = Неопределено;
	ЭтотОбъект.ИдентификаторВвозПервичный 	 = Неопределено;
	ЭтотОбъект.РегистрационныйНомерСвязанногоУведомления = Неопределено;
	ЭтотОбъект.ДатаСвязанногоУведомления  	 = Неопределено;

	ЭтотОбъект.Статус = Перечисления.СтатусыДокументовИСМПТК.НеОпределен; 
	ЭтотОбъект.Состояние = Неопределено;
	ЭтотОбъект.Автор  = Неопределено;
	ЭтотОбъект.Номер  = Неопределено;
	ЭтотОбъект.РегНомерНаБумажномНосителе 	 = Неопределено;
	ЭтотОбъект.ДатаВыпискиНаБумажномНосителе = Неопределено;
		
	ЭтотОбъект.Товары.Очистить();
	ЭтотОбъект.Марки.Очистить();
	ЭтотОбъект.Ошибки.Очистить();
	ЭтотОбъект.ДокументыСоответствия.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//В общем случае не проверяем заполненность реквизитов при записи
	//проверка необходимых реквизитов проходит при отправке документа
	//в случае необходимости можно указать реквизиты проверки отдельно
	//в процедуре УведомлениеОВвозеЕАЭС_ОбработкаПроверкиЗаполнения
	ПроверяемыеРеквизиты.Очистить();
	МассивНепроверяемыхРеквизитов = Новый Массив();
	РаботаСДокументамиИСМПТКПереопределяемый.УведомлениеОВвозеЕАЭС_ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	РаботаСДокументамиИСМПТКПереопределяемый.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
		
КонецПроцедуры

#КонецЕсли
