#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// М-15 (Накладная)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М15";
	КомандаПечати.Представление = НСтр("ru = 'М-15 (Накладная)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// Счет-Фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// ТОРГ-12 (Товарная накладная на возврат).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ-12 (Товарная накладная)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// УПД
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УПД";
	КомандаПечати.Представление = НСтр("ru = 'УПД (Универсальный передаточный документ)'");
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";

	// Форма З-2
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "З2";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на отпуск запасов (З-2)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 70;
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа.
//
Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		ОрганизацияПолучатель = Выборка.ОрганизацияПолучатель;
	Иначе
		Организация = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, ОрганизацияПолучатель",
		Организация,
		ОрганизацияПолучатель);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.АктОРасхожденияхПриПриемкеТоваров - документ для инициализации данных.
//  ДополнительныеСвойства - Структура - структура дополнительных свойств.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.УчитыватьНДС КАК УчитыватьНДС,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаТоваровПослеРеализации)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПередачаТоваровПослеРеализации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПередачаТоваровДоРеализации)
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПриемТоваровОтДругойОрганизации) КАК АналитикаХозяйственнойОперацииПолучатель,
	|	(НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",       ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	ТекстЗапроса = "";
	
	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                       КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                                            КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                                      КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры                      КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика                                    КАК Характеристика,
	|	ТаблицаТовары.Количество                                        КАК Количество,
	|	ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС * &ЦенаВключаетНДС КАК СуммаСНДС,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&Организация                           КАК ОрганизацияОтгрузки,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары                        КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|	(НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаТаблицаСерийныхНомеров();
	Запрос.Текст = ТекстЗапроса;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций", МассивРезультатов[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров",   МассивРезультатов[9].Выгрузить());
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит сформированные табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - для заполнения письма при отправке печатной формы по электронной почте.
//                    см. РаботаСПочтовымиСообщениямиКлиент.РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТОРГ12",
			НСтр("ru = 'ТОРГ-12 (Товарная накладная)'"),
			ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"М15", 
			НСтр("ru = 'М-15 (Накладная)'"),
			ПечатьМ15(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "З2") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "З2",
				ПараметрыПечати.Представление,
				ПечатьЗ2(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
			
КонецПроцедуры

// Получает данные для печатной формы Счета-фактуры.
//
// Параметры:
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати.
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать.
//
// Возвращаемое значение:
//  Структура - структура данных для печати.
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.Склад КАК Склад,
	|	ДанныеДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");

	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц,
										ИспользоватьУчетИмпортныхТоваров,
										ИспользоватьКомиссионнуюТорговлю);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(ТаблицаОснований.Ссылка.НомерИсправления) КАК НомерИсправления
	|ПОМЕСТИТЬ НомераИсправленийСчетовФактурПолученных
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В(&МассивОбъектов)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОснований.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка.Организация КАК Организация,
	|	ТаблицаОснований.Ссылка.Исправление КАК Исправление,
	|	ТаблицаОснований.Ссылка.Номер КАК Номер,
	|	ТаблицаОснований.Ссылка.ДатаСоставления КАК Дата,
	|	ТаблицаОснований.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаОснований.Ссылка.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаПолученныхСчетовФактур
	|ИЗ
	|	НомераИсправленийСчетовФактурПолученных КАК НомераИсправленийСчетовФактурПолученных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|		ПО НомераИсправленийСчетовФактурПолученных.ДокументОснование = ТаблицаОснований.ДокументОснование
	|			И НомераИсправленийСчетовФактурПолученных.НомерИсправления = ТаблицаОснований.Ссылка.НомерИсправления
	|			И (НЕ ТаблицаОснований.Ссылка.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(СчетаФактуры.Номер, НЕОПРЕДЕЛЕНО) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, НЕОПРЕДЕЛЕНО) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ЕСТЬNULL(СчетаФактуры.Валюта, НЕОПРЕДЕЛЕНО) КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ФильтрПоДокументу
	|		ПО ДанныеДокумента.Ссылка = ФильтрПоДокументу.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ДанныеДокумента.Ссылка = СчетаФактуры.ДокументОснование
	|			И ДанныеДокумента.Организация = СчетаФактуры.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаТоваров.Ссылка КАК Ссылка,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьУслуги,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьТовары
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаТоваров.Ссылка) КАК НоменклатураДокументов
	|		ПО ДанныеДокумента.Ссылка = НоменклатураДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,";
	Если ИспользоватьУчетИмпортныхТоваров
		Или ИспользоватьКомиссионнуюТорговлю Тогда
		ТекстЗапроса = ТекстЗапроса+"
		|	ТаблицаДокумента.ПредставлениеГТД КАК НомерГТД,
		|	ТаблицаДокумента.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
		|	ТаблицаДокумента.ПредставлениеСтраны КАК СтранаПроисхождения,";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса+"
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[2];
	РезультатПоТабличнойЧасти = МассивРезультатов[3];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Получает данные для печатной формы УПД.
//
// Параметры:
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати.
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать.
//
// Возвращаемое значение:
//  Структура - структура данных для печати.
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Организация          КАК Организация,
	|	ДанныеДокументов.Склад                КАК Склад,
	|	ДанныеДокументов.ЦенаВключаетНДС      КАК ЦенаВключаетНДС
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц,
										ИспользоватьУчетИмпортныхТоваров,
										ИспользоватьКомиссионнуюТорговлю);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(ТаблицаОснований.Ссылка.НомерИсправления) КАК НомерИсправления
	|ПОМЕСТИТЬ НомераИсправленийСчетовФактурПолученных
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В(&МассивОбъектов)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОснований.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка.Организация КАК Организация,
	|	ТаблицаОснований.Ссылка.Исправление КАК Исправление,
	|	ТаблицаОснований.Ссылка.Номер КАК Номер,
	|	ТаблицаОснований.Ссылка.ДатаСоставления КАК Дата,
	|	ТаблицаОснований.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаОснований.Ссылка.Валюта КАК Валюта
	|ПОМЕСТИТЬ ТаблицаПолученныхСчетовФактур
	|ИЗ
	|	НомераИсправленийСчетовФактурПолученных КАК НомераИсправленийСчетовФактурПолученных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|		ПО НомераИсправленийСчетовФактурПолученных.ДокументОснование = ТаблицаОснований.ДокументОснование
	|			И НомераИсправленийСчетовФактурПолученных.НомерИсправления = ТаблицаОснований.Ссылка.НомерИсправления
	|			И (НЕ ТаблицаОснований.Ссылка.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ВЫБОР
	|		КОГДА СчетаФактуры.Номер ЕСТЬ NULL 
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУПД,
	|	ДанныеДокумента.УчитыватьНДС КАК УчитыватьНДС,
	|	ДанныеДокумента.Номер КАК НомерДокументаОтгрузки,
	|	ДанныеДокумента.Дата КАК ДатаДокументаОтгрузки,
	|	ЕСТЬNULL(СчетаФактуры.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, ДанныеДокумента.Дата) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ЕСТЬNULL(СчетаФактуры.Валюта, НЕОПРЕДЕЛЕНО) КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	НЕОПРЕДЕЛЕНО КАК Основание,
	|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ДанныеДокумента.Ссылка = СчетаФактуры.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|		ПО ДанныеДокумента.Ссылка = НоменклатураДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[3];
	РезультатПоТабличнойЧасти = МассивРезультатов[4];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов
//  ИспользоватьУчетИмпортныхТоваров - Булево - признак учета импортных товаров.
//  ИспользоватьКомиссионнуюТорговлю - Булево - признак комиссионной торговли.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ИспользоватьУчетИмпортныхТоваров = Ложь, ИспользоватьКомиссионнуюТорговлю = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	ТаблицаТоваров.Сумма КАК Сумма,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ДанныеДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТовар,
	|	"""" КАК ПредставлениеГТД,
	|	"""" КАК СтранаПроисхожденияКод,
	|	"""" КАК ПредставлениеСтраны
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL )
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL 
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ТабОбщаяДвижений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабОбщаяДвижений.Номенклатура,
	|	ТабОбщаяДвижений.СерийныйНомер,
	|	ТабОбщаяДвижений.Количество,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТабОбщаяДвижений.Период,
	|	&Склад КАК Отправитель,
	|	&Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Получатель
	|ИЗ
	|	ТабОбщаяДвижений КАК ТабОбщаяДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОбщаяДвижений.Номенклатура,
	|	ТабОбщаяДвижений.СерийныйНомер,
	|	ТабОбщаяДвижений.Количество,
	|	&АналитикаХозяйственнойОперацииПолучатель,
	|	ТабОбщаяДвижений.Период,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	&ОрганизацияПолучатель,
	|	&Склад
	|ИЗ
	|	ТабОбщаяДвижений КАК ТабОбщаяДвижений";
	
	Возврат ТекстЗапроса;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПечатьМ15(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");     		
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_М15";	
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Номер                     КАК Номер,
	|	Документ.Дата                      КАК ДатаСоставления,
	|	Документ.Дата                      КАК ДатаДокумента,
	|	Документ.Организация               КАК Организация,
	|	Документ.Организация               КАК ЮрФизЛицо,
	|	Документ.Организация               КАК Руководители,
	|	Документ.Организация.Префикс       КАК Префикс,
	|	Документ.Склад                     КАК Склад,
	|	Документ.Склад.Наименование        КАК СкладНаименование,
	|	Документ.Ответственный             КАК ОтветственноеЛицо,
	|	Документ.ОрганизацияПолучатель.Код КАК КонтрагентКод,
	|	Документ.ОрганизацияПолучатель     КАК Контрагент,
	|	Документ.АдресДоставки             КАК АдресДоставки,
	|	Документ.УчитыватьНДС              КАК УчитыватьНДС,
	|	Документ.ЦенаВключаетНДС           КАК ЦенаВключаетНДС,
	|	Документ.Ссылка                    КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Ссылка,
	|	Документ.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Характеристика) КАК ХарактеристикаПредставление,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.КоличествоПринято,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Номенклатура КАК Номенклатура,
	|		Товары.Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ВЫБОР
	|			КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения.Код)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения.Код)
	|		КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|		СУММА(Товары.Количество) КАК КоличествоПринято,
	|		СУММА(Товары.Цена) КАК Цена,
	|		СУММА(Товары.Сумма) КАК Сумма,
	|		СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В(&МассивОбъектов)
	|		И Товары.Ссылка.Проведен
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Номенклатура,
	|		Товары.Характеристика,
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ВЫБОР
	|			КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Товары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения.Код)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Номенклатура.ЕдиницаИзмерения.Код)
	|		КОНЕЦ) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);	
	Результаты = Запрос.ВыполнитьПакет();                       	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М15");
	
	ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");  	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	СтрокНаСтранице = 24;
	СтрокШапки      = 9;
	СтрокПодвала    = 3;
	НомерСтраницы   = 1;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.ЮрФизЛицо, ВыборкаПоДокументам.ДатаСоставления);
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер, Ложь, Истина);
		
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Контрагент, ВыборкаПоДокументам.ДатаСоставления), "ПолноеНаименование,");
		ОбластьШапка.Параметры.КонтрагентНаименование = ПредставлениеКонтрагента;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		КоличествоСтрок = ВыборкаПоСтрокамТЧ.Количество();
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// Инициализация итогов в документе.
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Номер            = 0;
		
		// Выводим многострочную часть документа.
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Номер = Номер + 1;
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = (СтрокШапки + Номер - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				Или ((ПереноситьПоследнююСтроку = 1) И (Номер = КоличествоСтрок)) Тогда
				
				НомерСтраницы	= НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли; 	
			
			ОбластьЗаголовокТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			
			СуммаСНДС   = (ВыборкаПоСтрокамТЧ.Сумма + ?(ВыборкаПоДокументам.ЦенаВключаетНДС, 0, ВыборкаПоСтрокамТЧ.СуммаНДС));
			СуммаНДС    = ВыборкаПоСтрокамТЧ.СуммаНДС;
			СуммаБезНДС = СуммаСНДС  - СуммаНДС;
			
			Количество      = ВыборкаПоСтрокамТЧ.КоличествоПринято;
			Цена            = СуммаБезНДС / Количество;
			
			ОбластьСтрока.Параметры.Количество        = Количество;
			ОбластьСтрока.Параметры.СуммаСНДС         = СуммаСНДС;
			ОбластьСтрока.Параметры.СуммаБезНДС       = СуммаБезНДС;
			ОбластьСтрока.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьСтрока.Параметры.Цена              = Цена;
			ОбластьСтрока.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ИтогоКоличествоПринято = ИтогоКоличествоПринято + Количество;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + СуммаБезНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + СуммаСНДС;
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ВыборкаПоДокументам.Руководители, ВыборкаПоДокументам.ДатаДокумента,);
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
		// Главный бухгалтер
		ОбластьПодвал.Параметры.ФИОГлавБухгалтера = Бухгалтер;
		
		ФИООтпускРазрешил       = Руководитель;
		ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
		
		ОбластьПодвал.Параметры.ФИОРуководителя       = ФИООтпускРазрешил;
		ОбластьПодвал.Параметры.ДолжностьРуководителя = ДолжностьОтпускРазрешил;
		
		// Отпуск товара произвел
		ФамилияИмяОтчествоФизЛица     = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ВыборкаПоДокументам.ОтветственноеЛицо, ВыборкаПоДокументам.ДатаДокумента);
		
		ФамилияИмяОтчествоОтпускПроизвел = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
		ФИООтпускПроизвел                = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтпускПроизвел);
		
		ОбластьПодвал.Параметры.ФИОКладовщика       = ФИООтпускПроизвел;
		
		// Выводим итоги по документу
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
		ОбластьПодвал.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтогоВсегоСНДС);
		ОбластьПодвал.Параметры.ИтогНДС       = ИтогоВсегоСНДС - ИтогоСуммаБезНДС;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ТабличныйДокумент.ПолеСверху         = 20;
	ТабличныйДокумент.ПолеСлева          = 20;
	ТабличныйДокумент.ПолеСнизу          = 20;
	ТабличныйДокумент.ПолеСправа         = 10;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	Если ПустаяСтрока(КолонкаКодов) Тогда
		КолонкаКодов = "Код";		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументКПечати.Ссылка                                                 КАК Ссылка,
	|	ДокументКПечати.Номер                                                  КАК Номер,
	|	ДокументКПечати.Дата                                                   КАК Дата,
	|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Контрагент,
	|	ДокументКПечати.Организация                                            КАК Организация,
	|	ДокументКПечати.Организация                                            КАК Руководители,
	|	ДокументКПечати.Организация.Префикс                                    КАК Префикс,
	|	ДокументКПечати.Организация                                            КАК Грузоотправитель,
	|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Грузополучатель,
	|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Покупатель,
	|	ДокументКПечати.Организация                                            КАК Поставщик,
	|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Плательщик,
	|	ДокументКПечати.Ответственный.ФизическоеЛицо                           КАК ОтветственноеЛицо,
	|	ДокументКПечати.ЦенаВключаетНДС                                        КАК ЦенаВключаетНДС,
	|	ДокументКПечати.АдресДоставки                                          КАК АдресДоставки,
	|	ДокументКПечати.УчитыватьНДС                                           КАК УчитыватьНДС,
	|	ДокументКПечати.ДоверенностьНомер                                      КАК ДоверенностьНомер,
	|	ДокументКПечати.ДоверенностьДата                                       КАК ДоверенностьДата,
	|	ДокументКПечати.ДоверенностьВыдана                                     КАК ДоверенностьВыдана,
	|	ДокументКПечати.ДоверенностьЛицо                                       КАК ДоверенностьЧерезКого
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументКПечати
	|
	|ГДЕ
	|	ДокументКПечати.Ссылка В (&МассивДокументов)
	|	И ДокументКПечати.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;		
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК БазоваяЕдиницаНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление                         КАК ВидУпаковки,
	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
	|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто,
	|	ЛОЖЬ                                                                       КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			Товары.Упаковка.Коэффициент
	|		КОНЕЦ КАК Коэффициент,
	|
	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			Товары.Упаковка.ЕдиницаИзмерения
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|
	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			Товары.Упаковка.Коэффициент
	|		КОНЕЦ КАК КоэффициентМест,
	|
	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			Товары.Упаковка.ЕдиницаИзмерения
	|		КОНЕЦ КАК ЕдиницаИзмеренияМест,
	|
	|		ВЫБОР КОГДА Товары.Упаковка.Вес ЕСТЬ NULL ТОГДА
	|			Товары.Количество * Товары.Номенклатура.Вес
	|		ИНАЧЕ
	|			Товары.КоличествоУпаковок * Товары.Упаковка.Вес
	|		КОНЕЦ КАК МассаБрутто,
	|
	|		Товары.Характеристика     КАК Характеристика,
	|		Товары.СтавкаНДС          КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА
	|				Товары.КоличествоУпаковок = 0
	|			ТОГДА
	|				Товары.Цена
	|			ИНАЧЕ
	|				Товары.Сумма / Товары.КоличествоУпаковок
	|		КОНЕЦ КАК Цена,
	|		Товары.КоличествоУпаковок КАК Количество,
	|		Товары.КоличествоУпаковок КАК КоличествоМест,
	|		Товары.Сумма              КАК Сумма,
	|		Товары.СуммаНДС           КАК СуммаНДС,
	|		Товары.НомерСтроки        КАК НомерСтроки
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|	ГДЕ
	|		Товары.Ссылка В (&МассивДокументов)
	|		И Товары.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_ТОРГ12";
	
	ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
	
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 6;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ12");
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата);
		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ОбластьШапка.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
		
		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
			
			ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		Иначе
			
			ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
			
		КонецЕсли;
		
		ОбластьШапка.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьШапка.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		ОбластьШапка.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,БанковскиеРеквизиты");
		
		// Выводим коды
		ОбластьШапка.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
		ОбластьШапка.Параметры.ВидДеятельностиПоОКДП      = "";
		ОбластьШапка.Параметры.ГрузополучательПоОКПО      = СведенияОГрузополучателе.КодПоОКПО;
		ОбластьШапка.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
		ОбластьШапка.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
		ОбластьШапка.Параметры.ОснованиеНомер             = "";
		ОбластьШапка.Параметры.ОснованиеДата              = "";
		ОбластьШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
		ОбластьШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		НомерСтраницы = 1;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по странице.
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМест", 0);
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
		ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Мест", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		ДанныеСтроки.Вставить("МассаБрутто", 0);
		ДанныеСтроки.Вставить("МассаНетто", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		КоличествоСтрок = СтрокаТовары.Количество();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
			ОбластьСтрока.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
			
			ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
					ДанныеСтроки.МассаБрутто = 0;
				Иначе
					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
				КонецЕсли;
			КонецЕсли;
			
			ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					
				КонецЕсли;
				
				Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
					ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
					ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
					ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
					ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
					ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			// Увеличим итоги по странице.
			ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
			ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
			ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
			
		КонецЦикла;
		
		// Выводим итоги по последней странице.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом.
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДЛФ=DD");
		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
				
		Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
			
			ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
			
			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
		ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;


КонецФункции

// Формируем печатную форму З-2 "НАКЛАДНАЯ НА ОТПУСК ЗАПАСОВ НА СТОРОНУ"
//	
Функция ПечатьЗ2(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПередачаТоваровМеждуОрганизациями.Номер,
	|	ПередачаТоваровМеждуОрганизациями.Дата КАК ДатаДокумента,
	|	ПередачаТоваровМеждуОрганизациями.Организация КАК Организация,
	|	ПередачаТоваровМеждуОрганизациями.ОрганизацияПолучатель КАК Получатель,
	|	ПередачаТоваровМеждуОрганизациями.Склад,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровМеждуОрганизациями.Ответственный.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Ответственный.ФизическоеЛицо
	|		ИНАЧЕ ПередачаТоваровМеждуОрганизациями.Ответственный
	|	КОНЕЦ КАК Ответственный,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьНомер КАК Доверенность,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьЛицо КАК ЧерезКого,
	|	ПередачаТоваровМеждуОрганизациями.ДоверенностьДата КАК ДоверенностьДата,
	|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|ГДЕ
	|	ПередачаТоваровМеждуОрганизациями.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДатаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапросПоТоварам.Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапросПоТоварам.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
	|	ВложенныйЗапросПоТоварам.Номенклатура.Код КАК Код,
	|	ВложенныйЗапросПоТоварам.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапросПоТоварам.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапросПоТоварам.Количество КАК Количество,
	|	ВложенныйЗапросПоТоварам.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапросПоТоварам.Цена,
	|	ВложенныйЗапросПоТоварам.Сумма КАК Сумма,
	|	ВложенныйЗапросПоТоварам.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапросПоТоварам.СуммаСНДС КАК СуммаСНДС,
	|	ВложенныйЗапросПоТоварам.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапросПоТоварам.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПередачаТоваровМеждуОрганизациями.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациями.Упаковка.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациями.Номенклатура.ЕдиницаИзмерения)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ПередачаТоваровМеждуОрганизациями.Цена КАК Цена,
	|		ПередачаТоваровМеждуОрганизациями.СтавкаНДС КАК СтавкаНДС,
	|		СУММА(ПередачаТоваровМеждуОрганизациями.Количество) КАК Количество,
	|		СУММА(ПередачаТоваровМеждуОрганизациями.Сумма) КАК Сумма,
	|		СУММА(ПередачаТоваровМеждуОрганизациями.СуммаНДС) КАК СуммаНДС,
	|		СУММА(ВЫБОР
	|				КОГДА ПередачаТоваровМеждуОрганизациями.Ссылка.УчитыватьНДС
	|							И ПередачаТоваровМеждуОрганизациями.Ссылка.ЦенаВключаетНДС
	|						ИЛИ НЕ ПередачаТоваровМеждуОрганизациями.Ссылка.УчитыватьНДС
	|					ТОГДА ПередачаТоваровМеждуОрганизациями.Сумма
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПередачаТоваровМеждуОрганизациями.Ссылка.УчитыватьНДС
	|								И НЕ ПередачаТоваровМеждуОрганизациями.Ссылка.ЦенаВключаетНДС
	|							ТОГДА ПередачаТоваровМеждуОрганизациями.Сумма + ПередачаТоваровМеждуОрганизациями.СуммаНДС
	|					КОНЕЦ
	|			КОНЕЦ) КАК СуммаСНДС,
	|		МИНИМУМ(ПередачаТоваровМеждуОрганизациями.НомерСтроки) КАК НомерСтроки,
	|		ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ПередачаТоваровМеждуОрганизациями
	|	ГДЕ
	|		ПередачаТоваровМеждуОрганизациями.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПередачаТоваровМеждуОрганизациями.Номенклатура,
	|		ПередачаТоваровМеждуОрганизациями.Цена,
	|		ПередачаТоваровМеждуОрганизациями.СтавкаНДС,
	|		ПередачаТоваровМеждуОрганизациями.Ссылка,
	|		ВЫБОР
	|			КОГДА ПередачаТоваровМеждуОрганизациями.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациями.Упаковка.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПередачаТоваровМеждуОрганизациями.Номенклатура.ЕдиницаИзмерения)
	|		КОНЕЦ) КАК ВложенныйЗапросПоТоварам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаСНДС)
	|ПО
	|	Ссылка";
	
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_З2");

	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ПолеСверху         = 0;
	ТабличныйДокумент.ПолеСлева          = 10;
	ТабличныйДокумент.ПолеСнизу          = 0;
	ТабличныйДокумент.ПолеСправа         = 0;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_З2";
	
	ПервыйДокумент = Истина;

	// Выводим общие реквизиты шапки
	ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицы 	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрокаТаблицы 		= Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьСтрокаТаблицыИтого 	= Макет.ПолучитьОбласть("СтрокаТаблицыИтого");
	ОбластьИтого 				= Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал 				= Макет.ПолучитьОбласть("Подвал");
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьШапка.Параметры.ПредставлениеОтправителя = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьШапка.Параметры.ОрганизацияРНН_БИН		= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ИНН,", Ложь, "ru");
		ОбластьШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер, ПустаяСтрока(ПолучитьФункциональнуюОпцию("ПрефиксИнформационнойБазы")), Истина);
		
		ОтветственныйДляПечати  = "";
		ДолжностьОтветственного = "";
		
		Если ТипЗнч(ВыборкаПоДокументам.Ответственный) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ДанныеОтветственного 	= ФормированиеПечатныхФормСервер.ДанныеФизЛица(ВыборкаПоДокументам.Ответственный, ВыборкаПоДокументам.ДатаДокумента); 
			ОтветственныйДляПечати 	= ДанныеОтветственного.Представление;
			ДолжностьОтветственного = ДанныеОтветственного.Должность;
		Иначе
			ОтветственныйДляПечати 	= ВыборкаПоДокументам.Ответственный;
		КонецЕсли;	
		
		ОбластьШапка.Параметры.ОтветственныйЗаПоставку = ОтветственныйДляПечати;
		
		ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.ДатаДокумента), "ПолноеНаименование,");
		ОбластьШапка.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
	
		ТабличныйДокумент.Вывести(ОбластьШапка);

		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы.Параметры.Валюта = "тенге";
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		КоличествоСтрок = 0;
		
		
		Если ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
			
			ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоСтрокамТЧ.Следующий() = 1 Цикл
				
				КоличествоСтрок = КоличествоСтрок + 1;
				
				
				Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
					Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластьСтрокаТаблицы) Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				КонецЕсли;	
				
				ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ОбластьСтрокаТаблицы.Параметры.НомерПП 				= ВыборкаПоСтрокамТЧ.НомерСтроки;
				ОбластьСтрокаТаблицы.Параметры.ТоварНаименование 	= СокрЛП(ВыборкаПоСтрокамТЧ.Товар);  
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Выводим итоги по таблице		
		ОбластьСтрокаТаблицыИтого.Параметры.КоличествоИтого = ВыборкаПоТабличнымЧастям.Количество;
		ОбластьСтрокаТаблицыИтого.Параметры.СуммаСНДСИтого 	= ВыборкаПоТабличнымЧастям.СуммаСНДС;
		ОбластьСтрокаТаблицыИтого.Параметры.СуммаНДСИтого 	= ВыборкаПоТабличнымЧастям.СуммаНДС;
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыИтого); 
		
		
		// Выводим итоги по документу
		ОбластьИтого.Параметры.Валюта = "тенге";
		
		ОбластьИтого.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(ВыборкаПоТабличнымЧастям.Количество, ,",,,,,,,,0");
		ОбластьИтого.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(?(ЗначениеЗаполнено(ВыборкаПоТабличнымЧастям.СуммаСНДС), ВыборкаПоТабличнымЧастям.СуммаСНДС,0));
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		// вывод подписей
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьПодвал.Параметры.ДоверенностьНомер = СокрЛП(ВыборкаПоДокументам.Доверенность);
		ОбластьПодвал.Параметры.ДоверенностьДата = ВыборкаПоДокументам.ДоверенностьДата;
		ОбластьПодвал.Параметры.ЧерезКого    = СокрЛП(ВыборкаПоДокументам.ЧерезКого);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента,);
		Бухгалтер    = ?(НЕ ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер), "Не предусмотрен", Руководители.ГлавныйБухгалтер);
		ОбластьПодвал.Параметры.ГлБухгалтер = Бухгалтер;
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.Ответственный) Тогда
			ДанныеМОЛ = ФормированиеПечатныхФормСервер.ДанныеФизЛица(ВыборкаПоДокументам.Ответственный, ВыборкаПоДокументам.ДатаДокумента);
			ОбластьПодвал.Параметры.ОтпускРазрешил 			= ДанныеМОЛ.Представление;		
			ОбластьПодвал.Параметры.ОтпускРазрешилДолжность = ДанныеМОЛ.Должность;		
			ОбластьПодвал.Параметры.МОЛОтпустил 			= ДанныеМОЛ.Представление;		
		КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;

	Возврат ТабличныйДокумент; 
	
КонецФункции //ПечатьЗ2

#КонецОбласти

#КонецЕсли
