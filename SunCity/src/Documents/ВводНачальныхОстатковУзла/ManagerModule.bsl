#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет, возможно ли ввести документ ввода остатков.
//
// Параметры:
//  Узел - ПланОбменаСсылка - план обмена для ввода остатков.
//
// Возвращаемое значение:
//  Булево - признак возможности ввода.
//
Функция ВозможноВвестиВводОстатковДляУзла(Узел) Экспорт
	
	МодульОбменДаннымиПовтИсп = ОбщегоНазначения.ОбщийМодуль("ОбменДаннымиПовтИсп");
	ИмяУзла = МодульОбменДаннымиПовтИсп.ПолучитьИмяПланаОбмена(Узел);
	ПредопределенныйУзел = МодульОбменДаннымиПовтИсп.ПолучитьЭтотУзелПланаОбмена(ИмяУзла);
	ВозможностьВвода = ПредопределенныйУзел <> Узел И ПланыОбмена.ГлавныйУзел() <> Узел;
	
	Возврат ВозможностьВвода;

КонецФункции

// Проверяет, возможно ли провести документ ввода остатков.
//
// Параметры:
//  Узел - ПланОбменаСсылка - план обмена для проведения остатков.
//
// Возвращаемое значение:
//  Булево - признак возможности ввода.
//
Функция ВозможноПровестиВводОстатковВУзле(Узел) Экспорт
	
	МассивДоступныхУзлов = Новый Массив;
	МассивДоступныхУзлов.Добавить(ПланыОбмена.ПоМагазину.ЭтотУзел());
	МассивДоступныхУзлов.Добавить(ПланыОбмена.ОбменРозницаРозница.ЭтотУзел());
	МассивДоступныхУзлов.Добавить(ПланыОбмена.АвтономнаяРабота.ЭтотУзел());
	
	Возврат НЕ МассивДоступныхУзлов.Найти(Узел) = Неопределено; 
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВводНачальныхОстатковУзла - документ начальных остатков.
//  ДополнительныеСвойства - Структура - дополнительные свойства выполнения операции.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Узел КАК Узел
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ФормироватьДвижения", ВозможноПровестиВводОстатковВУзле(Реквизиты.Узел));
	Запрос.УстановитьПараметр("УчетБезналичныхДС",   ПолучитьФункциональнуюОпцию("ВестиУчетБезналичныхДенежныхСредств"));
	Запрос.УстановитьПараметр("ДатаНачалаУчетаБезналичныхДС", Константы.ДатаНачалаУчетаБезналичныхДенежныхСредств.Получить());
	
	Запрос.Текст = 
	"//0 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ТоварыНаСкладах КАК ТаблицаТовары
	|ГДЕ 
	|   ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаДенежныеСредстваККМ
	|ВЫБРАТЬ
	|	ТаблицаДенежныеСредства.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаДенежныеСредства.КассаККМ КАК КассаККМ,
	|	ТаблицаДенежныеСредства.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаДенежныеСредства.Сумма КАК Сумма
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ДенежныеСредстваККМ КАК ТаблицаДенежныеСредства
	|ГДЕ 
	|   ТаблицаДенежныеСредства.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаЦеныНоменклатуры
	|ВЫБРАТЬ
	|   &Период КАК Период,
	|   ЦеныНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Упаковка КАК Упаковка,
	|	ЦеныНоменклатуры.Цена КАК Цена
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ 
	|   &ФормироватьДвижения
	|   И ЦеныНоменклатуры.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаДействующиеЦеныНоменклатуры
	|ВЫБРАТЬ
	|   &Период КАК Период,
	|   ДействующиеЦеныНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	ДействующиеЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ДействующиеЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	ДействующиеЦеныНоменклатуры.Магазин КАК ОбъектЦенообразования,
	|	ДействующиеЦеныНоменклатуры.Упаковка КАК Упаковка,
	|	ДействующиеЦеныНоменклатуры.Цена КАК Цена
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ДействующиеЦеныНоменклатуры КАК ДействующиеЦеныНоменклатуры
	|ГДЕ 
	|   ДействующиеЦеныНоменклатуры.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаДенежныеСредстваНаличные
	|ВЫБРАТЬ
	|	ТаблицаДенежныеСредстваНаличные.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаДенежныеСредстваНаличные.Касса КАК Касса,
	|	ТаблицаДенежныеСредстваНаличные.Касса.Магазин КАК Магазин,
	|	ТаблицаДенежныеСредстваНаличные.Сумма КАК Сумма,
	|	ТаблицаДенежныеСредстваНаличные.Организация КАК Организация,
	|	ТаблицаДенежныеСредстваНаличные.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ДенежныеСредстваНаличные КАК ТаблицаДенежныеСредстваНаличные
	|ГДЕ 
	|   ТаблицаДенежныеСредстваНаличные.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаДенежныеСредстваБезналичные
	|ВЫБРАТЬ
	|	ТаблицаДенежныеСредстваБезналичные.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаДенежныеСредстваБезналичные.БанковскийСчет КАК БанковскийСчет,
	|	ТаблицаДенежныеСредстваБезналичные.Сумма КАК Сумма,
	|	ТаблицаДенежныеСредстваБезналичные.Организация КАК Организация
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ДенежныеСредстваБезналичные КАК ТаблицаДенежныеСредстваБезналичные
	|ГДЕ 
	|	ТаблицаДенежныеСредстваБезналичные.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|	И &УчетБезналичныхДС
	|	И &ДатаНачалаУчетаБезналичныхДС <= &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 6 ТаблицаТоварыОрганизаций
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Контрагент               КАК Поставщик,
	|	ТаблицаТовары.Договор                  КАК Договор,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ         КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.КоличествоПоРНПТ > 0
	|		ТОГДА СуммаПоРНПТ / КоличествоПоРНПТ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентСтоимостиРНПТ,
	|	ТаблицаТовары.Организация              КАК Организация
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ТоварыОрганизаций КАК ТаблицаТовары
	|ГДЕ 
	|   ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 7 ТаблицаСебестоимостьНоменклатуры
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Магазин                  КАК Магазин,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Цена                     КАК Цена
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.СебестоимостьНоменклатуры КАК ТаблицаТовары
	|ГДЕ 
	|   ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 8 ТаблицаТоварыКПоступлению
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|   ТаблицаТовары.Ссылка                   КАК ДокументОснование
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ТоварыКПоступлению КАК ТаблицаТовары
	|ГДЕ 
	|   ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 9 ТаблицаТоварыКОтгрузке
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Ссылка                   КАК ДокументОснование
	|ИЗ
	|	Документ.ВводНачальныхОстатковУзла.ТоварыКОтгрузке КАК ТаблицаТовары
	|ГДЕ 
	|   ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////";
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"            , Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваККМ"        , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЦеныНоменклатуры"           , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДействующиеЦеныНоменклатуры", Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваНаличные"   , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваБезналичные", Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"          , Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьНоменклатуры"  , Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению"         , Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"            , Результат[9].Выгрузить());
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Формирует документы ввода начальных остатков для узла.
//
// Параметры:
//   ДанныеЗаполнения - Структура - параметры для формирования документов:
//     * УзелОбмена - ПланОбменаСсылка - узел, для которого будут сформированы остатки;
//     * КодУзла - Строка - код узла плана обмена;
//     * ДатаНачалаВыгрузкиДокументов - Дата - дата формирования остатков;
//     * Магазины - Массив - СправочникСсылка.Магазины, по которым будут сформированы остатки;
//     * Комментарий - Строка - произвольный комментарий для документов;
//
Процедура СформироватьДокументВводаОстатковДляУзла(ДанныеЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УзелОбмена", ДанныеЗаполнения.УзелОбмена);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВводНачальныхОстатковУзла.Ссылка КАК ВводНачальныхОстатковУзла,
		|	ВводНачальныхОстатковУзла.Дата КАК Дата,
		|	ВводНачальныхОстатковУзла.КодУзлаОбмена КАК КодУзлаОбмена
		|ИЗ
		|	Документ.ВводНачальныхОстатковУзла КАК ВводНачальныхОстатковУзла
		|ГДЕ
		|	ВводНачальныхОстатковУзла.Узел = &УзелОбмена
		|	И НЕ ВводНачальныхОстатковУзла.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	
	ДокументВводОстатков = Неопределено;
	ВыборкаДокументыВводаОстатков = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокументыВводаОстатков.Следующий() Цикл
		Если НЕ (ЗначениеЗаполнено(ДанныеЗаполнения.ДатаНачалаВыгрузкиДокументов)
			И ДокументВводОстатков = Неопределено) Тогда
			// Пометим на удаление документ ввода остатков.
			ДокументВыборки = ВыборкаДокументыВводаОстатков.ВводНачальныхОстатковУзла.ПолучитьОбъект();
			ДокументВыборки.УстановитьПометкуУдаления(Истина);
		Иначе
			ДокументВводОстатков = ВыборкаДокументыВводаОстатков.ВводНачальныхОстатковУзла.ПолучитьОбъект();
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения.ДатаНачалаВыгрузкиДокументов) Тогда
		Возврат;
	ИначеЕсли ДокументВводОстатков = Неопределено Тогда
		ДокументВводОстатков = Документы.ВводНачальныхОстатковУзла.СоздатьДокумент();
	КонецЕсли;
	
	// Получим данные для заполнения документа ввода остатков.
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивМагазинов", ДанныеЗаполнения.Магазины);
	Запрос.УстановитьПараметр("ДатаДокумента",
		Новый Граница(ДанныеЗаполнения.ДатаНачалаВыгрузкиДокументов, ВидГраницы.Включая));
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПравилаЦенообразованияЦеновыеГруппы.ВидЦен.Ссылка 	КАК ВидЦены,
		|	Номенклатура.Ссылка 								КАК Номенклатура
		|ПОМЕСТИТЬ ВременнаяТаблицаВидовЦен
		|ИЗ
		|	Справочник.Магазины КАК Магазины
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилаЦенообразованияЦеновыеГруппы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|			ПО (Номенклатура.ЦеноваяГруппа = ПравилаЦенообразованияЦеновыеГруппы.ЦеноваяГруппа)
		|		ПО (Магазины.ПравилоЦенообразования = ПравилаЦенообразованияЦеновыеГруппы.Ссылка)
		|ГДЕ
		|	Магазины.Ссылка В(&МассивМагазинов)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Магазины.ПравилоЦенообразования.ВидЦен,
		|	NULL
		|ИЗ
		|	Справочник.Магазины КАК Магазины
		|ГДЕ
		|	Магазины.Ссылка В(&МассивМагазинов)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПравилаЦенообразованияДополнительныеВидыЦен.ВидЦен,
		|	NULL
		|ИЗ
		|	Справочник.Магазины КАК Магазины
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ДополнительныеВидыЦен КАК ПравилаЦенообразованияДополнительныеВидыЦен
		|		ПО Магазины.ПравилоЦенообразования = ПравилаЦенообразованияДополнительныеВидыЦен.Ссылка
		|ГДЕ
		|	Магазины.Ссылка В(&МассивМагазинов)";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		// 0 - Товары на складах
		|	ТоварыНаСкладахОстатки.Склад,
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента, Склад.Магазин В (&МассивМагазинов)) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 1 - Товары организаций
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыОрганизацийОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийОстатки.Характеристика КАК Характеристика,
		|	ТоварыОрганизацийОстатки.Склад КАК Склад,
		|	ТоварыОрганизацийОстатки.Организация КАК Организация,
		|	ТоварыОрганизацийОстатки.Поставщик КАК Контрагент,
		|	ТоварыОрганизацийОстатки.Договор КАК Договор,
		|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД, 
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК Количество,
		|	ТоварыОрганизацийОстатки.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТ
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ДатаДокумента, Склад.Магазин В (&МассивМагазинов)) КАК ТоварыОрганизацийОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 2 - Денежные средства наличные.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваНаличныеОстатки.Организация,
		|	ДенежныеСредстваНаличныеОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ДенежныеСредстваНаличныеОстатки.Касса,
		|	ДенежныеСредстваНаличныеОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(&ДатаДокумента, Касса.Магазин В (&МассивМагазинов)) КАК ДенежныеСредстваНаличныеОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 3 - Денежные средства ККМ
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредстваККМОстатки.КассаККМ КАК КассаККМ,
		|	ДенежныеСредстваККМОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ДенежныеСредстваККМОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваККМ.Остатки(&ДатаДокумента, КассаККМ.Магазин В (&МассивМагазинов)) КАК ДенежныеСредстваККМОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		// 4 - Действующие цены номенклатуры.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования КАК Магазин,
		|	ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ДействующиеЦеныНоменклатурыСрезПоследних.Характеристика,
		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена,
		|	ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
		|ИЗ
		|	РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ДатаДокумента, ОбъектЦенообразования В (&МассивМагазинов)) КАК ДействующиеЦеныНоменклатурыСрезПоследних
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		// 5 - Цены номенклатуры
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЦеныНоменклатурыСрезПоследних.ВидЦены 			КАК ВидЦены,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура 		КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика 	КАК Характеристика,
		|	ЦеныНоменклатурыСрезПоследних.Цена 				КАК Цена,
		|	ЦеныНоменклатурыСрезПоследних.Упаковка 			КАК Упаковка
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДокумента) КАК ЦеныНоменклатурыСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаВидовЦен КАК ВременнаяТаблицаВидовЦен
		|		ПО (ЦеныНоменклатурыСрезПоследних.ВидЦены = ВременнаяТаблицаВидовЦен.ВидЦены
		|					И ЦеныНоменклатурыСрезПоследних.Номенклатура = ВременнаяТаблицаВидовЦен.Номенклатура
		|				ИЛИ ВЫБОР
		|					КОГДА ЦеныНоменклатурыСрезПоследних.ВидЦены = ВременнаяТаблицаВидовЦен.ВидЦены
		|							И ВременнаяТаблицаВидовЦен.Номенклатура ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|				КОНЕЦ)
		|;
		|////////////////////////////////////////////////////////////////////////////////
		// 6 - Себестоимость номенклатуры.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СебестоимостьНоменклатурыСрезПоследних.Магазин,
		|	СебестоимостьНоменклатурыСрезПоследних.Номенклатура,
		|	СебестоимостьНоменклатурыСрезПоследних.Характеристика,
		|	СебестоимостьНоменклатурыСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
		|			&ДатаДокумента,
		|			Магазин В (&МассивМагазинов)
		|				ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК СебестоимостьНоменклатурыСрезПоследних
		|;
		|////////////////////////////////////////////////////////////////////////////////
		// 7 - Товары к поступлению
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыКПоступлениюОстатки.Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика,
		|	ТоварыКПоступлениюОстатки.Склад,
		|	ТоварыКПоступлениюОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(
		|			&ДатаДокумента,
		|			Склад.Магазин В (&МассивМагазинов)) КАК ТоварыКПоступлениюОстатки
		|;
		|////////////////////////////////////////////////////////////////////////////////
		// 8 - Товары к отгрузке
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыКОтгрузкеОстатки.Номенклатура,
		|	ТоварыКОтгрузкеОстатки.Характеристика,
		|	ТоварыКОтгрузкеОстатки.Склад,
		|	ТоварыКОтгрузкеОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			&ДатаДокумента,
		|			Склад.Магазин В (&МассивМагазинов)) КАК ТоварыКОтгрузкеОстатки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДокументВводОстатков.УстановитьНовыйНомер();
	ДокументВводОстатков.Дата          = ДанныеЗаполнения.ДатаНачалаВыгрузкиДокументов;
	ДокументВводОстатков.КодУзлаОбмена = ДанныеЗаполнения.КодУзла;
	ДокументВводОстатков.Узел          = ДанныеЗаполнения.УзелОбмена;
	ДокументВводОстатков.Комментарий   = ДанныеЗаполнения.Комментарий;
	
	ТабличныеЧастиДокумента = ДокументВводОстатков.Метаданные().ТабличныеЧасти;
	СоответствиеРезультатовЗапросаТабличнымЧастям = Новый Соответствие;
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ТоварыНаСкладах.Имя,             0);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ТоварыОрганизаций.Имя,           1);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ДенежныеСредстваНаличные.Имя,    2);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ДенежныеСредстваККМ.Имя,         3);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ДействующиеЦеныНоменклатуры.Имя, 4);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ЦеныНоменклатуры.Имя,            5);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.СебестоимостьНоменклатуры.Имя,   6);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ТоварыКПоступлению.Имя,          7);
	СоответствиеРезультатовЗапросаТабличнымЧастям.Вставить(ТабличныеЧастиДокумента.ТоварыКОтгрузке.Имя,             8);

	Для каждого ЭлементСоответствия Из СоответствиеРезультатовЗапросаТабличнымЧастям Цикл
		ДокументВводОстатков[ЭлементСоответствия.Ключ].Очистить();
		Если РезультатЗапроса[ЭлементСоответствия.Значение].Пустой() Тогда
			Продолжить;
		КонецЕсли;
		ВыборкаРезультатаЗапроса = РезультатЗапроса[ЭлементСоответствия.Значение].Выбрать();
		Если ВыборкаРезультатаЗапроса.Количество() <= 99999 Тогда
			ДокументВводОстатков[ЭлементСоответствия.Ключ].Загрузить(РезультатЗапроса[ЭлементСоответствия.Значение].Выгрузить());
		Иначе
			Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
				Если ДокументВводОстатков[ЭлементСоответствия.Ключ].Количество() < 99999 Тогда
					НоваяСтрокаТабличнойЧасти = ДокументВводОстатков[ЭлементСоответствия.Ключ].Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, ВыборкаРезультатаЗапроса);
				Иначе
					ДокументВводОстатков.ОбменДанными.Загрузка = Истина;
					ДокументВводОстатков.Записать();
					
					НовыйДокументВводОстатков = Документы.ВводНачальныхОстатковУзла.СоздатьДокумент();
					НовыйДокументВводОстатков.Дата          = ДокументВводОстатков.Дата;
					НовыйДокументВводОстатков.КодУзлаОбмена = ДокументВводОстатков.КодУзлаОбмена;
					НовыйДокументВводОстатков.Узел          = ДокументВводОстатков.Узел;
					НовыйДокументВводОстатков.Комментарий   = ДокументВводОстатков.Комментарий;
					НоваяСтрокаТабличнойЧасти = НовыйДокументВводОстатков[ЭлементСоответствия.Ключ].Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТабличнойЧасти, ВыборкаРезультатаЗапроса);
					ДокументВводОстатков = НовыйДокументВводОстатков;
					НовыйДокументВводОстатков = Неопределено;
				КонецЕсли;
			КонецЦикла;
			
			ДокументВводОстатков.ОбменДанными.Загрузка = Истина;
			ДокументВводОстатков.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ДокументВводОстатков.Пустой() Тогда
		ДокументВводОстатков.ОбменДанными.Загрузка = Истина;
		ДокументВводОстатков.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

