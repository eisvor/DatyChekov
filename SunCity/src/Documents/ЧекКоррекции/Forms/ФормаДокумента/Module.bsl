
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ПробитьЧекВыполнитьЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтотОбъект.Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда
		
		Объект.НомерСмены = РезультатВыполнения.ПараметрыФискализации.НомерСменыККТ;
		Если ЗначениеЗаполнено(РезультатВыполнения.ПараметрыФискализации.НомерЧекаККТ) Тогда
			Объект.НомерЧека = РезультатВыполнения.ПараметрыФискализации.НомерЧекаККТ;
		КонецЕсли;
		
		Объект.ПробитЧек = Истина;
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
		РезультатЗаписи = Записать(ПараметрыЗаписи);
		ЭтотОбъект.ТолькоПросмотр = Истина;
		Элементы.ФормаПробитьЧек.Доступность = Ложь;
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'При печати чека произошла ошибка:'");
		ТекстСообщения = ТекстСообщения + Символы.ПС + РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборСтраныПроисхождения(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения <> Неопределено Тогда
		
		ТекущаяСтрока = Объект.ПозицииЧека.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		
		Если ТекущаяСтрока <> Неопределено Тогда
			
			ТекущаяСтрока.КодСтраныПроисхожденияТовара = ОбщегоНазначенияРТВызовСервера.ЗначениеРеквизитаОбъекта(РезультатВыполнения, "Код");
			Элементы.ПозицииЧека.ЗакончитьРедактированиеСтроки(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеККМЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		СписокВыбораСНО = Элементы.СистемаНалогообложения.СписокВыбора;
		
		СтрокаСНО 		= РезультатВыполнения.ПараметрыККТ.КодыСистемыНалогообложения;
		МассивКодовСНО 	= СтрРазделить(СтрокаСНО, ",");
		
		Для Каждого КодСНО Из МассивКодовСНО Цикл
			
			Попытка
				КодСНОЧисло = Число(КодСНО);
				СписокВыбораСНО.Добавить(МенеджерОборудованияКлиентСервер.СистемаНалогообложенияККТПоКоду(КодСНОЧисло));
			Исключение
				ВызватьИсключение;
			КонецПопытки;
			
		КонецЦикла;
		
		Если СписокВыбораСНО.НайтиПоЗначению(Объект.СистемаНалогообложения) = Неопределено Тогда
			Объект.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.ТипыСистемНалогообложенияККТ.ПустаяСсылка");
		КонецЕсли;
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Не удалось получить список систем налогообложения поддерживаемых кассой ККМ:'");
		ТекстСообщения = ТекстСообщения + Символы.ПС + РезультатВыполнения.ОписаниеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,);
		
		Объект.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.ТипыСистемНалогообложенияККТ.ПустаяСсылка");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	УправлениеВидимостьюИДоступностьюВсехЭлементов();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		УправлениеВидимостьюИДоступностьюВсехЭлементов();
	КонецЕсли;
	
	ИспользоватьАгентскиеПлатежиИРазделениеВыручки 	= ПолучитьФункциональнуюОпцию("ИспользоватьАгентскиеПлатежиИРазделениеВыручки");
	ИспользоватьКомиссионнуюТорговлю 				= ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	ИспользоватьУчетИмпортныхТоваров 				= ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	
	Объект.РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Если ЗначениеЗаполнено(Объект.ТипРасчета) Тогда
		Если Объект.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств ИЛИ
			Объект.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств Тогда
			Объект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат;
		Иначе
			Объект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа;
		КонецЕсли;
	Иначе
		Объект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа;
	КонецЕсли;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
	ОснованиеНеприменениеККТ 	= Нстр("ru='Неприменение ККТ'");
	ДокументНедоступен			= Нстр("ru='<Документ недоступен>");
	
	ПроверитьДокументыОснованияИРасчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьПоддерживаемыеСНО();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	УправлениеВидимостьюИДоступностьюВсехЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Проведен", Объект.Проведен);
	ПараметрыОповещения.Вставить("ПробитЧек", Объект.ПробитЧек);
	
	Оповестить("ЗаписьЧекаКоррекции", ПараметрыОповещения, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияНеприменениеККТПриИзменении(Элемент)
	
	Объект.КассаККМ = КассаПоУмолчанию(Объект.Организация, Объект.Магазин);
	ЗаполнитьПоддерживаемыеСНО();
	
КонецПроцедуры

&НаКлиенте
Процедура ПокупательПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.Покупатель) <> Тип("Строка") И ЗначениеЗаполнено(Объект.Покупатель) Тогда
		Объект.ПокупательИНН = ОбщегоНазначенияРТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Покупатель, "ИНН");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКоррекцииПриИзменении(Элемент)
	
	Если Объект.ТипКоррекции = 1 Тогда
		Элементы.НомерПредписания.Видимость = Истина;
	Иначе 
		Элементы.НомерПредписания.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	ЗаполнитьПоддерживаемыеСНО();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Магазин) Тогда
		
		Объект.АдресМагазина = АдресМагазина(Объект.Магазин);
		Объект.АдресРасчетов = Объект.АдресМагазина;
		Объект.МестоРасчетов = Строка(Объект.Магазин) + " " + Объект.АдресМагазина;
		
	Иначе 
		
		Объект.АдресМагазина = "";
		Объект.АдресРасчетов = "";
		Объект.МестоРасчетов = "";
		
	КонецЕсли;
	
	Объект.КассаККМ = КассаПоУмолчанию(Объект.Организация, Объект.Магазин);
	ЗаполнитьПоддерживаемыеСНО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда
		
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("КассирНаименование", "ФизическоеЛицо.Наименование");
		СтруктураРеквизитов.Вставить("КассирИНН", "ФизическоеЛицо.ИНН");
		
		РеквизитыКассира = ОбщегоНазначенияРТВызовСервера.ЗначенияРеквизитовОбъекта(Объект.Ответственный, СтруктураРеквизитов);
		
		Объект.Кассир 		= РеквизитыКассира.КассирНаименование;
		Объект.КассирИНН 	= РеквизитыКассира.КассирИНН;
		
	Иначе
		
		Объект.Кассир 		= "";
		Объект.КассирИНН 	= "";
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТипРасчетаНеприменениеККТПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ТипРасчета) Тогда
		Если Объект.ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств") ИЛИ
			Объект.ТипРасчета = ПредопределенноеЗначение("Перечисление.ТипыРасчетаДенежнымиСредствами.РасходДенежныхСредств") Тогда
			Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат");
		Иначе
			Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа");
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПозицииЧека

&НаКлиенте
Процедура ПозицииЧекаНаименованиеПредметаРасчетаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПозицииЧека.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено 
		И ТипЗнч(ТекущаяСтрока.НаименованиеПредметаРасчета) = Тип("СправочникСсылка.Номенклатура")
		И ЗначениеЗаполнено(ТекущаяСтрока.НаименованиеПредметаРасчета) Тогда
		
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("ЕдиницаИзмерения");
		СтруктураРеквизитов.Вставить("СтавкаНДС");
		
		РеквизитыНоменклатуры = ОбщегоНазначенияРТВызовСервера.ЗначенияРеквизитовОбъекта(ТекущаяСтрока.НаименованиеПредметаРасчета, СтруктураРеквизитов);
		
		ТекущаяСтрока.ЕдиницаИзмерения 	= Строка(РеквизитыНоменклатуры.ЕдиницаИзмерения);
		ТекущаяСтрока.МераКоличества    = РеквизитыНоменклатуры.ЕдиницаИзмерения;
		ТекущаяСтрока.СтавкаНДС 		= РеквизитыНоменклатуры.СтавкаНДС;
		
		ПересчитатьСуммуНДССтроки(ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииЧекаКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПозицииЧека.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммуСтроки(ТекущаяСтрока);
		ПересчитатьСуммуНДССтроки(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииЧекаЦенаСоСкидкамиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПозицииЧека.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммуСтроки(ТекущаяСтрока);
		ПересчитатьСуммуНДССтроки(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииЧекаСуммаСоСкидкамиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПозицииЧека.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущаяСтрока.ЦенаСоСкидками = ?(ТекущаяСтрока.Количество = 0, ТекущаяСтрока.СуммаСоСкидками, ТекущаяСтрока.СуммаСоСкидками / ТекущаяСтрока.Количество);
		ПересчитатьСуммуНДССтроки(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииЧекаСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПозицииЧека.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ПересчитатьСуммуНДССтроки(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииЧекаПризнакАгентаПоПредметуРасчетаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПозицииЧека.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено И НЕ ЗначениеЗаполнено(ТекущаяСтрока.ПризнакАгентаПоПредметуРасчета) Тогда
		ТекущаяСтрока.ПлатежныйАгентОперация 			= "";
		ТекущаяСтрока.ПлатежныйАгентТелефон 			= "";
		ТекущаяСтрока.ОператорПоПриемуПлатежейТелефон 	= "";
		ТекущаяСтрока.ОператорПереводаНаименование 		= "";
		ТекущаяСтрока.ОператорПереводаИНН 				= "";
		ТекущаяСтрока.ОператорПереводаАдрес 			= "";
		ТекущаяСтрока.ОператорПереводаТелефон 			= "";
		ТекущаяСтрока.ДанныеПоставщикаНаименование 		= "";
		ТекущаяСтрока.ДанныеПоставщикаИНН 				= "";
		ТекущаяСтрока.ДанныеПоставщикаТелефон 			= "";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПозицииЧекаКодСтраныПроисхожденияТовараНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИдентификаторСтроки = Элементы.ПозицииЧека.ТекущиеДанные.ПолучитьИдентификатор();
	
	ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	ОбработчикОповещения 	= Новый ОписаниеОповещения("ВыборСтраныПроисхождения", ЭтотОбъект, ДополнительныеПараметры);

	ПоказатьВводЗначения(ОбработчикОповещения,, Нстр("ru='Выбор страны происхождения товара'"), Тип("СправочникСсылка.СтраныМира")); 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПробитьЧек(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	
	Если Объект.ПометкаУдаления Тогда
		ТекстОшибки = НСтр("ru = 'Документ помечен на удаление'");
	ИначеЕсли Объект.Проведен Тогда
		Если Модифицированность Тогда
			ТекстОшибки = НСтр("ru = 'Измененный документ не сохранен'");
		КонецЕсли;
	Иначе
		ТекстОшибки = НСтр("ru = 'Документ не проведен'");
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Доступность = Ложь;
	ИдентификаторУстройства = Неопределено;
	ОбщиеПараметры  = ПодготовитьДанныеДляПробитияЧека(Объект.Ссылка, ИдентификаторУстройства);
	
	Если ОбщиеПараметры <> Неопределено Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПробитьЧекВыполнитьЗавершение", ЭтотОбъект);
		
		Если Объект.НеприменениеККТ Тогда
			МенеджерОборудованияКлиент.НачатьФормированиеЧекаКоррекцииНаФискальномУстройстве(Оповещение, ЭтотОбъект.УникальныйИдентификатор, ОбщиеПараметры, ИдентификаторУстройства);
		Иначе
			МенеджерОборудованияКлиент.НачатьФискализациюЧекаНаФискальномУстройстве(Оповещение, ЭтотОбъект.УникальныйИдентификатор, ОбщиеПараметры, ИдентификаторУстройства);
		КонецЕсли;
		
	Иначе // печать невозможна
		
		ЭтотОбъект.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостьюИДоступностьюВсехЭлементов()
	
	Если Объект.ПробитЧек Тогда
		ЭтотОбъект.ТолькоПросмотр = Истина;
		Элементы.ФормаПробитьЧек.Доступность = Ложь;
	ИначеЕсли Объект.ЭтоСторно Тогда
		Элементы.Страницы.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.НередактируемыеДанныеОшибка.Видимость 	= НЕ Объект.НеприменениеККТ;
	Элементы.ТипРасчетаНеприменениеККТ.Видимость 	= Объект.НеприменениеККТ;
	Элементы.ОрганизацияНеприменениеККТ.Видимость 	= Объект.НеприменениеККТ;
	Элементы.ОснованиеНеприменениеККТ.Видимость 	= Объект.НеприменениеККТ;
	Элементы.ДатаКоррекцииНеприменениеККТ.Видимость = Объект.НеприменениеККТ;
	Элементы.НомерПредписания.Видимость 			= Объект.ТипКоррекции = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаКомментарий, Объект.Комментарий);
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПробитияЧека(ЧекКоррекции, ИдентификаторУстройства)
	
	Возврат Документы.ЧекКоррекции.ПодготовитьДанныеДляПробитияЧека(ЧекКоррекции, ИдентификаторУстройства);
	
КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммуСтроки(ТекущаяСтрока)
	ТекущаяСтрока.СуммаСоСкидками = ТекущаяСтрока.Количество * ТекущаяСтрока.ЦенаСоСкидками;
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуНДССтроки(ТекущаяСтрока)
	ТекПроцентНДС = ОбработкаТабличнойЧастиТоварыКлиентПовтИсп.СтавкаНДСЧислом(ТекущаяСтрока.СтавкаНДС);
	ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.СуммаСоСкидками * ТекПроцентНДС / (ТекПроцентНДС + 1);
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
		
	СуммаПродажи = Объект.ПозицииЧека.Итог("СуммаСоСкидками");
	СуммаОплат   = Объект.Оплата.Итог("Сумма");
	
	ТекущаяСтрока = Элементы.Оплата.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущаяСумма  = ТекущаяСтрока.Сумма;
		ОплатаБезТекущейСтроки = СуммаОплат - ТекущаяСумма;
		ОстатокОплаты = СуммаПродажи - ОплатаБезТекущейСтроки;
	КонецЕсли;
	
	Элементы.ОплатаСумма.СписокВыбора.Очистить();
	
	Если ОстатокОплаты > 0 Тогда
		
		Элементы.ОплатаСумма.СписокВыбора.Добавить(ОстатокОплаты, Формат(ОстатокОплаты, "ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧН=; ЧГ=3,0"));
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция АдресМагазина(Магазин)
	
	Возврат ОбщегоНазначенияРТ.АдресМагазина(Магазин);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоддерживаемыеСНО()
	
	Элементы.СистемаНалогообложения.СписокВыбора.Очистить();
	
	Если ЗначениеЗаполнено(Объект.КассаККМ) Тогда 
		
		ПараметрыКассыККМ		= ЗначениеНастроекВызовСервера.ПараметрыКассыККМ(Объект.КассаККМ);
		ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
		
		Оповещение = Новый ОписаниеОповещения("ПолучитьДанныеККМЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьПолучениеПараметровФискальногоУстройства(Оповещение, УникальныйИдентификатор, ИдентификаторУстройства);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДокументыОснованияИРасчетов()
	
	Если НЕ Объект.НеприменениеККТ Тогда
		
		ДокументОснованиеДоступно 						= ДокументДоступен(Объект.ДокументОснование);
		Элементы.ДокументОснование.Видимость 			= ДокументОснованиеДоступно;
		Элементы.ДокументОснованиеНедоступен.Видимость 	= НЕ ДокументОснованиеДоступно;
		
		ДокументРасчетовДоступно 						= ДокументДоступен(Объект.ДокументРасчетов);
		Элементы.ДокументРасчетов.Видимость 			= ДокументРасчетовДоступно;
		Элементы.ДокументРасчетовНедоступен.Видимость 	= НЕ ДокументРасчетовДоступно;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДокументДоступен(Документ)
	
	Если НЕ Документ.Пустая() Тогда
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Ссылка", Истина) = Неопределено Тогда
			Возврат Ложь
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция КассаПоУмолчанию(Организация, Магазин)
	
	Возврат Справочники.КассыККМ.КассаПоУмолчанию(Организация, Магазин);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСкладПродажи(НоваяСтрока)
	
	СтруктураДействий = Новый Структура;
	ЗаполнитьСкладПродажи = Новый Структура;
	ЗаполнитьСкладПродажи.Вставить("Дата", ТекущаяДата());
	ЗаполнитьСкладПродажи.Вставить("Организация", ЭтотОбъект.Организация);
	ЗаполнитьСкладПродажи.Вставить("Номенклатура", НоваяСтрока.Номенклатура);
	ЗаполнитьСкладПродажи.Вставить("РабочееМесто", ЭтотОбъект.РабочееМесто);
	ЗаполнитьСкладПродажи.Вставить("Магазин", ЭтотОбъект.Магазин);
	СтруктураДействий.Вставить("ЗаполнитьСкладПродажи", ЗаполнитьСкладПродажи);
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьСкладПродажиВСтрокеТЧСервер(НоваяСтрока, СтруктураДействий, Неопределено);
	НоваяСтрока.Склад = НоваяСтрока.Склад;
	
КонецПроцедуры

#КонецОбласти
