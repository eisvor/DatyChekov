#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Представление = НСтр("ru='Нанесение кодов маркировки (СУЗ) №%1 от %2'");
	Представление = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(Представление, Данные.Номер, Формат(Данные.Дата, "ДЛФ=DT")); 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#Область СлужебныйПрограммныйИнтерфейс

// Удаляет использованные коды маркировки из пула в случаях:
//   * Все коды маркировки по основанию распечатаны, основание полностью оформлено (по основанию)
//   * Основание не указано или архивировано, коды маркировки распечатаны (по использованным кодам).
//
Процедура ПолучитьИнформациюПоСтатусамНанесения() Экспорт
	
	НастройкаОбменаСУЗ = ИнтеграцияИСМПТК.НастройкиОбменаСУЗ();
	Если Не НастройкаОбменаСУЗ = Неопределено Тогда
		Если ТипЗнч(НастройкаОбменаСУЗ) = Тип("Массив") Тогда
			Для Каждого Настройка Из НастройкаОбменаСУЗ Цикл
				ПолучитьИнформациюПоСтатусамНанесенияПродолжить(Настройка);
			КонецЦикла;
		Иначе
			ПолучитьИнформациюПоСтатусамНанесенияПродолжить(НастройкаОбменаСУЗ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИнформациюПоСтатусамНанесенияПродолжить(НастройкаОбменаСУЗ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НанесениеКодовМаркировкиСУЗИСМПТК.OrderID КАК OrderID,
	|	НанесениеКодовМаркировкиСУЗИСМПТК.Статус КАК Статус,
	|	НанесениеКодовМаркировкиСУЗИСМПТК.Ссылка КАК Ссылка,
	|	НанесениеКодовМаркировкиСУЗИСМПТК.ВидПродукции КАК ВидПродукции
	|ИЗ
	|	Документ.НанесениеКодовМаркировкиСУЗИСМПТК КАК НанесениеКодовМаркировкиСУЗИСМПТК
	|ГДЕ
	|	НЕ НанесениеКодовМаркировкиСУЗИСМПТК.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработкиОтчетовСУЗИСМПТК.Отклонен)
	|	И НЕ НанесениеКодовМаркировкиСУЗИСМПТК.OrderID = &ПустаяСтрока";
	
	Запрос.УстановитьПараметр("ПустаяСтрока", "");
	Результат = Запрос.Выполнить();
	ОтветСервера = Неопределено;
	
	Если Не Результат.Пустой() Тогда 
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			ОтветСервера = ИнтеграцияИСМПТК.ПолучитьСтатусНанесенияКМ(НастройкаОбменаСУЗ, Выборка.ВидПродукции, Выборка.OrderID);
			
			Если Не ЗначениеЗаполнено(ОтветСервера.ТекстОшибки) Тогда
				
				СтатусОтчета = ИнтеграцияИСМПТК.СтатусОбработкиОтчета(ОтветСервера.ДанныеОСтатусах["reportStatus"]);
				Если Не Выборка.Статус = СтатусОтчета Тогда 
					ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
					ДокументОбъект.Статус = СтатусОтчета;
					
					Попытка
						ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
					Исключение
						ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаПриЗаписиСтатусНеИзменилсяСПараметрами();
						ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументОбъект, СтатусОтчета);
						
						ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаВФункцииСПараметром();
						ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ИмяФункции%", "Документы.НанесениеКодовМаркировкиСУЗИСМПТК.ПолучитьИнформациюПоСтатусамНанесенияПродолжить");
						ТекстОшибки = НСтр("ru = 'Ошибка при выполнении регламентного задания ""%ИмяЗадания%"":'")
									+ Символы.ПС
									+ ТекстСообщения;
						ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ИмяЗадания%", Метаданные.РегламентныеЗадания.ОтправкаПолучениеДанныхСУЗИСМПТК.Предопределенное);
						ОбщегоНазначенияИСМПТКВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки, ИмяСобытия);
					КонецПопытки;
				КонецЕсли;
			Иначе
				ОбщегоНазначенияИСМПТКВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ОтветСервера.ТекстОшибки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ОтветСервера = Неопределено Тогда
		Если ЗначениеЗаполнено(ОтветСервера.ТекстОшибки) Тогда
			ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаВФункцииСПараметром();
			ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ИмяФункции%", "Документы.НанесениеКодовМаркировкиСУЗИСМПТК.ПолучитьИнформациюПоСтатусамНанесенияПродолжить");
			ТекстОшибки = НСтр("ru = 'Ошибка при выполнении регламентного задания ""%ИмяЗадания%"":'")
						+ Символы.ПС
						+ ОтветСервера.ТекстОшибки;
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ИмяЗадания%", Метаданные.РегламентныеЗадания.ОтправкаПолучениеДанныхСУЗИСМПТК.Предопределенное);
			ОбщегоНазначенияИСМПТКВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки, ИмяСобытия);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	РаботаСДокументамиИСМПТКПереопределяемый.ПриЗаполненииОграниченияДоступа(Ограничение, ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаНанесениеКодовМаркировкиСУЗИСМПТК());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли