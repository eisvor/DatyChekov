////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Организация = Параметры.Отбор.Организация;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Т.к. видимость команд взаимодействия с сервером зависит от наличия настройки обена для пользователя, 
	//а не только от статуса документа, проверяем доступность команд после заполнения организации.
	ИзменитьКоманднуюПанельДокумента();
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЭтапОформления", 
				"Видимость", ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ИспользоватьЭтапыОформленияДокументовИСЦЭДМ"));
				
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокЭтапОформления", 
				"Видимость", ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ИспользоватьЭтапыОформленияДокументовИСЦЭДМ"));
				
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСклады", 
				"Видимость", ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ВестиУчетПоСкладамИСЦЭДМ"));
	
	СобытияФормИСМПТККлиентПереопределяемый.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОВыводеИзОборотаИСЦЭДМ() Тогда
		
		Элементы.Список.Обновить();
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если Не ТекущиеДанные = Неопределено Тогда
			ИзменитьКоманднуюПанельДокумента(ТекущиеДанные);
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	
	УстановитьБыстрыйОтбор("Организация", Организация);
	//Т.к. видимость команд взаимодействия с сервером зависит от наличия настройки обена для пользователя, 
	//а не только от статуса документа, проверяем доступность команд после заполнения организации.
	ИзменитьКоманднуюПанельДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапОформленияПриИзменении(Элемент)	
	
	УстановитьБыстрыйОтбор("ЭтапОформления", ЭтапОформления);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ВидЭлемента, ЗначениеЭлемента)
	
	ОбщегоНазначенияИСМПТККлиентСервер.ИзменитьЭлементОтбораСписка(Список, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКоманднуюПанельДокумента(ТекущиеДанные = Неопределено, МножественныйВыбор = Ложь)
	
	ИспользуютсяЭтапы = ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ИспользоватьЭтапыОформленияДокументовИСЦЭДМ"); 
	
	Если МножественныйВыбор Тогда
		//Выводим все команды, доступность их для каждого документа отдельно быдет проверяться уже при выполнении
		МожноОтправить = Истина;
		ДокументНеопределенНаСервере = Истина;
		УПользователяЕстьНастройкаОбмена = Истина;		
	Иначе
		Если Не ТекущиеДанные = Неопределено Тогда
			
			ТекущийЭтапДопускаетОтправку = ?(ИспользуютсяЭтапы, 
											 ТекущиеДанные.ЭтапОформления = ПредопределенноеЗначение("Перечисление.ЭтапыОформленияДокументовИСЦЭДМ.ГотовКОтправке")
											 ИЛИ ТекущиеДанные.ЭтапОформления = ПредопределенноеЗначение("Перечисление.ЭтапыОформленияДокументовИСЦЭДМ.ПустаяСсылка"),
											 Истина);
			
			МожноОтправить = (ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСЦЭДМ.НеОпределен") //когда документ ни разу не отправлен
							ИЛИ ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСЦЭДМ.РасчетИтогов") //документ отправлен, но в процессе обработки, может потребоваться повторная отправка для возобновения процесса отправки
							ИЛИ ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСЦЭДМ.Черновик")) //документ подготовлен, итоги рассчитаны, ожидается подпись
							И ТекущийЭтапДопускаетОтправку; 
			
			ДокументНеопределенНаСервере = ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСЦЭДМ.НеОпределен");
			УПользователяЕстьНастройкаОбмена = ЗначениеЗаполнено(ТекущиеДанные.Организация) 
							И ИнтерфейсИСМПТК.ПроверитьНаличиеНастройкиПодключенияУПользователя(ТекущиеДанные.Организация);
		Иначе
			МожноОтправить = Ложь;
			ДокументНеопределенНаСервере = Ложь;
			УПользователяЕстьНастройкаОбмена = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОбщаяКомандаПроверитьИСМПТК", "Видимость", Ложь);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокУОВОбновить", 	"Видимость", УПользователяЕстьНастройкаОбмена И Не ДокументНеопределенНаСервере);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокУОВОтправить", "Видимость", УПользователяЕстьНастройкаОбмена И МожноОтправить);
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	МножественныйВыбор = Элементы.Список.ВыделенныеСтроки.Количество() > 1 ;
	ИзменитьКоманднуюПанельДокумента(ТекущиеДанные, МножественныйВыбор);
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти