#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Получение данных для формирования электронного документа.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка.РеализацияТоваровУслуг - ссылка на документ.
// 
// Возвращаемое значение:
//  Структура - структура данных для печати.
//
Функция ПолучитьДанныеДляЭД(СсылкаНаОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка.Контрагент КАК Владелец,
	|	Товары.ИдентификаторНоменклатурыПоставщика КАК Идентификатор,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	ТаблицаОтбора = Запрос.Выполнить().Выгрузить();
	
	МенеджерТаблиц = Новый МенеджерВременныхТаблиц;
	СопоставлениеНоменклатурыКонтрагентов.СоздатьВременнуюТаблицуСоответствияНоменклатуры(ТаблицаОтбора, "втНоменклатураКонтрагента", МенеджерТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Артикул, Товары.Номенклатура.Артикул) КАК Артикул,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Наименование, Товары.Номенклатура.Наименование) КАК Наименование,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.ДатаРеализации КАК ДатаПродажи,
	|	ЕСТЬNULL(Товары.Номенклатура.КодТНВЭД.Код, """") КАК КодВидаТовара,
	|	Товары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаСсылка,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиница,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКод,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.НаименованиеПолное КАК БазоваяЕдиницаНаименованиеПолное,
	|	Товары.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК БазоваяЕдиницаМеждународноеСокращение,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмерения, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ Товары.Упаковка
	|		КОНЕЦ) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмеренияКод, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|			ИНАЧЕ ""0000""
	|		КОНЕЦ) КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмеренияКод, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|			ИНАЧЕ ""0000""
	|		КОНЕЦ) КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	1 КАК ЕдиницаИзмеренияКоэффициент,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.НаименованиеХарактеристики, Товары.Характеристика) КАК Характеристика,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	Товары.ЦенаЗакупки КАК Цена,
	|	Товары.СуммаЗакупки КАК Сумма,
	|	Товары.Цена КАК ЦенаПродажи,
	|	Товары.Сумма КАК СуммаПродажи,
	|	Товары.СуммаВознаграждения КАК СуммаВознаграждения,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.Ссылка.ЦенаВключаетНДС КАК НДСУчтеноВСумме,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ЦенаВключаетНДС
	|			ТОГДА Товары.Сумма
	|		ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА втНоменклатураКонтрагента.Идентификатор ЕСТЬ NULL
	|			ТОГДА Товары.Номенклатура
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК НоменклатураИБ,
	|	ВЫБОР
	|		КОГДА втНоменклатураКонтрагента.Идентификатор ЕСТЬ NULL
	|			ТОГДА Товары.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ХарактеристикаИБ,
	|	ВЫБОР
	|		КОГДА втНоменклатураКонтрагента.Идентификатор ЕСТЬ NULL
	|			ТОГДА Товары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК УпаковкаИБ,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Идентификатор, """") КАК ИдентификаторНоменклатурыПоставщика
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНоменклатураКонтрагента КАК втНоменклатураКонтрагента
	|		ПО Товары.Номенклатура = втНоменклатураКонтрагента.Номенклатура
	|			И Товары.Характеристика = втНоменклатураКонтрагента.Характеристика
	|			И Товары.Упаковка = втНоменклатураКонтрагента.Упаковка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.ИдентификаторНоменклатурыПоставщика = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Артикул, Товары.Номенклатура.Артикул),
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Наименование, Товары.Номенклатура.Наименование),
	|	Товары.Номенклатура,
	|	Товары.ДатаРеализации,
	|	ЕСТЬNULL(Товары.Номенклатура.КодТНВЭД.Код, """"),
	|	Товары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар,
	|	Товары.Номенклатура.ЕдиницаИзмерения,
	|	Товары.Номенклатура.ЕдиницаИзмерения,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.НаименованиеПолное,
	|	Товары.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмерения, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ Товары.Упаковка
	|		КОНЕЦ),
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмеренияКод, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|			ИНАЧЕ ""0000""
	|		КОНЕЦ),
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмеренияКод, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|			ИНАЧЕ ""0000""
	|		КОНЕЦ),
	|	1,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.НаименованиеХарактеристики, Товары.Характеристика),
	|	Товары.КоличествоУпаковок,
	|	Товары.ЦенаЗакупки,
	|	Товары.СуммаЗакупки,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СуммаВознаграждения,
	|	Товары.СтавкаНДС,
	|	Товары.Ссылка.ЦенаВключаетНДС,
	|	Товары.СуммаНДС,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ЦенаВключаетНДС
	|			ТОГДА Товары.Сумма
	|		ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втНоменклатураКонтрагента.Идентификатор ЕСТЬ NULL
	|			ТОГДА Товары.Номенклатура
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втНоменклатураКонтрагента.Идентификатор ЕСТЬ NULL
	|			ТОГДА Товары.Характеристика
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА втНоменклатураКонтрагента.Идентификатор ЕСТЬ NULL
	|			ТОГДА Товары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	Товары.ИдентификаторНоменклатурыПоставщика
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНоменклатураКонтрагента КАК втНоменклатураКонтрагента
	|		ПО Товары.ИдентификаторНоменклатурыПоставщика = втНоменклатураКонтрагента.Идентификатор
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.ИдентификаторНоменклатурыПоставщика <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Номер КАК Номер,
	|	ОтчетКомитентуОПродажах.Дата КАК Дата,
	|	ОтчетКомитентуОПродажах.Организация КАК Организация,
	|	ОтчетКомитентуОПродажах.Контрагент КАК Контрагент,
	|	ОтчетКомитентуОПродажах.НачалоПериода КАК НачалоПериода,
	|	ОтчетКомитентуОПродажах.КонецПериода КАК КонецПериода,
	|	ОтчетКомитентуОПродажах.СуммаДокумента КАК СуммаДокумента,
	|	&ХозОперация КАК ХозОперация,
	|	ОтчетКомитентуОПродажах.Комментарий КАК ДополнительнаяИнформация,
	|	ОтчетКомитентуОПродажах.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ОтчетКомитентуОПродажах.СтавкаНДСВознаграждения КАК СтавкаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.ПроцентКомиссионногоВознаграждения КАК ПроцентВознаграждения,
	|	&ВалютаКод КАК ВалютаКод,
	|	&Валюта КАК Валюта,
	|	"""" КАК ДокументОснование,
	|	"""" КАК ОснованиеОтгрузкиТоваров,
	|	"""" КАК СведенияОВыбытииМаркированныхТоваров
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.НаименованиеХарактеристики, Товары.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмерения, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ Товары.Упаковка
	|		КОНЕЦ) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Штрихкод, Штрихкоды.Штрихкод) КАК Штрихкод
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНоменклатураКонтрагента КАК втНоменклатураКонтрагента
	|		ПО Товары.Номенклатура = втНоменклатураКонтрагента.Номенклатура
	|			И Товары.Характеристика = втНоменклатураКонтрагента.Характеристика
	|			И Товары.Упаковка = втНоменклатураКонтрагента.Упаковка
	|ГДЕ
	|	Товары.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ХозОперация", НСтр("ru = 'Отчет о продажах комиссионного товара'"));
	
	Запрос.УстановитьПараметр("ВалютаКод", НСтр("ru = '398'"));
	Запрос.УстановитьПараметр("Валюта", НСтр("ru = 'тг.'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоТабличнойЧасти = МассивРезультатов[0];
	РезультатПоШапке = МассивРезультатов[1];
	РезультатПоШтрихкодам = МассивРезультатов[2];
	
	СтруктураДанныхДляПечати = Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоШтрихкодам",
												РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоШтрихкодам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Получение данных для формирования электронного счет-фактуры.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка.ОтчетКомитентуОПродажах - ссылка на документ.
// 
// Возвращаемое значение:
//  Структура - структура данных для печати.
//
Функция ПолучитьДанныеДляЭДСФ(СсылкаНаОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	ОтчетКомитентуОПродажах.Номер КАК Номер,
	|	ОтчетКомитентуОПродажах.Дата КАК Дата,
	|	ОтчетКомитентуОПродажах.Организация КАК Организация,
	|	ОтчетКомитентуОПродажах.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ОтчетКомитентуОПродажах.Контрагент КАК Контрагент,
	|	"""" КАК Грузоотправитель,
	|	"""" КАК Грузополучатель,
	|	"""" КАК АдресДоставки,
	|	"""" КАК АдресДоставкиЗначенияПолей,
	|	"""" КАК Перевозчик,
	|	"""" КАК НомерТранспортнойНакладной,
	|	"""" КАК ДатаТранспортнойНакладной,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	"""" КАК ДатаОтгрузки,
	|	ОтчетКомитентуОПродажах.СуммаДокумента КАК СуммаДокумента,
	|	ОтчетКомитентуОПродажах.Комментарий КАК ДополнительнаяИнформация,
	|	ОтчетКомитентуОПродажах.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	&ВалютаКод КАК ВалютаКод,
	|	&Валюта КАК Валюта,
	|	"""" КАК ДокументОснование,
	|	"""" КАК ОснованиеОтгрузкиТоваров,
	|	"""" КАК СведенияОВыбытииМаркированныхТоваров
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	"""" КАК КодВидаТовара,
	|	Ложь КАК ПрослеживаемыйТовар,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Код КАК НоменклатураКод,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Артикул КАК НоменклатураАртикул,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Наименование КАК НоменклатураНаименование,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения КАК Номенклатура,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения КАК БазоваяЕдиницаСсылка,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения КАК БазоваяЕдиница,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКод,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.НаименованиеПолное КАК БазоваяЕдиницаНаименованиеПолное,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.МеждународноеСокращение КАК БазоваяЕдиницаМеждународноеСокращение,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	1 КАК ЕдиницаИзмеренияКоэффициент,
	|	1 КАК Количество,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК Цена,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК Сумма,
	|	ОтчетКомитентуОПродажах.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ОтчетКомитентуОПродажах.СуммаНДСВознаграждения КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ОтчетКомитентуОПродажах.ЦенаВключаетНДС
	|			ТОГДА ОтчетКомитентуОПродажах.СуммаВознаграждения - ОтчетКомитентуОПродажах.СуммаНДСВознаграждения
	|		ИНАЧЕ ОтчетКомитентуОПродажах.СуммаВознаграждения
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ОтчетКомитентуОПродажах.ЦенаВключаетНДС
	|			ТОГДА ОтчетКомитентуОПродажах.СуммаВознаграждения
	|		ИНАЧЕ ОтчетКомитентуОПродажах.СуммаВознаграждения + ОтчетКомитентуОПродажах.СуммаНДСВознаграждения
	|	КОНЕЦ КАК СуммаСНДС,
	|	ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения КАК НоменклатураИБ,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаИБ,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаИБ,
	|	"""" КАК НомерГТД,
	|	"""" КАК ИдентификаторНоменклатурыПоставщика
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВалютаКод", НСтр("ru = '398'"));
	Запрос.УстановитьПараметр("Валюта", НСтр("ru = 'тг.'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапки = МассивРезультатов[0].Выбрать();
	ВыборкаТоваров = МассивРезультатов[1].Выбрать();
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ВыборкаШапки", ВыборкаШапки);
	СтруктураДанных.Вставить("ВыборкаТоваров", ВыборкаТоваров);
	СтруктураДанных.Вставить("Штрихкоды");
	
	Возврат СтруктураДанных;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.АктОРасхожденияхПриПриемкеТоваров - документ для инициализации данных.
//  ДополнительныеСвойства - Структура - структура дополнительных свойств.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст ="ВЫБРАТЬ
	| СУММА(ОтчетКомитентуОПродажахТовары.Сумма) КАК СуммаПродажи,
	| ОтчетКомитентуОПродажахТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТоварыСуммаПродаж
	|ИЗ
	| Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|ГДЕ
	| ОтчетКомитентуОПродажахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	| ОтчетКомитентуОПродажахТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	| ДанныеДокумента.Дата                                            КАК Период,
	| ДанныеДокумента.Ссылка                                          КАК Ссылка,
	| ДанныеДокумента.Организация                                     КАК Организация,
	| ДанныеДокумента.Магазин                                         КАК Магазин,
	| ДанныеДокумента.Контрагент                                      КАК Контрагент,
	| ДанныеДокумента.Договор                                         КАК Договор,
	| ДанныеДокумента.Ссылка                                          КАК Основание,
	| ДанныеДокумента.Магазин.ИспользоватьОрдернуюСхемуПриПоступлении КАК ПоступлениеПоОрдернойСхеме,
	| ДанныеДокумента.ЦенаВключаетНДС                                 КАК ЦенаВключаетНДС,
	| ДанныеДокумента.УчитыватьНДС                                    КАК УчитыватьНДС,
	| ДанныеДокумента.СуммаДокумента                                  КАК СуммаДокумента,
	| ДанныеДокумента.СуммаВознаграждения                             КАК СуммаВознаграждения,
	| НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы              КАК ФормироватьДвижения,
	| ТоварыСуммаПродаж.СуммаПродажи                                  КАК СуммаПродажи
	|ИЗ
	| Документ.ОтчетКомитентуОПродажах КАК ДанныеДокумента
	|     ЛЕВОЕ СОЕДИНЕНИЕ ТоварыСуммаПродаж КАК ТоварыСуммаПродаж
	|     ПО ДанныеДокумента.Ссылка = ТоварыСуммаПродаж.Ссылка
	|ГДЕ
	| ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ИспользоватьРасчетыСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетыСКлиентами");
	Запрос.УстановитьПараметр("ИспользоватьРасчетыСКлиентами", ИспользоватьРасчетыСКлиентами);
	
	// 0 ТаблицаРасчетыСПоставщиками 
	ТекстЗапроса =
	"ВЫБРАТЬ
	|   ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|   &Период КАК Период,
	|   &Магазин КАК Магазин,
	|   &Контрагент КАК Поставщик,
	|   &Ссылка КАК ДокументРасчета,
	|   ЭтапыОплат.Сумма КАК Сумма,
	|   ЭтапыОплат.Сумма КАК КОплате,
	|   0 КАК КПоступлению,
	|   ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет) КАК ФормаОплаты,
	|   ЛОЖЬ КАК Взаимозачет
	|ИЗ
	|   Документ.ОтчетКомитентуОПродажах.ЭтапыОплат КАК ЭтапыОплат
	|ГДЕ
	|   ЭтапыОплат.Ссылка = &Ссылка
	|   И ЭтапыОплат.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет)
	|   И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|   ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|   &Период,
	|   &Магазин,
	|   &Контрагент,
	|   ЭтапыОплат.ДокументВзаимозачета,
	|   ЭтапыОплат.Сумма,
	|   ЭтапыОплат.Сумма,
	|   0,
	|   ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка),
	|   ИСТИНА
	|ИЗ
	|   Документ.ПоступлениеТоваров.ЭтапыОплат КАК ЭтапыОплат
	|ГДЕ
	|   ЭтапыОплат.Ссылка = &Ссылка
	|   И ЭтапыОплат.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет)
	|   И &ФормироватьДвижения
	|;
	|
	// 1 ТаблицаРасчетыСКлиентами 
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДанныеДокумента.Дата КАК Период,
	|   ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|   ДанныеДокумента.Организация КАК Организация,
	|   ДанныеДокумента.Магазин КАК Магазин,
	|   ДанныеДокумента.Контрагент КАК Контрагент,
	|   ДанныеДокумента.СуммаВознаграждения КАК Сумма,
	|   ДанныеДокумента.Ссылка КАК ДокументРасчета
	|ИЗ
	|   Документ.ОтчетКомитентуОПродажах КАК ДанныеДокумента
	|ГДЕ
	|   &ИспользоватьРасчетыСКлиентами
	|   И ДанныеДокумента.Ссылка = &Ссылка
	|   И ДанныеДокумента.СуммаВознаграждения > 0
	|;
	// 2 ТаблицаТоварыКОформлениюОтчетовКомитенту
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	&Контрагент                            КАК Поставщик,
	|	&Договор                               КАК Договор,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.Сумма                    КАК СуммаПродажи,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах.Товары  КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ФормироватьДвижения
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|   И ТаблицаТовары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;";
	
	Запрос.Текст = ТекстЗапроса;
	Результат    = Запрос.ВыполнитьПакет();
	
	Запрос.Текст = ТекстЗапроса;
	Результат    = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;	
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками"               , Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами"                  , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюОтчетовКомитенту"  , Результат[2].Выгрузить());
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт списания товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 10;
	
	// Отчет комитенту о продажах
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетКомитентуОПродажах";
	КомандаПечати.Представление = НСтр("ru = 'Отчет комитенту о продажах'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 20;    
	
	// Счет-Фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";

КонецПроцедуры

// Сформировать печатные формы объектов.
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит сформированные табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - для заполнения письма при отправке печатной формы по электронной почте.
//                    см. РаботаСПочтовымиСообщениямиКлиент.РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт",
		НСтр("ru = 'Акт об оказании услуг'"),
		ПечатьАктаОбОказанииУслуг(МассивОбъектов, ОбъектыПечати));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомитентуОПродажах") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетКомитентуОПродажах",
		НСтр("ru = 'Отчет комитенту о продажах'"),
		ПечатьОтчетаКомитентуОПродажах(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой акта об
// об оказании услуг.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта.
//
Функция ПечатьАктаОбОказанииУслуг(МассивОбъектов, ОбъектыПечати)
	
	ДополнительнаяКолонкаПечатныхФормДокументов = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	ВыводитьДополнительныеКолонки = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	РеквизитыДокумента            = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента              = НСтр("ru='Акт об оказании услуг'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомитентуОПродажах_Акт";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	
	
	Запрос.Текст = "ВЫБРАТЬ
	|    ОтчетКомитентуОПродажах.Ссылка                            КАК Ссылка,
	|    ОтчетКомитентуОПродажах.Номер                             КАК Номер,
	|    ОтчетКомитентуОПродажах.Дата                              КАК Дата,
	|    ОтчетКомитентуОПродажах.Организация.Префикс               КАК Префикс,
	|    ОтчетКомитентуОПродажах.Договор                           КАК Договор,
	|    ОтчетКомитентуОПродажах.Контрагент                        КАК Получатель,
	|    ОтчетКомитентуОПродажах.Организация                       КАК Поставщик,
	|    ОтчетКомитентуОПродажах.Организация                       КАК Организация,
	|    ОтчетКомитентуОПродажах.СуммаДокумента                    КАК СуммаДокумента,
	|    ОтчетКомитентуОПродажах.СуммаВознаграждения               КАК СуммаВознаграждения,
	|    ОтчетКомитентуОПродажах.СуммаВознаграждения               КАК Сумма,
	|    ОтчетКомитентуОПродажах.СтавкаНДСВознаграждения           КАК СтавкаНДСВознаграждения,
	|    ОтчетКомитентуОПродажах.СуммаНДСВознаграждения            КАК СуммаНДСВознаграждения,
	|    ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения КАК Номенклатура,
	|    ВЫБОР
	|        КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|            ТОГДА ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Артикул
	|        КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|            ТОГДА ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Код
	|        КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул)
	|            ТОГДА ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Код + "" "" 
	|                    + ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.Артикул
	|        КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|            ТОГДА """"
	|    КОНЕЦ                                                                        КАК КодАртикул,
	|    ОтчетКомитентуОПродажах.УслугаКомиссионногоВознаграждения.НаименованиеПолное КАК Товар,
	|    ОтчетКомитентуОПродажах.ЦенаВключаетНДС                                      КАК ЦенаВключаетНДС,
	|    ОтчетКомитентуОПродажах.УчитыватьНДС                                         КАК УчитыватьНДС
	|ИЗ
	|    Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|    ОтчетКомитентуОПродажах.Ссылка В(&МассивОбъектов)";
	
	Результат = Запрос.Выполнить();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_Акт");
	
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");
	
	Если ВыводитьДополнительныеКолонки Тогда
		ОбластьСтроки    = Макет.ПолучитьОбласть("СтрокаКодАртикул");
	Иначе
		ОбластьСтроки    = Макет.ПолучитьОбласть("Строка");  
	КонецЕсли;
	
	ОбластьИтого     = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС  = Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");
	
	
	ВыборкаПоДокументам = Результат.Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
		СведенияОКонтрагенте     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата);
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
		ДанныеПечатиЗаголовка = Новый Структура;
		ДанныеПечатиЗаголовка.Вставить("ПредставлениеПоставщика", ПредставлениеОрганизации);
		ДанныеПечатиЗаголовка.Вставить("ПредставлениеПолучателя", ПредставлениеКонтрагента);  
		ДанныеПечатиЗаголовка.Вставить("ТекстЗаголовка", ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента));
		
		ОбластьЗаголовка.Параметры.Заполнить(ДанныеПечатиЗаголовка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовка);
		
		ОбластьСтроки.Параметры.Заполнить(ВыборкаПоДокументам);         
		
		ДанныеДополнительнойКолонки = Новый Структура;        
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ДанныеДополнительнойКолонки.Вставить("ПредставлениеКодАртикул", НСтр("ru = 'Артикул'"));
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ДанныеДополнительнойКолонки.Вставить("ПредставлениеКодАртикул", НСтр("ru = 'Код'"));
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул Тогда
			ДанныеДополнительнойКолонки.Вставить("ПредставлениеКодАртикул", Нстр("ru='Код и артикул'"));
		КонецЕсли;
		
		ОбластьСтроки.Параметры.Заполнить(ДанныеДополнительнойКолонки);
		ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		СуммаВознаграждения    = ВыборкаПоДокументам.СуммаВознаграждения;
		СуммаНДСВознаграждения = ВыборкаПоДокументам.СуммаНДСВознаграждения;
		
		ОбластьИтого.Параметры.Заполнить(Новый Структура("Всего", ФормированиеПечатныхФормСервер.ФорматСумм(СуммаВознаграждения)));
		ТабличныйДокумент.Вывести(ОбластьИтого); 
		
		Если Не СуммаНДСВознаграждения =  0 Тогда
			ВсегоНДС = ФормированиеПечатныхФормСервер.ФорматСумм(СуммаНДСВознаграждения);
			НДС      = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС'"), НСтр("ru = 'Сумма НДС'"));
		Иначе
			ВсегоНДС = НСтр("ru='-'");
			НДС      = НСтр("ru = 'Без налога (НДС)'");
		КонецЕсли;
		
		ДанныеСуммаНДС = Новый Структура;
		ДанныеСуммаНДС.Вставить("ВсегоНДС", ВсегоНДС);
		ДанныеСуммаНДС.Вставить("НДС",      НДС);
		
		ОбластьИтогоНДС.Параметры.Заполнить(ДанныеСуммаНДС);
		ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
		
		
		ОбластьПодвал.Параметры.Заполнить(Новый Структура("ТекстОСуммеПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(СуммаВознаграждения)));
		ТабличныйДокумент.Вывести(ОбластьПодвал); 
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
		
	КонецЦикла;
	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой Отчет комитенту
// о продажах.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма отчета.
//
Функция ПечатьОтчетаКомитентуОПродажах(МассивОбъектов, ОбъектыПечати)
	
	ДополнительнаяКолонкаПечатныхФормДокументов = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	ВыводитьДополнительныеКолонки = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина; 
	РеквизитыДокумента            = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента              = НСтр("ru = 'Отчет комитенту о продажах'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетКомитентуОПродажах_ОтчетКомитентуОПродажах";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Ссылка,
	|	ОтчетКомитентуОПродажах.Номер КАК Номер,
	|	ОтчетКомитентуОПродажах.Дата КАК Дата,
	|	ОтчетКомитентуОПродажах.Организация.Префикс КАК Префикс,
	|	ОтчетКомитентуОПродажах.Договор КАК Договор,
	|	ОтчетКомитентуОПродажах.Контрагент КАК Получатель,
	|	ОтчетКомитентуОПродажах.Организация КАК Поставщик,
	|	ОтчетКомитентуОПродажах.Организация КАК Организация,
	|	ОтчетКомитентуОПродажах.СуммаДокумента КАК СуммаДокумента,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК Сумма,
	|	ОтчетКомитентуОПродажах.СтавкаНДСВознаграждения КАК СтавкаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ОтчетКомитентуОПродажах.УчитыватьНДС КАК УчитыватьНДС
	|ПОМЕСТИТЬ РеквизитыШапки
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ОтчетКомитентуОПродажах
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыШапки.Ссылка КАК Ссылка,
	|	РеквизитыШапки.Номер КАК Номер,
	|	РеквизитыШапки.Дата КАК Дата,
	|	РеквизитыШапки.Префикс КАК Префикс,
	|	РеквизитыШапки.Договор КАК Договор,
	|	РеквизитыШапки.Получатель КАК Получатель,
	|	РеквизитыШапки.Поставщик КАК Поставщик,
	|	РеквизитыШапки.Организация КАК Организация,
	|	ЕСТЬNULL(РеквизитыШапки.СуммаДокумента, 0) КАК СуммаДокумента,
	|	ЕСТЬNULL(РеквизитыШапки.СуммаВознаграждения, 0) КАК СуммаВознаграждения,
	|	ЕСТЬNULL(РеквизитыШапки.Сумма, 0) КАК Сумма,
	|	РеквизитыШапки.СтавкаНДСВознаграждения КАК СтавкаНДСВознаграждения,
	|	ЕСТЬNULL(РеквизитыШапки.СуммаНДСВознаграждения, 0) КАК СуммаНДСВознаграждения,
	|	РеквизитыШапки.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	РеквизитыШапки.УчитыватьНДС КАК УчитыватьНДС,
	|	ОтчетКомитентуОПродажахТовары.Номенклатура.Наименование КАК Товар,
	|	ОтчетКомитентуОПродажахТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименованиеПолное,
	|	ОтчетКомитентуОПродажахТовары.Характеристика.Наименование КАК Характеристика,
	|	ОтчетКомитентуОПродажахТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажахТовары.Цена, 0) КАК ЦенаПродажи,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажахТовары.Сумма, 0) КАК СуммаПродажи,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажахТовары.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажахТовары.КоличествоУпаковок, 0) КАК КоличествоУпаковок,
	|	ОтчетКомитентуОПродажахТовары.ДатаРеализации КАК ДатаПродажи,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул)
	|			ТОГДА ОтчетКомитентуОПродажахТовары.Номенклатура.Код + "" "" + ОтчетКомитентуОПродажахТовары.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК КодАртикул,
	|	ОтчетКомитентуОПродажахТовары.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетКомитентуОПродажахТовары.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	РеквизитыШапки КАК РеквизитыШапки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомитентуОПродажах.Товары КАК ОтчетКомитентуОПродажахТовары
	|		ПО РеквизитыШапки.Ссылка = ОтчетКомитентуОПродажахТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка
	|ИТОГИ
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Префикс),
	|	МАКСИМУМ(Договор),
	|	МАКСИМУМ(Получатель),
	|	МАКСИМУМ(Поставщик),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(СуммаДокумента),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(Сумма),
	|	МАКСИМУМ(СтавкаНДСВознаграждения),
	|	СУММА(СуммаНДСВознаграждения),
	|	МАКСИМУМ(ЦенаВключаетНДС),
	|	МАКСИМУМ(УчитыватьНДС),
	|	СУММА(ЦенаПродажи),
	|	СУММА(СуммаПродажи),
	|	СУММА(Количество),
	|	СУММА(КоличествоУпаковок),
	|	МАКСИМУМ(СтавкаНДС),
	|	СУММА(СуммаНДС)
	|ПО
	|	Ссылка";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетКомитентуОПродажах.ПФ_MXL_ОтчетКомитентуОПродажах");
	
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");
	
	Если ВыводитьДополнительныеКолонки Тогда             
		ОбластьШапка     = Макет.ПолучитьОбласть("ШапкаСКодом"); 
		ОбластьСтроки    = Макет.ПолучитьОбласть("СтрокаКодАртикул");       
	Иначе
		ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтроки    = Макет.ПолучитьОбласть("Строка");           
	КонецЕсли;
	
	ОбластьЗаголовок              = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрока                 = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого                  = Макет.ПолучитьОбласть("Итого");
	ОбластьСуммаПрописью          = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписи                = Макет.ПолучитьОбласть("Подписи");
	ОбластьСтрокаИтогПоПокупателю = Макет.ПолучитьОбласть("СтрокаИтогПоПокупателю");
	ОбластьСтрокаПокупатель       = Макет.ПолучитьОбласть("СтрокаПокупатель");
	
	Результат = Запрос.Выполнить();
	ВыборкаПоДокументам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		
		СведенияОбКомитенте    = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата);
		ПредставлениеКомитент = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбКомитенте, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
		СведенияОКомиссионер     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата);
		ПредставлениеКомиссионер = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКомиссионер, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		
		
		ДанныеПечатиЗаголовка = Новый Структура;
		ДанныеПечатиЗаголовка.Вставить("ПредставлениеКомитент", ПредставлениеКомитент);
		ДанныеПечатиЗаголовка.Вставить("ПредставлениеКомиссионер", ПредставлениеКомиссионер);  
		ДанныеПечатиЗаголовка.Вставить("ТекстЗаголовка", ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента));
		
		ОбластьЗаголовка.Параметры.Заполнить(ДанныеПечатиЗаголовка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовка);
		
		ДанныеДополнительнойКолонки = Новый Структура;
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ДанныеДополнительнойКолонки.Вставить("ПредставлениеКодАртикул", НСтр("ru = 'Артикул'"));
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ДанныеДополнительнойКолонки.Вставить("ПредставлениеКодАртикул", НСтр("ru = 'Код'"));
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул Тогда
			ДанныеДополнительнойКолонки.Вставить("ПредставлениеКодАртикул", "Код и артикул");
		КонецЕсли;
		
		ОбластьШапка.Параметры.Заполнить(ДанныеДополнительнойКолонки);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		НомерПП = 0;
		ВыборкаТовары = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			
			НомерПП = НомерПП + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаТовары);
			ПредставлениеНоменклатуры = ВыборкаТовары.Товар;
			Если ЗначениеЗаполнено(ВыборкаТовары.ТоварНаименованиеПолное) Тогда
				ПредставлениеНоменклатуры = ВыборкаТовары.ТоварНаименованиеПолное;
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаТовары.Характеристика) Тогда
				ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " (" + ВыборкаТовары.Характеристика + ")";
			КонецЕсли;
			ОбластьСтроки.Параметры.Товар = ПредставлениеНоменклатуры;
			
			ПараметрыСтроки = Новый Структура;
			ПараметрыСтроки.Вставить("НомерСтроки", НомерПП);
			ОбластьСтроки.Параметры.Заполнить(ПараметрыСтроки);
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ДанныеПечатиИтого = Новый Структура;
		ДанныеПечатиИтого.Вставить("Всего"   , ВыборкаПоДокументам.СуммаПродажи);
		ДанныеПечатиИтого.Вставить("СуммаНДС", ВыборкаПоДокументам.СуммаНДС);
		ОбластьИтого.Параметры.Заполнить(ДанныеПечатиИтого);
		ТабличныйДокумент.Вывести(ОбластьИтого); 
		
		ДанныеПечатиСуммаПрописью = Новый Структура;
		ДанныеПечатиСуммаПрописью.Вставить("ТекстОСуммеПрописью", НСтр("ru = 'Сумма комиссионного вознаграждения составила '")
		+ ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыборкаПоДокументам.СуммаВознаграждения));
		
		ДанныеПечатиСуммаПрописью.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыборкаПоДокументам.СуммаПродажи));
		
		ОбластьСуммаПрописью.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция получает данные для печатной формы Счета-фактуры.
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	"""",
	|	ДанныеДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(СчетаФактуры.Номер, НЕОПРЕДЕЛЕНО) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, НЕОПРЕДЕЛЕНО) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ЕСТЬNULL(СчетаФактуры.Валюта, НЕОПРЕДЕЛЕНО) КАК ВалютаСчетаФактуры,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Контрагент КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	"""" КАК АдресДоставки,
	|	ИСТИНА КАК ТолькоУслуги
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ФильтрПоДокументу
	|		ПО ДанныеДокумента.Ссылка = ФильтрПоДокументу.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ДанныеДокумента.Ссылка = СчетаФактуры.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ПрослеживаемыйТовар,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	"""" КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК Количество,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	0 КАК Цена
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|	
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
				РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу
//	                                                    ТаблицаДанныхДокументов с полями: Ссылка.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ИспользоватьУчетИмпортныхТоваров = Ложь, ИспользоватьКомиссионнуюТорговлю = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.УслугаКомиссионногоВознаграждения КАК Номенклатура,
	|	1,
	|	0,
	|	ТаблицаТоваров.СуммаВознаграждения КАК Сумма,
	|	ТаблицаТоваров.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДС,
	|	ДанныеДокументов.ЦенаВключаетНДС,
	|	ЛОЖЬ КАК ЭтоТовар
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетКомитентуОПродажах КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ПерезаполнитьБанковскийСчетОрганизации(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ОтчетКомитентуОПродажах;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		
		Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
		МодульОбновлениеИнформационнойБазыРТ = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыРТ");
		МодульОбновлениеИнформационнойБазыРТ.ЗаполнитьБанковскийСчетОрганизацииОбъектов(ПолноеИмяОбъекта, "БанковскийСчетОрганизации", Выборка, Параметры);
		
	#КонецЕсли
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКЗаполнениюБСО(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ОтчетКомитентуОПродажах;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		
		МодульОбновлениеИнформационнойБазыРТ = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыРТ");
		ДокументыДляОбработки = МодульОбновлениеИнформационнойБазыРТ.ОбъектыДляЗаполненияБанковскогоСчетаОрганизации(ПолноеИмяОбъекта, "БанковскийСчетОрганизации");
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДокументыДляОбработки);
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
