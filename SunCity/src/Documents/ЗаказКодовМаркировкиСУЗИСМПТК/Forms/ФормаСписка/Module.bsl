
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоСписокИсправления") Тогда
		ЭтоСписокИсправления = Истина;
	Иначе
		ЭтоСписокИсправления = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Организации.Добавить(Параметры.Отбор.Организация);
		Организация = Организации.Получить(0).Значение;
		ОрганизацииПредставление = ОбщегоНазначенияИСМПТК.ЗначениеРеквизитаОбъекта(Организация, "Представление");
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;	
	
	УстановитьУсловноеОформление();
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	РаботаСДокументамиИСМПТК.ОтборПоЗначениюСпискаПриСозданииНаСервере(Список, "Ответственный", Ответственный, СтруктураБыстрогоОтбора);
	РаботаСДокументамиИСМПТК.ОтборПоЗначениюСпискаПриСозданииНаСервере(Список, "Организация",   Организации,   СтруктураБыстрогоОтбора);
	
	//Переопределение: скрывается команда ввода Заказа на основании Заказа
	//наличие этой команды обусловлено определяемым типом ОснованиеЗаказКодовМаркировкиСУЗИСМПТК, в состав которого включен сам документ.
	//В этом случае, если в типовой конфигурации-приемнике модуля маркировки нет документа-основания для заказа, изменить тип на Строку (исключив Заказ) нельзя, 
	//поэтому скрываем ненужную команду программно.
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаИСМПТК", 
																	   "Видимость", ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПолучитьЗначениеВидимостиГруппыИСМПТК(ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаЗаказКодовМаркировкиСУЗИСМПТК()));
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьЗаказНаЭмиссию()
		Или ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияОбновлениеСтатусаЗаказНаЭмиссию()
		Или ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияПолучениеКмПоЗаказу() Тогда
		
		Элементы.Список.Обновить();
		УстановитьВидимостьКнопокИзмененияСтатуса(Элементы.Список.ТекущиеДанные.Статус);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтветственныйОтборПриИзменении(Элемент)
	
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ответственный", Ответственный, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Ответственный));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииПриИзменении(Элемент)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организации, Истина, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организация, Истина, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Истина, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Истина, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Истина, "Оформлено");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Истина, "Оформлено");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКМПовторно(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(ТекущиеДанные.Ссылка);
	
	ИнтеграцияИСМПТККлиент.ПовторноПолучитьКМПоЗаказуНаЭмиссию(МассивДокументов, Новый Структура("ЗапускатьФоновоеЗадание", Ложь));
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКодыМаркировкиВФайл(Команда)
	
	ТекстВопроса = НСтр("ru = 'Будут выгружены доступные коды маркировки заказа (за исключением ранее удалённых).'")
				 + Символы.ПС
				 + НСтр("ru = 'Продолжить?'");
		
	ВыгрузитьКодыМаркировки = Новый ОписаниеОповещения("ВыгрузитьКодыМаркировки", ЭтаФорма);
	ПоказатьВопрос(ВыгрузитьКодыМаркировки, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Даты
	ОбщегоНазначенияИСМПТКПереопределяемый.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
	ДоступнаКомандаИсправления = (РольДоступна("ПолныеПрава") Или РольДоступна("АдминистрированиеИСМПТК")) И ЭтоСписокИсправления;
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокПолучитьКМПовторно", "Видимость", ДоступнаКомандаИсправления);
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокКоманднаяПанель", "Видимость", Не ДоступнаКомандаИсправления);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКРазбитьНаНесколькоДокументов", "Видимость", Ложь);

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокИзмененияСтатуса(Статус = Неопределено)
	
	НеОтправлен = Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Черновик");
	КодыГотовы  = (Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.КодыМаркировкиЭмитированы")
				ИЛИ Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.КодыМаркировкиЭмитированыЧастично"));
	КодыПолучены = Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Выполнен");
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКОтправить",  "Видимость",   НеОтправлен);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКПолучитьКМ", "Видимость",   КодыГотовы);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКОбновить",   "Видимость",   Не НеОтправлен);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКПроверить",  "Видимость",   Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКОбновить", "Доступность", Ложь);
		Возврат;
	КонецЕсли;
	
	УстановитьВидимостьКнопокИзмененияСтатуса(ТекущиеДанные.Статус);
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументЗаказКодовМаркировкиСУЗИСМПТКОбновить", "Доступность", Истина);
	
	Если ТекущиеДанные.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция")
		ИЛИ ТекущиеДанные.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты")
		ИЛИ ТекущиеДанные.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная") Тогда
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСохранитьКодыМаркировкиВФайл", "Видимость", Ложь);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОформитьНанесениеКМ", "Видимость", МожноВводитьНанесение(Элементы.Список.ТекущиеДанные.Ссылка));
	Иначе
		
		Если ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Выполнен") 
			ИЛИ ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.КодыМаркировкиЭмитированы") Тогда
			
			ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСохранитьКодыМаркировкиВФайл", "Видимость", Истина);
		КонецЕсли;
	    ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОформитьНанесениеКМ", "Видимость", Ложь);
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКодыМаркировкиИзФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		
		НовыйТекстовыйДокумент = Новый ТекстовыйДокумент;
		
		Заказы = Элементы.Список.ВыделенныеСтроки;
		
		СписокКодов = ИнтеграцияИСМПТКВызовСервера.ПолучитьКодыМаркировкиЗаказов(Заказы);
		
		Если Не СписокКодов = Неопределено Тогда
			
			Для Каждого СтрокаТЧ Из СписокКодов Цикл
				НовыйТекстовыйДокумент.ДобавитьСтроку(РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.Base64ВШтрихкод(СтрокаТЧ.КодМаркировки));
			КонецЦикла;
			
			НовыйТекстовыйДокумент.Записать(ВыбранныеФайлы[0]);
			
			ИнтеграцияИСМПТКВызовСервера.ОтметитьВыгрузкуКодовМаркировкиЗаказа(СписокКодов);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКодыМаркировки(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Заголовок = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияЗаголовокВыборФайла();
		ДиалогВыбораФайла.Фильтр 	= "CSV (Comma-Separated Values)(*.csv)|*.csv";
		ДиалогВыбораФайла.ИндексФильтра = 0;
		ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
		ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ВыгрузитьКодыМаркировкиИзФайлаЗавершение", ЭтотОбъект);
		ДиалогВыбораФайла.Показать(Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьНанесениеКМ(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		
		Если МожноВводитьНанесение(Элементы.Список.ТекущиеДанные.Ссылка) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Основание", Элементы.Список.ТекущиеДанные.Ссылка);
			ОткрытьФорму("Документ.НанесениеКодовМаркировкиСУЗИСМПТК.ФормаОбъекта", ПараметрыФормы);
		Иначе
			ТекстСообщения = НСтр("ru='На основании документа %1 уже оформлен документ ""%НаименованиеДок%""!'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НаименованиеДок%", ПолуитьПредставлениеДокументаНанесение());
			ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Элементы.Список.ТекущиеДанные.Ссылка);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, , , "Форма.Объект");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолуитьПредставлениеДокументаНанесение() 

	Возврат Метаданные.Документы.НанесениеКодовМаркировкиСУЗИСМПТК.Представление();

КонецФункции

&НаСервере
Функция МожноВводитьНанесение(ЗаказКМ)

	ЕстьКодыДляНанесения = РаботаСДокументамиИСМПТК.ПроверитьНаличиеКодовВПуле(ЗаказКМ).КодыПолучены;
	 
	Если ЗаказКМ.ВыполненоНанесениеКМ = Ложь 
		И ЗаказКМ.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Выполнен") 
		И ЕстьКодыДляНанесения Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
