#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Для Каждого СтрокаТовары Из ЭтотОбъект.Товары Цикл
		Если ПустаяСтрока(СтрокаТовары.ИдентификаторСтроки) Тогда
			СтрокаТовары.ИдентификаторСтроки = Новый УникальныйИдентификатор();
		КонецЕсли;
		СтрокаТовары.СпособФормированияСерийногоНомера = Перечисления.СпособыФормированияСерийногоНомераСУЗИСМПТК.Автоматически;
	КонецЦикла;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
		ДокументОснованиеДляЗаполнения = ДанныеЗаполнения.ДокументОснование;
	Иначе
		ДокументОснованиеДляЗаполнения = ДанныеЗаполнения;
	КонецЕсли;	
	
	Если ДокументОснованиеДляЗаполнения = Неопределено Тогда
		Возврат;
	ИначеЕсли ТипЗнч(ДокументОснованиеДляЗаполнения) = Тип("Массив") 
		И ДокументОснованиеДляЗаполнения.Количество() <> 0 Тогда
		ТипДокумента = ТипЗнч(ДокументОснованиеДляЗаполнения[0]);
	Иначе
		ТипДокумента = ТипЗнч(ДокументОснованиеДляЗаполнения);
	КонецЕсли;
	
	//Если создается документ без основания
	Если ТипДокумента = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;

	ПараметрыЗаполнения = РаботаСДокументамиИСМПТК.ПолучитьПараметрыЗаполненияДокументовИСМПТПоУмолчанию();
	ПараметрыЗаполнения.Вставить("МассивДокументов", ДокументОснованиеДляЗаполнения);
	ПараметрыЗаполнения.Вставить("МассивВидовДокумента", Новый Массив);
	
	ТипДокументаИСМПТ = Документы.ЗаказКодовМаркировкиСУЗИСМПТК.ПустаяСсылка();
	МассивДанныхДляЗаполнения = РаботаСДокументамиИСМПТК.ПодготовитьДанныеДляЗаполненияДокументаСУЗ(ПараметрыЗаполнения, ТипДокументаИСМПТ);
	
	Если ТипЗнч(МассивДанныхДляЗаполнения) = Тип("Массив") И МассивДанныхДляЗаполнения.Количество() > 0 Тогда
		
		Для Каждого СтруктураДокумента Из МассивДанныхДляЗаполнения Цикл
			
			Если МассивДанныхДляЗаполнения.Найти(СтруктураДокумента) > 0 Тогда
				НовыйДокументЗаказ = Документы.ЗаказКодовМаркировкиСУЗИСМПТК.СоздатьДокумент();
			Иначе
				НовыйДокументЗаказ = ЭтотОбъект;
			КонецЕсли; 
			
			//Заполняем шапку документа
			ЗаполнитьЗначенияСвойств(НовыйДокументЗаказ, СтруктураДокумента.Реквизиты[0]);
					
			НовыйДокументЗаказ.Состояние = Перечисления.СостоянияДокументовСУЗИСМПТК.Черновик;  
			НовыйДокументЗаказ.Статус 	 = Перечисления.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Черновик;  		
			
			ВидыПродукцииПриЗаполненииЗаказа = Новый Массив();
			ЕстьСтрокиБезGTIN = Ложь;
						
			//Заполняем табличную часть
			Для Каждого СтрокаТЧ Из СтруктураДокумента.Товары Цикл
				
				НоваяСтрокаТЧ = НовыйДокументЗаказ.Товары.Добавить();
				НоваяСтрокаТЧ.Номенклатура   	 = СтрокаТЧ.Номенклатура;
				НоваяСтрокаТЧ.Характеристика 	 = СтрокаТЧ.Характеристика;
				НоваяСтрокаТЧ.Упаковка 		 	 = СтрокаТЧ.Упаковка;
				НоваяСтрокаТЧ.Количество	 	 = СтрокаТЧ.Количество;
				НоваяСтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.КоличествоУпаковок;
				
				Если ЗначениеЗаполнено(СтрокаТЧ.GTIN) Тогда
					GTINДляЗаполнения = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.GTINПоШтрихкодуEAN(СтрокаТЧ.GTIN);
				Иначе
					GTINДляЗаполнения = "";
					ЕстьСтрокиБезGTIN = Истина;
				КонецЕсли;
				НоваяСтрокаТЧ.GTIN = GTINДляЗаполнения;
				ВидПродукцииТовара = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьВидПродукцииПоНоменклатуре(СтрокаТЧ.Номенклатура);
				
				УпаковкаНеШтучная = ОбщегоНазначенияИСМПТКПереопределяемый.УпаковкаНеШтучная(СтрокаТЧ.Номенклатура, СтрокаТЧ.Упаковка);
				
				Если ВидПродукцииТовара = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция") Тогда
					НоваяСтрокаТЧ.Шаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.МолочнаяПродукция");
					Если ВидыПродукцииПриЗаполненииЗаказа.Найти("Молочная") = Неопределено Тогда 
						ВидыПродукцииПриЗаполненииЗаказа.Добавить("Молочная");
					КонецЕсли;
					
				ИначеЕсли ВидПродукцииТовара = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная") Тогда
					НоваяСтрокаТЧ.Шаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.Обувь");
					Если ВидыПродукцииПриЗаполненииЗаказа.Найти("Обувная") = Неопределено Тогда 
						ВидыПродукцииПриЗаполненииЗаказа.Добавить("Обувная");
					КонецЕсли;
					
				ИначеЕсли ВидПродукцииТовара = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты") Тогда
					НоваяСтрокаТЧ.Шаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.ЛекарственныеПрепараты");
					Если ВидыПродукцииПриЗаполненииЗаказа.Найти("Фарма") = Неопределено Тогда 
						ВидыПродукцииПриЗаполненииЗаказа.Добавить("Фарма");
					КонецЕсли;
					
				ИначеЕсли ВидПродукцииТовара = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная") Тогда
					Если ЗначениеЗаполнено(СтрокаТЧ.Упаковка) 
						И УпаковкаНеШтучная Тогда
						//Считаем, что пользователь собирается заказывать коды для блоков сигарет
						НоваяСтрокаТЧ.Шаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.БлокТабачныхПачек");
						//также подгоняем количество к заказу под количество упаковок (т.к. заказываются групповые КМ)
						НоваяСтрокаТЧ.Количество = НоваяСтрокаТЧ.КоличествоУпаковок;
					Иначе
						НоваяСтрокаТЧ.Шаблон = ПредопределенноеЗначение("Перечисление.ШаблоныКодовМаркировкиСУЗИСМПТК.ТабачнаяПачка");
					КонецЕсли;
					Если ВидыПродукцииПриЗаполненииЗаказа.Найти("Табак") = Неопределено Тогда 
						ВидыПродукцииПриЗаполненииЗаказа.Добавить("Табак");
					КонецЕсли;
				КонецЕсли;
		
				НоваяСтрокаТЧ.СпособФормированияСерийногоНомера = ПредопределенноеЗначение("Перечисление.СпособыФормированияСерийногоНомераСУЗИСМПТК.Автоматически");
				
			КонецЦикла;
		
			//Предупреждения по количеству ТГ
			Если ВидыПродукцииПриЗаполненииЗаказа.Количество() > 1 Тогда
				ТекстПредупреждения = НСтр( "ru = 'В таблице ""Товары"" присутствует номенклатура из разных товарных групп! Заказ можно оформлять только по одному виду продукции.'") 
									+ Символы.ПС 
									+ НСтр( "ru = 'Для разделения воспользуйтесь командой ""Разбить документ"".'");
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстПредупреждения);
				НовыйДокументЗаказ.ВидПродукции = ИнтеграцияИСМПТКВызовСервера.ПолучитьЗначениеПоУмолчаниюДляВидаПродукцииЗаказа();
				
			ИначеЕсли ВидыПродукцииПриЗаполненииЗаказа.Количество() = 0 Тогда
				ТекстПредупреждения = НСтр( "ru = 'Не удалось распознать товарную группу указанной номенклатуры.'");
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстПредупреждения);
				
			Иначе
				Если ВидыПродукцииПриЗаполненииЗаказа[0] = "Молочная" Тогда
					НовыйДокументЗаказ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция");
				ИначеЕсли ВидыПродукцииПриЗаполненииЗаказа[0] = "Табак" Тогда
					НовыйДокументЗаказ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная");
				ИначеЕсли ВидыПродукцииПриЗаполненииЗаказа[0] = "Обувная" Тогда
					НовыйДокументЗаказ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная");
				ИначеЕсли ВидыПродукцииПриЗаполненииЗаказа[0] = "Фарма" Тогда
					НовыйДокументЗаказ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты");
				КонецЕсли;
			КонецЕсли;
			
			НовыйДокументЗаказ.СтранаПроизводства = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьСтрануОтправленияВвозИзЕАЭС(СтруктураДокумента.Реквизиты[0].ДокументОснование.Контрагент);
			Если Не НовыйДокументЗаказ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная") Тогда
				НовыйДокументЗаказ.СтранаПроизводителя = НовыйДокументЗаказ.СтранаПроизводства;
			КонецЕсли;
			Если Не НовыйДокументЗаказ.СтранаПроизводства = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьСсылкаСтранаКазахастан() Тогда
				НовыйДокументЗаказ.СпособВводаВОборот = ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗИСМПТК.Импорт");
			Иначе
				НовыйДокументЗаказ.СпособВводаВОборот = ПредопределенноеЗначение("Перечисление.СпособыВводаВОборотСУЗИСМПТК.Производство");
			КонецЕсли;
			
			Если ЕстьСтрокиБезGTIN Тогда
				//Значит в исходной таблице присутствует товар, у которого зарегистрировано два одинаковых штрихкода, различающихся только упаковкой.
				//Такое может быть у фармы в Рознице - штрихкод одновременно для блистера (без упаковки) и он же - для пачки (с упаковкой).
				ТекстПредупреждения = НСтр( "ru = 'Внимание! В таблице присутствуют товары, для которых нужно уточнить значение GTIN.'");
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстПредупреждения);
			КонецЕсли;
			
			//Предупреждения по особенностям работы 
			Если Не ВидыПродукцииПриЗаполненииЗаказа.Найти("Табак") = Неопределено Тогда
				//Т.к. для табака шаблон критически важен при отправке по АПИ, а заполнение происходит по косвенному признаку (наличие упаковки), указываем на необходимость контроля.
				ТекстПредупреждения = НСтр( "ru = 'Присутствует табачная продукция. Требуется выполнить проверку в таблице ""Товары"": шаблон кода в строке (пачка/блок) должен соответствовать зарегистрированным данным GTIN.'");
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстПредупреждения);
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Состояние = РаботаСДокументамиИСМПТК.СостояниеДокументаСУЗ(ЭтотОбъект);
	
	Если ПустаяСтрока(ЭтотОбъект.ИдентификаторПроизводственногоЗаказа) Тогда
		ЭтотОбъект.ИдентификаторПроизводственногоЗаказа = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;
	
	Если ЭтотОбъект.Ссылка.Пустая() Тогда
		ЭтотОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Черновик");
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторСтроки) Тогда
			СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор());
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Шаблон) Тогда
			
			Если ЭтотОбъект.ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.Обувная Тогда
				СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗИСМПТК.Обувь;
				
			ИначеЕсли ЭтотОбъект.ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.МолочнаяПродукция Тогда
				СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗИСМПТК.МолочнаяПродукция;
				
			ИначеЕсли ЭтотОбъект.ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты Тогда
				СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗИСМПТК.ЛекарственныеПрепараты;
				
			ИначеЕсли ЭтотОбъект.ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.ЛегкаяПромышленность Тогда
				СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗИСМПТК.ЛегкаяПромышленность;
				
			ИначеЕсли ЭтотОбъект.ВидПродукции = Перечисления.ВидыПродукцииИСМПТК.Табачная Тогда
				Если Не ЗначениеЗаполнено(СтрокаТЧ.Упаковка)
					Или СтрокаТЧ.Упаковка = ИнтеграцияИСМПТКПереопределяемый.ПолучитьБазовуюЕдиницуИзмерения(СтрокаТЧ.Номенклатура) Тогда
					СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗИСМПТК.ТабачнаяПачка;
				Иначе
					СтрокаТЧ.Шаблон = Перечисления.ШаблоныКодовМаркировкиСУЗИСМПТК.БлокТабачныхПачек;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.ИдентификаторПроизводственногоЗаказа = Неопределено;
	ЭтотОбъект.Ответственный = Неопределено;
	ЭтотОбъект.КонтактноеЛицо = Неопределено;
	ЭтотОбъект.OrderID = Неопределено;
	ЭтотОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиЗаказовНаЭмиссиюКодовМаркировкиИСМПТК.Черновик");
	ЭтотОбъект.Состояние = Неопределено;
	ЭтотОбъект.ДокументОснование = Неопределено;
	ЭтотОбъект.ВыполненоНанесениеКМ = Неопределено;
	ЭтотОбъект.НомерПакета = Неопределено;
	ЭтотОбъект.ЗаказРодитель = Неопределено;
	ЭтотОбъект.ПричинаОтклонения = Неопределено;
	ЭтотОбъект.Номер = Неопределено;

	ЭтотОбъект.Товары.Очистить();
	ЭтотОбъект.СерийныеНомера.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//В общем случае не проверяем заполненность реквизитов при записи
	//проверка необходимых реквизитов проходит при отправке документа
	//в случае необходимости можно указать реквизиты проверки отдельно
	//в процедуре ДокументЗаказНаЭмиссиюКодовМаркировкиСУЗ_ОбработкаПроверкиЗаполнения
	ПроверяемыеРеквизиты.Очистить();
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
		
КонецПроцедуры

#КонецЕсли
