#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДокументОснованиеДляЗаполнения = ДанныеЗаполнения.ДокументОснование;
		Иначе
	        ДокументОснованиеДляЗаполнения = Неопределено;
		КонецЕсли;
	Иначе
		ДокументОснованиеДляЗаполнения = ДанныеЗаполнения;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДокументОснованиеДляЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	МассивДокументов = Новый Массив();
	МассивДокументов.Добавить(ДокументОснованиеДляЗаполнения);
	
	ПараметрыЗаполнения = РаботаСДокументамиИСМПТК.ПолучитьПараметрыЗаполненияДокументовИСМПТПоУмолчанию();
	ПараметрыЗаполнения.Вставить("МассивДокументов", МассивДокументов);
	
	ТипДокументаИСМПТ = Документы.АктПриемаПередачиИСМПТК.ПустаяСсылка();
	МассивДанныхДляЗаполнения = РаботаСДокументамиИСМПТК.ПодготовитьДанныеДляЗаполненияДокументаИСМПТ(ПараметрыЗаполнения, ТипДокументаИСМПТ);
	
    Если ТипЗнч(МассивДанныхДляЗаполнения) = Тип("Массив") И МассивДанныхДляЗаполнения.Количество() > 0 Тогда
		
		Для Каждого СтруктураДокумента Из МассивДанныхДляЗаполнения Цикл
			
			Если МассивДанныхДляЗаполнения.Найти(СтруктураДокумента) > 0 Тогда
				НовыйДокументАПП = Документы.АктПриемаПередачиИСМПТК.СоздатьДокумент();
			Иначе
				НовыйДокументАПП = ЭтотОбъект;
			КонецЕсли;
	
			ЗаполнитьЗначенияСвойств(НовыйДокументАПП, СтруктураДокумента.Реквизиты[0]);
			
			//Заполняем шапку документа дополнительными сведениями
			СтруктураПереопределяемыхРеквизитов = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьЗначенияПоУмолчаниюДляСозданияАктаПриемаПередачиИСМПТ(МассивДокументов);
			ЗаполнитьЗначенияСвойств(НовыйДокументАПП, СтруктураПереопределяемыхРеквизитов);
			
			//Для АПП-Корректировки нужно переназначить Документ-Основание, т.е. требуется указывать основание из первичного АПП, но сам документ вводится на основании УОР
			Если ТипЗнч(ДокументОснованиеДляЗаполнения) = Тип("ДокументСсылка.УведомлениеОРасхожденииИСМПТК") Тогда
				СтруктураДанныхДляАктаКорректировки = РаботаСДокументамиИСМПТК.ПолучитьСтруктураДанныхДляАктаКорректировкиИСМПТ(ДокументОснованиеДляЗаполнения);
				ЗаполнитьЗначенияСвойств(НовыйДокументАПП, СтруктураДанныхДляАктаКорректировки);
			КонецЕсли; 
			
			НовыйДокументАПП.Состояние = Перечисления.СостоянияДокументовИСМПТК.Сформирован;  
			НовыйДокументАПП.Статус    = Перечисления.СтатусыДокументовИСМПТК.Черновик;  		
			
			//Заполняем табличную часть
			ПрисутствуетТабак = Ложь;
			ПрисутствуетОбувь = Ложь;
			
			Если НовыйДокументАПП.ТипАкта = ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исходный") Тогда
				Если СтруктураДокумента.Свойство("Товары")
					И Не СтруктураДокумента.Товары = Неопределено Тогда
					Для Каждого СтрокаТЧ Из СтруктураДокумента.Товары Цикл
						НоваяСтрокаТЧ = НовыйДокументАПП.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЧ);
						Если СтрокаТЧ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная") Тогда 
							ПрисутствуетТабак = Истина;
						ИначеЕсли СтрокаТЧ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная") Тогда 
							ПрисутствуетОбувь = Истина;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				Если СтруктураДокумента.Свойство("Марки")
					И Не СтруктураДокумента.Марки = Неопределено Тогда
					Для Каждого СтрокаТЧ Из СтруктураДокумента.Марки Цикл
						НоваяСтрокаТЧ = НовыйДокументАПП.Марки.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЧ);
						Если СтрокаТЧ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная") Тогда 
							ПрисутствуетТабак = Истина;
						ИначеЕсли СтрокаТЧ.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная") Тогда 
							ПрисутствуетОбувь = Истина;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ИсходныйАПП = РаботаСДокументамиИСМПТК.НайтиДокументПоИдентификаторуДляУстановкиСвязи(ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК(), НовыйДокументАПП.ИдентификаторАПППервичный);
				НовыйДокументАПП.ДокументОснование = ИсходныйАПП.ДокументОснование;
				
			КонецЕсли;
			
			Если ПрисутствуетТабак И Не ПрисутствуетОбувь Тогда
				НовыйДокументАПП.ТоварнаяГруппа = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная");
			ИначеЕсли ПрисутствуетОбувь И Не ПрисутствуетТабак Тогда
				НовыйДокументАПП.ТоварнаяГруппа  = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Состояние = РаботаСДокументамиИСМПТК.СостояниеДокументаИСМПТ(ЭтотОбъект);
		
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Автор) Тогда
		ЭтотОбъект.Автор = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ТекущийПользователь();
	КонецЕсли;
	
	Если ЭтотОбъект.Направление = Перечисления.НаправленияДокументовИСМПТК.Исходящий Тогда
		ЭтотОбъект.Контрагент = ЭтотОбъект.Получатель;
	Иначе
		ЭтотОбъект.Контрагент = ЭтотОбъект.Поставщик;
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Статус) Тогда
		ЭтотОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.Черновик"); 
		ЭтотОбъект.ЭтапОформления = ПредопределенноеЗначение("Перечисление.ЭтапыОформленияДокументовИСЦЭДМ.ВРаботе");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Номер)
		И ЭтотОбъект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
		ЭтотОбъект.Номер = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьНомерНаПечать(ЭтотОбъект);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторАПППервичный)
		И ЗначениеЗаполнено(ЭтотОбъект.РегистрационныйНомерСвязанногоАкта) Тогда
		
		ЭтотОбъект.ИдентификаторАПППервичный = ЭтотОбъект.РегистрационныйНомерСвязанногоАкта; 
		СтруктураПоиска = Новый Структура("ИмяДокумента,ИмяПараметра,ВидДокумента", ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОРасхожденииИСМПТК(), "РегистрационныйНомерСвязанногоАкта", Неопределено);
		СсылкаУОР = РаботаСДокументамиИСМПТК.НайтиДокументИСПоНомеру(ЭтотОбъект.РегистрационныйНомерСвязанногоАкта, СтруктураПоиска);
		Если Не СсылкаУОР = Неопределено Тогда 
			ЭтотОбъект.ИдентификаторУведОРасхождениях = ИнтеграцияИСМПТКПереопределяемый.ЗначениеРеквизитаОбъекта(СсылкаУОР, "Идентификатор");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ТипАкта = ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исправленный") 
		И ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторУведОРасхождениях) 
		И ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		
		СсылкаНаУведомлениеОРасхождениях = РаботаСДокументамиИСМПТК.ПолучитьДокументДляОбновленияСвязи(
										   ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОРасхожденииИСМПТК(), ЭтотОбъект.ИдентификаторУведОРасхождениях, "ИдентификаторАППИсправленный");	
			
		Если Не СсылкаНаУведомлениеОРасхождениях = Неопределено Тогда
			Попытка
				УведОРасхождениях = СсылкаНаУведомлениеОРасхождениях.ПолучитьОбъект();
				УведОРасхождениях.ИдентификаторАППИсправленный = ЭтотОбъект.Идентификатор;
				УведОРасхождениях.Записать();
			Исключение
				ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПроизошлаОшибкаПриЗаписиДокументаОснования()
							   + Символы.ПС 
							   + ОписаниеОшибки()
							   + Символы.ПС
							   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации();
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", СсылкаНаУведомлениеОРасхождениях);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
					
				ТекстОшибки = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаПриЗаписиДокументаСПараметром()
							+ Символы.ПС
							+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, СсылкаНаУведомлениеОРасхождениях);								 
				ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияЗаписьДокумента();
				ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ЗаписываемыйДокумент%", Метаданные.Документы.АктПриемаПередачиИСМПТК.Представление()); 
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.ТипАкта = ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исправленный") 
		И ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторАПППервичный) 
		И ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		
		СсылкаНаАПППервичный = РаботаСДокументамиИСМПТК.ПолучитьДокументДляОбновленияСвязи(
										   ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК(),
										   ЭтотОбъект.ИдентификаторУведОРасхождениях,
										   "ИдентификаторАППИсправленный");
		Если Не СсылкаНаАПППервичный = Неопределено Тогда
			Попытка
				АПППервичный = СсылкаНаАПППервичный.ПолучитьОбъект();
				АПППервичный.ИдентификаторАППИсправленный = ЭтотОбъект.Идентификатор;
				АПППервичный.Записать();
			Исключение
				ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПроизошлаОшибкаПриЗаписиДокументаОснования()
							   + Символы.ПС 
							   + ОписаниеОшибки()
							   + Символы.ПС
							   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации();
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", СсылкаНаАПППервичный);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
					
				ТекстОшибки = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаПриЗаписиДокументаСПараметром()
							+ Символы.ПС
							+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, СсылкаНаАПППервичный);								 
				ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияЗаписьДокумента();
				ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ЗаписываемыйДокумент%", Метаданные.Документы.АктПриемаПередачиИСМПТК.Представление()); 
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ЭтотОбъект.ДокументОснование = Неопределено; 
	ЭтотОбъект.Идентификатор = Неопределено;
	ЭтотОбъект.НомерИСМПТ = Неопределено;
	ЭтотОбъект.ДатаВИСМПТ = Неопределено;
	ЭтотОбъект.Контрагент = Неопределено;
	ЭтотОбъект.Статус 	  = Перечисления.СтатусыДокументовИСМПТК.Черновик;  
	ЭтотОбъект.Состояние  = Неопределено;
	ЭтотОбъект.РегистрационныйНомерСвязанногоАкта = Неопределено;	
	ЭтотОбъект.Автор = Неопределено;
	ЭтотОбъект.Номер = Неопределено;
	ЭтотОбъект.РегНомерНаБумажномНосителе	  = Неопределено;
	ЭтотОбъект.ДатаВыпискиНаБумажномНосителе  = Неопределено;
	ЭтотОбъект.ЭтапОформления = Перечисления.ЭтапыОформленияДокументовИСЦЭДМ.ВРаботе;
	ЭтотОбъект.ИдентификаторУведОРасхождениях = Неопределено;
	ЭтотОбъект.ИдентификаторАППИсправленный   = Неопределено;
	ЭтотОбъект.ИдентификаторАПППервичный      = Неопределено;
	
	ЭтотОбъект.Товары.Очистить();
	ЭтотОбъект.Марки.Очистить();
	ЭтотОбъект.Итоги.Очистить();
	ЭтотОбъект.Ошибки.Очистить(); 
	ЭтотОбъект.Расхождения.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//В общем случае не проверяем заполненность реквизитов при записи
	//проверка необходимых реквизитов проходит при отправке документа
	//в случае необходимости можно указать реквизиты проверки отдельно
	//в процедуре ДокументАПП_ОбработкаПроверкиЗаполнения
	ПроверяемыеРеквизиты.Очистить();
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	РаботаСДокументамиИСМПТКПереопределяемый.ДокументАПП_ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	РаботаСДокументамиИСМПТКПереопределяемый.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Если ЭтотОбъект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Входящий") Тогда
		Префикс = "В";
	ИначеЕсли ЭтотОбъект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
		Префикс = "И";
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли