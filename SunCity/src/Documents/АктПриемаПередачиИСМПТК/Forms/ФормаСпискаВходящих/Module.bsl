////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Организация = Параметры.Отбор.Организация;
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;

	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьАктПриемаПередачи() Тогда
		
		Элементы.Список.Обновить();
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если Не ТекущиеДанные = Неопределено Тогда
			ИзменитьКоманднуюПанельДокумента(ТекущиеДанные);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ОчиститьСообщения();
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	МножественныйВыбор = Элементы.Список.ВыделенныеСтроки.Количество() > 1 ;
	ИзменитьКоманднуюПанельДокумента(ТекущиеДанные, МножественныйВыбор);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	
	УстановитьБыстрыйОтбор("Организация", Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьБыстрыйОтбор("Контрагент", Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	
	УстановитьБыстрыйОтбор("Состояние", Состояние);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ВидЭлемента, ЗначениеЭлемента)
	
	ОбщегоНазначенияИСМПТККлиентСервер.ИзменитьЭлементОтбораСписка(Список, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКоманднуюПанельДокумента(ТекущиеДанные = Неопределено, МножественныйВыбор = Ложь)
	
	ИспользуютсяЭтапы = ОбщегоНазначенияИСМПТКВызовСервера.ПроверитьЗначениеКонстанты("ИспользоватьЭтапыОформленияДокументовИСМПТК");
	МожноПодтверждатьБезСверки = ОбщегоНазначенияИСМПТКПереопределяемый.ЭтоПолноправныйПользователь(ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ТекущийПользователь(), Истина)
								Или РольДоступна("ПравоПодтвержденияАктаБезПроверкиИСМПТК");
									
	Если Не МножественныйВыбор
		И НЕ ТекущиеДанные = Неопределено Тогда
		
		МожноПодтвердить = ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.ОжидаетПриемку")
						   И (МожноПодтверждатьБезСверки ИЛИ ТекущиеДанные.Проверен);
		МожноОтклонить   = ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.ОжидаетПриемку");
		МожноОформитьУОР = ТекущиеДанные.ТипАкта = ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исходный")
						   И Не ТекущиеДанные.Ссылка.Расхождения.Количество() = 0;
	Иначе
		МожноПодтвердить = Истина;
		МожноОтклонить   = Истина;
		МожноОформитьУОР = Истина;
	КонецЕсли;
	
	//Команды АПИ
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДокументАПППодтвердить", 
																	   "Видимость", МожноПодтвердить);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДокументАППОтклонить",
																	   "Видимость", МожноОтклонить);	
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаВвестиУведомлениеОРасхождении",
																	   "Видимость", МожноОформитьУОР);
КонецПроцедуры

#Область УведомлениеОРасхождении

&НаКлиенте
Процедура ВвестиУведомлениеОРасхождении(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		
		Если Элементы.Список.ТекущиеДанные.ТипАкта = ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исходный") Тогда
			Если МожноВводитьУОРпоАПП(Элементы.Список.ТекущиеДанные.Ссылка) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Основание", Элементы.Список.ТекущиеДанные.Ссылка);
				ОткрытьФорму("Документ.УведомлениеОРасхожденииИСМПТК.ФормаОбъекта", ПараметрыФормы);
			Иначе
				ТекстСообщения = НСтр("ru='На основании документа %1 уже оформлено Уведомление о расхождениях!'");
				ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Элементы.Список.ТекущиеДанные.Ссылка);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, , , "Форма.Объект");
			КонецЕсли;
		Иначе
			ТекстСообщения = НСтр("ru='Документ %1 исправленный. Уведомление можно вводить только на основании первичного Акта.'");
			ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Элементы.Список.ТекущиеДанные.Ссылка);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, , , "Форма.Объект");
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция МожноВводитьУОРпоАПП(АПП)

	Возврат ?(ЗначениеЗаполнено(АПП.ИдентификаторУведОРасхождениях), Ложь, Истина);
	
КонецФункции

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
