#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расходный ордер на товары
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РасходныйОрдерНаТовары";
	КомандаПечати.Представление = НСтр("ru = 'Расходный ордер на товары'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 50;
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 55;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект, ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	
	СкладскиеОперации = Новый Массив;
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	Иначе
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	КонецЕсли;
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.АктОРасхожденияхПриПриемкеТоваров - документ для инициализации данных.
//  ДополнительныеСвойства - Структура - структура дополнительных свойств.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст ="ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Магазин КАК Магазин,
	|	ДанныеДокумента.ДокументОснование КАК Основание,
	|	ДанныеДокумента.ДокументОснование.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ДанныеДокумента.ДокументОснование.АналитикаХозяйственнойОперации
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.РеализацияТоваров
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.РеализацияТоваров)
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПеремещениеТоваров)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПустаяСсылка)
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ДанныеДокумента.ДокументОснование.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	(НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ВозможныДвиженияПоРезерву = Ложь;
	Если ЗначениеЗаполнено(Реквизиты.Основание) И ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		ЗаказПокупателя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Основание, "ЗаказПокупателя", Истина);
		ВозможныДвиженияПоРезерву = ЗначениеЗаполнено(ЗаказПокупателя);
	КонецЕсли; 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ПоВозвратуПоставщику", ЗначениеЗаполнено(Реквизиты.Основание) И ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") );
	
	Если ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	ИначеЕсли ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику);
	ИначеЕсли ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	Иначе
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	КонецЕсли;
	
	Запрос.Текст ="ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ВЫБОР
	|		КОГДА &ПоВозвратуПоставщику
	|			ТОГДА -ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	&Контрагент КАК Контрагент,
	|	&Основание КАК Основание
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТоварыНаСкладах
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	0 КАК Резерв,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.Контрагент КАК Контрагент,
	|	ТаблицаТовары.Сумма КАК СуммаПоступления
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|   &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТоварыКОтгрузке
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
    |   &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|";
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаСерийныхНомеров();
	
	Если ВозможныДвиженияПоРезерву Тогда
		Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаРезерва();
		Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказПокупателя);	
	КонецЕсли; 
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"     , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"     , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров", Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"     , Результат[10].Выгрузить());
	
	Если ВозможныДвиженияПоРезерву Тогда
		ДобавитьДвиженияТоварыНаСкладах(ТаблицыДляДвижений.ТаблицаТоварыНаСкладах, Результат[14].Выгрузить());
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит сформированные табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - для заполнения письма при отправке печатной формы по электронной почте.
//                    см. РаботаСПочтовымиСообщениямиКлиент.РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходныйОрдерНаТовары") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасходныйОрдерНаТовары",
		НСтр("ru = 'Расходный ордер на товары'"),
		ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда
	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Допоняет движения по резервам 
Процедура ДополнитьДвиженияПоРезервам(Параметры) Экспорт

	МетаданныеРесурс = Метаданные.Документы.РасходныйОрдерНаТовары;
	ПолноеИмяОбъекта = МетаданныеРесурс.ПолноеИмя();
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	МассивДокументов = Новый Массив;
	
	Пока Выборка.Следующий() Цикл

		МассивДокументов.Добавить(Выборка.Ссылка);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
	|	РасходныйОрдерНаТоварыТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаВспомогательнаяДокументовДляРегистра
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
	|ГДЕ
	|	РасходныйОрдерНаТоварыТовары.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Ссылка КАК Ссылка,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Номенклатура КАК Номенклатура,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Характеристика КАК Характеристика,
	|	СУММА(ТаблицаВспомогательнаяДокументовДляРегистра.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаСгруппированнаяДокументовДляРегистра
	|ИЗ
	|	ТаблицаВспомогательнаяДокументовДляРегистра КАК ТаблицаВспомогательнаяДокументовДляРегистра
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Ссылка,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Характеристика,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТовары.ДокументОснование КАК ДокументОснование,
	|	РасходныйОрдерНаТовары.Склад КАК Склад,
	|	РасходныйОрдерНаТовары.Дата КАК Дата
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровТовары.Ссылка КАК Ссылка,
	|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровТовары.Характеристика КАК Характеристика,
	|	РеализацияТоваровТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаРеализаций
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаДокументов.ДокументОснование КАК ДокументОснование
	|			ИЗ
	|				ТаблицаДокументов КАК ТаблицаДокументов)
	|	И РеализацияТоваровТовары.Резервировать
	|	И РеализацияТоваровТовары.ЗаказПокупателя <> &ПустойЗаказПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРеализаций.Ссылка КАК Ссылка,
	|	ТаблицаРеализаций.Номенклатура КАК Номенклатура,
	|	ТаблицаРеализаций.Характеристика КАК Характеристика,
	|	СУММА(ТаблицаРеализаций.Количество) КАК Резерв
	|ПОМЕСТИТЬ ТаблицаСгруппированнаяРеализации
	|ИЗ
	|	ТаблицаРеализаций КАК ТаблицаРеализаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеализаций.Ссылка,
	|	ТаблицаРеализаций.Характеристика,
	|	ТаблицаРеализаций.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Ссылка КАК Регистратор,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Номенклатура КАК Номенклатура,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Характеристика КАК Характеристика,
	|	ТаблицаВспомогательнаяДокументовДляРегистра.Количество КАК Резерв,
	|	ТаблицаДокументов.Склад КАК Склад,
	|	ТаблицаДокументов.Дата КАК Период,
	|	ТаблицаДокументов.ДокументОснование КАК ДокументОснование,
	|	0 КАК Количество
	|ПОМЕСТИТЬ ТаблицаДокументаДляРегистра
	|ИЗ
	|	ТаблицаВспомогательнаяДокументовДляРегистра КАК ТаблицаВспомогательнаяДокументовДляРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ТаблицаВспомогательнаяДокументовДляРегистра.Ссылка = ТаблицаДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Истина КАК Активность,
	|	1 КАК НомерСтроки,
	|	ТаблицаДокументаДляРегистра.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДокументаДляРегистра.Номенклатура КАК Номенклатура,
	|	ТаблицаДокументаДляРегистра.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументаДляРегистра.Резерв > ТаблицаСгруппированнаяРеализации.Резерв
	|			ТОГДА ТаблицаСгруппированнаяРеализации.Резерв
	|		ИНАЧЕ ТаблицаДокументаДляРегистра.Резерв
	|	КОНЕЦ КАК Резерв,
	|	ТаблицаДокументаДляРегистра.Склад КАК Склад,
	|	ТаблицаДокументаДляРегистра.Период КАК Период,
	|	ТаблицаДокументаДляРегистра.Количество КАК Количество
	|ИЗ
	|	ТаблицаДокументаДляРегистра КАК ТаблицаДокументаДляРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСгруппированнаяРеализации КАК ТаблицаСгруппированнаяРеализации
	|		ПО ТаблицаДокументаДляРегистра.ДокументОснование = ТаблицаСгруппированнаяРеализации.Ссылка
	|			И ТаблицаДокументаДляРегистра.Номенклатура = ТаблицаСгруппированнаяРеализации.Номенклатура
	|			И ТаблицаДокументаДляРегистра.Характеристика = ТаблицаСгруппированнаяРеализации.Характеристика
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТаблицаДокументаДляРегистра.Резерв > ТаблицаСгруппированнаяРеализации.Резерв
	|				ТОГДА ТаблицаСгруппированнаяРеализации.Резерв
	|			ИНАЧЕ ТаблицаДокументаДляРегистра.Резерв
	|		КОНЕЦ > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор
	|ИТОГИ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ШаблонТекстаОшибки = НСтр("ru = 'Не удалось записать резервы по документу %1 по причине:
									|%2'");
	Пока Выборка.Следующий() Цикл
	    Регистратор = Выборка.Регистратор;
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			Блокировка.Заблокировать();
			
			ТоварыНаСкладах = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
			ТоварыНаСкладах.Отбор.Регистратор.Установить(Регистратор);
			
			ТоварыНаСкладах.Прочитать();
			
			ТаблицаДвижений = ТоварыНаСкладах.Выгрузить();
			
			ВыборкаПоРегистратору = Выборка.Выбрать();
			Пока ВыборкаПоРегистратору.Следующий() Цикл
				СтрокаТаблицыДвижений = ТаблицаДвижений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыДвижений, ВыборкаПоРегистратору);
			КонецЦикла;
			
			ТоварыНаСкладах.Загрузить(ТаблицаДвижений);
			
			ТоварыНаСкладах.Записать(Истина);
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтрШаблон(ШаблонТекстаОшибки, Выборка.Регистратор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление информационной базы'",
				ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки);
			
		КонецПопытки;
			
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьДляИзмененийДвиженийПоРезервам(Параметры) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивРезультатов = Новый Массив;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТовары.ДокументОснование КАК ДокументОснование,
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаОснований
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(РасходныйОрдерНаТовары.ДокументОснование КАК Документ.РеализацияТоваров) ЕСТЬ NULL
	|	И НЕ РасходныйОрдерНаТовары.Магазин.СкладУправляющейСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровТовары.Ссылка КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаРеализаций
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Резервировать
	|	И НЕ РеализацияТоваровТовары.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И РеализацияТоваровТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаОснований.ДокументОснование КАК Ссылка
	|			ИЗ
	|				ТаблицаОснований КАК ТаблицаОснований)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаДляРегистра
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРеализаций КАК ТаблицаРеализаций
	|		ПО ТаблицаОснований.ДокументОснование = ТаблицаРеализаций.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладах.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТаблицаРегистра
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|ГДЕ
	|	ТоварыНаСкладах.Резерв <> 0
	|	И ТоварыНаСкладах.Регистратор В
	|			(ВЫБРАТЬ
	|				ТаблицаДляРегистра.Ссылка КАК Ссылка
	|			ИЗ
	|				ТаблицаДляРегистра КАК ТаблицаДляРегистра)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляРегистра.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаДляРегистра КАК ТаблицаДляРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРегистра КАК ТаблицаРегистра
	|		ПО ТаблицаДляРегистра.Ссылка = ТаблицаРегистра.Регистратор
	|ГДЕ
	|	ТаблицаРегистра.Регистратор ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивРезультатов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивРезультатов);

КонецПроцедуры
 
// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 4
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 5
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 6
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL )
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 7
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL 
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 8
	|ВЫБРАТЬ 
	| ТаблицаСерийныеНомера.Номенклатура    КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер, 
	|	ТаблицаСерийныеНомера.Количество    КАК Количество,
	|   &Склад                              КАК Отправитель,
	|	&Организация                        КАК Организация,
	|	&АналитикаХозяйственнойОперации     КАК АналитикаХозяйственнойОперации,
	|   &Период                             КАК Период
	| ИЗ (ВЫБРАТЬ
	|	ТабОбщая.Номенклатура КАК Номенклатура,
	|	ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|	СУММА(ТабОбщая.Количество) КАК Количество
	|ИЗ
	|	ТабОбщая КАК ТабОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабОбщая.Номенклатура,
	|	ТабОбщая.СерийныйНомер)             КАК ТаблицаСерийныеНомера
	|ГДЕ 
	|   &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРезерва()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровТовары.Характеристика КАК Характеристика,
	|	РеализацияТоваровТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаСвободныхОстатковРеализации
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Ссылка = &Основание
	|	И РеализацияТоваровТовары.ЗаказПокупателя = &ЗаказПокупателя
	|	И РеализацияТоваровТовары.Резервировать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСвободныхОстатковРеализации.Номенклатура КАК Номенклатура,
	|	ТаблицаСвободныхОстатковРеализации.Характеристика КАК Характеристика,
	|	СУММА(ТаблицаСвободныхОстатковРеализации.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаРеализацииСгруппированная
	|ИЗ
	|	ТаблицаСвободныхОстатковРеализации КАК ТаблицаСвободныхОстатковРеализации
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСвободныхОстатковРеализации.Номенклатура,
	|	ТаблицаСвободныхОстатковРеализации.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	СУММА(ТаблицаДокумента.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаДокументаСгруппированная
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаДокументаСгруппированная.Номенклатура КАК Номенклатура,
	|	ТаблицаДокументаСгруппированная.Характеристика КАК Характеристика,
	|	0 КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументаСгруппированная.Количество > ТаблицаРеализацииСгруппированная.Количество
	|			ТОГДА ТаблицаРеализацииСгруппированная.Количество
	|		ИНАЧЕ ТаблицаДокументаСгруппированная.Количество
	|	КОНЕЦ КАК Резерв
	|ИЗ
	|	ТаблицаРеализацииСгруппированная КАК ТаблицаРеализацииСгруппированная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументаСгруппированная КАК ТаблицаДокументаСгруппированная
	|		ПО ТаблицаРеализацииСгруппированная.Номенклатура = ТаблицаДокументаСгруппированная.Номенклатура
	|			И ТаблицаРеализацииСгруппированная.Характеристика = ТаблицаДокументаСгруппированная.Характеристика
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТаблицаДокументаСгруппированная.Количество > ТаблицаРеализацииСгруппированная.Количество
	|				ТОГДА ТаблицаРеализацииСгруппированная.Количество
	|			ИНАЧЕ ТаблицаДокументаСгруппированная.Количество
	|		КОНЕЦ > 0
	|   И &ФормироватьДвижения";
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Процедура ДобавитьДвиженияТоварыНаСкладах(ТаблицаТоварыНаСкладах, ТаблицаРезерва)

	Для каждого СтрокаРезерва Из ТаблицаРезерва Цикл
		
		СтрокаТоварыНаСкладах = ТаблицаТоварыНаСкладах.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоварыНаСкладах, СтрокаРезерва);
		
	КонецЦикла; 

КонецПроцедуры
 

///////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов          = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды          = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки      = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент     = Новый ТабличныйДокумент;
	РеквизитыДокумента    = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента      = НСтр("ru='Расходный ордер на товары'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерНаТовары_РасходныйОрдерНаТовары";
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|   Документ.ДокументОснование.Организация КАК Организация,
	|   Документ.Склад КАК Склад,
	|   Документ.ДокументОснование КАК Основание,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|   ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование.Организация) КАК ОрганизацияПредставление,
	|   ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование) КАК ОснованиеПредставление,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|   ТаблицаТовары.Цена КАК Цена,
	|   ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|   Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РасходныйОрдерНаТовары.ПФ_MXL_РасходныйОрдерНаТовары");
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);	
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		ВсегоНаименований = 0;
		Итого             = 0;
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		// ИТОГО
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
		ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
		
		ТабличныйДокумент.Вывести(ОбластьИтого);

		// СУММА ПРОПИСЬЮ
		
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Итого);
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
				
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
            
				
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.ДокументОснование.Организация КАК Получатель,
	|	ТаблицаДокументов.Магазин,
	|	ТаблицаДокументов.Склад,
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументОснование КАК Основание
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", "Получатель");
	СтруктураПечати.Вставить("ИмяРеквизита2", "Магазин");
	СтруктураПечати.Вставить("ИмяРеквизита3", "Склад");
	СтруктураПечати.Вставить("КоличествоРеквизитов", 3);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Получатель);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Магазин);
		СтруктураПечати.Вставить("Реквизит3", Выборка.Склад);
		
		СтруктураПечати.Вставить("Основание", Выборка.Основание);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
