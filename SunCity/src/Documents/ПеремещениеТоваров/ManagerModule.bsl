#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получение данных для формирования электронного документа.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка.РеализацияТоваровУслуг - ссылка на документ.
// 
// Возвращаемое значение:
//  Структура - структура данных для печати.
//
Функция ПолучитьДанныеДляЭД(СсылкаНаОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка.Контрагент КАК Владелец,
	|	Товары.ИдентификаторНоменклатурыПоставщика КАК Идентификатор,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	ТаблицаОтбора = Запрос.Выполнить().Выгрузить();
	
	МенеджерТаблиц = Новый МенеджерВременныхТаблиц;
	СопоставлениеНоменклатурыКонтрагентов.СоздатьВременнуюТаблицуСоответствияНоменклатуры(ТаблицаОтбора, "втНоменклатураКонтрагента", МенеджерТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.СкладОтправитель КАК Склад,
	|	ДанныеДокументов.Организация КАК Организация,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	&УчитыватьНДС КАК УчитыватьНДС
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка = &Ссылка";
	
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(СсылкаНаОбъект.Дата, СсылкаНаОбъект.Организация,,);
	Запрос.УстановитьПараметр("Ссылка" , СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);

	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура.Артикул КАК НоменклатураКод,
	|	Товары.Номенклатура.Артикул КАК НоменклатураАртикул,
	|	Товары.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаСсылка,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиница,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКод,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.НаименованиеПолное КАК БазоваяЕдиницаНаименованиеПолное,
	|	Товары.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК БазоваяЕдиницаМеждународноеСокращение,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ Товары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ""0000""
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ""0000""
	|	КОНЕЦ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура.ЕдиницаИзмеренияТНВЭД = ЗНАЧЕНИЕ(Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ Товары.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияТНВЭДКод,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура.ЕдиницаИзмеренияТНВЭД = ЗНАЧЕНИЕ(Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ Товары.Номенклатура.ЕдиницаИзмеренияТНВЭД.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияТНВЭДНаименование,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	Товары.Номенклатура КАК НоменклатураДляМОТП,
	|	Товары.Характеристика КАК ХарактеристикаДляМОТП,
	|	&ПустаяСерия КАК СерияДляМОТП,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	Товары.Количество КАК МассаНетто,
	|	Товары.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	0 КАК СуммаСкидки,
	|	0 КАК ПроцентСкидки,
	|	ВЫБОР
	|		КОГДА &УчитыватьНДС
	|			ТОГДА Товары.Номенклатура.СтавкаНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	КОНЕЦ КАК СтавкаНДС,
	|	ИСТИНА КАК НДСУчтеноВСумме,
	|	ВЫБОР
	|		КОГДА &УчитыватьНДС
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|							ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|						ТОГДА ВЫРАЗИТЬ(Товары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
	|					КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|							ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|						ТОГДА ВЫРАЗИТЬ(Товары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
	|					КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|							ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|						ТОГДА ВЫРАЗИТЬ(Товары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС,
	|	Товары.Сумма КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА &УчитыватьНДС
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|							ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|						ТОГДА ВЫРАЗИТЬ(Товары.Сумма - Товары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
	|					КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|							ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|						ТОГДА ВЫРАЗИТЬ(Товары.Сумма - Товары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
	|					КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|							ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|						ТОГДА ВЫРАЗИТЬ(Товары.Сумма - Товары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
	|					ИНАЧЕ Товары.Сумма
	|				КОНЕЦ
	|		ИНАЧЕ Товары.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	Товары.Номенклатура КАК НоменклатураИБ,
	|	Товары.Характеристика КАК ХарактеристикаИБ,
	|	Товары.Упаковка КАК УпаковкаИБ,
	|	Товары.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА """"
	|		ИНАЧЕ Товары.Номенклатура.СтранаПроисхождения.Код
	|	КОНЕЦ КАК СтранаПроисхожденияКод,
	|	ВЫБОР
	|		КОГДА Товары.Номенклатура.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА """"
	|		ИНАЧЕ Товары.Номенклатура.СтранаПроисхождения.Наименование
	|	КОНЕЦ КАК СтранаПроисхожденияНаименование,
	|	"""" КАК ИдентификаторНоменклатурыПоставщика,
	|	Товары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ЕСТЬNULL(Товары.Номенклатура.КодТНВЭД.Код, """") КАК КодВидаТовара,
	|	Товары.Склад КАК Склад,
	|	Товары.Организация КАК Организация,
	|	Товары.Поставщик КАК Поставщик,
	|	Товары.Договор КАК Договор
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.ОрганизацияПолучатель.СобственныйКонтрагент КАК Контрагент,
	|	ПеремещениеТоваров.Номер КАК НомерПоДаннымПоставщика,
	|	ПеремещениеТоваров.Дата КАК ДатаПоДаннымПоставщика,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Организация.ОбособленноеПодразделение
	|			ТОГДА ПеремещениеТоваров.Организация
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Грузоотправитель,
	|	"""" КАК Грузополучатель,
	|	"""" КАК АдресДоставки,
	|	"""" КАК АдресДоставкиЗначенияПолей,
	|	"""" КАК Перевозчик,
	|	"""" КАК НомерТранспортнойНакладной,
	|	"""" КАК ДатаТранспортнойНакладной,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	"""" КАК ДатаОтгрузки,
	|	ПеремещениеТоваров.СуммаДокумента КАК СуммаДокумента,
	|	ИСТИНА КАК ЦенаВключаетНДС,
	|	ПеремещениеТоваров.Комментарий КАК ДополнительнаяИнформация,
	|	&ВалютаКод КАК ВалютаКод,
	|	&Валюта КАК Валюта,
	|	"""" КАК БанковскийСчетОрганизации,
	|	"""" КАК НомерСчета,
	|	&Доставка КАК СпособДоставки,
	|	"""" КАК ОснованиеОтгрузкиТоваров,
	|	ПеремещениеТоваров.СведенияОВыбытииМаркированныхТоваров КАК СведенияОВыбытииМаркированныхТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.НаименованиеХарактеристики, Товары.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.ЕдиницаИзмерения, ВЫБОР
	|			КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ Товары.Упаковка
	|		КОНЕЦ) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(втНоменклатураКонтрагента.Штрихкод, Штрихкоды.Штрихкод) КАК Штрихкод
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНоменклатураКонтрагента КАК втНоменклатураКонтрагента
	|		ПО Товары.Номенклатура = втНоменклатураКонтрагента.Номенклатура
	|			И Товары.Характеристика = втНоменклатураКонтрагента.Характеристика
	|			И Товары.Упаковка = втНоменклатураКонтрагента.Упаковка
	|ГДЕ
	|	Товары.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваровШтрихкодыУпаковок.Ссылка КАК Ссылка,
	|	ПеремещениеТоваровШтрихкодыУпаковок.АкцизнаяМарка КАК Штрихкод
	|ИЗ
	|	Документ.ПеремещениеТоваров.АкцизныеМарки КАК ПеремещениеТоваровШтрихкодыУпаковок
	|ГДЕ
	|	ПеремещениеТоваровШтрихкодыУпаковок.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ВалютаКод", НСтр("ru = '398'"));
	Запрос.УстановитьПараметр("Валюта", НСтр("ru = 'тг.'"));
	Запрос.УстановитьПараметр("Доставка", НСтр("ru = 'Доставка'"));
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(
		СсылкаНаОбъект.Дата, СсылкаНаОбъект.Организация,,);
	Запрос.УстановитьПараметр("УчитыватьНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаТоваров = МассивРезультатов[0].Выбрать();
	ВыборкаШапки = МассивРезультатов[1].Выбрать();
	
	Штрихкоды = МассивРезультатов[2].Выгрузить();
	Штрихкоды.Индексы.Добавить("Номенклатура, Характеристика, ЕдиницаИзмерения");
	
	ТаблицаТоваров = МассивРезультатов[0].Выгрузить();
	КодыМаркировки = МассивРезультатов[3].Выгрузить();
	
	Маркировка = ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимоеИКодыОСУ(КодыМаркировки, ТаблицаТоваров,
		ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования(СсылкаНаОбъект));
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ВыборкаШапки",   	ВыборкаШапки);
	СтруктураДанных.Вставить("ВыборкаТоваров", 	ВыборкаТоваров);
	СтруктураДанных.Вставить("Штрихкоды",		Штрихкоды);
	СтруктураДанных.Вставить("Маркировка",		Маркировка);
	
	Возврат СтруктураДанных;
	
КонецФункции

// Функция формирует печатную форму Счета-фактуры.
//
Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт
	
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.СкладОтправитель КАК Склад,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	&УчитыватьНДС КАК УчитыватьНДС
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов" , МассивОбъектов);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	ТекстЗапроса ="";
	ТекстЗапроса = ТекстЗапроса+
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ЕСТЬNULL(СчетаФактуры.Номер, НЕОПРЕДЕЛЕНО) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, НЕОПРЕДЕЛЕНО) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Контрагент,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ПеремещениеТоваров.Организация.Префикс КАК Префикс,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ЕСТЬNULL(МагазиныКонтактнаяИнформация.Представление, """") КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПеремещениеТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ПеремещениеТоваров.Ссылка = СчетаФактуры.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаТоваров.Ссылка КАК Ссылка,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьУслуги,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТаблицаТоваров.ЭтоТовар
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК ЕстьТовары
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаТоваров.Ссылка) КАК НоменклатураДокументов
	|		ПО ПеремещениеТоваров.Ссылка = НоменклатураДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины.КонтактнаяИнформация КАК МагазиныКонтактнаяИнформация
	|		ПО ПеремещениеТоваров.МагазинПолучатель = МагазиныКонтактнаяИнформация.Ссылка
	|			И (МагазиныКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|				И МагазиныКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПрослеж,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД = ЗНАЧЕНИЕ(Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияПрослежКод,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД = ЗНАЧЕНИЕ(Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияПрослеж,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.ПредставлениеСтраны КАК СтранаПроисхождения,
	|	ТаблицаДокумента.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ЕстьNULL(ТаблицаДокумента.Номенклатура.КодТНВЭД.Код, """") КАК КодВидаТовара,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Договор КАК Договор
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ТТН
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = 'Товарно - транспортная накладная'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиТТН";

	// М-4 (Приходный ордер)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'М-4 (Приходный ордер)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// М11
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'М-11 (Требование -  накладная)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	//М-15
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "М15";
	//КомандаПечати.Представление = НСтр("ru = 'М-15 (Накладная на отпуск материалов)'");
	//КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// З-5 (Накладная на внутреннее перемещение запасов)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "З5";
	КомандаПечати.Представление = НСтр("ru = 'З-5 (Накладная на внутреннее перемещение запасов)'");

	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Накладная на перемещение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаПеремещение";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьЦены", Ложь);
	
	// Накладная на перемещение (по розничным ценам)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаПеремещение";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение (по розничным ценам)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьЦены", Истина);
	КомандаПечати.ДополнительныеПараметры.Вставить("ТолькоРозничныеЦены", Истина);
	
	// Накладная на перемещение (по розничным и ценам поступления)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаПеремещение";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение (по розничным и ценам поступления)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьЦены", Истина);
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//// УПД (Универсальный передаточный документ).
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	//КомандаПечати.Идентификатор = "УПД";
	//КомандаПечати.Представление = НСтр("ru = 'УПД (Универсальный передаточный документ)'");
	//КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//
	//// Счет фактура
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	//КомандаПечати.Идентификатор = "СчетФактура";
	//КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	//КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//
	//// Торг 12
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ТОРГ12";
	//КомандаПечати.Представление = НСтр("ru = 'ТОРГ-12 (Товарная накладная)'");
	//КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	//КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Ложь);
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//
	//// ТОРГ-13 (Накладная на внутреннее перемещение).
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ТОРГ13";
	//КомандаПечати.Представление = НСтр("ru = 'ТОРГ-13 (Накладная на внутреннее перемещение)'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Транспортная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
	КомандаПечати.Идентификатор = "ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	
	ПараметрыПечатиЦенников = Новый Структура;
	ПараметрыПечатиЦенников.Вставить("ИмяПроцедурыПодготовкиСтруктурыДанных", "УправлениеПечатьюРТВызовСервера.СтруктураДанныхЦенниковИЭтикетокДляПеремещенияТоваров");
	ПараметрыПечатиЦенников.Вставить("УстановитьРежим", "ПечатьЦенников");
	ПараметрыПечатиЦенников.Вставить("ИмяДокумента", "ПеремещениеТоваров");
	
	ДоступноПечатьЭтикетокИЦенников = ПравоДоступа("Использование", Метаданные.Обработки.ПечатьЭтикетокИЦенников);
	
	Если ДоступноПечатьЭтикетокИЦенников Тогда
		// Ценники
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Ценники";
		КомандаПечати.Представление = НСтр("ru = 'Ценники'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиЦенниковИЭтикеток";
		КомандаПечати.ДополнительныеПараметры.Вставить("ПараметрыПечатиЦенниковИЭтикеток", ПараметрыПечатиЦенников);
		
		// Этикетки
		ПараметрыПечатиЭтикеток = Новый Структура;
		ПараметрыПечатиЭтикеток.Вставить("ИмяПроцедурыПодготовкиСтруктурыДанных", "УправлениеПечатьюРТВызовСервера.СтруктураДанныхЦенниковИЭтикетокДляПеремещенияТоваров");
		ПараметрыПечатиЭтикеток.Вставить("УстановитьРежим", "ПечатьЭтикеток");
		ПараметрыПечатиЭтикеток.Вставить("ИмяДокумента", "ПеремещениеТоваров");
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Этикетки";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		КомандаПечати.Обработчик = "УправлениеПечатьюРТКлиент.ОбработкаКомандыПечатиЦенниковИЭтикеток";
		КомандаПечати.ДополнительныеПараметры.Вставить("ПараметрыПечатиЦенниковИЭтикеток", ПараметрыПечатиЭтикеток);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	РавенствоМагазинов = Объект.МагазинОтправитель = Объект.МагазинПолучатель;
	
	ЗаполненностьМагазинов = ЗначениеЗаполнено(Объект.МагазинОтправитель)
							   И ЗначениеЗаполнено(Объект.МагазинПолучатель);
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") 
							И НЕ РавенствоМагазинов
							И ЗаполненностьМагазинов;
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	ПараметрыУказанияСерий.Вставить("ЭтоПеремещениеМеждуСкладами", Истина);
	ПараметрыУказанияСерий.Вставить("ИмяПоляМагазин", "МагазинОтправитель");
	
	СкладскиеОперации = Новый Массив;
	Если НЕ РавенствоМагазинов И ЗаполненностьМагазинов Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению);
	КонецЕсли;
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Функция получает данные для формирования печатной формы Транспортная накладная.
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Грузополучатель,
	|	ЕСТЬNULL(МагазинКонтактнаяОтправитель.Представление, """") КАК ПунктПогрузки,
	|	ЕСТЬNULL(МагазинКонтактнаяПолучатель.Представление, """") КАК ПунктРазгрузки
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины.КонтактнаяИнформация КАК МагазинКонтактнаяПолучатель
	|		ПО ПеремещениеТоваров.МагазинПолучатель = МагазинКонтактнаяПолучатель.Ссылка
	|			И (МагазинКонтактнаяПолучатель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины.КонтактнаяИнформация КАК МагазинКонтактнаяОтправитель
	|		ПО ПеремещениеТоваров.МагазинОтправитель = МагазинКонтактнаяОтправитель.Ссылка
	|			И (МагазинКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина))
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.МагазинОтправитель КАК МагазинОтправитель,
	|	ДанныеДокумента.МагазинПолучатель КАК МагазинПолучатель,
	|	ДанныеДокумента.СкладОтправитель КАК СкладОтправитель,
	|	НЕ ДанныеДокумента.МагазинОтправитель.СкладУправляющейСистемы КАК ДвиженияПоОтправителю,
	|	НЕ ДанныеДокумента.МагазинПолучатель.СкладУправляющейСистемы КАК ДвиженияПоПолучателю,
	|	ДанныеДокумента.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПеремещениеТоваров) КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Основание,
	|	ДанныеДокумента.МагазинПолучатель.ИспользоватьОрдернуюСхемуПриПеремещении КАК ПоступлениеПоОрдернойСхеме,
	|	ДанныеДокумента.МагазинОтправитель.ИспользоватьОрдернуюСхемуПриПеремещении КАК РеализацияПоОрдернойСхеме,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ЗаказНаПеремещение
	|				И НЕ ДанныеДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоЗаказу,
	|	ДанныеДокумента.ФиксироватьНомераГТД КАК ФиксироватьНомераГТД
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	НастройкаСпособаУчета      = ЗапасыСервер.ПолучитьСпособУчетаСебестоимости(Реквизиты.Период);
	СпособУчетаСебестоимости   = НастройкаСпособаУчета.СпособУчета;
	РаспределятьСтоимостьУслуг = НастройкаСпособаУчета.РаспределятьСтоимостьУслуг;
	ПравилоРаспределения       = НастройкаСпособаУчета.ПравилоРаспределения;
	ФиксироватьНомераГТД	   = Реквизиты.ФиксироватьНомераГТД;
	
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперацииОтправитель", Справочники.АналитикаХозяйственныхОпераций.ПередачаТоваровДоРеализации);
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперацииПолучатель", Справочники.АналитикаХозяйственныхОпераций.ПриемТоваровОтДругойОрганизации);
	Запрос.УстановитьПараметр("СпособУчета", СпособУчетаСебестоимости);
	Запрос.УстановитьПараметр("СебестоимостьВключаетНДС", Константы.СебестоимостьВключаетНДС.Получить());
	Запрос.УстановитьПараметр("ИспользоватьУчетСебестоимости", ПолучитьФункциональнуюОпцию("ИспользоватьУчетСебестоимости"));
	Запрос.УстановитьПараметр("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("НомерГТД" , Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("Услуга", Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ФиксироватьНомераГТД", ФиксироватьНомераГТД);
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Реквизиты.Организация, 
																												Реквизиты.МагазинОтправитель,,Ложь);
	ЭтоОрганизацияЕГАИС = ЗначениеЗаполнено(ОрганизацияЕГАИС);
	
	
	РавенствоМагазинов   = Реквизиты.МагазинОтправитель = Реквизиты.МагазинПолучатель;
	РавенствоОрганизаций = Реквизиты.Организация        =  Реквизиты.ОрганизацияПолучатель;
	РавенствоСкладов     = Реквизиты.СкладОтправитель   = Реквизиты.СкладПолучатель;
	
	Запрос.УстановитьПараметр("ЭтоОрганизацияЕГАИС" , ЭтоОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("РавенствоМагазинов"  , РавенствоМагазинов);
	Запрос.УстановитьПараметр("РавенствоСкладов"    , РавенствоСкладов);
	Запрос.УстановитьПараметр("РавенствоОрганизаций", РавенствоОрганизаций);
	
	ПериодОбновления = Константы.ПериодОбновленияПоставляемойНоменклатуры.Получить();
	Запрос.УстановитьПараметр("ПериодОбновления", ПериодОбновления);
	
	ДоступныеМагазины = ОбменДаннымиРТ.ДоступныеМагазины(Ложь);
	ВедетсяУчетОстатковОтправителя = НЕ ДоступныеМагазины.Найти(Реквизиты.МагазинОтправитель) = Неопределено;
	ВедетсяУчетОстатковПолучателя  = НЕ ДоступныеМагазины.Найти(Реквизиты.МагазинПолучатель) = Неопределено;
	Запрос.УстановитьПараметр("ВедетсяУчетОстатковОтправителя", ВедетсяУчетОстатковОтправителя);
	Запрос.УстановитьПараметр("ВедетсяУчетОстатковПолучателя",  ВедетсяУчетОстатковПолучателя);
	
	ТекстЗапроса = 
	"//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ФиксироватьНомераГТД
	|			ТОГДА ТаблицаТовары.НомерГТД
	|		ИНАЧЕ &НомерГТД
	|	КОНЕЦ КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ФиксироватьНомераГТД
	|			ТОГДА ТаблицаТовары.КоличествоПоРНПТ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА &ФиксироватьНомераГТД И ТаблицаТовары.КоличествоПоРНПТ > 0
	|		ТОГДА ТаблицаТовары.СуммаПоРНПТ / ТаблицаТовары.КоличествоПоРНПТ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентСтоимостиРНПТ,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	&СкладПолучатель КАК СкладПолучатель,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	&Основание КАК Основание
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 Услуги к распределению на себестоимость.
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Услуга,
	|	Товары.Сумма КАК Сумма
	|	ИЗ
	|		ВтТаблицаТовары КАК Товары
	|	ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И Товары.ТипНоменклатуры = &Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаТоварыНаСкладах
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|   ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|   НЕ &РеализацияПоОрдернойСхеме
	|   И &ДвиженияПоОтправителю
	|   И НЕ &РавенствоСкладов
	|   И &ВедетсяУчетОстатковОтправителя
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	&Приход,
	|	&Период,
	|	ТаблицаТовары.СкладПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|   ТаблицаТовары.АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|   НЕ &ПоступлениеПоОрдернойСхеме
	|   И &ДвиженияПоПолучателю
	|   И НЕ &РавенствоСкладов
	|   И &ВедетсяУчетОстатковПолучателя
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаТоварыКПоступлению
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Приход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладПолучатель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоОрдернойСхеме
	|   И &ДвиженияПоПолучателю
	|   И НЕ &РавенствоСкладов
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаТоварыКОтгрузке
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Приход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&РеализацияПоОрдернойСхеме
	|   И &ДвиженияПоОтправителю
	|   И НЕ &РавенствоСкладов
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 5 ТаблицаТоварыОрганизаций
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаТовары.КоэффициентСтоимостиРНПТ КАК КоэффициентСтоимостиРНПТ,
	|	&Поставщик КАК Поставщик,
	|	&Договор КАК Договор,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Сумма КАК СуммаПродажи
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НомерСтроки,
	|	&Приход,
	|	&Период,
	|	&ОрганизацияПолучатель,
	|	&ПустаяОрганизация,
	|	&СкладПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ,
	|	ТаблицаТовары.КоэффициентСтоимостиРНПТ,
	|	&Поставщик,
	|	&Договор,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ВидДвижения УБЫВ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 6 ЗаказыТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	&ДокументОснование КАК Заказ,
	|	&МагазинПолучатель КАК Магазин,
	|	&МагазинОтправитель КАК Поставщик,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|   &ДвиженияПоПолучателю
	|   И НЕ &РавенствоСкладов 
	|   И НЕ &РавенствоМагазинов
	|   И &ПоЗаказу
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 7 -  ТаблицаНоменклатураПоставщиков
	|ВЫБРАТЬ
	|   &МагазинПолучатель           КАК Магазин,
	|	&МагазинОтправитель          КАК Поставщик,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика
	|ИЗ
	|	ВтТаблицаТовары              КАК ТаблицаТовары
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|ПО
	|	НоменклатураПоставщиков.Поставщик = &МагазинОтправитель
	|	И НоменклатураПоставщиков.Магазин = &МагазинПолучатель
	|	И НоменклатураПоставщиков.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НоменклатураПоставщиков.Характеристика = ТаблицаТовары.Характеристика
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПоставщикиНоменклатуры КАК ПоставщикиНоменклатуры
	|	ПО &МагазинОтправитель = ПоставщикиНоменклатуры.Поставщик
	|ГДЕ
	|	НоменклатураПоставщиков.Поставщик ЕСТЬ NULL
	|	И &ДвиженияПоПолучателю
	|	И НЕ &РавенствоСкладов
	|	И НЕ &РавенствоМагазинов
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|	И &ПериодОбновления <= &Период
	|СГРУППИРОВАТЬ ПО
	|	&МагазинПолучатель,
	|	&МагазинОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 8 ТаблицаДвиженияСерийТоваров
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&МагазинПолучатель КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПеремещению) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|   И НЕ &ПоступлениеПоОрдернойСхеме
	|   И &ДвиженияПоПолучателю
	|	И НЕ &РавенствоСкладов
	|	И НЕ &РавенствоМагазинов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&МагазинОтправитель КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|   И НЕ &РеализацияПоОрдернойСхеме
	|	И НЕ &РавенствоСкладов
	|	И НЕ &РавенствоМагазинов
	|   И &ДвиженияПоОтправителю
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки;
	|/////////////////////////////////////////////////////////////////////////////
	// 9 Себестоимость номенклатуры.
	|ВЫБРАТЬ
	|	Себестоимость.Номенклатура,
	|	Себестоимость.Характеристика,
	|	ВЫБОР
	|		КОГДА Себестоимость.Период ЕСТЬ НЕ NULL 
	|				И СебестоимостьПустойМагазин.Период ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА Себестоимость.Период >= СебестоимостьПустойМагазин.Период
	|						ТОГДА Себестоимость.Цена
	|					ИНАЧЕ СебестоимостьПустойМагазин.Цена
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Себестоимость.Период ЕСТЬ НЕ NULL 
	|					ТОГДА Себестоимость.Цена
	|				ИНАЧЕ СебестоимостьПустойМагазин.Цена
	|			КОНЕЦ
	|	КОНЕЦ КАК Себестоимость
	|ПОМЕСТИТЬ СебестоимостьНоменклатуры
	|ИЗ
	|	РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|			&Период,
	|			Магазин = &МагазинОтправитель 
	|					И НЕ Регистратор = &Ссылка
	|					И НЕ &РавенствоСкладов
	|					И НЕ &РавенствоМагазинов
	|				И (Номенклатура, Характеристика) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ВтТаблицаТовары.Номенклатура,
	|						ВтТаблицаТовары.Характеристика
	|					ИЗ
	|						ВтТаблицаТовары КАК ВтТаблицаТовары)) КАК Себестоимость
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|				&Период,
	|				Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка) 
	|					И НЕ Регистратор = &Ссылка
	|					И НЕ &РавенствоСкладов
	|					И НЕ &РавенствоМагазинов
	|					И (Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ВтТаблицаТовары.Номенклатура,
	|							ВтТаблицаТовары.Характеристика
	|						ИЗ
	|							ВтТаблицаТовары КАК ВтТаблицаТовары)) КАК СебестоимостьПустойМагазин
	|		ПО Себестоимость.Номенклатура = СебестоимостьПустойМагазин.Номенклатура
	|			И Себестоимость.Характеристика = СебестоимостьПустойМагазин.Характеристика
	|ГДЕ &ИспользоватьУчетСебестоимости И &СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	// 10 - ТаблицаСебестоимостьНоменклатуры
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&МагазинПолучатель                      КАК Магазин,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	МИНИМУМ(СебестоимостьНоменклатуры.Себестоимость) КАК Цена,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.Количество * ЕСТЬNULL(СебестоимостьНоменклатуры.Себестоимость, 0)) КАК Сумма
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьНоменклатуры КАК СебестоимостьНоменклатуры
	|ПО ТаблицаТовары.Номенклатура = СебестоимостьНоменклатуры.Номенклатура
	|	И ТаблицаТовары.Характеристика = СебестоимостьНоменклатуры.Характеристика
	|ГДЕ
	|	&СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|   И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга
	|	И НЕ &РавенствоСкладов
	|	И НЕ &РавенствоМагазинов
	|	И НЕ ЕстьNULL(СебестоимостьНоменклатуры.Себестоимость, 0)= 0
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 11 ТаблицаСебестоимостьПоставкиТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&МагазинПолучатель                     КАК Магазин,
	|	&МагазинОтправитель                    КАК МагазинОтправитель,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	0                                      КАК Цена,
	|	0                                      КАК Сумма,
	|	ТаблицаТовары.Сумма                    КАК СуммаБаза
	|ИЗ
	|ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьУчетСебестоимости
	|	И &СпособУчета = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчетСредняяВзвешенная)
	|	И &ДвиженияПоПолучателю
	|	И НЕ &РавенствоСкладов
	|	И НЕ &РавенствоМагазинов
	|	И НЕ ТаблицаТовары.ТипНоменклатуры = &Услуга
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|";
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаТаблицаСерийныхНомеров();
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаАкцизныеМарки();
	Запрос.Текст = ТекстЗапроса;
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
						Реквизиты.Организация,
						Реквизиты.МагазинОтправитель);
						
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСебестоимостьНоменклатуры = Результат[10].Выгрузить();
	ТаблицаСебестоимостьПоставкиТоваров = Результат[11].Выгрузить();
	
	ТаблицаУслугНаРаспределение = Результат[1].Выгрузить();
	Если РаспределятьСтоимостьУслуг Тогда
		ЗапасыСервер.РаспределитьУслугиНаСебестоимость(ТаблицаУслугНаРаспределение, ПравилоРаспределения, ТаблицаСебестоимостьНоменклатуры, СпособУчетаСебестоимости, ТаблицаСебестоимостьПоставкиТоваров, "СуммаБаза");
	КонецЕсли;
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"              , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению"           , Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"              , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"            , Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыТоваров"                , Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНоменклатураПоставщиков"      , Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"         , Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьНоменклатуры"    , ТаблицаСебестоимостьНоменклатуры);
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"              , Результат[18].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьПоставкиТоваров" , ТаблицаСебестоимостьПоставкиТоваров);
	ТаблицыДляДвижений.Вставить("ТаблицаОстаткиАлкогольнойПродукцииЕГАИС", Результат[19].Выгрузить());
	
	ИспользоватьКомиссионнуюТорговлю = ДополнительныеСвойства.ИспользуетсяКомиссионнаяТорговля;
	ИспользоватьУчетИмпортныхТоваров = ДополнительныеСвойства.ИспользуетсяУчетИмпортныхТоваров;
	
	Если ИспользоватьКомиссионнуюТорговлю 
		ИЛИ ИспользоватьУчетИмпортныхТоваров Тогда
		ЕстьДанныеДляОтчетаКомитенту = Ложь;
		
		Если НЕ ФиксироватьНомераГТД Тогда
		
			ПроведениеСервер.ПерезаполнитьТаблицуДвиженийТоварыОрганизаций(
				ТаблицыДляДвижений.ТаблицаТоварыОрганизаций,
				ДокументСсылка,
				Реквизиты.Период,
				ЕстьДанныеДляОтчетаКомитенту);
				
		КонецЕсли;
			
		Если ИспользоватьКомиссионнуюТорговлю Тогда
			Если НЕ РавенствоСкладов Тогда
				ТаблицыДляДвижений.Вставить(
					"ТаблицаТоварыКОформлениюОтчетовКомитенту",
					ПроведениеСервер.ТаблицаДвиженийКомитенту(ТаблицыДляДвижений.ТаблицаТоварыОрганизаций, ЕстьДанныеДляОтчетаКомитенту));
			Иначе
				ТаблицыДляДвижений.Вставить(
					"ТаблицаТоварыКОформлениюОтчетовКомитенту",
					ПроведениеСервер.ТаблицаДвиженийКомитенту(ТаблицыДляДвижений.ТаблицаТоварыОрганизаций.СкопироватьКолонки(), ЕстьДанныеДляОтчетаКомитенту));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение", 
			НСтр("ru = 'Накладная на перемещение'"), 
			ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["ВыводитьЦены"], ПараметрыПечати.Свойство("ТолькоРозничныеЦены")));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТОРГ12",
			НСтр("ru = 'ТОРГ-12 (Товарная накладная за поставщика'") + ?(ПараметрыПечати["ВыводитьУслуги"], "", " " + НСтр("ru = 'без услуг'")) + ")", 
			ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["ВыводитьУслуги"]));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ТОРГ13",
			НСтр("ru = 'ТОРГ-13 (Накладная на внутреннее перемещение)'"), 
			ПечатьТОРГ13(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"М4",
			НСтр("ru = 'М-4 (Приходный ордер)'"),
			ПечатьМ4(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11",
			НСтр("ru = 'М-11 (Требование -  накладная)'"),
			ПечатьМ11(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М15",
				ПараметрыПечати.Представление,
				ПечатьМ15(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
			НСтр("ru = 'Товарно - транспортная накладная'"),
			ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "З5") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"З5",
			НСтр("ru = 'З-5 (Накладная на внутреннее перемещение запасов)'"),
			ПечатьЗ5(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
		
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Определяет необходимость отражения операции в ЕГАИС
//
//  Параметры:
//   Объект - ДокументСсылка.ПеремещениеТоваров, ДокументыОбъект.ПеремещениеТоваров
//
//  Возвращаемое значение:
//   Булево
//
Функция ОперацияОтражаетсяВЕГАИС(Объект) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Организация, МагазинОтправитель, ОрганизацияПолучатель, МагазинПолучатель");
	Иначе
		Реквизиты = Новый Структура;
		Реквизиты.Вставить("Организация"          , Объект.Организация);
		Реквизиты.Вставить("МагазинОтправитель"   , Объект.МагазинОтправитель);
		Реквизиты.Вставить("ОрганизацияПолучатель", Объект.ОрганизацияПолучатель);
		Реквизиты.Вставить("МагазинПолучатель"    , Объект.МагазинПолучатель);
	КонецЕсли;
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Реквизиты.Организация, 
																												Реквизиты.МагазинОтправитель);
	Если НЕ ЗначениеЗаполнено(ОрганизацияЕГАИС) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОрганизацияПолучательЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(Реквизиты.ОрганизацияПолучатель, 
																														  Реквизиты.МагазинПолучатель);
	Если ОрганизацияЕГАИС = ОрганизацияПолучательЕГАИС Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(МагазинОтправитель) ИЛИ ЗначениеРазрешено(МагазинПолучатель)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Возвращает структуру данных для печати универсального передаточного документа
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать.
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати.
//  
// Возвращаемое значение:
//  Структура - данные для печатной формы.
//
Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Организация          КАК Организация,
	|	ДанныеДокументов.МагазинОтправитель   КАК Магазин,
	|	ДанныеДокументов.СкладОтправитель     КАК Склад,
	|	&ЦенаВключаетНДС                      КАК ЦенаВключаетНДС,
	|	&УчитыватьНДС                         КАК УчитыватьНДС
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуСчетовФактур(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	// 0
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ НоменклатураДокументов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	ВЫБОР 
	|		КОГДА
	|			СчетаФактуры.Номер ЕСТЬ NULL
	|		ТОГДА
	|			2
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК СтатусУПД,
	|	&УчитыватьНДС КАК УчитыватьНДС,
	|	ДанныеДокумента.Номер КАК НомерДокументаОтгрузки,
	|	ДанныеДокумента.Дата КАК ДатаДокументаОтгрузки,
	|	ЕСТЬNULL(СчетаФактуры.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ЕСТЬNULL(СчетаФактуры.Дата, ДанныеДокумента.Дата) КАК Дата,
	|	ЕСТЬNULL(СчетаФактуры.НомерИсправления, НЕОПРЕДЕЛЕНО) КАК НомерИсправления,
	|	ЕСТЬNULL(СчетаФактуры.ДатаИсправления, НЕОПРЕДЕЛЕНО) КАК ДатаИсправления,
	|	ЕСТЬNULL(СчетаФактуры.Исправление, ЛОЖЬ) КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактуры.СтрокаПлатежноРасчетныеДокументы, """") КАК СтрокаПоДокументу,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДанныеДокумента.Организация КАК Грузоотправитель,
	|	"""" КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	"""" КАК Кладовщик
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактур КАК СчетаФактуры
	|		ПО ДанныеДокумента.Ссылка = СчетаФактуры.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|		ПО ДанныеДокумента.Ссылка = НоменклатураДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Упаковка.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КоличествоУпаковок КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПрослеж,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД = ЗНАЧЕНИЕ(Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияПрослежКод,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД = ЗНАЧЕНИЕ(Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.ЕдиницаИзмеренияТНВЭД.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияПрослеж,
	|	ВЫБОР
	|		КОГДА &УчитыватьНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|							ИЛИ ТаблицаДокумента.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
	|					КОГДА ТаблицаДокумента.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|							ИЛИ ТаблицаДокумента.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
	|					КОГДА ТаблицаДокумента.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|							ИЛИ ТаблицаДокумента.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.ПредставлениеСтраны КАК СтранаПроисхождения,
	|	ТаблицаДокумента.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ЕстьNULL(ТаблицаДокумента.Номенклатура.КодТНВЭД.Код, """") КАК КодВидаТовара,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|		ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС - ТаблицаДокумента.СуммаНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЦенаВключаетНДС
	|			ТОГДА (ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Поставщик КАК Поставщик,
	|	ТаблицаДокумента.Договор КАК Договор
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[1];
	РезультатПоТабличнойЧасти = МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
													РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Запоняет данные по реквизитам Магазин, склад, организация.
Процедура ЗаполнитьДанныеОтправителяПолучателя(Магазин, Склад, Организация, Направление = "Отправитель") Экспорт
	
	Пользователь = ОбщегоНазначенияРТ.ПользовательСУчетомИзмененныхПрав();
	
	ЕдинственныеЗначения = ЕдинственныеЗначения(Магазин);
	
	//Магазин
	Если НЕ ЗначениеЗаполнено(Магазин)  Тогда
		Если Направление = "Отправитель" Тогда
			Магазин = ПараметрыСеанса.ТекущийМагазин;
		КонецЕсли;
	КонецЕсли;
	
	//Склад
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		Склад = Справочники.Склады.ПустаяСсылка();
		Если ЕдинственныеЗначения.ЕдинственнаяОрганизация Тогда
			Организация = ЕдинственныеЗначения.Организация;
		Иначе
			Организация = Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если НЕ Склад.Магазин = Магазин Тогда
		Склад = Справочники.Склады.ПустаяСсылка();
		Если Направление = "Отправитель" Тогда
			Настройка = "ОсновнойСкладПродажи";
		Иначе
			Настройка = "ОсновнойСкладПоступления";
		КонецЕсли;
		
		СкладНаРасмотрении = ЗначениеНастроекВызовСервера.ЗначениеПоУмолчаниюПользователяМагазина(Пользователь,
																								  Магазин,
																								  Настройка);
		
		Если ЗначениеЗаполнено(СкладНаРасмотрении) И СкладНаРасмотрении.Магазин = Магазин Тогда
			Склад = СкладНаРасмотрении;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Склад) Тогда
			Если Направление = "Отправитель" Тогда
				Склад = Магазин.СкладПродажи;
			Иначе
				Склад = Магазин.СкладПоступления;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//Организация
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Если ЕдинственныеЗначения.ЕдинственнаяОрганизация Тогда
			Организация = ЕдинственныеЗначения.Организация;
		Иначе
			Организация = Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Организация = Склад.Организация;
	Если НЕ ЗначениеЗаполнено(Организация)
		 И ЕдинственныеЗначения.ЕдинственнаяОрганизация Тогда
		Организация = ЕдинственныеЗначения.Организация;
	КонецЕсли;
	
КонецПроцедуры

Функция ЕдинственнаяСсылка(РезультатСправочника)
	
	Если РезультатСправочника.Пустой() Тогда
		Возврат Истина;
	Иначе
		ВыборкаСправочника = РезультатСправочника.Выбрать();
		ВыборкаСправочника.Следующий();
		Возврат ВыборкаСправочника.Количество = 1;
	КонецЕсли;
	
КонецФункции // ЕдинственнаяСсылка()

// Возвращает структуру, если реквизит в системе в единственном экземпляре
//
// Параметры 
//  Магазин - СправочникСсылка.Магазины - Испльзуется для определения складов
//
// Возвращаемое значение
//  Структура
//
Функция ЕдинственныеЗначения(Магазин) Экспорт
	
	ВозвращаемаяСтруктура = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Магазины.Ссылка) КАК Количество
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склады.Ссылка) КАК Количество
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Магазин = &Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Организации.Ссылка) КАК Количество
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	Запрос.Параметры.Вставить("Магазин", Магазин);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВозвращаемаяСтруктура.Вставить("ЕдинственныйМагазин"    , ЕдинственнаяСсылка(Результат[0]));
	ВозвращаемаяСтруктура.Вставить("ЕдинственныйСклад"      , ЕдинственнаяСсылка(Результат[1]));
	ВозвращаемаяСтруктура.Вставить("ЕдинственнаяОрганизация", ЕдинственнаяСсылка(Результат[2]));
	ВозвращаемаяСтруктура.Вставить("Организация"            , Справочники.Организации.ПустаяСсылка());
	
	Если ВозвращаемаяСтруктура.ЕдинственнаяОрганизация Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			ВозвращаемаяСтруктура.Вставить("Организация", Выборка.Организация);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВозвращаемаяСтруктура;
	
КонецФункции // ЕдинственныеЗначения()

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	КомандаОтчет = Отчеты.ОтклоненияПриПеремещенииТоваров.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СканированиеМаркируемойПродукции

Функция ОбработатьДанныеШтрихкода(Форма, ДанныеШтрихкода, ПараметрыСканирования, ВложенныеШтрихкоды = Неопределено) Экспорт
	
	// Подготовка параметров штрихкода для обработки.
	ПараметрыШтрихкодаДляОбработки = ШтрихкодированиеИСРТ.ПараметрыШтрихкодаДляОбработки(Форма, ПараметрыСканирования, ДанныеШтрихкода);
	
	Объект              = ПараметрыШтрихкодаДляОбработки.Объект;
	РезультатОбработки  = ПараметрыШтрихкодаДляОбработки.РезультатОбработки;
	ПараметрыЗаполнения = ПараметрыШтрихкодаДляОбработки.ПараметрыЗаполнения;
	НастройкиКэша       = ПараметрыШтрихкодаДляОбработки.НастройкиКэша;
	
	Если ДанныеШтрихкода.ВидУпаковки = Перечисления.ВидыУпаковокИС.Логистическая Тогда
		
		ДеревоУпаковок = Неопределено;
		Если ВложенныеШтрихкоды <> Неопределено Тогда
			ДеревоУпаковок = ВложенныеШтрихкоды.ДеревоУпаковок;
		ИначеЕсли ДанныеШтрихкода.Свойство("АдресДереваУпаковок")
			И Не ПустаяСтрока(ДанныеШтрихкода.АдресДереваУпаковок) Тогда
			ДеревоУпаковок = ПолучитьИзВременногоХранилища(ДанныеШтрихкода.АдресДереваУпаковок);
		КонецЕсли;
		
		Если НЕ ДеревоУпаковок = Неопределено Тогда
			ШтрихкодированиеИСРТ.ОбработатьДанныеШтрихкодовДереваУпаковок(ДеревоУпаковок, ПараметрыШтрихкодаДляОбработки, Форма);
		КонецЕсли;
		
	Иначе
		
		// Подготовка данных штрихкода для обработки.
		ДанныеШтрихкодаДляОбработки = ШтрихкодированиеИСРТ.ДанныеШтрихкодаДляОбработки();
		ЗаполнитьЗначенияСвойств(ДанныеШтрихкодаДляОбработки, ДанныеШтрихкода);
		
		ДанныеШтрихкодаДляОбработки.Количество = ИнтеграцияИСРТ.КоличествоПродукцииПоДаннымШтрихкода(ДанныеШтрихкода, ПараметрыСканирования);
		ШтрихкодированиеИСРТ.ОбработатьДанныеШтрихкодаПотребительскойУпаковки(ДанныеШтрихкодаДляОбработки, ПараметрыШтрихкодаДляОбработки, Форма);
		
	КонецЕсли;
	
	ПроверкаИПодборПродукцииИС.ЗаполнитьКешШтрихкодовУпаковок(Форма, НастройкиКэша);
	ПроверкаИПодборПродукцииИС.ПрименитьКешШтрихкодовУпаковок(Форма, НастройкиКэша);
	ШтрихкодированиеИС.ОбновитьКэшМаркируемойПродукции(Форма);
	
	Возврат РезультатОбработки;
	
КонецФункции

#КонецОбласти

// Функция формирует текст запроса по серийным номерам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ПеремещениеТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL )
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL 
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаСерийныеНомера.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Получатель,
	|	ВЫБОР
	|		КОГДА &РеализацияПоОрдернойСхеме
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &СкладОтправитель
	|	КОНЕЦ КАК Отправитель,
	|	&Организация КАК Организация,
	|	&АналитикаХозяйственнойОперацииОтправитель КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|	И НЕ &РеализацияПоОрдернойСхеме
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ТаблицаСерийныеНомера.Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоОрдернойСхеме
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &СкладПолучатель
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	&ОрганизацияПолучатель,
	|	&АналитикаХозяйственнойОперацииПолучатель
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК Номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И НЕ &ПоступлениеПоОрдернойСхеме";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАкцизныеМарки()
	
	ТекстЗапроса = "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаАкцизныеМарки.Ссылка КАК Регистратор,
	|	&ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ТаблицаАкцизныеМарки.Справка2 КАК Справка2,
	|	Справки2ЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныеМарки.АкцизнаяМарка) КАК Количество,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАкцизныеМарки.АкцизнаяМарка) КАК СвободныйОстаток
	|ИЗ
	|	Документ.ПеремещениеТоваров.АкцизныеМарки КАК ТаблицаАкцизныеМарки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО (Справки2ЕГАИС.Ссылка = ТаблицаАкцизныеМарки.Справка2)
	|ГДЕ
	|	&ЭтоОрганизацияЕГАИС
	|	И ТаблицаАкцизныеМарки.Ссылка = &Ссылка
	|	И ТаблицаАкцизныеМарки.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАкцизныеМарки.Ссылка,
	|	ТаблицаАкцизныеМарки.Справка2,
	|	Справки2ЕГАИС.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ВыводитьЦены = Ложь, ТолькоПоРозничнымЦенам = Ложь)
		
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Перемещение товаров'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_НакладнаяНаПеремещение";
	
	Если ВыводитьЦены Тогда
		ИндексРезультатаТовары = 3;
	Иначе
		ИндексРезультатаТовары = 1;
	КонецЕсли;
	
	УстанавливатьВидыЦенВАссортименте = ПолучитьФункциональнуюОпцию("УстанавливатьВидыЦенВАссортименте");
	
	Если УстанавливатьВидыЦенВАссортименте Тогда
		Если ВыводитьЦены Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка                               КАК Ссылка,
			|	Документ.Номер                                КАК Номер,
			|	Документ.Дата                                 КАК Дата,
			|	Документ.Организация                          КАК Поставщик,
			|	Документ.ОрганизацияПолучатель                КАК Покупатель,
			|	Документ.МагазинОтправитель                   КАК МагазинОтправитель,
			|	Документ.МагазинПолучатель                    КАК МагазинПолучатель,
			|	Документ.Ответственный.ФизическоеЛицо         КАК Получил,
			|	Документ.Организация.Префикс                  КАК Префикс,
			|	&ЦенаВключаетНДС                              КАК ЦенаВключаетНДС,
			|	&УчитыватьНДС                                 КАК УчитыватьНДС,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПоставщикПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.ОрганизацияПолучатель) КАК ПокупательПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК ПолучилПредставление
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК Документ
			|ГДЕ
			|	Документ.Ссылка В(&МассивОбъектов)
			|	И Документ.Проведен
			|УПОРЯДОЧИТЬ ПО
			|	Дата, Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
			|	ТаблицаТовары.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ТаблицаТовары.Упаковка.ЕдиницаИзмерения
			|		ИНАЧЕ ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
			|	КОНЕЦ КАК ЕдиницаИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ВЫБОР
			|		КОГДА &УчитыватьНДС
			|			ТОГДА ВЫБОР
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаНДС,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Ссылка.Дата КАК Дата,
			|	&Магазин КАК Магазин,
			|	&ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ ТаблицаТовары
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И ТаблицаТовары.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин
			|ПОМЕСТИТЬ втМагазиныСПрименениемЦен
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	&ИспользоватьПрименениеЦен
			|	И Магазины.ИспользоватьПрименениеЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин,
			|	Магазины.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ втМагазиныСАссортиментом
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	Магазины.КонтролироватьАссортимент
			|	И НЕ(&ИспользоватьПрименениеЦен
			|				И Магазины.ИспользоватьПрименениеЦен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин,
			|	Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
			|	Магазины.ПравилоЦенообразования.ВидЦен КАК ВидЦены
			|ПОМЕСТИТЬ втМагазиныОбычные
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	НЕ(Магазины.КонтролироватьАссортимент)
			|	И НЕ(&ИспользоватьПрименениеЦен
			|				И Магазины.ИспользоватьПрименениеЦен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МагазиныОбычные.Магазин КАК Магазин,
			|	ПравилаЦенообразованияЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ПравилаЦенообразованияЦеновыеГруппы.ВидЦен КАК ВидЦены
			|ПОМЕСТИТЬ втПравилаОбычныхМагазинов
			|ИЗ
			|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилаЦенообразованияЦеновыеГруппы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОбычные КАК МагазиныОбычные
			|		ПО (МагазиныОбычные.ПравилоЦенообразования = ПравилаЦенообразованияЦеновыеГруппы.Ссылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	МАКСИМУМ(ДействующиеЦены.Период) КАК ДатаЦены,
			|	ТаблицаТовары.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ втТоварыСПериодамиДействующихЦен
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныСПрименениемЦен КАК МагазиныСПрименениемЦен
			|		ПО (МагазиныСПрименениемЦен.Магазин = ТаблицаТовары.Магазин)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
			|		ПО (ДействующиеЦены.ОбъектЦенообразования = ТаблицаТовары.Магазин)
			|			И (ДействующиеЦены.Период <= ТаблицаТовары.Дата)
			|			И (ДействующиеЦены.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ДействующиеЦены.Характеристика = ТаблицаТовары.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСПериодамиДействующихЦен.Номенклатура КАК Номенклатура,
			|	ТоварыСПериодамиДействующихЦен.Характеристика КАК Характеристика,
			|	ТоварыСПериодамиДействующихЦен.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦены.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ДействующиеЦены.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ДействующиеЦены.Цена / ДействующиеЦены.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныДействующиеПоДокументам
			|ИЗ
			|	втТоварыСПериодамиДействующихЦен КАК ТоварыСПериодамиДействующихЦен
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
			|		ПО (ДействующиеЦены.ОбъектЦенообразования = ТоварыСПериодамиДействующихЦен.Магазин)
			|			И (ДействующиеЦены.Период = ТоварыСПериодамиДействующихЦен.ДатаЦены)
			|			И (ДействующиеЦены.Номенклатура = ТоварыСПериодамиДействующихЦен.Номенклатура)
			|			И (ДействующиеЦены.Характеристика = ТоварыСПериодамиДействующихЦен.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.ФорматМагазина КАК ФорматМагазина,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	МАКСИМУМ(Ассортимент.Период) КАК ДатаАссортимента
			|ПОМЕСТИТЬ втТоварыСПериодамиАссортимента
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныСАссортиментом КАК МагазиныСАссортиментом
			|		ПО (МагазиныСАссортиментом.Магазин = ТаблицаТовары.Магазин)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|		ПО (Ассортимент.ОбъектПланирования = ТаблицаТовары.ФорматМагазина)
			|			И (Ассортимент.Период <= КОНЕЦПЕРИОДА(ТаблицаТовары.Дата, ДЕНЬ))
			|			И (Ассортимент.Номенклатура = ТаблицаТовары.Номенклатура)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.ФорматМагазина,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары.Дата
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСПериодамиАссортимента.Номенклатура КАК Номенклатура,
			|	ТоварыСПериодамиАссортимента.Характеристика КАК Характеристика,
			|	ТоварыСПериодамиАссортимента.Ссылка КАК Ссылка,
			|	ТоварыСПериодамиАссортимента.ФорматМагазина КАК ФорматМагазина,
			|	ТоварыСПериодамиАссортимента.Магазин КАК Магазин,
			|	ТоварыСПериодамиАссортимента.Дата КАК Дата,
			|	Ассортимент.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ втВидыЦенАссортиментаПоДокументам
			|ИЗ
			|	втТоварыСПериодамиАссортимента КАК ТоварыСПериодамиАссортимента
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|		ПО (Ассортимент.ОбъектПланирования = ТоварыСПериодамиАссортимента.ФорматМагазина)
			|			И (Ассортимент.Период = ТоварыСПериодамиАссортимента.ДатаАссортимента)
			|			И (Ассортимент.Номенклатура = ТоварыСПериодамиАссортимента.Номенклатура)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЦенАссортиментаПоДокументам.Номенклатура КАК Номенклатура,
			|	ВидыЦенАссортиментаПоДокументам.Характеристика КАК Характеристика,
			|	ВидыЦенАссортиментаПоДокументам.Ссылка КАК Ссылка,
			|	ВидыЦенАссортиментаПоДокументам.Магазин КАК Магазин,
			|	ВидыЦенАссортиментаПоДокументам.ВидЦен КАК ВидЦен,
			|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦены
			|ПОМЕСТИТЬ втПериодыЦенПоАссортименту
			|ИЗ
			|	втВидыЦенАссортиментаПоДокументам КАК ВидыЦенАссортиментаПоДокументам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период <= ВидыЦенАссортиментаПоДокументам.Дата)
			|			И (ЦеныНоменклатуры.ВидЦены = ВидыЦенАссортиментаПоДокументам.ВидЦен)
			|			И (ЦеныНоменклатуры.Номенклатура = ВидыЦенАссортиментаПоДокументам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ВидыЦенАссортиментаПоДокументам.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВидыЦенАссортиментаПоДокументам.Номенклатура,
			|	ВидыЦенАссортиментаПоДокументам.Характеристика,
			|	ВидыЦенАссортиментаПоДокументам.Ссылка,
			|	ВидыЦенАссортиментаПоДокументам.Магазин,
			|	ВидыЦенАссортиментаПоДокументам.ВидЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПериодыЦенПоАссортименту.Номенклатура КАК Номенклатура,
			|	ПериодыЦенПоАссортименту.Характеристика КАК Характеристика,
			|	ПериодыЦенПоАссортименту.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЦеныНоменклатуры.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатуры.Цена / ЦеныНоменклатуры.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныАссортиментныеПоДокументам
			|ИЗ
			|	втПериодыЦенПоАссортименту КАК ПериодыЦенПоАссортименту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период = ПериодыЦенПоАссортименту.ДатаЦены)
			|			И (ЦеныНоменклатуры.ВидЦены = ПериодыЦенПоАссортименту.ВидЦен)
			|			И (ЦеныНоменклатуры.Номенклатура = ПериодыЦенПоАссортименту.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ПериодыЦенПоАссортименту.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	ЕСТЬNULL(ПравилаОбычныхМагазинов.ВидЦены, МагазиныОбычные.ВидЦены) КАК ВидЦены
			|ПОМЕСТИТЬ втВидыЦенПоПравилам
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОбычные КАК МагазиныОбычные
			|		ПО (МагазиныОбычные.Магазин = ТаблицаТовары.Магазин)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втПравилаОбычныхМагазинов КАК ПравилаОбычныхМагазинов
			|		ПО (ПравилаОбычныхМагазинов.Магазин = ТаблицаТовары.Магазин)
			|			И (ПравилаОбычныхМагазинов.ЦеноваяГруппа = ТаблицаТовары.ЦеноваяГруппа)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары.Дата,
			|	ЕСТЬNULL(ПравилаОбычныхМагазинов.ВидЦены, МагазиныОбычные.ВидЦены)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЦенПоПравилам.Номенклатура КАК Номенклатура,
			|	ВидыЦенПоПравилам.Характеристика КАК Характеристика,
			|	ВидыЦенПоПравилам.Ссылка КАК Ссылка,
			|	ВидыЦенПоПравилам.Магазин КАК Магазин,
			|	ВидыЦенПоПравилам.ВидЦены КАК ВидЦены,
			|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦены
			|ПОМЕСТИТЬ втПериодыЦенПоПравилам
			|ИЗ
			|	втВидыЦенПоПравилам КАК ВидыЦенПоПравилам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период <= ВидыЦенПоПравилам.Дата)
			|			И (ЦеныНоменклатуры.ВидЦены = ВидыЦенПоПравилам.ВидЦены)
			|			И (ЦеныНоменклатуры.Номенклатура = ВидыЦенПоПравилам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ВидыЦенПоПравилам.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВидыЦенПоПравилам.Номенклатура,
			|	ВидыЦенПоПравилам.Характеристика,
			|	ВидыЦенПоПравилам.Ссылка,
			|	ВидыЦенПоПравилам.Магазин,
			|	ВидыЦенПоПравилам.ВидЦены
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПериодыЦенПоПравилам.Номенклатура КАК Номенклатура,
			|	ПериодыЦенПоПравилам.Характеристика КАК Характеристика,
			|	ПериодыЦенПоПравилам.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЦеныНоменклатуры.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатуры.Цена / ЦеныНоменклатуры.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныПравильныеПоДокументам
			|ИЗ
			|	втПериодыЦенПоПравилам КАК ПериодыЦенПоПравилам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период = ПериодыЦенПоПравилам.ДатаЦены)
			|			И (ЦеныНоменклатуры.ВидЦены = ПериодыЦенПоПравилам.ВидЦены)
			|			И (ЦеныНоменклатуры.Номенклатура = ПериодыЦенПоПравилам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ПериодыЦенПоПравилам.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.НоменклатураПредставление КАК НоменклатураПредставление,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.КолонкаКодов КАК КолонкаКодов,", "") + "
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.БазоваяЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.ЕдиницаИзмеренияУпаковки) КАК ПредставлениеЕдиницыИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ВЫБОР
			|		КОГДА &УчитыватьНДС
			|			ТОГДА ВЫБОР
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаНДС,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныДействующиеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныДействующиеПоДокументам.Цена
			|		КОГДА НЕ ЦеныАссортиментныеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныАссортиментныеПоДокументам.Цена
			|		ИНАЧЕ ЕСТЬNULL(ЦеныПравильныеПоДокументам.Цена, 0)
			|	КОНЕЦ КАК ЦенаРозничная,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА НЕ ЦеныДействующиеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныДействующиеПоДокументам.Цена * ТаблицаТовары.Количество
			|		КОГДА НЕ ЦеныАссортиментныеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныАссортиментныеПоДокументам.Цена * ТаблицаТовары.Количество
			|		ИНАЧЕ ЕСТЬNULL(ЦеныПравильныеПоДокументам.Цена, 0) * ТаблицаТовары.Количество
			|	КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаРозничная,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныДействующиеПоДокументам КАК ЦеныДействующиеПоДокументам
			|		ПО (ЦеныДействующиеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныДействующиеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныДействующиеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныАссортиментныеПоДокументам КАК ЦеныАссортиментныеПоДокументам
			|		ПО (ЦеныАссортиментныеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныАссортиментныеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныАссортиментныеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныПравильныеПоДокументам КАК ЦеныПравильныеПоДокументам
			|		ПО (ЦеныПравильныеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныПравильныеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныПравильныеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ
			|	МАКСИМУМ(Дата)
			|ПО
			|	Ссылка");
			ИндексРезультатаТовары = 15;
			Запрос.УстановитьПараметр("ИспользоватьПрименениеЦен", ПолучитьФункциональнуюОпцию("ИспользоватьПрименениеЦен"));
		Иначе
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка                               КАК Ссылка,
			|	Документ.Номер                                КАК Номер,
			|	Документ.Дата                                 КАК Дата,
			|	Документ.Организация                          КАК Поставщик,
			|	Документ.ОрганизацияПолучатель                КАК Покупатель,
			|	Документ.МагазинОтправитель                   КАК МагазинОтправитель,
			|	Документ.МагазинПолучатель                    КАК МагазинПолучатель,
			|	Документ.Ответственный.ФизическоеЛицо         КАК Получил,
			|	Документ.Организация.Префикс                  КАК Префикс,
			|	&ЦенаВключаетНДС                              КАК ЦенаВключаетНДС,
			|	&УчитыватьНДС                                 КАК УчитыватьНДС,
			|	ПРЕДСТАВЛЕНИЕ(Документ.ОрганизацияПолучатель) КАК ПокупательПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПоставщикПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК ПолучилПредставление
			|ИЗ
			|	Документ.ПеремещениеТоваров КАК Документ
			|ГДЕ
			|	Документ.Ссылка В(&МассивОбъектов)
			|	И Документ.Проведен
			|УПОРЯДОЧИТЬ ПО
			|	Дата, Ссылка
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ВЫБОР
			|		КОГДА &УчитыватьНДС
			|			ТОГДА ВЫБОР
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
			|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
			|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
			|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СуммаНДС,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Ссылка.Дата КАК Дата
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
			|
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И ТаблицаТовары.Ссылка.Проведен
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ МАКСИМУМ(Дата) ПО
			|	Ссылка");
		КонецЕсли;
	Иначе //НЕ УстанавливатьВидыЦенВАссортименте
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                               КАК Ссылка,
		|	Документ.Номер                                КАК Номер,
		|	Документ.Дата                                 КАК Дата,
		|	Документ.Организация                          КАК Поставщик,
		|	Документ.ОрганизацияПолучатель                КАК Покупатель,
		|	Документ.МагазинОтправитель                   КАК МагазинОтправитель,
		|	Документ.МагазинПолучатель                    КАК МагазинПолучатель,
		|	Документ.Ответственный.ФизическоеЛицо         КАК Получил,
		|	Документ.Организация.Префикс                  КАК Префикс,
		|	&ЦенаВключаетНДС                              КАК ЦенаВключаетНДС,
		|	&УчитыватьНДС                                 КАК УчитыватьНДС,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПоставщикПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.ОрганизацияПолучатель) КАК ПокупательПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизическоеЛицо) КАК ПолучилПредставление
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|ГДЕ
		|	Документ.Ссылка В(&МассивОбъектов)
		|	И Документ.Проведен
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|" + ?(ВыводитьЦены, "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Ссылка КАК СсылкаДокумента,
		|	ТаблицаТовары.Ссылка.Дата КАК Период,
		|	&Магазин КАК Магазин,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|   Магазины.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|   Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
		|   СправочникНоменклатура.ЦеноваяГруппа КАК ЦеноваяГруппа
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	    |ЛЕВОЕ СОЕДИНЕНИЕ 
		|   Справочник.Магазины КАК Магазины
		|   ПО &Магазин = Магазины.Ссылка
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|   Справочник.Номенклатура КАК СправочникНоменклатура
		|   ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
		|	И ТаблицаТовары.Ссылка.Проведен
		|;
		|	////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|	ПодЗапрос.Период КАК Период,
		|	ПодЗапрос.Номенклатура КАК Номенклатура,
		|	ПодЗапрос.Характеристика КАК Характеристика,
		|	ПодЗапрос.Магазин КАК Магазин,
		|	ПодЗапрос.Цена КАК Цена
		|	ПОМЕСТИТЬ РозничныеЦены
		|	ИЗ
		|	(ВЫБРАТЬ
		|	ТоварыПериодыЦен.Период КАК Период,
		|	ТоварыПериодыЦен.Номенклатура КАК Номенклатура,
		|	ТоварыПериодыЦен.Характеристика КАК Характеристика,
		|	ТоварыПериодыЦен.Магазин КАК Магазин,
		|	ТоварыПериодыЦен.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|	ТоварыПериодыЦен.ПериодЦены КАК ПериодЦены,
		|	ВЫБОР
		|	КОГДА ТоварыПериодыЦен.ИспользоватьПрименениеЦен
		|	ТОГДА ЕСТЬNULL(ДействующиеЦены.Цена, 0) / ЕСТЬNULL(ДействующиеЦены.Упаковка.Коэффициент, 1)
		|ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 1)
		|	КОНЕЦ КАК Цена
		|	ИЗ
		|	(ВЫБРАТЬ
		|	Товары.Период КАК Период,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Магазин КАК Магазин,
		|	Товары.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|	МАКСИМУМ(ВЫБОР
		|	КОГДА Товары.ИспользоватьПрименениеЦен = ИСТИНА
		|	ТОГДА ДействующиеЦены.Период
		|ИНАЧЕ ЦеныНоменклатуры.Период
		|	КОНЕЦ) КАК ПериодЦены,
		|	Товары.ПравилоЦенообразования КАК ПравилоЦенообразования,
		|	Товары.ЦеноваяГруппа КАК ЦеноваяГруппа
		|	ИЗ
		|	ВТТовары КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилоЦенообразованияШапка
		|	ПО (ПравилоЦенообразованияШапка.Ссылка = Товары.ПравилоЦенообразования)
		|	И (НЕ Товары.ИспользоватьПрименениеЦен)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилоЦенообразованияЦеновыеГруппы
		|	ПО Товары.ПравилоЦенообразования = ПравилоЦенообразованияЦеновыеГруппы.Ссылка
		|	И Товары.ЦеноваяГруппа = ПравилоЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|	И (НЕ Товары.ИспользоватьПрименениеЦен)
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
		|	ПО Товары.Номенклатура = ДействующиеЦены.Номенклатура
		|	И Товары.Характеристика = ДействующиеЦены.Характеристика
		|	И Товары.Магазин = ДействующиеЦены.ОбъектЦенообразования
		|	И (Товары.ИспользоватьПрименениеЦен)
		|	И (ДействующиеЦены.Период <= Товары.Период)
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|	ПО Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|	И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|	И (ЦеныНоменклатуры.Период <= Товары.Период)
		|	И (НЕ Товары.ИспользоватьПрименениеЦен)
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|	КОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ НЕ NULL 
		|	И ПравилоЦенообразованияЦеновыеГруппы.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|	ТОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен
		|	КОГДА (ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ NULL
		|	ИЛИ ПравилоЦенообразованияЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	И ПравилоЦенообразованияШапка.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|	ТОГДА ПравилоЦенообразованияШапка.ВидЦен
		|	КОНЕЦ)
		|	
		|	СГРУППИРОВАТЬ ПО
		|	Товары.Период,
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Магазин,
		|	Товары.ИспользоватьПрименениеЦен,
		|	Товары.ПравилоЦенообразования,
		|	Товары.ЦеноваяГруппа) КАК ТоварыПериодыЦен
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилоЦенообразованияШапка
		|	ПО (ПравилоЦенообразованияШапка.Ссылка = ТоварыПериодыЦен.ПравилоЦенообразования)
		|	И (НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилоЦенообразованияЦеновыеГруппы
		|	ПО ТоварыПериодыЦен.ПравилоЦенообразования = ПравилоЦенообразованияЦеновыеГруппы.Ссылка
		|	И ТоварыПериодыЦен.ЦеноваяГруппа = ПравилоЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|	И (НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен)
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
		|	ПО ТоварыПериодыЦен.Номенклатура = ДействующиеЦены.Номенклатура
		|	И ТоварыПериодыЦен.Характеристика = ДействующиеЦены.Характеристика
		|	И ТоварыПериодыЦен.Магазин = ДействующиеЦены.ОбъектЦенообразования
		|	И (ТоварыПериодыЦен.ИспользоватьПрименениеЦен)
		|	И (ДействующиеЦены.Период = ТоварыПериодыЦен.ПериодЦены)
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|	ПО ТоварыПериодыЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|	И ТоварыПериодыЦен.Характеристика = ЦеныНоменклатуры.Характеристика
		|	И (ЦеныНоменклатуры.Период = ТоварыПериодыЦен.ПериодЦены)
		|	И (НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен)
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|	КОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ НЕ NULL 
		|	И ПравилоЦенообразованияЦеновыеГруппы.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|	ТОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен
		|	КОГДА (ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ NULL
		|	ИЛИ ПравилоЦенообразованияЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	И ПравилоЦенообразованияШапка.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|	ТОГДА ПравилоЦенообразованияШапка.ВидЦен
		|	КОНЕЦ)) КАК ПодЗапрос
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|	Магазин,
		|	Номенклатура,
		|	Характеристика,
		|	Период
		|	;
		|	////////////////////////////////////////////////////////////////////////////////
		|
		|","") + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
		|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА &УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
		|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
		|					КОГДА ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|							ИЛИ ТаблицаТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|						ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|	ТаблицаТовары.Ссылка КАК Ссылка " + ?(ВыводитьЦены, ",
		|   ЕСТЬNULL(РозничныеЦены.Цена, 0) КАК ЦенаРозничная,
		|	ВЫРАЗИТЬ(ТаблицаТовары.Количество * ЕСТЬNULL(РозничныеЦены.Цена, 0) КАК ЧИСЛО(15, 2)) КАК СуммаРозничная
		|","") + "
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
		|" + ?(ВыводитьЦены, "
		|ЛЕВОЕ СОЕДИНЕНИЕ РозничныеЦены КАК РозничныеЦены
		|ПО (&Магазин = РозничныеЦены.Магазин
		|		И ТаблицаТовары.Номенклатура = РозничныеЦены.Номенклатура
		|		И ТаблицаТовары.Характеристика = РозничныеЦены.Характеристика
		|		И ТаблицаТовары.Ссылка.Дата = РозничныеЦены.Период)
		|","") + "
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
		|	И ТаблицаТовары.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка");
	КонецЕсли;
	
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Магазин = ПараметрыСеанса.ТекущийМагазин;
	ФорматМагазина = Магазин.ФорматМагазина;
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("ФорматМагазина", ФорматМагазина);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение");

	ОкончаниеИмениОбласти = ?(ВыводитьЦены И НЕ ТолькоПоРозничнымЦенам,"РозничныеЦены","");
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок|Основная" + ОкончаниеИмениОбласти);
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка|Основная" + ОкончаниеИмениОбласти);
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьШапкаТаблицыКолонкаКоличество 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКоличество");
	ОбластьСтрокаТаблицыКолонкаКоличество 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКоличество");
	ОбластьПодвалТаблицыКолонкаКоличество	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКоличество");
	
	ОбластьШапкаТаблицыЦеныПоступления  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЦеныПоступления");
	ОбластьСтрокаТаблицыЦеныПоступления = Макет.ПолучитьОбласть("СтрокаТаблицы|ЦеныПоступления");
	ОбластьПодвалТаблицыЦеныПоступления = Макет.ПолучитьОбласть("ПодвалТаблицы|ЦеныПоступления");
	
	ОбластьШапкаТаблицыРозничныеЦены  = Макет.ПолучитьОбласть("ШапкаТаблицы|РозничныеЦены");
	ОбластьСтрокаТаблицыРозничныеЦены = Макет.ПолучитьОбласть("СтрокаТаблицы|РозничныеЦены");
	ОбластьПодвалТаблицыРозничныеЦены = Макет.ПолучитьОбласть("ПодвалТаблицы|РозничныеЦены");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи|Основная" + ОкончаниеИмениОбласти);
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого|Основная" + ОкончаниеИмениОбласти);
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[ИндексРезультатаТовары].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ПараметрыШапкаКолонкаКоличество = Новый Структура;
		Если ВыводитьУпаковки Тогда
			ПараметрыШапкаКолонкаКоличество.Вставить("ЕдиницаКоличество", НСтр("ru = '(Ед. изм.)'"));
		Иначе
			ПараметрыШапкаКолонкаКоличество.Вставить("ЕдиницаКоличество", "");
		КонецЕсли;
		ОбластьШапкаТаблицыКолонкаКоличество.Параметры.Заполнить(ПараметрыШапкаКолонкаКоличество);
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКоличество);
		
		Если НЕ ВыводитьУпаковки Тогда
			ТабличныйДокумент.Область("ОбластьЕдиницаКоличество").Объединить();
			ТабличныйДокумент.Область("ОбластьЕдиницаКоличество").ВертикальноеПоложение = ВертикальноеПоложение.Центр;
		КонецЕсли;
		
		Если НЕ ТолькоПоРозничнымЦенам Тогда 
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыЦеныПоступления);
		КонецЕсли;
		
		Если ВыводитьЦены Тогда
			
			ПараметрыШапкаРозничныеЦены = Новый Структура;
			Если ВыводитьУпаковки Тогда
				ПараметрыШапкаРозничныеЦены.Вставить("РозничнаяЦенаЕдиница", НСтр("ru = '(Ед. изм.)'"));
			Иначе
				ПараметрыШапкаРозничныеЦены.Вставить("РозничнаяЦенаЕдиница", "");
			КонецЕсли;
			ОбластьШапкаТаблицыРозничныеЦены.Параметры.Заполнить(ПараметрыШапкаРозничныеЦены);
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыРозничныеЦены);
			
			Если НЕ ВыводитьУпаковки Тогда
				ТабличныйДокумент.Область("РозничнаяЦенаЕдиница").Объединить();
				ТабличныйДокумент.Область("РозничнаяЦенаЕдиница").ВертикальноеПоложение = ВертикальноеПоложение.Центр;
			КонецЕсли;
			
		КонецЕсли;
		
		ВсегоНаименований  = 0;
		Итого              = 0;
		ИтогоНДС           = 0;
		ИтогоРозничныеЦены = 0;
		
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаКоличество.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКоличество);
			
			Если НЕ ТолькоПоРозничнымЦенам Тогда
				ОбластьСтрокаТаблицыЦеныПоступления.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыЦеныПоступления);
				
			КонецЕсли;
			
			Если ВыводитьЦены Тогда
				ОбластьСтрокаТаблицыРозничныеЦены.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыРозничныеЦены);
			КонецЕсли;
			
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
			ИтогоНДС          = ИтогоНДС + ВыборкаПоСтрокамТЧ.СуммаНДС;
			
			Если ВыводитьЦены Тогда
				
				ИтогоРозничныеЦены = ИтогоРозничныеЦены  +ВыборкаПоСтрокамТЧ.СуммаРозничная;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКоличество);
		
		Если НЕ ТолькоПоРозничнымЦенам Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыЦеныПоступления);
		КонецЕсли;
		
		Если ВыводитьЦены Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыРозничныеЦены);
		КонецЕсли;
		
		// ИТОГО
		
		
		Если ТолькоПоРозничнымЦенам Тогда
			
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоРозничныеЦены));
			ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
			
		Иначе
			
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
			ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
			
		КонецЕсли;
		
		Если ВыводитьЦены И НЕ ТолькоПоРозничнымЦенам Тогда
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоРозничныеЦены));
			ОбластьИтого.Параметры.ИтогоРозничныеЦены = ТекстИтоговойСтроки;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.Получил = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Получил);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТОРГ12(МассивОбъектов, ОбъектыПечати,ВыводитьУслуги = Истина)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументКПечати.Ссылка                                                 КАК Ссылка,
		|	ДокументКПечати.Номер                                                  КАК Номер,
		|	ДокументКПечати.Дата                                                   КАК Дата,
		|	ДокументКПечати.Организация                                            КАК Контрагент,
		|	ДокументКПечати.Организация                                            КАК Организация,
		|	&БанковскийСчетОрганизации                                             КАК БанковскийСчетОрганизации,
		|	&БанковскийСчетКонтрагента                                             КАК БанковскийСчетКонтрагента,
		|	ДокументКПечати.Организация                                            КАК Руководители,
		|	ДокументКПечати.Организация.Префикс                                    КАК Префикс,
		|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Грузополучатель,
		|	ДокументКПечати.Организация                                            КАК Грузоотправитель,
		|	ДокументКПечати.Организация                                            КАК Поставщик,
		|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Покупатель,
		|	ДокументКПечати.ОрганизацияПолучатель                                  КАК Плательщик,
		|	ДокументКПечати.Ответственный.ФизическоеЛицо                           КАК ОтветственноеЛицо,
		|	&ЦенаВключаетНДС                                                       КАК ЦенаВключаетНДС,
		|	&УчитыватьНДС                                                          КАК УчитыватьНДС,
		|	ДокументКПечати.Дата                                                   КАК ДатаВходящегоДокумента,
		|	ДокументКПечати.Номер                                                  КАК НомерВходящегоДокумента
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ДокументКПечати
		|
		|ГДЕ
		|	ДокументКПечати.Ссылка В (&МассивДокументов)
		|	И ДокументКПечати.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;		
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК БазоваяЕдиницаНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление                         КАК ВидУпаковки,
		|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
		|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто,
		|	ЛОЖЬ                                                                       КАК ЭтоВозвратнаяТара
		|ИЗ (
		|	ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.Номенклатура КАК Номенклатура,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК Коэффициент,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмерения,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК КоэффициентМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмеренияМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка.Вес ЕСТЬ NULL ТОГДА
		|			Товары.Количество * Товары.Номенклатура.Вес
		|		ИНАЧЕ
		|			Товары.КоличествоУпаковок * Товары.Упаковка.Вес
		|		КОНЕЦ КАК МассаБрутто,
		|
		|		Товары.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА &УчитыватьНДС
		|				ТОГДА Товары.Номенклатура.СтавкаНДС
		|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|		КОНЕЦ КАК СтавкаНДС,
		|		ВЫБОР
		|			КОГДА
		|				Товары.КоличествоУпаковок = 0
		|			ТОГДА
		|				Товары.Цена
		|			ИНАЧЕ
		|				Товары.Сумма / Товары.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Товары.КоличествоУпаковок КАК Количество,
		|		Товары.КоличествоУпаковок КАК КоличествоМест,
		|		Товары.Сумма              КАК Сумма,
		|		ВЫБОР
		|			КОГДА &УчитыватьНДС
		|				ТОГДА ВЫБОР
		|						КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|								ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|							ТОГДА ВЫРАЗИТЬ(Товары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
		|						КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|								ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|							ТОГДА ВЫРАЗИТЬ(Товары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
		|						КОГДА Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|								ИЛИ Товары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|							ТОГДА ВЫРАЗИТЬ(Товары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
		|						ИНАЧЕ 0
		|				КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаНДС,
		| 		Товары.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка В (&МассивДокументов)
		|		И Товары.Ссылка.Проведен
		|		" + ?(Не ВыводитьУслуги, " И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ", "") + "
		|	
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
		СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
		Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
		Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
		
		БанковскийСчетОрганизации = Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(МассивОбъектов[0].Организация);
		БанковскийСчетКонтрагента = Справочники.БанковскиеСчета.ПолучитьБанковскийСчетПоУмолчанию(МассивОбъектов[0].ОрганизацияПолучатель);
		
		Запрос.УстановитьПараметр("БанковскийСчетОрганизации", БанковскийСчетОрганизации);
		Запрос.УстановитьПараметр("БанковскийСчетКонтрагента", БанковскийСчетКонтрагента);
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ12";
			
		ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
		
		ТабличныйДокумент.ПолеСлева = 5;
		ТабличныйДокумент.ПолеСправа = 6;
		ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
		ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеПечати = МассивРезультатов[0].Выбрать();
		ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ12");
		
		ПервыйДокумент = Истина;
		Пока ДанныеПечати.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
			СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
			СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетОрганизации);
			СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетКонтрагента);
			
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
			ОбластьШапка.Параметры.НомерДокумента = ДанныеПечати.НомерВходящегоДокумента;
			ОбластьШапка.Параметры.ДатаДокумента  = ДанныеПечати.ДатаВходящегоДокумента;
			
			Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
				
				ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
				"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
			Иначе
				
				ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
				"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
				
			КонецЕсли;
			
			ОбластьШапка.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			ОбластьШапка.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			ОбластьШапка.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
			"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
			
			// Выводим коды
			ОбластьШапка.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
			ОбластьШапка.Параметры.ВидДеятельностиПоОКДП      = "";
			ОбластьШапка.Параметры.ГрузополучательПоОКПО      = СведенияОГрузополучателе.КодПоОКПО;
			ОбластьШапка.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
			ОбластьШапка.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
			ОбластьШапка.Параметры.ОснованиеНомер             = "";
			ОбластьШапка.Параметры.ОснованиеДата              = "";
			ОбластьШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
			ОбластьШапка.Параметры.ТранспортнаяНакладнаяДата  = "";
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			НомерСтраницы = 1;
			
			ИтоговыеСуммы = Новый Структура;
			
			// Инициализация итогов по странице.
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
			
			// Инициализация итогов по документу.
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМест", 0);
			ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
			ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
			ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
			
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
			ИтоговыеСуммы.Вставить("СуммаПрописью", "");
			
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("Номер", 0);
			ДанныеСтроки.Вставить("Мест", 0);
			ДанныеСтроки.Вставить("Количество", 0);
			ДанныеСтроки.Вставить("Цена", 0);
			ДанныеСтроки.Вставить("СуммаБезНДС", 0);
			ДанныеСтроки.Вставить("СуммаНДС", 0);
			ДанныеСтроки.Вставить("СуммаСНДС", 0);
			ДанныеСтроки.Вставить("МассаБрутто", 0);
			ДанныеСтроки.Вставить("МассаНетто", 0);
			
			
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
			ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			
			КоличествоСтрок = СтрокаТовары.Количество();
			
			Пока СтрокаТовары.Следующий() Цикл
				
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
								
				ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
				ОбластьСтрока.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика);
				
				ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
				ДанныеСтроки.Количество  = СтрокаТовары.Количество;
				
				Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
					Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
						ДанныеСтроки.МассаБрутто = 0;
					Иначе
						ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
				ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
				ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
				
				Если ДанныеПечати.ЦенаВключаетНДС Тогда
					ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
				Иначе
					ДанныеСтроки.Цена = СтрокаТовары.Цена;
				КонецЕсли;
				
				ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
				
				Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
						ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
						ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
						ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
						ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
						ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
						ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				// Увеличим итоги по странице.
				ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
				ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
				ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
				ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
				ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
				ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
				
				// Увеличим итоги по документу.
				ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
				ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
				ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
				ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
				ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
				ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
				
			КонецЦикла;
			
			// Выводим итоги по последней странице.
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом.
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			
			ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
			ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
			
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, Нстр("ru='ДФ=""дд ММММ гггг """"года""""""'"));
			ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
			ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
			ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
			ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
			ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
			ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
			
			Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
			
			ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
			ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
			ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
			СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
			ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
			
			Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
				
				ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
				
				ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
			ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьТОРГ13(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументКПечати.Ссылка                                                 КАК Ссылка,
		|	ДокументКПечати.Номер                                                  КАК Номер,
		|	ДокументКПечати.Дата                                                   КАК Дата,
		|	ДокументКПечати.Организация                                            КАК Организация,
		|	ДокументКПечати.Организация.Префикс                                    КАК Префикс,
		|	ДокументКПечати.СкладОтправитель                                       КАК ОтправительПодразделение,
		|	ДокументКПечати.СкладПолучатель                                        КАК ПолучательПодразделение
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ДокументКПечати
		|
		|ГДЕ
		|	ДокументКПечати.Ссылка В (&МассивДокументов)
		|	И ДокументКПечати.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;		
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК БазоваяЕдиницаНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК БазоваяЕдиницаКодПоОКЕИ,
		|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление                         КАК ВидУпаковки,
		|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
		|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто
		|ИЗ (
		|	ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.Номенклатура КАК Номенклатура,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК Коэффициент,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмерения,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			1
		|		ИНАЧЕ
		|			Товары.Упаковка.Коэффициент
		|		КОНЕЦ КАК КоэффициентМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Товары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Товары.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ КАК ЕдиницаИзмеренияМест,
		|
		|		ВЫБОР КОГДА Товары.Упаковка.Вес ЕСТЬ NULL ТОГДА
		|			Товары.Количество * Товары.Номенклатура.Вес
		|		ИНАЧЕ
		|			Товары.КоличествоУпаковок * Товары.Упаковка.Вес
		|		КОНЕЦ КАК МассаБрутто,
		|		Товары.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА
		|				Товары.КоличествоУпаковок = 0
		|			ТОГДА
		|				Товары.Цена
		|			ИНАЧЕ
		|				Товары.Сумма / Товары.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Товары.КоличествоУпаковок КАК Количество,
		|		Товары.КоличествоУпаковок КАК КоличествоМест,
		|		Товары.Сумма              КАК Сумма,
		|		Товары.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка В (&МассивДокументов)
		|		И Товары.Ссылка.Проведен
		|		И НЕ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|	
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
		Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13";
			
		ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
		
		ТабличныйДокумент.ПолеСлева = 5;
		ТабличныйДокумент.ПолеСправа = 5;
		ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
		ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеПечати = МассивРезультатов[0].Выбрать();
		ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ13");
		
		ПервыйДокумент = Истина;
		Пока ДанныеПечати.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			СведенияОбОрганизации     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
			ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
				
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
						
			// Выводим коды
			ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
				
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			НомерСтраницы = 1;
			
			ИтоговыеСуммы = Новый Структура;
			
			// Инициализация итогов по странице.
			ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
			ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
			
			// Инициализация итогов по документу.
			ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
			ИтоговыеСуммы.Вставить("ИтогоМест", 0);
			ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
						
			ДанныеСтроки = Новый Структура;
			ДанныеСтроки.Вставить("Номер", 0);
			ДанныеСтроки.Вставить("Мест", 0);
			ДанныеСтроки.Вставить("Количество", 0);
			ДанныеСтроки.Вставить("Цена", 0);
			ДанныеСтроки.Вставить("МассаБрутто", 0);
			ДанныеСтроки.Вставить("Сумма", 0);

						
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			КоличествоСтрок = ВыборкаПоДокументам.Количество();
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
								
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
				
				ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
				ДанныеСтроки.Количество  = СтрокаТовары.Количество;
				
				Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
					Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
						ДанныеСтроки.МассаБрутто = 0;
					Иначе
						ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеСтроки.Цена  = СтрокаТовары.Цена;
				ДанныеСтроки.Сумма = СтрокаТовары.Сумма;
				
				ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
				
				Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
					
					Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьВсего);
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
						ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
						
						ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
						ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
						ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
								
				// Увеличим итоги по странице.
				ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.Сумма;
				ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
								
				// Увеличим итоги по документу.
				ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
				ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.Сумма;
				ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
								
			КонецЦикла;
			
			// Выводим итоги по последней странице.
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			// Выводим итоги по документу в целом.
			ОбластьМакета = Макет.ПолучитьОбласть("Всего");
			ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Выводим подвал документа
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			ОбластьМакета.Параметры.ИтогоСуммаПрописью = ЧислоПрописью(Цел(ИтоговыеСуммы.ИтогоСумма),,",,,,,,,,0");
			КопеекЦифрами = (ИтоговыеСуммы.ИтогоСумма - Цел(ИтоговыеСуммы.ИтогоСумма))*100;
			ОбластьМакета.Параметры.ИтогоСуммаКопейки  = Формат(КопеекЦифрами, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
		
		Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)
				
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
//		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.Организация                             КАК Поставщик,
		|	Документ.ОрганизацияПолучатель 					 КАК Организация,
		|	Документ.ОрганизацияПолучатель 					 КАК ЮрФизЛицо,
		|	Документ.ОрганизацияПолучатель.Префикс           КАК Префикс,
		|	Документ.СкладПолучатель.Наименование            КАК СкладНаименование,
		|	Документ.СкладПолучатель                         КАК МестоПриемки
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.Количество                                                 КАК КоличествоПринято,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.Сумма              КАК Сумма,
		|		ВЫБОР
		|			КОГДА &УчитыватьНДС
		|				ТОГДА ВЫБОР
		|						КОГДА Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|								ИЛИ Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|							ТОГДА ВЫРАЗИТЬ(Документ.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
		|						КОГДА Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|								ИЛИ Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|							ТОГДА ВЫРАЗИТЬ(Документ.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
		|						КОГДА Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|								ИЛИ Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|							ТОГДА ВЫРАЗИТЬ(Документ.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаНДС,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|	И НЕ Документ.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М4";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки.
		СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок документа.
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ДатаСоставления = ДанныеПечати.ДатаСоставления;
		
		СведенияОПоставщике     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		НомерСтраницы = 1;
				
		ИтоговыеСуммы = Новый Структура;
	
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
			
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			ДанныеСтроки.СуммаСНДС   = СтрокаТовары.Сумма;
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			
			Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабличныйДокумент.Вывести(ПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по документу.
			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
				
		КонецЦикла;
		
		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтоговыеСуммы.ИтогоКоличество;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтоговыеСуммы.ИтогоСумма;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтоговыеСуммы.ИтогоНДС;
		ОбластьМакета.Параметры.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.ОрганизацияПолучатель 					 КАК Организация,
		|	Документ.ОрганизацияПолучатель.Префикс 			 КАК Префикс,
		|	Документ.СкладПолучатель                         КАК Подразделение,
		|	Документ.СкладОтправитель                        КАК Склад
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
		|		Документ.КоличествоУпаковок КАК Количество,
		|		ВЫБОР
		|			КОГДА Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Документ.Сумма              КАК Сумма,
		|		ВЫБОР
		|			КОГДА &УчитыватьНДС
		|				ТОГДА ВЫБОР
		|						КОГДА Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|								ИЛИ Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|							ТОГДА ВЫРАЗИТЬ(Документ.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
		|						КОГДА Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|								ИЛИ Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|							ТОГДА ВЫРАЗИТЬ(Документ.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
		|						КОГДА Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|								ИЛИ Документ.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|							ТОГДА ВЫРАЗИТЬ(Документ.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаНДС,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М11";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М11");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки.
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.КодПоОКПО                = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.Заголовок                = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ТРЕБОВАНИЕ-НАКЛАДНАЯ № %1'"), ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
						
		ИтоговыеСуммы = Новый Структура;
	
		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
		
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		
		// Выводим многострочную часть документа.
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			
			ДанныеСтроки.СуммаСНДС   = СтрокаТовары.Сумма;
			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
			
			ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
						
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
				
		КонецЦикла;
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ унифицированной формы М-15.
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-15.
//
Функция ПечатьМ15(МассивОбъектов, ОбъектыПечати)
	
	
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Реализация товаров'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М15";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Организация КАК ЮрФизЛицо,
	|	Документ.Организация КАК Руководители,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладОтправитель.Наименование КАК СкладНаименование,
	|	Документ.Ответственный КАК ОтветственноеЛицо,
	|	Документ.ОрганизацияПолучатель.Код КАК КонтрагентКод,
	|	Документ.ОрганизацияПолучатель КАК Контрагент,
	|	"""" КАК АдресДоставки,
	|	&УчитыватьНДС,
	|	&ЦенаВключаетНДС,
	|	Документ.Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Ссылка,
	|	Документ.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Характеристика) КАК ХарактеристикаПредставление,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.КоличествоПринято,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|		ПеремещениеТоваров.Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ПеремещениеТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения)
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ВЫБОР
	|			КОГДА ПеремещениеТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Код)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Код)
	|		КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|		СУММА(ПеремещениеТоваров.Количество) КАК КоличествоПринято,
	|		СУММА(ПеремещениеТоваров.Цена) КАК Цена,
	|		СУММА(ПеремещениеТоваров.Сумма) КАК Сумма,
	|		СУММА(ВЫБОР
	|			КОГДА &УчитыватьНДС
	|				ТОГДА ВЫБОР
	|						КОГДА ПеремещениеТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|								ИЛИ ПеремещениеТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|							ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваров.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
	|						КОГДА ПеремещениеТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|								ИЛИ ПеремещениеТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|							ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваров.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
	|						КОГДА ПеремещениеТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|								ИЛИ ПеремещениеТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|							ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваров.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС,
	|		ПеремещениеТоваров.Ссылка КАК Ссылка,
	|		ПеремещениеТоваров.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|	ГДЕ
	|		ПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	|		И ПеремещениеТоваров.Ссылка.Проведен
	|		И ПеремещениеТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПеремещениеТоваров.Номенклатура,
	|		ПеремещениеТоваров.Характеристика,
	|		ПеремещениеТоваров.Ссылка,
	|		ПеремещениеТоваров.НомерСтроки,
	|		ВЫБОР
	|			КОГДА ПеремещениеТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПеремещениеТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Код)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Код)
	|		КОНЕЦ) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	
	СистемаНалогообложения = ПодключаемоеОборудованиеРТ.ПолучитьСистемуНалогообложения(МассивОбъектов[0].Дата, МассивОбъектов[0].Организация,,);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	Запрос.УстановитьПараметр("УчитыватьНДС"   , СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН);
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М15");
	
	ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал           = Макет.ПолучитьОбласть("Подвал");
	
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	СтрокНаСтранице = 24;
	СтрокШапки      = 9;
	СтрокПодвала    = 3;
	НомерСтраницы   = 1;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки.
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.ЮрФизЛицо, ВыборкаПоДокументам.ДатаСоставления);
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер, Ложь, Истина);
		
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Контрагент, ВыборкаПоДокументам.ДатаСоставления), "ПолноеНаименование,");
		ОбластьШапка.Параметры.КонтрагентНаименование = ПредставлениеКонтрагента;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		КоличествоСтрок = ВыборкаПоСтрокамТЧ.Количество();
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// Инициализация итогов в документе.
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Номер            = 0;
		
		// Выводим многострочную часть документа.
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Номер = Номер + 1;
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = (СтрокШапки + Номер - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				Или ((ПереноситьПоследнююСтроку = 1) И (Номер = КоличествоСтрок)) Тогда
				
				НомерСтраницы	= НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;
			
			
			
			ОбластьЗаголовокТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			
			СуммаСНДС   = (ВыборкаПоСтрокамТЧ.Сумма + ?(ВыборкаПоДокументам.ЦенаВключаетНДС, 0, ВыборкаПоСтрокамТЧ.СуммаНДС));
			СуммаНДС    = ВыборкаПоСтрокамТЧ.СуммаНДС;
			СуммаБезНДС = СуммаСНДС  - СуммаНДС;
			
			Количество      = ВыборкаПоСтрокамТЧ.КоличествоПринято;
			Цена            = СуммаБезНДС / Количество;
			
			ОбластьСтрока.Параметры.Количество        = Количество;
			ОбластьСтрока.Параметры.СуммаСНДС         = СуммаСНДС;
			ОбластьСтрока.Параметры.СуммаБезНДС       = СуммаБезНДС;
			ОбластьСтрока.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьСтрока.Параметры.Цена              = Цена;
			ОбластьСтрока.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ИтогоКоличествоПринято = ИтогоКоличествоПринято + Количество;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + СуммаБезНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + СуммаСНДС;
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ВыборкаПоДокументам.Руководители, ВыборкаПоДокументам.ДатаДокумента,);
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
		// Главный бухгалтер
		ОбластьПодвал.Параметры.ФИОГлавБухгалтера = Бухгалтер;
		
		ФИООтпускРазрешил       = Руководитель;
		ДолжностьОтпускРазрешил = Руководители.РуководительДолжность;
		
		ОбластьПодвал.Параметры.ФИОРуководителя       = ФИООтпускРазрешил;
		ОбластьПодвал.Параметры.ДолжностьРуководителя = ДолжностьОтпускРазрешил;
		
		// Отпуск товара произвел
		ФамилияИмяОтчествоФизЛица     = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ВыборкаПоДокументам.ОтветственноеЛицо, ВыборкаПоДокументам.ДатаДокумента);
		
		ФамилияИмяОтчествоОтпускПроизвел = ФамилияИмяОтчествоФизЛица.Фамилия + " " + ФамилияИмяОтчествоФизЛица.Имя + " " + ФамилияИмяОтчествоФизЛица.Отчество;
		ФИООтпускПроизвел                = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ФамилияИмяОтчествоОтпускПроизвел);
		
		ОбластьПодвал.Параметры.ФИОКладовщика       = ФИООтпускПроизвел;
		
		// Выводим итоги по документу
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
		ОбластьПодвал.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтогоВсегоСНДС);
		ОбластьПодвал.Параметры.ИтогНДС       = ИтогоВсегоСНДС - ИтогоСуммаБезНДС;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	// Зададим параметры макета
	ТабличныйДокумент.ПолеСверху         = 20;
	ТабличныйДокумент.ПолеСлева          = 10;
	ТабличныйДокумент.ПолеСнизу          = 20;
	ТабличныйДокумент.ПолеСправа         = 20;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьЗ5(МассивОбъектов, ОбъектыПечати)
		
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_З5");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_З5";
	
	// Зададим параметры макета
	ТабличныйДокумент.ПолеСверху = 0;
	ТабличныйДокумент.ПолеСлева  = 0;
	ТабличныйДокумент.ПолеСнизу  = 0;
	ТабличныйДокумент.ПолеСправа = 0;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ПеремещениеТоваров.Организация КАК Организация,
	                      |	ПеремещениеТоваров.Номер,
	                      |	ПеремещениеТоваров.Дата,
	                      |	ПеремещениеТоваров.Дата КАК ДатаДокумента,
	                      |	ПеремещениеТоваров.СкладОтправитель КАК Отправитель,
	                      |	ПеремещениеТоваров.СкладПолучатель КАК Получатель,
	                      |	ПеремещениеТоваров.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	                      |ГДЕ
	                      |	ПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	                      |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                      |	ВложенныйЗапрос.Номенклатура.Код КАК ТоварКод,
	                      |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	                      |	ВложенныйЗапрос.Количество КАК Количество,
	                      |	ВложенныйЗапрос.Цена,
	                      |	ВложенныйЗапрос.Сумма КАК Сумма,
	                      |	ВложенныйЗапрос.Характеристика,
	                      |	ВложенныйЗапрос.НомерСтроки КАК НомерПП,
	                      |	ВложенныйЗапрос.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	                      |		ВЫБОР
	                      |			КОГДА ПеремещениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |				ТОГДА ПеремещениеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	                      |			ИНАЧЕ ПеремещениеТоваровТовары.Упаковка.ЕдиницаИзмерения
	                      |		КОНЕЦ КАК ЕдиницаИзмерения,
	                      |		СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	                      |		ПеремещениеТоваровТовары.Цена КАК Цена,
	                      |		СУММА(ПеремещениеТоваровТовары.Сумма) КАК Сумма,
	                      |		ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	                      |		МИНИМУМ(ПеремещениеТоваровТовары.НомерСтроки) КАК НомерСтроки,
	                      |		ПеремещениеТоваровТовары.Ссылка КАК Ссылка
	                      |	ИЗ
	                      |		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	                      |	ГДЕ
	                      |		ПеремещениеТоваровТовары.Ссылка В(&МассивОбъектов)
	                      |	
	                      |	СГРУППИРОВАТЬ ПО
	                      |		ПеремещениеТоваровТовары.Номенклатура,
	                      |		ВЫБОР
	                      |			КОГДА ПеремещениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	                      |				ТОГДА ПеремещениеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	                      |			ИНАЧЕ ПеремещениеТоваровТовары.Упаковка.ЕдиницаИзмерения
	                      |		КОНЕЦ,
	                      |		ПеремещениеТоваровТовары.Характеристика,
	                      |		ПеремещениеТоваровТовары.Цена,
	                      |		ПеремещениеТоваровТовары.Ссылка) КАК ВложенныйЗапрос
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка,
	                      |	НомерПП
	                      |ИТОГИ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
	                      |	СУММА(Количество),
	                      |	СУММА(Сумма)
	                      |ПО
	                      |	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	// получим области макета
	Шапка 						 = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы2			 = Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
	ЗаголовокТаблицыДляПереноса  = Макет.ПолучитьОбласть("ЗаголовокТаблицыДляПереноса");
	СтрокаТаблицы2				 = Макет.ПолучитьОбласть("СтрокаТаблицы2");
	Подвал						 = Макет.ПолучитьОбласть("Подвал");
	
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Вывод шапки
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);
		ТекстРНН_БИН 		  = "";
		
		Шапка.Параметры.ПредставлениеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		Шапка.Параметры.ОрганизацияРНН_БИН 		 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ИНН,", Ложь, "ru");
		
		Шапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер, ПустаяСтрока(ПолучитьФункциональнуюОпцию("ПрефиксИнформационнойБазы")), Истина);
		Шапка.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ТабличныйДокумент.Вывести(Шапка);
		
		// вывод таблицы
		
		//заголовок
		
		ЗаголовокТаблицы2.Параметры.Валюта = "тенге";
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы2);
		ТабличныйДокумент.Вывести(ЗаголовокТаблицыДляПереноса);
		
		//выводим строки таблицы
		Пока ВыборкаПоСтрокамТЧ.Следующий() = 1 Цикл
			
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаТаблицы2) Тогда
				
				// Выведем разрыв страницы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				// Выведем переносимую часть заголовка таблицы	
				ТабличныйДокумент.Вывести(ЗаголовокТаблицыДляПереноса);
				
			КонецЕсли;
			
			Если ВыборкаПоСтрокамТЧ.Количество = 0 Тогда
				СуммаТовара = 0;
			Иначе
				СуммаТовара = ?(ВыборкаПоСтрокамТЧ.Сумма = Null, 0, ВыборкаПоСтрокамТЧ.Сумма);				
			КонецЕсли;		
			
			СтрокаТаблицы2.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			СтрокаТаблицы2.Параметры.Количество = Формат(ВыборкаПоСтрокамТЧ.Количество, "ЧДЦ=3");
			СтрокаТаблицы2.Параметры.Сумма = Формат(СуммаТовара, "ЧДЦ=2");
			СтрокаТаблицы2.Параметры.Цена = Формат(?(ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Количество), СуммаТовара/ВыборкаПоСтрокамТЧ.Количество, 0), "ЧДЦ=2");
			СтрокаТаблицы2.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.ТоварНаименование,ВыборкаПоСтрокамТЧ.Характеристика);
			
			ТабличныйДокумент.Вывести(СтрокаТаблицы2);
			
		КонецЦикла;	
		
		// вывод подвала
		Если Не ВыборкаПоТабличнымЧастям.Количество = 0 Тогда
			Подвал.Параметры.КоличествоНаименований = ЧислоПрописью(ВыборкаПоТабличнымЧастям.Количество, ,",,,,,,,,0"); ;
			Подвал.Параметры.СуммаПрописью 			= ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(?(ЗначениеЗаполнено(ВыборкаПоТабличнымЧастям.Сумма),ВыборкаПоТабличнымЧастям.Сумма,0));
		Иначе
			Подвал.Параметры.КоличествоНаименований = "";
			Подвал.Параметры.СуммаПрописью 			= "";
		КонецЕсли;
		
		Подвал.Параметры.Валюта = "тенге";
		
		ТабличныйДокумент.Вывести(Подвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент; 	
	
КонецФункции

Функция ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.Организация КАК Руководители,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ПеремещениеТоваров.СкладОтправитель.Организация.Префикс КАК Префикс,
	|	&СрокДоставки КАК СрокДоставки,
	|	&МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	&МаркаПрицепа КАК МаркаПрицепа,
	|	&ГосНомерАвтомобиля КАК ГосНомерАвтомобиля,
	|	&ГосНомерПрицепа КАК ГосНомерПрицепа,
	|	&ПунктПогрузки КАК ПунктПогрузки,
	|	&ПунктРазгрузки КАК ПунктРазгрузки,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК ПредставлениеПеревозчика,
	|	&Заказчик КАК ПредставлениеЗаказчика,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	&ЛицензионнаяКарточка КАК ЛицензионнаяКарточка,
	|	&ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	НаименованияТоваров.Количество КАК КоличествоНаименований
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество,
	|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|				ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|				ПеремещениеТоваровТовары.Характеристика КАК Характеристика
	|			ИЗ
	|				Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|			ГДЕ
	|				ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокТоваров.Ссылка) КАК НаименованияТоваров
	|		ПО ПеремещениеТоваров.Ссылка = НаименованияТоваров.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Ссылка.Дата КАК ДатаТТН,
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПеремещениеТоваров.Характеристика КАК Характеристика,
	|	ПеремещениеТоваров.Номенклатура." + КолонкаКодов + " КАК ТоварКод,
	|	ПеремещениеТоваров.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	ПеремещениеТоваров.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок * ПеремещениеТоваров.Упаковка.Вес
	|	КОНЕЦ КАК МассаБрутто,
	|	ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес КАК МассаНетто,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ПеремещениеТоваров.Сумма КАК Сумма,
	|	0 КАК СуммаНДС,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.Номенклатура.Весовой КАК Весовой
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТТН,
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|";
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("СрокДоставки", ПараметрыПечати.СрокДоставки);
	Запрос.УстановитьПараметр("МаркаАвтомобиля", ПараметрыПечати.МаркаАвтомобиля);
	Запрос.УстановитьПараметр("МаркаПрицепа", ПараметрыПечати.МаркаПрицепа);
	Запрос.УстановитьПараметр("ГосНомерАвтомобиля", ПараметрыПечати.ГосНомерАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерПрицепа", ПараметрыПечати.ГосНомерПрицепа);
	Запрос.УстановитьПараметр("ПунктПогрузки", ПараметрыПечати.ПунктПогрузки);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПараметрыПечати.ПунктРазгрузки);
	Запрос.УстановитьПараметр("Водитель", ПараметрыПечати.Водитель);
	Запрос.УстановитьПараметр("Перевозчик", ПараметрыПечати.Перевозчик);
	Запрос.УстановитьПараметр("Заказчик", ПараметрыПечати.Заказчик);
	Запрос.УстановитьПараметр("ВидПеревозки", ПараметрыПечати.ВидПеревозки);
	Запрос.УстановитьПараметр("ЛицензионнаяКарточка", ПараметрыПечати.ЛицензионнаяКарточка);
	Запрос.УстановитьПараметр("ВодительскоеУдостоверение", ПараметрыПечати.ВодительскоеУдостоверение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТТН";
	
	ФормированиеПечатныхФормСервер.ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, Запрос, ОбъектыПечати);
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.МагазинОтправитель КАК Отправитель,
	|	ТаблицаДокументов.МагазинПолучатель КАК Получатель,
	|	ТаблицаДокументов.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаДокументов.СкладПолучатель КАК СкладПолучатель,
	|	ТаблицаДокументов.Организация КАК Организация,
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ТаблицаДокументов.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", НСтр("ru = 'Отправитель'"));
	СтруктураПечати.Вставить("ИмяРеквизита2", НСтр("ru = 'Организация оправитель'"));
	СтруктураПечати.Вставить("ИмяРеквизита3", НСтр("ru = 'Склад отправитель'"));
	СтруктураПечати.Вставить("ИмяРеквизита4", НСтр("ru = 'Получатель'"));
	СтруктураПечати.Вставить("ИмяРеквизита5", НСтр("ru = 'Организация получатель'"));
	СтруктураПечати.Вставить("ИмяРеквизита6", НСтр("ru = 'Склад получатель'"));
	СтруктураПечати.Вставить("КоличествоРеквизитов", 6);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Отправитель);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Организация);
		СтруктураПечати.Вставить("Реквизит3", Выборка.СкладОтправитель);
		СтруктураПечати.Вставить("Реквизит4", Выборка.Получатель);
		СтруктураПечати.Вставить("Реквизит5", Выборка.ОрганизацияПолучатель);
		СтруктураПечати.Вставить("Реквизит6", Выборка.СкладПолучатель);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц)
	
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "";
	Если ИспользоватьУчетИмпортныхТоваров 
		Или ИспользоватьКомиссионнуюТорговлю Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.НомерГТД.СтранаВвозаНеРФ
		|			ТОГДА """"
		|		ИНАЧЕ ТоварыОрганизаций.НомерГТД.РегистрационныйНомерДекларации
		|	КОНЕЦ КАК ПредставлениеГТД,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.НомерГТД.СтранаВвозаНеРФ
		|			ТОГДА """"
		|		ИНАЧЕ ТоварыОрганизаций.НомерГТД.СтранаПроисхождения.Код
		|	КОНЕЦ КАК СтранаПроисхожденияКод,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизаций.НомерГТД.СтранаВвозаНеРФ
		|			ТОГДА """"
		|		ИНАЧЕ ТоварыОрганизаций.НомерГТД.СтранаПроисхождения.Наименование
		|	КОНЕЦ КАК ПредставлениеСтраны,
		|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
		|	ТоварыОрганизаций.Количество КАК Количество,
		|	ТоварыОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ТоварыОрганизаций.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ТоварыОрганизаций.Регистратор КАК Регистратор,
		|	ТоварыОрганизаций.Склад КАК Склад,
		|	ТоварыОрганизаций.Организация КАК Организация,
		|	ТоварыОрганизаций.Поставщик КАК Поставщик,
		|	ТоварыОрганизаций.Договор КАК Договор
		|ПОМЕСТИТЬ ТаблицаДвижений
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.Регистратор В
		|			(ВЫБРАТЬ
		|				ДанныеДокументов.Ссылка КАК Ссылка
		|			ИЗ
		|				ТаблицаДанныхДокументов КАК ДанныеДокументов)
		|	И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
		|	ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки,
		|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
		|	ПеремещениеТоваровТовары.Количество КАК КоличествоДокумента,
		|	ПеремещениеТоваровТовары.Упаковка КАК Упаковка,
		|	ПеремещениеТоваровТовары.КоличествоУпаковок КАК КоличествоУпаковокВДокументе,
		|	ПеремещениеТоваровТовары.Цена КАК Цена,
		|	ПеремещениеТоваровТовары.Сумма * ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаДвижений.Количество, 0) = 0
		|			ТОГДА ПеремещениеТоваровТовары.Количество
		|		ИНАЧЕ ЕСТЬNULL(ТаблицаДвижений.Количество, ПеремещениеТоваровТовары.Количество)
		|	КОНЕЦ / ПеремещениеТоваровТовары.Количество КАК Сумма,
		|	ВЫБОР
		|		КОГДА ДанныеДокументов.УчитыватьНДС
		|			ТОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|	КОНЕЦ КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ДанныеДокументов.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|							ИЛИ ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|						ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваровТовары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
		|					КОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|							ИЛИ ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|						ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваровТовары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
		|					КОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|							ИЛИ ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|						ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваровТовары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|	ДанныеДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоТовар,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.КоличествоУпаковок = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЕСТЬNULL(ТаблицаДвижений.Количество, 0) = 0
		|					ТОГДА ПеремещениеТоваровТовары.Количество
		|				ИНАЧЕ ЕСТЬNULL(ТаблицаДвижений.Количество, ПеремещениеТоваровТовары.Количество)
		|			КОНЕЦ / ПеремещениеТоваровТовары.КоличествоУпаковок * ПеремещениеТоваровТовары.Количество
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаДвижений.Количество, 0) = 0
		|			ТОГДА ПеремещениеТоваровТовары.Количество
		|		ИНАЧЕ ЕСТЬNULL(ТаблицаДвижений.Количество, ПеремещениеТоваровТовары.Количество)
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ТаблицаДвижений.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ТаблицаДвижений.НомерГТД КАК НомерГТД,
		|	ЕСТЬNULL(ТаблицаДвижений.ПредставлениеГТД, """") КАК ПредставлениеГТД,
		|	ЕСТЬNULL(ТаблицаДвижений.СтранаПроисхожденияКод, """") КАК СтранаПроисхожденияКод,
		|	ЕСТЬNULL(ТаблицаДвижений.ПредставлениеСтраны, """") КАК ПредставлениеСтраны,
		|	ТаблицаДвижений.Склад КАК Склад,
		|	ТаблицаДвижений.Организация КАК Организация,
		|	ТаблицаДвижений.Поставщик КАК Поставщик,
		|	ТаблицаДвижений.Договор КАК Договор
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
		|		ПО ПеремещениеТоваровТовары.Ссылка = ДанныеДокументов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДвижений КАК ТаблицаДвижений
		|		ПО ПеремещениеТоваровТовары.Ссылка = ТаблицаДвижений.Регистратор
		|			И ПеремещениеТоваровТовары.НомерСтроки = ТаблицаДвижений.НомерСтрокиДокумента";
	Иначе
		ТекстЗапроса = ТекстЗапроса +"ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
		|	ЛОЖЬ КАК ПрослеживаемыйТовар,
		|	ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки,
		|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
		|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
		|	ПеремещениеТоваровТовары.Количество КАК Количество,
		|	ПеремещениеТоваровТовары.Упаковка КАК Упаковка,
		|	ПеремещениеТоваровТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	0 КАК КоличествоПоРНПТ,
		|	ПеремещениеТоваровТовары.Цена КАК Цена,
		|	ПеремещениеТоваровТовары.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА ДанныеДокументов.УчитыватьНДС
		|			ТОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|	КОНЕЦ КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ДанныеДокументов.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|							ИЛИ ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|						ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваровТовары.Сумма * 0.1 / 1.1 КАК ЧИСЛО(17, 2))
		|					КОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|							ИЛИ ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|						ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваровТовары.Сумма * 0.18 / 1.18 КАК ЧИСЛО(17, 2))
		|					КОГДА ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|							ИЛИ ПеремещениеТоваровТовары.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|						ТОГДА ВЫРАЗИТЬ(ПеремещениеТоваровТовары.Сумма * 0.2 / 1.2 КАК ЧИСЛО(17, 2))
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНДС,
		|	ДанныеДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоТовар,
		|	"""" КАК НомерГТД,
		|	"""" КАК ПредставлениеГТД,
		|	"""" КАК СтранаПроисхожденияКод,
		|	"""" КАК ПредставлениеСтраны,
		|	ДанныеДокументов.Склад КАК Склад,
		|	ДанныеДокументов.Организация КАК Организация,
		|	"""" КАК Поставщик,
		|	"""" КАК Договор
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
		|		ПО ПеремещениеТоваровТовары.Ссылка = ДанныеДокументов.Ссылка";
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
