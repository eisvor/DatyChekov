#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт списания товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписанияТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Акт списания товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// ТОРГ-16
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Торг16";
	КомандаПечати.Представление = НСтр("ru = 'ТОРГ-16'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// Форма-3-6
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "З6";
	КомандаПечати.Представление = НСтр("ru = 'З-6 (Акт списания запасов)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтражениеНедостач);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Сформировать печатные формы объектов.
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит сформированные табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - для заполнения письма при отправке печатной формы по электронной почте.
//                    см. РаботаСПочтовымиСообщениямиКлиент.РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписанияТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСписанияТоваров",
				НСтр("ru = 'Акт списания товаров'"),
				ПечатьАктаСписанияТоваров(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ16") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ16",
				НСтр("ru = 'ТОРГ-16'"),
				ПечатьТОРГ16(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "З6") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "З6",
			ПараметрыПечати.Представление,
			ПечатьЗ6(МассивОбъектов, ОбъектыПечати));

		КонецЕсли;
		
КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.АктОРасхожденияхПриПриемкеТоваров - документ для инициализации данных.
//  ДополнительныеСвойства - Структура - структура дополнительных свойств.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст ="ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                 КАК Период,
	|	ДанныеДокумента.Ссылка                               КАК Ссылка,
	|	ДанныеДокумента.Организация                          КАК Организация,
	|	ДанныеДокумента.Склад                                КАК Склад,
	|	ДанныеДокумента.Магазин                              КАК Магазин,
	|	ДанныеДокумента.ДокументОснование                    КАК ДокументОснование,
	|	ДанныеДокумента.АналитикаХозяйственнойОперации       КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.Магазин.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач,
	|	(НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.СписаниеТоваров              КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	ТипОснования = ТипЗнч(Реквизиты.ДокументОснование);
	Если ЗначениеЗаполнено(Реквизиты.ДокументОснование) 
		И ТипОснования <> Тип("ДокументСсылка.ОстаткиЕГАИС") Тогда
		ПоОснованию = Истина;
	Иначе
		ПоОснованию = Ложь;
	КонецЕсли;
	Запрос.УстановитьПараметр("ПоОснованию", ПоОснованию);
	Запрос.УстановитьПараметр("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("НомерГТД" , Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия" , Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Услуга", Перечисления.ТипыНоменклатуры.Услуга);
	Запрос.УстановитьПараметр("ПодарочныйСертификат", Перечисления.ТипыНоменклатуры.ПодарочныйСертификат);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("ОтражениеНедостач", Перечисления.СкладскиеОперации.ОтражениеНедостач);
	
	ТекстЗапроса = 
	"//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	&Склад КАК Склад,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|	И (НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = &Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1 ТаблицаТоварыНаСкладах
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ФормироватьДвижения
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// 2 ТаблицаТоварыОрганизаций
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Расход КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	&Поставщик КАК Поставщик,
	|	&Договор КАК Договор,
	|	&НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Сумма КАК СуммаПродажи
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	&ОтражениеНедостач КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.СписаниеТоваров.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> &ПустаяСерия
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	// 4 ТаблицаТоварыКОформлениюИзлишковНедостач
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Приход КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&ДокументОснование КАК ДокументОснование,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Количество КАК КОформлениюАктов
	|
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И &ПоОснованию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаТаблицаСерийныхНомеров();
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"                  , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"                , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"             , Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач", Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"                  , Результат[11].Выгрузить());
	
	ИспользоватьКомиссионнуюТорговлю = ДополнительныеСвойства.ИспользуетсяКомиссионнаяТорговля;
	ИспользоватьУчетИмпортныхТоваров = ДополнительныеСвойства.ИспользуетсяУчетИмпортныхТоваров;
	
	Если ИспользоватьКомиссионнуюТорговлю 
		ИЛИ ИспользоватьУчетИмпортныхТоваров Тогда
		ПроведениеСервер.ПерезаполнитьТаблицуДвиженийТоварыОрганизаций(
			ТаблицыДляДвижений.ТаблицаТоварыОрганизаций,
			ДокументСсылка,
			Реквизиты.Период,
			Истина,
			Истина);
		Если ИспользоватьКомиссионнуюТорговлю Тогда
			ТаблицыДляДвижений.Вставить(
				"ТаблицаТоварыКОформлениюОтчетовКомитенту", 
				ПроведениеСервер.ТаблицаДвиженийКомитентуДляСписания(ТаблицыДляДвижений.ТаблицаТоварыОрганизаций, Истина));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = &ПодарочныйСертификат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.СписаниеТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL )
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL 
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.Номенклатура  КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество    КАК Количество,
	|	&Склад                              КАК Отправитель,
	|	&Организация                        КАК Организация,
	|	&АналитикаХозяйственнойОперации     КАК АналитикаХозяйственнойОперации,
	|   &Период                             КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК Номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер)         КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	&ФормироватьДвижения";
	
	Возврат ТекстЗапроса;
	 	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать

Функция ПечатьТОРГ16(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка                                       КАК Ссылка,
	|	Документ.Номер                                        КАК Номер,
	|	Документ.Дата                                         КАК Дата,
	|	Документ.Дата                                         КАК ДатаДокумента,
	|	Документ.Дата                                         КАК ДатаСписанияТовара,
	|	Документ.Организация                                  КАК Организация,
	|	Документ.Организация.Префикс                          КАК Префикс,
	|	Документ.Организация                                  КАК Руководители,
	|	Документ.ОснованиеСписания                            КАК ОснованиеСписания,
	|	Документ.СуммаДокумента                               КАК СуммаДокумента
	|ИЗ
	|	Документ.СписаниеТоваров КАК Документ
	|
	|ГДЕ
	|	Документ.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК НоменклатураПредставление,
	|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ВложенныйЗапрос.Характеристика.Наименование                                КАК ХарактеристикаПредставление,
	|	ВложенныйЗапрос.КоличествоМест                                             КАК КоличествоМест,
	|	ВложенныйЗапрос.МассаОдногоМеста                                           КАК МассаОдногоМеста,
	|	ВложенныйЗапрос.МассаНетто                                                 КАК МассаНетто,
	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
	|	ВложенныйЗапрос.Стоимость                                                  КАК Стоимость,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
	|ИЗ (
	|	ВЫБРАТЬ
	|		Документ.Ссылка             КАК Ссылка,
	|		Документ.Номенклатура       КАК Номенклатура,
	|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			Документ.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			Документ.Упаковка.ЕдиницаИзмерения
	|		КОНЕЦ                                      КАК ЕдиницаИзмерения,
	|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕ(Документ.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕ(Документ.Упаковка.ЕдиницаИзмерения)
	|		КОНЕЦ                                      КАК ЕдиницаИзмеренияНаименование,
	|		ВЫБОР КОГДА Документ.Упаковка.Вес ЕСТЬ NULL ТОГДА
	|			Документ.Номенклатура.Вес
	|		ИНАЧЕ
	|			Документ.Упаковка.Вес/Документ.Количество
	|		КОНЕЦ                                      КАК МассаОдногоМеста,
	|		Документ.Количество * Документ.Номенклатура.Вес КАК МассаНетто,
	|		Документ.Характеристика     КАК Характеристика,
	|		ВЫБОР
	|			КОГДА
	|				Документ.КоличествоУпаковок = 0
	|			ТОГДА
	|				Документ.Цена
	|			ИНАЧЕ
	|				Документ.Сумма / Документ.КоличествоУпаковок
	|		КОНЕЦ КАК Цена,
	|		Документ.Количество         КАК КоличествоМест,
	|		Документ.Сумма              КАК Стоимость,
	|		Документ.НомерСтроки        КАК НомерСтроки
	|	ИЗ
	|		Документ.СписаниеТоваров.Товары КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В (&МассивДокументов)
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_ТОРГ16";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ16");
	
	// НОВОЕ
	ОбластьШапки 						= Макет.ПолучитьОбласть("Шапка");     
	ОбластьЗаголовокТаблицыПервогоЛиста = Макет.ПолучитьОбласть("ЗаголовокТаблицыПервогоЛиста");
	ОбластьСтрокаПервогоЛиста 			= Макет.ПолучитьОбласть("СтрокаПервогоЛиста");
	ОбластьЗаголовокТаблицыВторогоЛиста = Макет.ПолучитьОбласть("ЗаголовокТаблицыВторогоЛиста");
	ОбластьСтрокаВторогоЛиста 			= Макет.ПолучитьОбласть("СтрокаВторогоЛиста");
	ОбластьИтоговПоСтранице             = Макет.ПолучитьОбласть("ИтогиПоСтранице");
	ОбластьВсего                        = Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал 						= Макет.ПолучитьОбласть("Подвал");
	
	НомерДокумента = 0;
	КоличествоДокументов = ВыборкаПоДокументам.Количество();
	
	Пока ДанныеПечати.Следующий() Цикл
						
		ОбластьШапки.Параметры.Заполнить(ДанныеПечати);
		
		СведенияОбОрганизации     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.ДатаДокумента);
		
		ОбластьШапки.Параметры.Заполнить(ДанныеПечати);
		ОбластьШапки.Параметры.ДатаДокумента            = ДанныеПечати.ДатаДокумента;
		ОбластьШапки.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ОбластьШапки.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьШапки.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		ОбластьШапки.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
		ОбластьШапки.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
				
		ТабличныйДокумент.Вывести(ОбластьШапки);
		
		СтрокНаСтранице = 23;
		СтрокШапки      = 11;
		СтрокПодвала    = 0;
		НомерСтраницы   = 1;
		Номер           = 0;
		
		КоличествоСтрок  = ВыборкаПоДокументам.Количество();
		
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		// Выводим заголовок таблицы
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицыПервогоЛиста);
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.Сбросить();
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();

		Пока СтрокаТовары.Следующий() Цикл
			
			Номер = Номер + 1;
			
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = (СтрокШапки + Номер - 1) / СтрокНаСтранице;
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				ИЛИ ((ПереноситьПоследнююСтроку = 1) 
				И (Номер = КоличествоСтрок)) Тогда
				
				НомерСтраницы            = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицыПервогоЛиста);
				
			КонецЕсли;
			
			ОбластьСтрокаПервогоЛиста.Параметры.ДатаСписанияТовара = ДанныеПечати.ДатаСписанияТовара;
			ТабличныйДокумент.Вывести(ОбластьСтрокаПервогоЛиста);
			
		КонецЦикла;
		
		СтрокНаСтранице = 27;
		СтрокШапки      = 5;
		СтрокПодвала    = 11;
		НомерСтраницы   = 1;
		Номер           = 0;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		НомерСтраницы    = НомерСтраницы + 1;
		ОбластьЗаголовокТаблицыВторогоЛиста.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицыВторогоЛиста);
		
		Если КоличествоСтрок = 1 Тогда
			ПереноситьПоследнююСтроку = 0;
		Иначе
			ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
			ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
			ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
		КонецЕсли;
		
		ИтогоСтоимость = 0;
		ИтогоМест = 0;
		
		// Выводим многострочную часть документа.
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.Сбросить();
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
        		
		Пока СтрокаТовары.Следующий() Цикл
			
			Номер = Номер + 1;
			
			// Начинаем новую страницу, если предыдущая строка была последней на странице
			// или пора переносить последнюю строку на последнюю страницу с подвалом.
			ЦелаяСтраница = (СтрокШапки + Номер - 1) / СтрокНаСтранице;
			
			Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
				ИЛИ ((ПереноситьПоследнююСтроку = 1) 
				И (Номер = КоличествоСтрок)) Тогда
				
				НомерСтраницы            = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьЗаголовокТаблицыВторогоЛиста.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицыВторогоЛиста);
				
			КонецЕсли;

			ОбластьСтрокаВторогоЛиста.Параметры.Заполнить(СтрокаТовары);
			
			КоличествоМест = ?(СтрокаТовары.КоличествоМест = 0, СтрокаТовары.Количество, СтрокаТовары.КоличествоМест);
			ОбластьСтрокаВторогоЛиста.Параметры.КоличествоМест = КоличествоМест;
			
			ОбластьСтрокаВторогоЛиста.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТовары.НоменклатураПредставление,
			СтрокаТовары.ХарактеристикаПредставление);
						
			ТабличныйДокумент.Вывести(ОбластьСтрокаВторогоЛиста);
			
			// Обновим итоги по документу
			ИтогоСтоимость = ИтогоСтоимость + СтрокаТовары.Стоимость;
			ИтогоМест = ИтогоМест + СтрокаТовары.КоличествоМест;
			
		КонецЦикла;
		
		ОбластьВсего.Параметры.ИтогоСтоимость = ИтогоСтоимость;
		ОбластьВсего.Параметры.ИтогоМест = ИтогоМест;
		ТабличныйДокумент.Вывести(ОбластьВсего);       
		
		// Выводим подвал документа
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		ОбластьПодвал.Параметры.СуммаСписанияПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Цел(ИтогоСтоимость), Истина);
		КопеекЦифрами = (ИтогоСтоимость - Цел(ИтогоСтоимость)) * 100;
		ОбластьПодвал.Параметры.КопеекЦифрами = Формат(КопеекЦифрами, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		НомерДокумента = НомерДокумента + 1;
		Если НомерДокумента < КоличествоДокументов Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла;
		
	ТабличныйДокумент.ПолеСверху = 20;
	ТабличныйДокумент.ПолеСлева  = 10;
	ТабличныйДокумент.ПолеСнизу  = 20;
	ТабличныйДокумент.ПолеСправа = 20;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьАктаСписанияТоваров(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Списание товаров'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_АктСписанияТоваров";
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|   Документ.Организация КАК Организация,
	|   Документ.Склад КАК Склад,
	|   Документ.ДокументОснование КАК Основание,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|   ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
	|   ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование) КАК ОснованиеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.АналитикаХозяйственнойОперации) КАК ПричинаПредставление
	|ИЗ
	|	Документ.СписаниеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|   ТаблицаТовары.Цена КАК Цена,
	|   ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|   Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеТоваров.ПФ_MXL_АктСписанияТоваров");

	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);	
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		ВсегоНаименований = 0;
		Итого             = 0;
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		// ИТОГО
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", Итого);
		ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
		
		// СУММА ПРОПИСЬЮ
		
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Итого);
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", Итого);
				
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
				
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	                        
КонецФункции

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Организация КАК Организация,
	|	ТаблицаДокументов.Магазин,
	|	ТаблицаДокументов.Склад,
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументОснование КАК Основание
	|ИЗ
	|	Документ.СписаниеТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", "Организация");
	СтруктураПечати.Вставить("ИмяРеквизита2", "Магазин");
	СтруктураПечати.Вставить("ИмяРеквизита3", "Склад");
	СтруктураПечати.Вставить("КоличествоРеквизитов", 3);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Организация);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Магазин);
		СтруктураПечати.Вставить("Реквизит3", Выборка.Склад);
		
		СтруктураПечати.Вставить("Основание", Выборка.Основание);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьЗ6(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеТоваров.Номер КАК НомерДокумента,
	|	СписаниеТоваров.Дата КАК ДатаДокумента,
	|	СписаниеТоваров.Организация КАК Организация,
	|	СписаниеТоваров.Склад.Представление КАК СкладПредставление,
	|	СписаниеТоваров.Ответственный.ФизическоеЛицо КАК МОЛ,
	|	СписаниеТоваров.Ответственный КАК Ответственный,
	|	СписаниеТоваров.Ссылка
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеТоваров.Номенклатура,
	|	СписаниеТоваров.Количество,
	|	СписаниеТоваров.НомерСтроки КАК НомерСтроки,
	|	СписаниеТоваров.Цена КАК Себестоимость,
	|	СписаниеТоваров.Сумма КАК Сумма,
	|	ПРЕДСТАВЛЕНИЕ(СписаниеТоваров.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
	|	ПОДСТРОКА(СписаниеТоваров.Номенклатура.НаименованиеПолное, 1, 1000) КАК ТоварНаименование,
	|	СписаниеТоваров.Номенклатура." + КолонкаКодов + " КАК НоменклатурныйНомер,
	|	СписаниеТоваров.Характеристика КАК Характеристика,
	|	СписаниеТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписаниеТоваровТовары.Номенклатура КАК Номенклатура,
	|		СписаниеТоваровТовары.Цена КАК Цена,
	|		СУММА(СписаниеТоваровТовары.Количество) КАК Количество,
	|		СУММА(СписаниеТоваровТовары.Сумма) КАК Сумма,
	|		ВЫБОР
	|			КОГДА СписаниеТоваровТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА СписаниеТоваровТовары.Упаковка.ЕдиницаИзмерения
	|			ИНАЧЕ СписаниеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		МИНИМУМ(СписаниеТоваровТовары.НомерСтроки) КАК НомерСтроки,
	|		СписаниеТоваровТовары.Характеристика КАК Характеристика,
	|		СписаниеТоваровТовары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|	ГДЕ
	|		СписаниеТоваровТовары.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписаниеТоваровТовары.Номенклатура,
	|		СписаниеТоваровТовары.Цена,
	|		ВЫБОР
	|			КОГДА СписаниеТоваровТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА СписаниеТоваровТовары.Упаковка.ЕдиницаИзмерения
	|			ИНАЧЕ СписаниеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	|		КОНЕЦ,
	|		СписаниеТоваровТовары.Характеристика,
	|		СписаниеТоваровТовары.Ссылка) КАК СписаниеТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеТоваровИнвентаризационнаяКомиссия.ФизЛицо,
	|	СписаниеТоваровИнвентаризационнаяКомиссия.Председатель,
	|	СписаниеТоваровИнвентаризационнаяКомиссия.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеТоваров.ИнвентаризационнаяКомиссия КАК СписаниеТоваровИнвентаризационнаяКомиссия
	|ГДЕ
	|	СписаниеТоваровИнвентаризационнаяКомиссия.Ссылка В(&МассивОбъектов)
	|ИТОГИ ПО
	|	Ссылка";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаПоДокументам 		= Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям 	= Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ВыборкаПоКомиссии 			= Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_З6");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ПолеСверху         = 0;
	ТабличныйДокумент.ПолеСлева          = 10;
	ТабличныйДокумент.ПолеСнизу          = 0;
	ТабличныйДокумент.ПолеСправа         = 0;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_З6";

	//Получим области
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы 	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы 		= Макет.ПолучитьОбласть("СтрокаТаблицы");
	Итого 				= Макет.ПолучитьОбласть("Итого");
	ОборотнаяСторона	= Макет.ПолучитьОбласть("ОборотнаяСторона");
	Комиссия			= Макет.ПолучитьОбласть("Комиссия");
	
	ПервыйДокумент = Истина;
	
    Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		Руководители 		  = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		ДанныеМОЛ 			  = ФормированиеПечатныхФормСервер.ДанныеФизЛица(ВыборкаПоДокументам.МОЛ, ВыборкаПоДокументам.ДатаДокумента);
		
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеПолноеПоУчредительнымДокументам,");
		Шапка.Параметры.ОрганизацияРНН_БИН    	 = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ИНН,", Ложь, "ru");
	
		Шапка.Параметры.НомерДокумента		= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.НомерДокумента, Ложь, Истина);
		ШАпка.Параметры.ДатаДок				= Формат(ВыборкаПоДокументам.ДатаДокумента, "ДЛФ=DD");
		Шапка.Параметры.РасшифровкаПодписи  = Руководители.Руководитель;
		Шапка.Параметры.МОЛ					= ДанныеМОЛ.Представление;
		Шапка.Параметры.Заполнить(ВыборкаПоДокументам);
	
		ТабличныйДокумент.Вывести(Шапка);
	
		// вывод заголовка таблицы
		ЗаголовокТаблицы.Параметры.Валюта = "тенге";
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
	
		// Инициализация итогов в документе	
		ИтогоКоличество = 0;
		ИтогоВсегоСНДС = 0;
	    	
		НомерПП = 1;
	
		Если ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
			
			ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоСтрокамТЧ.Следующий() = 1 Цикл
				

				Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
					Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;

				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыборкаПоСтрокамТЧ) Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		            ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;	

				СтрокаТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				СтрокаТаблицы.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.ТоварНаименование,ВыборкаПоСтрокамТЧ.Характеристика);
		
				Цена 	   = ВыборкаПоСтрокамТЧ.Себестоимость; 		
				ВсегоСНДС  = ВыборкаПоСтрокамТЧ.Сумма;		
				Количество = ВыборкаПоСтрокамТЧ.Количество;
		
				СтрокаТаблицы.Параметры.Количество 		  = Формат(Количество,"ЧДЦ=3");
				СтрокаТаблицы.Параметры.СуммаСНДС         = Формат(ВсегоСНДС, "ЧДЦ=2");
				СтрокаТаблицы.Параметры.Цена              = Формат(Цена, "ЧДЦ=2");
				СтрокаТаблицы.Параметры.НомерПП           = НомерПП;
		
				ИтогоКоличество	 = ИтогоКоличество + Количество;
				ИтогоВсегоСНДС   = ИтогоВсегоСНДС  + ВсегоСНДС;

				НомерПП = НомерПП + 1;
		
				ТабличныйДокумент.Вывести(СтрокаТаблицы);

			КонецЦикла;
			
		КонецЕсли;
		
		// вывод итогов
		Итого.Параметры.ИтогоКоличество = Формат(ИтогоКоличество, "ЧДЦ=3");
		Итого.Параметры.ИтогоСуммаСНДС  = Формат(ИтогоВсегоСНДС, "ЧДЦ=2");

		ТабличныйДокумент.Вывести(Итого);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
		//вывод оборотной стороны
		ОборотнаяСторона.Параметры.Валюта = "тенге";
		ТабличныйДокумент.Вывести(ОборотнаяСторона);
		
		//вывод комиссии
		// Варианты заголовков разделов с подписями печатной формы	
		ЗаголовокРазделаКомиссии = Новый Структура();
		ЗаголовокРазделаКомиссии.Вставить("МОЛ",                  "Материально-ответственное лицо");
		ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", "Председатель комиссии");
		ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии",        "Члены комиссии:");
		      		
		Если ВыборкаПоКомиссии.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
			
			ВыборкаПоСтрокамТЧ = ВыборкаПоКомиссии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			// Выведем подпись председателя инвентаризационной комиссии
			Если ВыборкаПоСтрокамТЧ.НайтиСледующий(Новый Структура("Председатель", Истина)) Тогда 
								
				ДанныеПредседателя = ФормированиеПечатныхФормСервер.ДанныеФизЛица(ВыборкаПоСтрокамТЧ.ФизЛицо, ВыборкаПоДокументам.ДатаДокумента);
				
				Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
				Комиссия.Параметры.Должность                = ДанныеПредседателя.Должность;
				Комиссия.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
				
			Иначе
				
				Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
				Комиссия.Параметры.Должность                = "";
				Комиссия.Параметры.РасшифровкаПодписи       = "";
				
			КонецЕсли;
		
			ТабличныйДокумент.Вывести(Комиссия);
	
			// Выведем подписи членов комиссии
			ВыводитьЗаголовок = Истина;
			
			// Сформируем список членов комиссии
			СписокЧленовКомиссии = Новый Массив();
			
			ВыборкаПоСтрокамТЧ.Сбросить();

	        Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
				Если НЕ ВыборкаПоСтрокамТЧ.Председатель Тогда
					СписокЧленовКомиссии.Добавить(ВыборкаПоСтрокамТЧ.ФизЛицо);
				КонецЕсли;
			КонецЦикла;
	       				
			// Сначала выведем членов комиссии из выборки
			Для Каждого ЧленКомиссии Из СписокЧленовКомиссии Цикл
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Комиссия) Тогда
					// Выведем разрыв страницы
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				КонецЕсли;
				
				Комиссия.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, 
				                                               ЗаголовокРазделаКомиссии.ЧленыКомиссии,
															   "");
															   
				ДанныПоЧленуКомиссии = ФормированиеПечатныхФормСервер.ДанныеФизЛица(ЧленКомиссии, ВыборкаПоДокументам.ДатаДокумента);
				
				Комиссия.Параметры.Должность 				= ДанныПоЧленуКомиссии.Должность;
				Комиссия.Параметры.РасшифровкаПодписи       = ДанныПоЧленуКомиссии.Представление;
				
				ТабличныйДокумент.Вывести(Комиссия);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
	
			// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
			Если СписокЧленовКомиссии.Количество() < 3 Тогда
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Комиссия) Тогда
					
					// Выведем разрыв страницы
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
				КонецЕсли;
				
				Для Итератор = (СписокЧленовКомиссии.Количество() + 1) По 3 Цикл
					
					Комиссия.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, 
					                                               ЗаголовокРазделаКомиссии.ЧленыКомиссии,
																   "");
					Комиссия.Параметры.Должность 			= "";
					Комиссия.Параметры.РасшифровкаПодписи 	= "";
					
					ТабличныйДокумент.Вывести(Комиссия);
					
					ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
					
				КонецЦикла;
			
			КонецЕсли;
			
		КонецЕсли;
	   				
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
