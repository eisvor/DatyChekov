
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ТекстСообщения = НСтр("ru = 'Уведомление об отгрузке (ЕАЭС) не предназначено для создания в базе. Получите документы с сервера ИС МПТ.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	ИнтеграцияИСМПТККлиент.ОповеститьФормы(РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОбОтгрузкеЕАЭС());
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СобытияФормИСМПТКПереопределяемый.ПриЧтенииНаСервере(ТекущийОбъект, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СобытияФормИСМПТКПереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СобытияФормИСМПТКПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОбОтгрузкеЕАЭС() Тогда
		ЭтаФорма.Прочитать();
		ЗаполнитьСведенияОСвязанныхДокументах();
		
	ИначеЕсли ИмяСобытия = РаботаСДокументамиИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОПриемкеЕАЭС() Тогда
		ЗаполнитьСведенияОСвязанныхДокументах();						
		
	Иначе
		РаботаСДокументамиИСМПТККлиентПереопределяемый.ОбработкаОповещенияДокументыИСМПТ(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);		
	КонецЕсли;
	
	СобытияФормИСМПТККлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	УправлениеФормой();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПриОткрытии(ЭтотОбъект, Отказ);
	
	ЗаполнитьСведенияОСвязанныхДокументах();
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.НачатьОбновлениеКоманд(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СужебныеПроцедурыИФункции

#Область СостояниеДокумента

&НаСервере
Процедура СформироватьПредставлениеСостояния()
	
	Если Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ОбрабатываетсяСервером Тогда
		
		ПредставлениеСостояния = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияДокументОбрабатываетсяСерверомИСМПТ();
		
	ИначеЕсли Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ОтклоненСервером Тогда
		
		ПредставлениеСостояния = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияДокументОтклоненСерверомИСМПТ();
		
	ИначеЕсли Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ПодтвержденПолучателем Тогда
		
		ПредставлениеСостояния = НСтр("ru = 'Документ принят'");
		
	ИначеЕсли Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ДоставленПолучателю Тогда
		
		ПредставлениеСостояния = НСтр("ru = 'Документ ожидает приемку'");
		
	Иначе
		
		Если Объект.Ссылка.Пустая() Тогда
			ПредставлениеСостояния = НСтр("ru = 'Новый документ'");
		Иначе
			ПредставлениеСостояния = НСтр("ru = 'Документ %Состояние%'");
			ПредставлениеСостояния = СтрЗаменить(ПредставлениеСостояния, "%Состояние%", НРег(Объект.Состояние));
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ПредставлениеСостояния.ЦветТекста = ОбщегоНазначенияИСМПТККлиентСервер.ЦветСостояния(Объект.Состояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСостоянияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьПредупреждение(, ПредставлениеСостояния);

КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоОрганизации()
	
	Объект.Получатель  = Объект.Организация;
			
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьЗначенияПоОрганизации();
		
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	
	Объект.Контрагент = Объект.Поставщик;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	Объект.Организация = Объект.Получатель;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УправлениеФормой()
	
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Ошибки", "Видимость", ?(Объект.Ошибки.Количество() = 0, Ложь, Истина));
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДокументыСоответствия", 
																	   "Видимость", ?(Объект.ДокументыСоответствия.Количество() = 0, Ложь, Истина));
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СвязанноеУведомлениеОПриемке",
																	   "Видимость", ЗначениеЗаполнено(ПредставлениеУведОПриемке));
	
	СформироватьПредставлениеСостояния();                                 
	ИзменитьКоманднуюПанельДокумента();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыОрганизацииКонтрагента(Ссылка, Реквизит) Экспорт
	
	Возврат ИнтеграцияИСМПТКПереопределяемый.ПолучитьРеквизитыОрганизацииКонтрагента(Ссылка, Реквизит);
	
КонецФункции

&НаСервере
Процедура ИзменитьКоманднуюПанельДокумента()
	
	////ПРОВЕРКИ////
	МожноОтправить = Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.НеОпределен");
	////////////////
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузитьКМ

&НаКлиенте
Процедура ВыгрузитьКодыМаркировкиВФайл(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияЗаголовокВыборФайла();
	ДиалогВыбораФайла.Фильтр 	= "CSV (Comma-Separated Values)(*.csv)|*.csv";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьКодыМаркировкиИзФайлаЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКодыМаркировкиИзФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		
		НовыйТекстовыйДокумент = Новый ТекстовыйДокумент;
		
		Для Каждого СтрокаТЧ Из Объект.Марки Цикл
			НовыйТекстовыйДокумент.ДобавитьСтроку(СтрокаТЧ.КодИдентификации);
		КонецЦикла;
		
		НовыйТекстовыйДокумент.Записать(ВыбранныеФайлы[0]);
				
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеВExcel(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияЗаголовокВыборФайла();
	ДиалогВыбораФайла.Фильтр 	= "Все поддерживаемые форматы файлов(*.xls;*.xlsx;)|*.xls;*.xlsx;|Книга Excel 97 (*.xls)|*.xls|Книга Excel 2007 (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("СоздатьФайлXLS", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлXLS(ВыбранныеФайлы, ДополнительныеПараметрым) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Итератор = 1;
		Для Каждого СтрокаТЧ Из Объект.Марки Цикл
			КодДляЗаписи = СтрокаТЧ.КодИдентификации;
			ТабличныйДокумент.Область("R" + Формат(Итератор,"ЧГ=0") + "C1").Текст = КодДляЗаписи;
			Итератор = Итератор + 1;
		КонецЦикла;
		
		ТабличныйДокумент.Записать(ВыбранныеФайлы[0], ТипФайлаТабличногоДокумента.XLS97);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СвязьСУведомлениемОПриемке

&НаКлиенте
Процедура ЗаполнитьСведенияОСвязанныхДокументах()
	
	ЭтаФорма.ПредставлениеУведОПриемке = Неопределено;
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторУведОПриемке) Тогда
		СсылкаУведОПриемке = НайтиДокументПоИдентификатору(ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОПриемкеЕАЭСИСМПТК(), Объект.ИдентификаторУведОПриемке);
	Иначе
		СсылкаУведОПриемке = НайтиДокументПоИдентификаторуОтОбратного();
	КонецЕсли;
	СформироватьПредставлениеСвязанногоДокумента(ЭтаФорма, СсылкаУведОПриемке, "ПредставлениеУведОПриемке");
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Функция НайтиДокументПоИдентификатору(ИмяДокумента, ИдентификаторДокумента)
	
	Возврат РаботаСДокументамиИСМПТК.НайтиДокументПоИдентификаторуДляУстановкиСвязи(ИмяДокумента, ИдентификаторДокумента);
	
КонецФункции 

&НаСервере
Функция НайтиДокументПоИдентификаторуОтОбратного()
	
	СтруктураДанныхДляПоиска = РаботаСДокументамиИСМПТК.ПолучитьПустуюСтруктураДляПоискаДокументаПоИдентификаторуОтОбратного();
	
	СтруктураДанныхДляПоиска.ИдентификаторДокумента = Объект.Идентификатор;
	СтруктураДанныхДляПоиска.ИмяДокументаДляЗапроса = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОПриемкеЕАЭСИСМПТК();
	СтруктураДанныхДляПоиска.ОтборПоВидуДокумента   = Ложь;
	СтруктураДанныхДляПоиска.ИмяРеквизитаИдентификатора 	= "ИдентификаторДокументаОтгрузки";
	СтруктураДанныхДляПоиска.НаправлениеДокументаДляЗапроса = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий");

	Возврат РаботаСДокументамиИСМПТК.НайтиСвязанныйДокументПоИдентификаторуОтОбратного(СтруктураДанныхДляПоиска);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеСвязанногоДокумента(Форма, СсылкаДокумент, ИмяЭлемента)
	
	Если ЗначениеЗаполнено(СсылкаДокумент) Тогда
		Форма[ИмяЭлемента] = СсылкаДокумент;
		Форма.Элементы[ИмяЭлемента].ЦветТекста = ОбщегоНазначенияИСМПТККлиентСервер.ЦветСиний();
	Иначе
		Форма[ИмяЭлемента] = РаботаСТекстамиИСМПТККлиентСервер.ПредставлениеНеНайден();
		Форма.Элементы[ИмяЭлемента].ЦветТекста = ОбщегоНазначенияИСМПТККлиентСервер.ЦветКрасный();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведОПриемкеНажатие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ПредставлениеУведОПриемке) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, СсылкаУведОПриемке);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти