#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерезаполнитьОстатокПоСертификатам(Команда)
	
	ЗаполнитьОстатокСертификатов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПросроченнымиСертификатами(Команда)
	
	Если Объект.ПодарочныеСертификаты.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПросроченнымиСертификатамиЗавершение", ЭтотОбъект),
			НСтр("ru = 'Табличная часть будет очищена. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПросроченнымиСертификатамиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПросроченнымиСертификатамиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПросроченнымиСертификатамиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПросроченнымиСертификатамиНаСервере()
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК ПодарочныйСертификат,
	|	Номенклатура.ТипСрокаДействия КАК ТипСрокаДействия
	|ПОМЕСТИТЬ Сертификаты
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И Номенклатура.ТипСрокаДействия <> ЗНАЧЕНИЕ(Перечисление.СрокДействияПодарочныхСертификатов.БезОграниченияСрока)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ЕСТЬNULL(СерийныеНомера.Ссылка, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	Сертификаты.ТипСрокаДействия КАК ТипСрокаДействия
	|ПОМЕСТИТЬ СертификатыСНомерами
	|ИЗ
	|	Сертификаты КАК Сертификаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерийныеНомера КАК СерийныеНомера
	|		ПО Сертификаты.ПодарочныйСертификат = СерийныеНомера.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ДвиженияСерийныхНомеров.Период) КАК ПериодПродажи,
	|	ДвиженияСерийныхНомеров.СерийныйНомер КАК СерийныйНомер
	|ПОМЕСТИТЬ ПродажиПоНомерам
	|ИЗ
	|	РегистрСведений.ДвиженияСерийныхНомеров КАК ДвиженияСерийныхНомеров
	|ГДЕ
	|	(ДвиженияСерийныхНомеров.Номенклатура, ДвиженияСерийныхНомеров.СерийныйНомер) В
	|			(ВЫБРАТЬ
	|				СертификатыСНомерами.ПодарочныйСертификат,
	|				СертификатыСНомерами.СерийныйНомер
	|			ИЗ
	|				СертификатыСНомерами)
	|	И ДвиженияСерийныхНомеров.АналитикаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.РеализацияТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияСерийныхНомеров.СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СертификатыСНомерами.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	СертификатыСНомерами.СерийныйНомер КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА СертификатыСНомерами.ТипСрокаДействия = ЗНАЧЕНИЕ(Перечисление.СрокДействияПодарочныхСертификатов.СОграничениемНаДату)
	|			ТОГДА СертификатыСНомерами.ПодарочныйСертификат.ДатаОкончанияДействия
	|		КОГДА СертификатыСНомерами.ТипСрокаДействия = ЗНАЧЕНИЕ(Перечисление.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи)
	|			ТОГДА ВЫБОР
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, ДЕНЬ, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, НЕДЕЛЯ, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, ДЕКАДА, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, МЕСЯЦ, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, КВАРТАЛ, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, ПОЛУГОДИЕ, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					КОГДА СертификатыСНомерами.ПодарочныйСертификат.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|						ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ПродажиПоНомерам.ПериодПродажи, ГОД, СертификатыСНомерами.ПодарочныйСертификат.КоличествоПериодовДействия), ДЕНЬ)
	|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК СрокОкончания
	|ПОМЕСТИТЬ СертификатыСоСроками
	|ИЗ
	|	СертификатыСНомерами КАК СертификатыСНомерами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНомерам КАК ПродажиПоНомерам
	|		ПО СертификатыСНомерами.СерийныйНомер = ПродажиПоНомерам.СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СертификатыСоСроками.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	СертификатыСоСроками.СерийныйНомер КАК СерийныйНомер,
	|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК Остаток
	|ИЗ
	|	СертификатыСоСроками КАК СертификатыСоСроками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПодарочныеСертификаты.Остатки(
	|				,
	|				(ПодарочныйСертификат, НомерСертификата) В
	|					(ВЫБРАТЬ
	|						СертификатыСоСроками.ПодарочныйСертификат,
	|						СертификатыСоСроками.СерийныйНомер
	|					ИЗ
	|						СертификатыСоСроками)) КАК ПодарочныеСертификатыОстатки
	|		ПО СертификатыСоСроками.ПодарочныйСертификат = ПодарочныеСертификатыОстатки.ПодарочныйСертификат
	|			И СертификатыСоСроками.СерийныйНомер = ПодарочныеСертификатыОстатки.НомерСертификата
	|			И (СертификатыСоСроками.СрокОкончания <= &СрокОкончания)");
	Запрос.УстановитьПараметр("СрокОкончания", Объект.Дата);
	
	Объект.ПодарочныеСертификаты.Загрузить(Запрос.Выполнить().Выгрузить());
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	Если НЕ ЗначениеЗаполнено(ДатаДокумента) Тогда
		ДатаДокумента = ТекущаяДата();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	ПодключаемоеОборудованиеРТ.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
Процедура ПриЗакрытии()
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		Если (Событие = "Штрихкод" Или Событие = "ПолученШтрихкод") Тогда
			
			ДобавитьСерийныйНомерНаСервере(Данные);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьОстатокСертификатов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ПодарочныеСертификатыСерийныйНомерПриИзменении(Элемент)
	
	ЗаполнитьОстатокСертификатов(Элементы.ПодарочныеСертификаты.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПодарочныйСертификатПриИзменении(Элемент)
	
	ЗаполнитьОстатокСертификатов(Элементы.ПодарочныеСертификаты.ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ДобавитьСерийныйНомерНаСервере(СерийныйНомер)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоРеализация" , Ложь);
	СтруктураПараметров.Вставить("Дата"          , ТекущаяДатаСеанса());
	СтруктураПараметров.Вставить("СерийныеНомера", Объект.ПодарочныеСертификаты);
	
	РезультатОбработки = МаркетинговыеАкцииВызовСервера.ОбработатьВведенныйТекстСерийногоНомера(СтруктураПараметров, СерийныйНомер, Ложь);
	
	Если ТипЗнч(РезультатОбработки) = Тип("Структура") Тогда
		
		СтрокаТаблицы = Объект.ПодарочныеСертификаты.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, РезультатОбработки);
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОстатокСертификатов(НомерСтроки = Неопределено)
	
	ДатаОстатков = ?(Параметры.Ключ.Пустая(), ТекущаяДатаСеанса(), Объект.Дата);
	Если НомерСтроки = Неопределено Тогда
		Результат = РаботаСПодарочнымиСертификатами.ПолучитьСтруктуруДанныхПоТаблицеСертификатов(
			Объект.ПодарочныеСертификаты.Выгрузить(, "ПодарочныйСертификат, СерийныйНомер"),, ДатаОстатков);
		Объект.ПодарочныеСертификаты.Загрузить(Результат);
	Иначе
		
		ПодарочныйСертификат = Объект.ПодарочныеСертификаты.НайтиПоИдентификатору(НомерСтроки).ПодарочныйСертификат;
		СерийныйНомер = Объект.ПодарочныеСертификаты.НайтиПоИдентификатору(НомерСтроки).СерийныйНомер;
		
		Результат = РаботаСПодарочнымиСертификатами.ПолучитьСтруктуруДанныхСертификата(
			ПодарочныйСертификат,
			СерийныйНомер,
			,
			ДатаОстатков);
		Объект.ПодарочныеСертификаты.НайтиПоИдентификатору(НомерСтроки).Остаток = Результат.Остаток;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти