#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ПроверитьКорректностьЗаполнениеТабличнойЧасти(Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоПоРНПТ");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.НомерГТД");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ВводОстатковПрослеживаемыхИмпортныхТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный	= Пользователи.ТекущийПользователь();
	Организация		= Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();
	
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполнениеТабличнойЧасти(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки		КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура		КАК Номенклатура,
	|	ТаблицаТоваров.КоличествоПоРНПТ	КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ							КАК ПустойНомерГТД,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				И ТаблицаТоваров.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ							КАК ПустоеМестоХранения
	|ПОМЕСТИТЬ ТаблицаТоварыДляЗапроса
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.НомерСтроки							КАК НомерСтроки,
	|	ТоварыДокумента.Номенклатура						КАК Номенклатура,
	|	МИНИМУМ(ТоварыДокумента.ПрослеживаемыйТовар)		КАК ПрослеживаемыйТовар,
	|	МАКСИМУМ(ТоварыДокумента.ПустоеКоличествоПоРНПТ)	КАК ПустоеКоличествоПоРНПТ,
	|	МАКСИМУМ(ТоварыДокумента.ПустойНомерГТД)			КАК ПустойНомерГТД,
	|	МАКСИМУМ(ТоварыДокумента.ПустоеМестоХранения)		КАК ПустоеМестоХранения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки	КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура	КАК Номенклатура,
	|		ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ) КАК ПрослеживаемыйТовар,
	|		ЛОЖЬ						КАК ПустоеКоличествоПоРНПТ,
	|		ЛОЖЬ						КАК ПустойНомерГТД,
	|		ЛОЖЬ						КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|			ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|				И ТаблицаНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	
	|	ГДЕ
	|		НЕ (ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки	КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура	КАК Номенклатура,
	|		ИСТИНА						КАК ПрослеживаемыйТовар,
	|		&ПроверитьКоличествоПоРНПТ
	|			И ТаблицаТоваров.КоличествоПоРНПТ = 0
	|			И ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ) КАК ПустоеКоличествоПоРНПТ,
	|		ЛОЖЬ						КАК ПустойНомерГТД,
	|		ЛОЖЬ						КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|			ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|				И ТаблицаНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	
	|	ГДЕ
	|		&ПроверитьКоличествоПоРНПТ
	|		И ТаблицаТоваров.КоличествоПоРНПТ = 0
	|		И ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки			КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура			КАК Номенклатура,
	|		ИСТИНА								КАК ПрослеживаемыйТовар,
	|		ЛОЖЬ								КАК ПустоеКоличествоПоРНПТ,
	|		ТаблицаТоваров.ПустойНомерГТД	КАК ПустойНомерГТД,
	|		ТаблицаТоваров.ПустоеМестоХранения	КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|			ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|				И ТаблицаНоменклатуры.ТипНоменклатуры =ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	
	|	ГДЕ
	|		ТаблицаТоваров.ПустойНомерГТД 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.НомерСтроки			КАК НомерСтроки,
	|		ТаблицаТоваров.Номенклатура			КАК Номенклатура,
	|		ИСТИНА								КАК ПрослеживаемыйТовар,
	|		ЛОЖЬ								КАК ПустоеКоличествоПоРНПТ,
	|		ЛОЖЬ								КАК ПустойНомерГТД,
	|		ТаблицаТоваров.ПустоеМестоХранения	КАК ПустоеМестоХранения
	|	ИЗ
	|		ТаблицаТоварыДляЗапроса КАК ТаблицаТоваров
	|	
	|	ГДЕ
	|		ТаблицаТоваров.ПустоеМестоХранения
	|	
	|	) КАК ТоварыДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокумента.НомерСтроки,
	|	ТоварыДокумента.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	НЕ МИНИМУМ(ТоварыДокумента.ПрослеживаемыйТовар)
	|	ИЛИ МАКСИМУМ(ТоварыДокумента.ПустоеКоличествоПоРНПТ)
	|	ИЛИ МАКСИМУМ(ТоварыДокумента.ПустойНомерГТД)
	|	ИЛИ МАКСИМУМ(ТоварыДокумента.ПустоеМестоХранения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ПроверитьКоличествоПоРНПТ", Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ОшибкаНаличияНепрослеживаемогоТовара	= НСтр("ru='Непрослеживаемый товар ""%Номенклатура%"" в строке %НомерСтроки% списка ""Товары"".'");
	ОшибкаЗаполненияКоличестваПоРНПТ		= НСтр("ru='Не заполнена колонка ""Количество по РНПТ"" в строке %НомерСтроки% списка ""Товары"".'");
	ОшибкаЗаполненияНомераГТД				= НСтр("ru='Не заполнена колонка ""Номер ГТД"" в строке %НомерСтроки% списка ""Товары"".'");
	ОшибкаЗаполненияМестаХранения			= НСтр("ru='Не заполнена колонка ""Склад"" в строке %НомерСтроки% списка ""Товары"".'");
	
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.ПрослеживаемыйТовар Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаНаличияНепрослеживаемогоТовара, "%Номенклатура%", Выборка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары",
																	Выборка.НомерСтроки,
																	"Номенклатура");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если Выборка.ПустоеКоличествоПоРНПТ Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаЗаполненияКоличестваПоРНПТ, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоПоРНПТ");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если Выборка.ПустойНомерГТД Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаЗаполненияНомераГТД, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "НомерГТД");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если Выборка.ПустоеМестоХранения Тогда
			ТекстСообщения = СтрЗаменить(ОшибкаЗаполненияМестаХранения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Склад");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
