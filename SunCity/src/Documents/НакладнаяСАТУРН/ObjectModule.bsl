#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияСАТУРНПереопределяемый.ОбработкаЗаполненияДокумента(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ЗаполнитьОбъектПоСтатистике();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	НепроверяемыеРеквизиты.Добавить("Товары.Серия");
	НепроверяемыеРеквизиты.Добавить("ДатаПолучения");
	НепроверяемыеРеквизиты.Добавить("ДатаВозврата");
	НепроверяемыеРеквизиты.Добавить("ГрузополучательМестоХранения");
	
	ОбязательныеРеквизиты = Новый Массив;
	
	ТекущееСостояние = РегистрыСведений.СтатусыДокументовСАТУРН.ТекущееСостояние(Ссылка);
	СтатусСАТУРН = ТекущееСостояние.Статус;
	
	ГрузополучательСопоставленСОрганизацией  = Ложь;
	ГрузоотправительСопоставленСОрганизацией = Ложь;
	
	Организации = Новый Массив;
	Организации.Добавить(ГрузоотправительОрганизацияСАТУРН);
	Организации.Добавить(ГрузополучательОрганизацияСАТУРН);
	ЗначенияСопоставлений = Справочники.КлассификаторОрганизацийСАТУРН.ОрганизацииКонтрагентыПоКлассификаторамСАТУРН(
		Организации);
	
	СвязанноеЗначение = ЗначенияСопоставлений.Получить(ГрузополучательОрганизацияСАТУРН);
	Если СвязанноеЗначение <> Неопределено И ЗначениеЗаполнено(СвязанноеЗначение.Организация) Тогда
		ГрузополучательСопоставленСОрганизацией = Истина;
	КонецЕсли;
	
	СвязанноеЗначение = ЗначенияСопоставлений.Получить(ГрузоотправительОрганизацияСАТУРН);
	Если СвязанноеЗначение <> Неопределено И ЗначениеЗаполнено(СвязанноеЗначение.Организация) Тогда
		ГрузоотправительСопоставленСОрганизацией = Истина;
	КонецЕсли;
	
	Если Операция = Перечисления.ВидыОперацийСАТУРН.НакладнаяПеревозка Тогда
		Если ГрузополучательСопоставленСОрганизацией
			И УказыватьДатуПолучения(СтатусСАТУРН) Тогда
			ОбязательныеРеквизиты.Добавить("ДатаПолучения");
		КонецЕсли;
		Если ГрузоотправительСопоставленСОрганизацией
			И УказыватьДатуВозврата(СтатусСАТУРН) Тогда
			ОбязательныеРеквизиты.Добавить("ДатаВозврата");
		КонецЕсли;
	КонецЕсли;
	
	НепроверяемыеРеквизиты = ОбщегоНазначенияКлиентСервер.РазностьМассивов(НепроверяемыеРеквизиты, ОбязательныеРеквизиты);
	ИнтеграцияСАТУРНПереопределяемый.ПриОпределенииОбработкиПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ИнтеграцияСАТУРН.ЗаписатьСоответствиеНоменклатуры(ЭтотОбъект,, "ВыделеннаяПартия");
	
	ИнтеграцияИСПереопределяемый.ПередЗаписьюОбъекта(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ИнтеграцияСАТУРН.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Идентификатор = Неопределено;
	ДатаПолучения = Дата(1, 1, 1);
	ДатаВозврата  = Дата(1, 1, 1);
	ВходящаяНакладная = Ложь;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		СтрокаТовары.Партия           = Неопределено;
		СтрокаТовары.ВыделеннаяПартия = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ИнтеграцияИС.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.НакладнаяСАТУРН.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ИнтеграцияИС.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РегистрыНакопления.ОстаткиПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.МестаХраненияПартийСАТУРН.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ИнтеграцияИСПереопределяемый.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	
	ИнтеграцияИС.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ИнтеграцияИСПереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ИнтеграцияИС.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоСтатистике()
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтатистики = ЗаполнениеОбъектовПоСтатистикеСАТУРН.ДанныеЗаполненияНакладнаяСАТУРН(ГрузоотправительОрганизацияСАТУРН, ГрузополучательОрганизацияСАТУРН);
	
	Для Каждого КлючИЗначение Из ДанныеСтатистики Цикл
		ЗаполнениеОбъектовПоСтатистикеСАТУРН.ЗаполнитьПустойРеквизит(ЭтотОбъект, ДанныеСтатистики, КлючИЗначение.Ключ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Функция УказыватьДатуПолучения(СтатусСАТУРН)
	
	Если СтатусСАТУРН = Перечисления.СтатусыОбработкиНакладнойСАТУРН.Черновик
		Или СтатусСАТУРН = Перечисления.СтатусыОбработкиНакладнойСАТУРН.Обрабатывается
		Или СтатусСАТУРН = Перечисления.СтатусыОбработкиНакладнойСАТУРН.Ошибка Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция УказыватьДатуВозврата(СтатусСАТУРН)
	
	Если СтатусСАТУРН = Перечисления.СтатусыОбработкиНакладнойСАТУРН.КВозврату
		Или СтатусСАТУРН = Перечисления.СтатусыОбработкиНакладнойСАТУРН.ПодтверждениеВозвратаОшибка
		Или СтатусСАТУРН = Перечисления.СтатусыОбработкиНакладнойСАТУРН.ПодтверждениеУтратыГрузаОшибка Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли
