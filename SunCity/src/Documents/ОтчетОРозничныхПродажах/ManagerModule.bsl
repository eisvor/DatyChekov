#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// КМ6
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КМ6";
	КомандаПечати.Представление = НСтр("ru = 'КМ6'");
	КомандаПечати.ДополнительныеПараметры.Вставить("СРасшифровкой", Ложь);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 60;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// КМ6
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КМ6";
	КомандаПечати.Представление = НСтр("ru = 'КМ6 (с расшифровкой)'");
	КомандаПечати.ДополнительныеПараметры.Вставить("СРасшифровкой", Истина);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 75;
	КомандаПечати.ФункциональныеОпции = "ОтключенныйФункционал";
	
	// Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Расходная накладная'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 50;
	
	// Опись номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОписьНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Опись номенклатуры'");
	КомандаПечати.ДополнительныеПараметры.Вставить("Представление", КомандаПечати.Представление);
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 55;

КонецПроцедуры

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - документ для инициализации данных.
//  ДополнительныеСвойства - Структура - структура дополнительных свойств.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаВРозницу);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.Номер КАК Номер,
	|	ОтчетОРозничныхПродажах.Дата КАК Период,
	|	ОтчетОРозничныхПродажах.Проведен КАК Проведен,
	|	ОтчетОРозничныхПродажах.КассаККМ КАК КассаККМ,
	|	ОтчетОРозничныхПродажах.Комментарий КАК Комментарий,
	|	ОтчетОРозничныхПродажах.Ответственный КАК Ответственный,
	|	ОтчетОРозничныхПродажах.СуммаДокумента КАК СуммаДокумента,
	|	ОтчетОРозничныхПродажах.СуммаВозвратов КАК СуммаВозвратов,
	|	ОтчетОРозничныхПродажах.Магазин КАК Магазин,
	|	ОтчетОРозничныхПродажах.Эквайрер КАК Эквайрер,
	|	ОтчетОРозничныхПродажах.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ОтчетОРозничныхПродажах.УчитыватьНДС КАК УчитыватьНДС,
	|	ОтчетОРозничныхПродажах.ОплатаПодарочнымиСертификатами КАК ОплатаПодарочнымиСертификатами,
	|	ОтчетОРозничныхПродажах.Магазин.СкладПродажи КАК СкладПродажи,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	НЕ ОтчетОРозничныхПродажах.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения,
	|	ОтчетОРозничныхПродажах.СуммаОплатыНаличных КАК СуммаОплатыНаличных
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &Ссылка";
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперации", Справочники.АналитикаХозяйственныхОпераций.РеализацияТоваров);
	Запрос.УстановитьПараметр("ФормироватьДвиженияРИБ", НЕ ОбменДаннымиРТ.ЭтоПодчиненныйУзелПоРабочемуМесту());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахТовары.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажахТовары.НомерСтроки КАК НомерСтроки,
	|	ОтчетОРозничныхПродажахТовары.Номенклатура КАК Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика КАК Характеристика,
	|	ОтчетОРозничныхПродажахТовары.Количество КАК Количество,
	|	ОтчетОРозничныхПродажахТовары.Цена КАК Цена,
	|	ОтчетОРозничныхПродажахТовары.Сумма КАК Сумма,
	|	ОтчетОРозничныхПродажахТовары.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетОРозничныхПродажахТовары.СуммаНДС КАК СуммаНДС,
	|	ОтчетОРозничныхПродажахТовары.Склад КАК Склад,
	|	ОтчетОРозничныхПродажахТовары.Продавец КАК Продавец,
	|	ОтчетОРозничныхПродажахТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ОтчетОРозничныхПродажахТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ОтчетОРозничныхПродажахТовары.Упаковка КАК Справочник.УпаковкиНоменклатуры) КАК Упаковка,
	|	ОтчетОРозничныхПродажахТовары.КлючСвязи КАК КлючСвязи,
	|	ОтчетОРозничныхПродажахТовары.КодСтроки КАК КодСтроки,
	|	ОтчетОРозничныхПродажахТовары.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетОРозничныхПродажахТовары.Резервировать КАК Резервировать,
	|	ОтчетОРозничныхПродажахТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ОтчетОРозничныхПродажахТовары.НомерГТД КАК НомерГТД,
	|	ОтчетОРозничныхПродажахТовары.Поставщик КАК Поставщик,
	|	ОтчетОРозничныхПродажахТовары.Договор КАК Договор
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНДС.Ссылка КАК СтавкаНДС,
	|	СтавкиНДС.Ставка КАК ПроцентСтавки
	|ПОМЕСТИТЬ СтавкиНДС
	|ИЗ
	|	Справочник.СтавкиНДС КАК СтавкиНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Магазин КАК Магазин,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя,
	|	&Ссылка КАК ДокументПродажи,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	(ТаблицаТовары.Количество * ТаблицаТовары.Цена + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.Количество * ТаблицаТовары.Цена * ЕСТЬNULL(СтавкиНДС.ПроцентСтавки, 0) / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ) / ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаТовары.Упаковка.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ТаблицаТовары.СуммаНДС КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА &АналитикаХозяйственнойОперации
	|		ИНАЧЕ ТаблицаТовары.АналитикаХозяйственнойОперации
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.ДисконтнаяКарта.ВладелецКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ДисконтнаяКарта <> ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.ДисконтнаяКарта,
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.ВладелецДисконтнойКарты,
	|	NULL,
	|	NULL,
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.Сумма,
	|	0,
	|	&Период,
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.НомерСтроки
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПродажиПоДисконтнымКартам КАК ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам
	|ГДЕ
	|	ОтчетОРозничныхПродажахПродажиПоДисконтнымКартам.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ВидОплаты КАК ВидОплаты,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма > 0
	|			ТОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОперацийПродажи,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма
	|	КОНЕЦ КАК СуммаОперацийВозврата,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии > 0
	|				И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ПроцентКомиссии > 0
	|			ТОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НачисленнаяСуммаКомиссии,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии < 0
	|				И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ПроцентКомиссии < 0
	|			ТОГДА -ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтмененнаяСуммаКомиссии,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии < 0
	|				И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ПроцентКомиссии > 0
	|			ТОГДА -ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.СуммаКомиссии
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВозвращаемаяСуммаКомиссии,
	|	&Магазин КАК Магазин,
	|	&Организация КАК Организация,
	|	&Период КАК Период,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.НомерСтроки КАК НомерСтроки,
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОтчетОРозничныхПродажахОплатаПлатежнымиКартами
	|ГДЕ
	|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ -ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Резервировать
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Количество > 0
	|						ТОГДА ТаблицаТовары.Количество
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Резерв,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА &АналитикаХозяйственнойОперации
	|		ИНАЧЕ ТаблицаТовары.АналитикаХозяйственнойОперации
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И НЕ(ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|				И ТаблицаТовары.Количество < 0)
	|	И &ФормироватьДвиженияРИБ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&КассаККМ КАК КассаККМ,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	&СуммаОплатыНаличных КАК Сумма
	|ГДЕ
	|	&СуммаОплатыНаличных <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&КассаККМ,
	|	ОплатаНаличнымиАгентскихПлатежей.ДоговорКонтрагента,
	|	ОплатаНаличнымиАгентскихПлатежей.Сумма
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаНаличнымиАгентскихПлатежей КАК ОплатаНаличнымиАгентскихПлатежей
	|ГДЕ
	|	ОплатаНаличнымиАгентскихПлатежей.Ссылка = &Ссылка
	|	И ОплатаНаличнымиАгентскихПлатежей.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ -ТаблицаТовары.Количество
	|	КОНЕЦ КАК Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Сумма > 0
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ -ТаблицаТовары.Сумма
	|	КОНЕЦ КАК СуммаПродажи,
	|	ТаблицаТовары.Склад КАК Склад,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаТовары.Поставщик КАК Поставщик,
	|	ТаблицаТовары.Договор КАК Договор,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	&Период КАК Период
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И НЕ(ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|				И ТаблицаТовары.Количество < 0)
	|	И &ФормироватьДвиженияРИБ
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаВРозницу) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвиженияРИБ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ТаблицаЗаказыПокупателей
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КлючСвязи КАК КлючСвязи,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя
	|ПОМЕСТИТЬ ТаблицаТоварыПродажаПоЗаказу
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.КодСтроки > 0
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаТоварыПродажаПоЗаказу.ЗаказПокупателя КАК Заказ,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаТоварыПродажаПоЗаказу.Номенклатура КАК Номенклатура,
	|	ТаблицаТоварыПродажаПоЗаказу.Характеристика КАК Характеристика,
	|	ТаблицаТоварыПродажаПоЗаказу.КодСтроки КАК КодСтроки,
	|	ТаблицаТоварыПродажаПоЗаказу.Количество КАК Заказано
	|ИЗ
	|	ТаблицаТоварыПродажаПоЗаказу КАК ТаблицаТоварыПродажаПоЗаказу";
	
	
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаТаблицаСерийныхНомеров();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаТаблицаПодарочныхСертификатов();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаБонусы();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаТаблицаРасчетыСКлиентами();
	Запрос.Текст = Запрос.Текст + ПолучитьРазделитьЗапросов() + ТекстЗапросаАкцизныеМарки();
	
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	
	ДатаДокумента 	 = Реквизиты.Период;
	Организация		 = Реквизиты.Организация;
	ПериодБонусов 	 = НачалоДня(Реквизиты.Период);
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(
						Реквизиты.Организация,
						Реквизиты.Магазин);
						
	Запрос.УстановитьПараметр("ПериодБонусов", ПериодБонусов);
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Запрос.Текст  = СтрЗаменить(Запрос.Текст ,"%ТаблицаТоваровВЗапросе%", "ТаблицаТовары");
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаПродажи"                  			, Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоДисконтнымКартам"			, Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоПлатежнымКартам" 			, Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"          			, Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваККМ"      			, Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"        			, Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"     			, Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПокупателей"        			, Результат[11].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"          			, Результат[20].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПодарочныхСертификатов"   			, Результат[24].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаОстаткиАлкогольнойПродукцииЕГАИС"  	, Результат[33].Выгрузить());
	
	ТаблицаОплатыБонусами = Результат[25].Выгрузить();
	ТаблицаБонусныеБаллы = Результат[27].Выгрузить();
	ТаблицаРасчетыСКлиентами = Результат[28].Выгрузить();
	
	Если ТаблицаОплатыБонусами.Количество() > 0 Тогда
		
		ЕстьЗамены = Ложь;
		ТаблицаСоответствийЗамен = ТаблицаОплатыБонусами.Скопировать();
		ТаблицаСоответствийЗамен.Свернуть("ДисконтнаяКарта");
		ТаблицаДляБлокировки = ТаблицаСоответствийЗамен.Скопировать();
		
		ТаблицаСоответствийЗамен.Колонки.Добавить("ПредокКарты", Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
		
		МассивКарт = ТаблицаОплатыБонусами.ВыгрузитьКолонку("ДисконтнаяКарта");
		Запрос.Текст = "ВЫБРАТЬ
		|	ЗаменыКарт.КартаПриемник КАК КартаПриемник
		|ИЗ
		|	РегистрСведений.РегистрацияЗаменыКартПокупателей.СрезПоследних(&Период, ) КАК ЗаменыКарт
		|ГДЕ
		|	ЗаменыКарт.КартаПриемник В(&МассивКарт)";
		Запрос.УстановитьПараметр("МассивКарт", МассивКарт);
		ВыборкаЗамены = Запрос.Выполнить().Выбрать();
		Пока ВыборкаЗамены.Следующий() Цикл
			ЕстьЗамены = Истина;
			ИсторияКарты = МаркетинговыеАкцииСервер.ИсторияДисконтнойКарты(Реквизиты.Период, ВыборкаЗамены.КартаПриемник, Истина);
			Для Каждого ПредокКарты Из ИсторияКарты Цикл
				Если ПредокКарты <> ВыборкаЗамены.КартаПриемник Тогда
					МассивКарт.Добавить(ПредокКарты);
					НоваяСтрока = ТаблицаСоответствийЗамен.Добавить();
					НоваяСтрока.ДисконтнаяКарта = ВыборкаЗамены.КартаПриемник;
					НоваяСтрока.ПредокКарты = ПредокКарты;
					
					НоваяСтрокаБлокировки = ТаблицаДляБлокировки.Добавить();
					НоваяСтрокаБлокировки.ДисконтнаяКарта = ПредокКарты;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.БонусныеБаллы");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ТаблицаДляБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ДисконтнаяКарта", "ДисконтнаяКарта");
		Блокировка.Заблокировать();
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаКарт.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	ТаблицаКарт.Ссылка КАК ДисконтнаяКарта
		|ПОМЕСТИТЬ ТаблицаКарт
		|ИЗ
		|	Справочник.ИнформационныеКарты КАК ТаблицаКарт
		|ГДЕ
		|	ТаблицаКарт.Ссылка В(&МассивКарт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	БонусныеБаллы.НачисленоОстаток - БонусныеБаллы.КСписаниюОстаток КАК ОстатокБаллов
		|ПОМЕСТИТЬ БонусныеБаллы
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы.Остатки(
		|			&ПериодБонусов,
		|			(ДисконтнаяКарта, БонуснаяПрограммаЛояльности) В
		|				(ВЫБРАТЬ
		|					ТаблицаКарт.ДисконтнаяКарта,
		|					ТаблицаКарт.БонуснаяПрограммаЛояльности
		|				ИЗ
		|					ТаблицаКарт КАК ТаблицаКарт)) КАК БонусныеБаллы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БонусныеБаллы.ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
		|	ВЫБОР
		|		КОГДА БонусныеБаллы.ВидДвижения = &Приход
		|			ТОГДА БонусныеБаллы.Начислено - БонусныеБаллы.КСписанию
		|		ИНАЧЕ БонусныеБаллы.КСписанию - БонусныеБаллы.Начислено
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы КАК БонусныеБаллы
		|ГДЕ
		|	БонусныеБаллы.Период = &ПериодБонусов
		|	И БонусныеБаллы.Регистратор <> &Ссылка
		|	И (БонусныеБаллы.ДисконтнаяКарта, БонусныеБаллы.БонуснаяПрограммаЛояльности) В
		|			(ВЫБРАТЬ
		|				ТаблицаКарт.ДисконтнаяКарта,
		|				ТаблицаКарт.БонуснаяПрограммаЛояльности
		|			ИЗ
		|				ТаблицаКарт КАК ТаблицаКарт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	СУММА(БонусныеБаллы.ОстатокБаллов) КАК ОстатокБаллов
		|ИЗ
		|	БонусныеБаллы КАК БонусныеБаллы
		|
		|СГРУППИРОВАТЬ ПО
		|	БонусныеБаллы.ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности
		|
		|ИМЕЮЩИЕ
		|	СУММА(БонусныеБаллы.ОстатокБаллов) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БонусныеБаллы.Период КАК Период,
		|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
		|	БонусныеБаллы.ДатаПервоначальногоНачисления КАК ДатаПервоначальногоНачисления,
		|	СУММА(ВЫБОР
		|			КОГДА БонусныеБаллы.ВидДвижения = &Приход
		|				ТОГДА БонусныеБаллы.КСписанию
		|			ИНАЧЕ -БонусныеБаллы.КСписанию
		|		КОНЕЦ) КАК КСписанию
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы КАК БонусныеБаллы
		|ГДЕ
		|	(БонусныеБаллы.ДисконтнаяКарта, БонусныеБаллы.БонуснаяПрограммаЛояльности) В
		|			(ВЫБРАТЬ
		|				ТаблицаКарт.ДисконтнаяКарта,
		|				ТаблицаКарт.БонуснаяПрограммаЛояльности
		|			ИЗ
		|				ТаблицаКарт КАК ТаблицаКарт)
		|	И БонусныеБаллы.ДатаПервоначальногоНачисления <= &ПериодБонусов
		|	И БонусныеБаллы.ДатаПервоначальногоНачисления <> &ПустаяДата
		|	И БонусныеБаллы.Период > &ПериодБонусов
		|	И БонусныеБаллы.КСписанию <> 0
		|	И БонусныеБаллы.Регистратор <> &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	БонусныеБаллы.Период,
		|	БонусныеБаллы.ДисконтнаяКарта,
		|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
		|	БонусныеБаллы.ДатаПервоначальногоНачисления
		|
		|ИМЕЮЩИЕ
		|	СУММА(БонусныеБаллы.КСписанию) > 0";
		
		Результат = Запрос.ВыполнитьПакет();
		
		БонусныеБаллыСервер.ОбъединитьТаблицыБонусовПриОплате(
			ТаблицаБонусныеБаллы,
			ТаблицаОплатыБонусами,
			Результат,
			ПериодБонусов,
			Истина,
			ЕстьЗамены,
			ТаблицаСоответствийЗамен);
		
	КонецЕсли;
	
	ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллы"    , ТаблицаБонусныеБаллы);
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами", ТаблицаРасчетыСКлиентами);
	
	Если УчетПрослеживаемыхТоваровРТ.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров(ДатаДокумента) Тогда
		
		ПараметрыПересчета = Новый Структура;
		ПараметрыПересчета.Вставить("Организация", 						Организация);
		ПараметрыПересчета.Вставить("Дата",								ДатаДокумента);
		ПараметрыПересчета.Вставить("ИсключаемыйДокумент", 				ДокументСсылка);
		ПараметрыПересчета.Вставить("МестоХраненияВТабличнойЧасти", 	Истина);
		ПараметрыПересчета.Вставить("ИмяПоляМестоХранения", 			"Склад");
		
		УчетПрослеживаемыхТоваровРТ.ЗаполнитьКоличествоПоРНПТВТабличнойЧасти(ПараметрыПересчета, ТаблицыДляДвижений.ТаблицаТоварыОрганизаций);
		
	КонецЕсли;
	
	Если ИспользоватьКомиссионнуюТорговлю Тогда
		ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюОтчетовКомитенту" , 
						   ПроведениеСервер.ТаблицаДвиженийРегистраТоварыКОформлениюОтчетовКомитенту(
						   ТаблицыДляДвижений.ТаблицаТоварыОрганизаций));
	КонецЕсли;
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит сформированные табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - для заполнения письма при отправке печатной формы по электронной почте.
//                    см. РаботаСПочтовымиСообщениямиКлиент.РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КМ6") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КМ6", 
			НСтр("ru = 'Отчет о розничных продажах'") , 
			ПечатьОтчетаОПродажахККМ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["СРасшифровкой"]));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная",
				ПараметрыПечати.Представление,
				ПечатьНакладная(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьНоменклатуры") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОписьНоменклатуры",
				ПараметрыПечати.Представление,
				ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати));
	
	КонецЕсли;
			
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Обновляет статус передачи данных.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - документ обработки.
//  Операция - Перечисления.ОперацииОбменаГИСМ.ПередачаДанных - операция обмена гисм.
//  СтатусОбработки - ПеречислениеСсылка.СтатусыИнформированияГИСМ - статус обработки передачи данных.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыИнформированияГИСМ - новый статус.
//
Функция ОбновитьСтатусПослеПередачиДанных(ДокументСсылка, Операция, СтатусОбработки) Экспорт
	
	НовыйСтатус     = Неопределено;
	ДальнейшееДействие = Неопределено;
	
	Если Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных Тогда
		
		Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Принято Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.Передано;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПолучениеКвитанцииОФиксации;
			
		ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Отклонено
			ИЛИ СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Ошибка Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.ОтклоненоГИСМ;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	ИначеЕсли Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхПолучениеКвитанции Тогда
		
		Если СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Принято Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.ПринятоГИСМ;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.НеТребуется;
			
		ИначеЕсли СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Отклонено
			ИЛИ СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийГИСМ.Ошибка Тогда
			
			НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.ОтклоненоГИСМ;
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ПередайтеДанные;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НовыйСтатус = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РегистрыСведений.СтатусыИнформированияГИСМ.ОбновитьСтатус(ДокументСсылка, НовыйСтатус, ДальнейшееДействие);
	
	Возврат НовыйСтатус;
	
КонецФункции

// Обновляет статус подготовки к передаче данных.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - документ обработки.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыИнформированияГИСМ - новый статус.
//
Функция ОбновитьСтатусПослеПодготовкиКПередачеДанных(ДокументСсылка, Операция) Экспорт
	
	НовыйСтатус        = Неопределено;
	ДальнейшееДействие = Неопределено;
	
	ИспользоватьАвтоматическийОбмен = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическуюОтправкуПолучениеДанныхГИСМ");
	
	Если Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных Тогда
		НовыйСтатус = Перечисления.СтатусыИнформированияГИСМ.КПередаче;
		Если ИспользоватьАвтоматическийОбмен Тогда
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ОжидайтеПередачуДанныхРегламентнымЗаданием;
		Иначе
			ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюГИСМ.ВыполнитеОбмен;
		КонецЕсли;
	КонецЕсли;
	
	Если НовыйСтатус = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РегистрыСведений.СтатусыИнформированияГИСМ.ОбновитьСтатус(
		ДокументСсылка,
		НовыйСтатус,
		ДальнейшееДействие);
	
	Возврат НовыйСтатус;
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#Область СообщенияГИСМ

// Сообщение к передаче XML
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Ссылка на документ
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция ЕГАИС
// 
// Возвращаемое значение:
//  Строка - Текст сообщения XML
//
Функция СообщениеКПередачеXML(ДокументСсылка, Операция) Экспорт
	
	Если Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных Тогда
		Возврат ОтчетОРозничныхПродажахXML(ДокументСсылка);
	ИначеЕсли Операция = Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхПолучениеКвитанции Тогда
		Возврат ИнтеграцияГИСМВызовСервера.ЗапросКвитанцииОФиксацииПоСсылкеXML(ДокументСсылка, Перечисления.ОперацииОбменаГИСМ.ПередачаДанных);
	КонецЕсли;
	
КонецФункции

Функция ОтчетОРозничныхПродажахXML(ДокументСсылка) Экспорт
	
	Если ИнтеграцияГИСМ.ИспользоватьВозможностиВерсии("2.41") Тогда
		Возврат ОтчетОРозничныхПродажахXML2_41(ДокументСсылка);
	Иначе
		Возврат ОтчетОРозничныхПродажахXML2_40(ДокументСсылка);
	КонецЕсли;
	
КонецФункции

#Область Версия2_40

Функция ОтчетОРозничныхПродажахXML2_40(ДокументСсылка) Экспорт
	
	СообщенияXML = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла КАК Ссылка,
	|	КОЛИЧЕСТВО(ГИСМПрисоединенныеФайлы.Ссылка) КАК ПоследнийНомерВерсии
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Справочник.ГИСМПрисоединенныеФайлы КАК ГИСМПрисоединенныеФайлы
	|ГДЕ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла = &Ссылка
	|	И ГИСМПрисоединенныеФайлы.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииОбменаГИСМ.ПередачаДанных)
	|	И ГИСМПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Исходящее)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Дата КАК Дата,
	|	ЕСТЬNULL(ВременнаяТаблица.ПоследнийНомерВерсии, 0) КАК ПоследнийНомерВерсии,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ОтчетОРозничныхПродажах.Номер КАК Номер
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица КАК ВременнаяТаблица
	|		ПО ОтчетОРозничныхПродажах.Ссылка = ВременнаяТаблица.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахТовары.Ссылка,
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	СУММА(ОтчетОРозничныхПродажахТовары.Сумма) КАК Сумма,
	|	СУММА(ОтчетОРозничныхПродажахТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОтчетОРозничныхПродажахТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	ОтчетОРозничныхПродажахТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ Товары.Ссылка.ЦенаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((Товары.Сумма + Товары.СуммаНДС) / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫРАЗИТЬ(Товары.Сумма / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	Серии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	Товары.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК Товары
	|		ПО (Товары.Ссылка = Серии.Ссылка)
	|			И (Товары.Номенклатура = Серии.Номенклатура)
	|			И (Товары.Характеристика = Серии.Характеристика)
	|ГДЕ
	|	Серии.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Серии.НомерСтроки");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	Шапка = Результат[1].Выбрать();
	Товары = Результат[3].Выгрузить();
	Если Не Шапка.Следующий()
		Или Товары.Количество() = 0 Тогда
		
		СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
		СообщениеXML.Документ = ДокументСсылка;
		СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
			Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка);
		СообщениеXML.ТекстОшибки = НСтр("ru = 'Нет данных для выгрузки.'");
		СообщенияXML.Добавить(СообщениеXML);
		Возврат СообщенияXML;
		
	КонецЕсли;
	
	НомерВерсии = Шапка.ПоследнийНомерВерсии + 1;
	
	РеквизитыОрганизации = ИнтеграцияГИСМВызовСервера.ИННКППGLNОрганизации(Шапка.Организация, Неопределено);
	
	СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
	СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
		Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка, НомерВерсии);
	
	ИмяТипа   = "query";
	ИмяПакета = "retail_sale";
	
	ПередачаДанных = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(Неопределено, ИмяТипа);
	
	ОтчетОРозничныхПродажах = ИнтеграцияГИСМ.ОбъектXDTO(ИмяПакета);
	ОтчетОРозничныхПродажах.action_id  = ОтчетОРозничныхПродажах.action_id;
	
	Попытка
		ОтчетОРозничныхПродажах.sender_gln = РеквизитыОрганизации.GLN;
	Исключение
		ИнтеграцияГИСМКлиентСервер.ДобавитьТекстОшибкиНеЗаполненGLNОрганизации(СообщениеXML, РеквизитыОрганизации.GLN, Шапка);
	КонецПопытки;
	
	ОтчетОРозничныхПродажах.sales = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах, "sales");
	
	ХранилищеВременныхДат = Новый Соответствие;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		НоваяСтрока = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах.sales, "detail");
		НоваяСтрока.sign_num = СтрокаТЧ.НомерКиЗ;
		НоваяСтрока.cost     = СтрокаТЧ.Стоимость;
		Если ЗначениеЗаполнено(СтрокаТЧ.СуммаНДС) Тогда
			НоваяСтрока.vat_value = СтрокаТЧ.СуммаНДС;
		КонецЕсли;
		
		НоваяСтрока.doc_type   = 4;
		НоваяСтрока.doc_name   = НСтр("ru = 'Отчет о розничных продажах'");
		НоваяСтрока.doc_number = Шапка.Номер;
		
		ИнтеграцияГИСМ.УстановитьДатуСЧасовымПоясом(
			НоваяСтрока,
			"sale_time",
			Шапка.Дата,
			ХранилищеВременныхДат);
		
		ОтчетОРозничныхПродажах.sales.detail.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ПередачаДанных.version    = ПередачаДанных.version;
	ПередачаДанных[ИмяПакета] = ОтчетОРозничныхПродажах;
	
	ТекстСообщенияXML = ИнтеграцияГИСМ.ОбъектXDTOВXML(ПередачаДанных, ИмяТипа);
	ТекстСообщенияXML = ИнтеграцияГИСМ.ПреобразоватьВременныеДаты(ХранилищеВременныхДат, ТекстСообщенияXML);
	
	СообщениеXML.ТекстСообщенияXML  = ТекстСообщенияXML;
	СообщениеXML.КонвертSOAP = ИнтеграцияГИСМВызовСервера.ПоместитьТекстСообщенияXMLВКонвертSOAP(ТекстСообщенияXML);
	
	СообщениеXML.ТипСообщения = Перечисления.ТипыСообщенийГИСМ.Исходящее;
	СообщениеXML.Организация  = Шапка.Организация;
	СообщениеXML.Операция     = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных;
	СообщениеXML.Документ     = ДокументСсылка;
	СообщениеXML.Версия       = НомерВерсии;
	
	СообщенияXML.Добавить(СообщениеXML);
	
	Возврат СообщенияXML;
	
КонецФункции

#КонецОбласти

#Область Версия2_41

Функция ОтчетОРозничныхПродажахXML2_41(ДокументСсылка) Экспорт
	
	СообщенияXML = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла КАК Ссылка,
	|	КОЛИЧЕСТВО(ГИСМПрисоединенныеФайлы.Ссылка) КАК ПоследнийНомерВерсии
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Справочник.ГИСМПрисоединенныеФайлы КАК ГИСМПрисоединенныеФайлы
	|ГДЕ
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла = &Ссылка
	|	И ГИСМПрисоединенныеФайлы.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииОбменаГИСМ.ПередачаДанных)
	|	И ГИСМПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийГИСМ.Исходящее)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГИСМПрисоединенныеФайлы.ВладелецФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Дата КАК Дата,
	|	ЕСТЬNULL(ВременнаяТаблица.ПоследнийНомерВерсии, 0) КАК ПоследнийНомерВерсии,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ОтчетОРозничныхПродажах.Номер КАК Номер
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица КАК ВременнаяТаблица
	|		ПО ОтчетОРозничныхПродажах.Ссылка = ВременнаяТаблица.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахТовары.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажахТовары.Номенклатура КАК Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика КАК Характеристика,
	|	СУММА(ОтчетОРозничныхПродажахТовары.Сумма) КАК Сумма,
	|	СУММА(ОтчетОРозничныхПродажахТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОтчетОРозничныхПродажахТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажахТовары.Номенклатура,
	|	ОтчетОРозничныхПродажахТовары.Характеристика,
	|	ОтчетОРозничныхПродажахТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ Товары.Ссылка.ЦенаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((Товары.Сумма + Товары.СуммаНДС) / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ВЫРАЗИТЬ(Товары.Сумма / Товары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	Серии.Серия.НомерКиЗГИСМ КАК НомерКиЗ,
	|	Товары.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК Товары
	|		ПО (Товары.Ссылка = Серии.Ссылка)
	|			И (Товары.Номенклатура = Серии.Номенклатура)
	|			И (Товары.Характеристика = Серии.Характеристика)
	|ГДЕ
	|	Серии.Ссылка = &Ссылка
	|	И Серии.Номенклатура.ПродукцияМаркируемаяДляГИСМ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Серии.НомерСтроки");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	Шапка = Результат[1].Выбрать();
	Товары = Результат[3].Выгрузить();
	Если Не Шапка.Следующий()
		Или Товары.Количество() = 0 Тогда
		
		СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
		СообщениеXML.Документ = ДокументСсылка;
		СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
			Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка);
		СообщениеXML.ТекстОшибки = НСтр("ru = 'Нет данных для выгрузки.'");
		СообщенияXML.Добавить(СообщениеXML);
		Возврат СообщенияXML;
		
	КонецЕсли;
	
	НомерВерсии = Шапка.ПоследнийНомерВерсии + 1;
	
	РеквизитыОрганизации = ИнтеграцияГИСМВызовСервера.ИННКППGLNОрганизации(Шапка.Организация, Неопределено);
	
	СообщениеXML = ИнтеграцияГИСМКлиентСервер.СтруктураСообщенияXML();
	СообщениеXML.Описание = ИнтеграцияГИСМ.ОписаниеОперацииПередачиДанных(
		Перечисления.ОперацииОбменаГИСМ.ПередачаДанныхРозничнаяПродажа, ДокументСсылка, НомерВерсии);
	
	ИмяТипа   = "query";
	ИмяПакета = "retail_sale";
	
	ПередачаДанных = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(Неопределено, ИмяТипа);
	
	ОтчетОРозничныхПродажах = ИнтеграцияГИСМ.ОбъектXDTO(ИмяПакета);
	ОтчетОРозничныхПродажах.action_id  = ОтчетОРозничныхПродажах.action_id;
	
	Попытка
		ОтчетОРозничныхПродажах.sender_gln = РеквизитыОрганизации.GLN;
	Исключение
		ИнтеграцияГИСМКлиентСервер.ДобавитьТекстОшибкиНеЗаполненGLNОрганизации(СообщениеXML, РеквизитыОрганизации.GLN, Шапка);
	КонецПопытки;
	
	ОтчетОРозничныхПродажах.sales = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах, "sales");
	
	ХранилищеВременныхДат = Новый Соответствие;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		НоваяСтрока = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(ОтчетОРозничныхПродажах.sales, "detail");
		
		НоваяСтрока.sign_num   = СтрокаТЧ.НомерКиЗ;
		НоваяСтрока.cost       = СтрокаТЧ.Стоимость;
		Если ЗначениеЗаполнено(СтрокаТЧ.СуммаНДС) Тогда
			НоваяСтрока.vat_value = СтрокаТЧ.СуммаНДС;
		КонецЕсли;
		НоваяСтрока.sale_time  = Шапка.Дата;
		
		НоваяСтрока.sale_docs = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(НоваяСтрока, "sale_docs");
		doc = ИнтеграцияГИСМ.ОбъектXDTOПоИмениСвойства(НоваяСтрока.sale_docs, "doc");
		doc.doc_type   = 1;
		doc.doc_name   = НСтр("ru = 'Чек'");
		doc.doc_number = НСтр("ru = 'б/н'");
		doc.doc_date   = Шапка.Дата;
		НоваяСтрока.sale_docs.doc.Добавить(doc);
		
		ОтчетОРозничныхПродажах.sales.detail.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ПередачаДанных.version    = ПередачаДанных.version;
	ПередачаДанных[ИмяПакета] = ОтчетОРозничныхПродажах;
	
	ТекстСообщенияXML = ИнтеграцияГИСМ.ОбъектXDTOВXML(ПередачаДанных, ИмяТипа);
	ТекстСообщенияXML = ИнтеграцияГИСМ.ПреобразоватьВременныеДаты(ХранилищеВременныхДат, ТекстСообщенияXML);
	
	СообщениеXML.ТекстСообщенияXML  = ТекстСообщенияXML;
	СообщениеXML.КонвертSOAP = ИнтеграцияГИСМВызовСервера.ПоместитьТекстСообщенияXMLВКонвертSOAP(ТекстСообщенияXML);
	
	СообщениеXML.ТипСообщения = Перечисления.ТипыСообщенийГИСМ.Исходящее;
	СообщениеXML.Организация  = Шапка.Организация;
	СообщениеXML.Операция     = Перечисления.ОперацииОбменаГИСМ.ПередачаДанных;
	СообщениеXML.Документ     = ДокументСсылка;
	СообщениеXML.Версия       = НомерВерсии;
	
	СообщенияXML.Добавить(СообщениеXML);
	
	Возврат СообщенияXML;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПроцедурыОткрытияИЗакрытияСмены

Процедура ЗаполнитьОтчетОРозничныхПродажахПоДаннымВЧеках(ОтчетОРозничныхПродажах, МенеджерВременныхТаблиц = Неопределено, Отказ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КассаККМ 			 = ОтчетОРозничныхПродажах.КассаККМ;
	КэшированныеЗначения = Новый Структура;
	
	ИспользоватьКомиссионнуюТорговлю = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	ИспользоватьУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	
	ОчиститьВременныеТаблицы		 = Ложь;
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		
		ОчиститьВременныеТаблицы	= Истина;
		МенеджерВременныхТаблиц 	= Новый МенеджерВременныхТаблиц;
		СоздатьВТДокументыНаККМ(МенеджерВременныхТаблиц, ОтчетОРозничныхПродажах.КассоваяСмена, ОтчетОРозничныхПродажах.Ссылка);
	
	КонецЕсли;
	
	Если ИспользоватьКомиссионнуюТорговлю Или ИспользоватьУчетИмпортныхТоваров Тогда
		
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстЗапросаТоварыОрганизации(ОтчетОРозничныхПродажах.Ссылка);
		
		Запрос.УстановитьПараметр("КассаККМ", 		 КассаККМ);
		Запрос.УстановитьПараметр("ПустойДоговор"  , Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойНомерГТД" , Справочники.НомераГТД.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойПоставщик", Справочники.Контрагенты.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустаяУпаковка" , Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
		
		Запрос.Выполнить();
		
		Запрос.Текст = ТекстЗапросаПромежуточнаяТаблицаТоварыОрганизацииИмпорт();
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстЗапросаПромежуточнаяТаблица();
		
		Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
		Запрос.УстановитьПараметр("ПустойДоговор"  , Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойНомерГТД" , Справочники.НомераГТД.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустойПоставщик", Справочники.Контрагенты.ПустаяСсылка());
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);

	Запрос.Текст = ТекстОсновногоЗапроса();
	
	ЗапросПоВозвратам = Новый Запрос;
	ЗапросПоВозвратам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоВозвратам.Текст = ТекстЗапросаПоВозвратам();
	ЗапросПоВозвратам.УстановитьПараметр("КассаККМ"          , КассаККМ);
	ЗапросПоВозвратам.УстановитьПараметр("ВидОперацииВозврат", Перечисления.ВидыОперацийЧекККМ.Возврат);
	
	ЗапросПоОплате = Новый Запрос;
	ЗапросПоОплате.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоОплате.Текст = ТекстЗапросаПоОплате();
	ЗапросПоОплате.УстановитьПараметр("КассаККМ"          , КассаККМ);
	ЗапросПоОплате.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	ЗапросПоОплате.УстановитьПараметр("ТипОплатыНаличные" , Перечисления.ТипыОплатЧекаККМ.Наличные);
	ЗапросПоОплате.УстановитьПараметр("СтатусПробитый"    , Перечисления.СтатусыЧековККМ.Пробитый);
	ЗапросПоОплате.УстановитьПараметр("СтатусПустой"      , Перечисления.СтатусыЧековККМ.ПустаяСсылка());

	ЗапросПоПодарочнымСертификатам = Новый Запрос;
	ЗапросПоПодарочнымСертификатам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоПодарочнымСертификатам.Текст = ТекстЗапросаПоПодарочнымСертификатам();
	ЗапросПоПодарочнымСертификатам.УстановитьПараметр("КассаККМ", КассаККМ);
	
	ЗапросПоСериям = Новый Запрос;
	ЗапросПоСериям.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоСериям.Текст = ТекстЗапросаПоСериям();
	ЗапросПоСериям.УстановитьПараметр("КассаККМ", КассаККМ);
	
	ЗапросПоБонусам = Новый Запрос;
	ЗапросПоБонусам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоБонусам.Текст = ТекстЗапросаПоБонусам();
	ЗапросПоБонусам.УстановитьПараметр("КассаККМ"   , КассаККМ);
	ЗапросПоБонусам.УстановитьПараметр("ПустаяДата" , Дата("00010101"));
	
	ЗапросПоАгентскимПлатежам = Новый Запрос;
	ЗапросПоАгентскимПлатежам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоАгентскимПлатежам.Текст = ТекстЗапросаПоАгентскимПлатежам();
	ЗапросПоАгентскимПлатежам.УстановитьПараметр("КассаККМ", КассаККМ);
	
	ЗапросСуммаОплатыНаличных = Новый Запрос;
	ЗапросСуммаОплатыНаличных.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросСуммаОплатыНаличных.Текст = ТекстЗапросаСуммаОплатыНаличных();
	ЗапросСуммаОплатыНаличных.УстановитьПараметр("КассаККМ", КассаККМ);
	ЗапросСуммаОплатыНаличных.УстановитьПараметр("Наличные", Справочники.ВидыОплатЧекаККМ.Наличные);
	ЗапросСуммаОплатыНаличных.УстановитьПараметр("ПустойДоговор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	ЗапросСуммаОплатыНаличных.УстановитьПараметр("Возврат", Перечисления.ВидыОперацийЧекККМ.Возврат);
	
	МассивРезультатСуммаОплатыНаличных = ЗапросСуммаОплатыНаличных.ВыполнитьПакет();
	РезультатСуммаОплатыНаличных       = МассивРезультатСуммаОплатыНаличных[4];
	ТаблицаНаличныеБезСдачи            = МассивРезультатСуммаОплатыНаличных[6].Выгрузить();
	
	ЗапросПоРасчетамСКлиентами = Новый Запрос;
	ЗапросПоРасчетамСКлиентами.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоРасчетамСКлиентами.Текст = ТекстЗапросаПоРасчетамСКлиентами();
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("КассаККМ", КассаККМ);
	
	МассивТиповОплатНеВлияющийНаРасчеты = Новый Массив;
	МассивТиповОплатНеВлияющийНаРасчеты.Добавить(Перечисления.ТипыОплатЧекаККМ.ЗачетАванса);
	МассивТиповОплатНеВлияющийНаРасчеты.Добавить(Перечисления.ТипыОплатЧекаККМ.ВРассрочку);
	
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("МассивТиповОплатНеВлияющийНаРасчеты", 
												   МассивТиповОплатНеВлияющийНаРасчеты);
	
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("ЗачетАванса", Перечисления.ТипыОплатЧекаККМ.ЗачетАванса);
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("ВРассрочку" , Перечисления.ТипыОплатЧекаККМ.ВРассрочку);
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("ТаблицаНаличныеБезСдачи" , ТаблицаНаличныеБезСдачи);
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("ТипОплатыНаличные" , Справочники.ВидыОплатЧекаККМ.Наличные);
	
	МассивПустыхЗначенийДокументаРасчета = Новый Массив;
	МассивПустыхЗначенийДокументаРасчета.Добавить(Неопределено);
	МассивПустыхЗначенийДокументаРасчета.Добавить(Документы.ПриходныйКассовыйОрдер.ПустаяСсылка());
	МассивПустыхЗначенийДокументаРасчета.Добавить(Документы.ОплатаОтПокупателяПлатежнойКартой.ПустаяСсылка());
	МассивПустыхЗначенийДокументаРасчета.Добавить(Документы.ЧекККМ.ПустаяСсылка());
	МассивПустыхЗначенийДокументаРасчета.Добавить(Документы.ВводОстатковРасчетовСКлиентами.ПустаяСсылка());
	
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("МассивПустыхЗначенийДокументаРасчета", 
												   МассивПустыхЗначенийДокументаРасчета);
	ИспользоватьРасчетыСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетыСКлиентами");
	ЗапросПоРасчетамСКлиентами.УстановитьПараметр("ИспользоватьРасчетыСКлиентами", ИспользоватьРасчетыСКлиентами);
	
	ЗапросПоАкцизнымМаркам = Новый Запрос;
	ЗапросПоАкцизнымМаркам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоАкцизнымМаркам.Текст = ТекстЗапросаПоАкцизнымМаркам();
	ЗапросПоАкцизнымМаркам.УстановитьПараметр("КассаККМ", КассаККМ);
	
	ЗапросПоПрочейВыручке = Новый Запрос;
	ЗапросПоПрочейВыручке.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоПрочейВыручке.Текст = ТекстЗапросаПоПрочейВыручке();
	ЗапросПоПрочейВыручке.УстановитьПараметр("КассаККМ", КассаККМ);
	
	МассивРезультатовЗапроса          = Запрос.ВыполнитьПакет();
	РезультатЗапросаПоВозвратам       = ЗапросПоВозвратам.Выполнить();
	РезультатЗапросаПоОплате          = ЗапросПоОплате.Выполнить();

	РезультатЗапросаПоСериям          = ЗапросПоСериям.Выполнить();
	РезультатПодарочныеСертификаты    = ЗапросПоПодарочнымСертификатам.Выполнить();
	РезультатБонусы                   = ЗапросПоБонусам.Выполнить();
	РезультатАгентские                = ЗапросПоАгентскимПлатежам.Выполнить();
	РезультатПоРасчетамСКлиентами     = ЗапросПоРасчетамСКлиентами.Выполнить();
	РезультатПоАкцизнымМаркам		  = ЗапросПоАкцизнымМаркам.Выполнить();	
	РезультатПоПрочейВыручке          = ЗапросПоПрочейВыручке.Выполнить();
	
	ТипыОплатПлатежнымиКартамиСистемой = Новый СписокЗначений;
	ТипыОплатПлатежнымиКартамиСистемой.Добавить(Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта);
	ТипыОплатПлатежнымиКартамиСистемой.Добавить(Перечисления.ТипыОплатЧекаККМ.ПлатежнаяСистема);
	
	ТаблицаОплатПлатежныеКарты		= ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ТипОплаты", ТипыОплатПлатежнымиКартамиСистемой), 
	   Новый Структура("ТипОплаты", ВидСравнения.ВСписке)).Выгрузить();

	   ТаблицаОплатМобильныйПлатеж		= ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.МобильныйПлатеж)).Выгрузить();
	
	//Внесение данных о мобильных платежах в таблицу оплат платежных карт
	Для Каждого Строка Из ТаблицаОплатМобильныйПлатеж Цикл
		
		ЗаполнитьЗначенияСвойств(ТаблицаОплатПлатежныеКарты.Добавить(), Строка);
		
	КонецЦикла;

	//В полученной таблице ТаблицаОплатПлатежныеКарты присутствует колонка ДисконтнаяКарта, из-за наличия которой при заполнении ТЧ ОплатаПлатежнымиКартами в ОтчетеОРозничныхПродажах
	//данные по картам оплаты не сворачиваются в разрезе терминалов и видов оплаты. При этом сами дисконты в данном случае не нужны и в таблицу отчета не выводится. 
	//В связи с этим для пользователя таблица Оплата картами в отчете выглядит некорректно: данные разбиваются на несколько строк без видимой причины (т.к. внутри присутствует группировка по дисконту).
	//Менять запрос получения данных РезультатЗапросаПоОплате нельзя, т.к. по нему в дальнейшем заполняются таблицы по оплате бонусами, в которых дисконтная карта требуется. 
	//Поэтому сворачиваем таблицу ТаблицаОплатПлатежныеКарты по ключевым полям, исключая колонку ДисконтнаяКарта.
	Группы = "БанкКредитор, БонуснаяПрограммаЛояльности, ВидОплаты, ПроцентБанковскойКомиссии, ПроцентКомиссии, ТипОплаты, ЭквайринговыйТерминал, ЭтоВозврат";
	Суммы  = "КоличествоБонусов, КоличествоБонусовВСкидках, Сумма, СуммаБонусовВСкидках, СуммаКомиссии";
	ТаблицаОплатПлатежныеКарты.Свернуть(Группы, Суммы);
	
	ТаблицаОплатБанковскиеКредиты	= ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.БанковскийКредит)).Выгрузить();

	ТаблицаОплатСертификатом		= ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ВидОплаты", Справочники.ВидыОплатЧекаККМ.ОплатаПодарочнымСертификатом)).Выгрузить();
	
	ТаблицаОплатБонусамиКакСкидкой	= ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ВидОплаты", Справочники.ВидыОплатЧекаККМ.ОплатаБонусамиКакСкидкой)).Выгрузить();
	
	ОплатаПодарочнымиСертификатами = ТаблицаОплатСертификатом.Итог("Сумма");
	
	СуммаОплатыНаличных = 0;
	
	Если НЕ РезультатСуммаОплатыНаличных.Пустой() Тогда
		
		ВыборкаСуммаОплатыНаличных = РезультатСуммаОплатыНаличных.Выбрать();
		Если ВыборкаСуммаОплатыНаличных.Следующий() Тогда
			СуммаОплатыНаличных = ВыборкаСуммаОплатыНаличных.НаличныеБезСдачи;
			Если НЕ ЗначениеЗаполнено(СуммаОплатыНаличных) Тогда
				СуммаОплатыНаличных = 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	Если НЕ (МассивРезультатовЗапроса[1].Пустой() 
		И РезультатЗапросаПоВозвратам.Пустой() 
		И РезультатПоРасчетамСКлиентами.Пустой()
		И РезультатПоПрочейВыручке.Пустой()
		И СуммаОплатыНаличных = 0) Тогда
		
		ОтчетОРозничныхПродажах.Товары.Очистить();
		ОтчетОРозничныхПродажах.СерийныеНомера.Очистить();
		ОтчетОРозничныхПродажах.ВозвращенныеТовары.Очистить();
		
		РозничныйПокупатель = Константы.КонтрагентРозничныйПокупатель.Получить();
		
		УстановитьПривилегированныйРежим(Истина);
		
		ОтчетОРозничныхПродажах.СуммаОплатыНаличных = СуммаОплатыНаличных;
		
		ТаблицаСерийныеНомера = МассивРезультатовЗапроса[3].Выгрузить();
		КэшированныеЗначения = Новый Структура;
		
		СтруктураЗаполненияЦены = Новый Структура;
		СтруктураЗаполненияЦены.Вставить("ЦенаВключаетНДС", ОтчетОРозничныхПродажах.ЦенаВключаетНДС);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураЗаполненияЦены);
		ТекущийКлючСерийныеСертификатов = 0;
		
		КэшСНО = Новый Соответствие;
		Выборка = МассивРезультатовЗапроса[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если НЕ Отказ Тогда
				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
				
				Если СтрокаТабличнойЧасти.СтавкаНДС <> Справочники.СтавкиНДС.ПолучитьСтавкуНДСБезНДС() Тогда
					ОтчетОРозничныхПродажах.УчитыватьНДС = Истина;
				КонецЕсли;
				
				Если Выборка.ИспользоватьСерийныеНомера Тогда
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("ДисконтнаяКарта", Выборка.ДисконтнаяКарта);
					СтруктураПоиска.Вставить("Склад"          , Выборка.Склад);
					СтруктураПоиска.Вставить("Номенклатура"   , Выборка.Номенклатура);
					СтруктураПоиска.Вставить("Характеристика" , Выборка.Характеристика);
					СтруктураПоиска.Вставить("Продавец"       , Выборка.Продавец);
					СтруктураПоиска.Вставить("Цена"           , Выборка.Цена);
					СтруктураПоиска.Вставить("СтавкаНДС"      , Выборка.СтавкаНДС);
					СтруктураПоиска.Вставить("Упаковка"       , Выборка.Упаковка);
					Если Выборка.Количество > 0 Тогда
						СтруктураПоиска.Вставить("ЭтоВозврат" , Ложь);
					Иначе
						СтруктураПоиска.Вставить("ЭтоВозврат" , Истина);
					КонецЕсли;
					
					ТекущийКлючСерийныеСертификатов = ТекущийКлючСерийныеСертификатов + 1;
					
					СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров = ТекущийКлючСерийныеСертификатов;
					
					СтрокиТаблицаСерийныхНомеров = ТаблицаСерийныеНомера.НайтиСтроки(СтруктураПоиска);
					Для каждого СтрокаТаблицыСерийныхНомеров Из СтрокиТаблицаСерийныхНомеров Цикл
						СтрокаСерийныхНомеров = ОтчетОРозничныхПродажах.СерийныеНомера.Добавить();
						СтрокаСерийныхНомеров.СерийныйНомер = СтрокаТаблицыСерийныхНомеров.СерийныйНомер;
						СтрокаСерийныхНомеров.КлючСвязиСерийныхНомеров = СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров;
					КонецЦикла;
					
				КонецЕсли;
				
				Если ИспользоватьКомиссионнуюТорговлю Тогда
					Если Выборка.ЭтоТовар Тогда
						Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Договор) Тогда
							Если Выборка.ЭтоКомиссионер Тогда
								УчетНДСУКомитента = ПодключаемоеОборудованиеРТ.КэшируемыеСНО(СтрокаТабличнойЧасти.Договор, КэшСНО);
								ПодключаемоеОборудованиеРТ.ПерезаполнитьНДСКомитента(СтрокаТабличнойЧасти, 
																					СтрокаТабличнойЧасти.Номенклатура, 
																					УчетНДСУКомитента, 
																					Ложь,
																					Новый Структура("СтавкаНДСБезНДС, ФорматБПО", Справочники.СтавкиНДС.ПолучитьСтавкуНДСБезНДС(), Ложь));
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаПоВозвратам = РезультатЗапросаПоВозвратам.Выбрать();
		Пока ВыборкаПоВозвратам.Следующий() Цикл
			Если НЕ Отказ Тогда
				
				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.ВозвращенныеТовары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаПоВозвратам);
				
				ОбработкаТабличнойЧастиТоварыСервер.ПересчитатьСуммуНДСВСтрокеТЧСервер(СтрокаТабличнойЧасти, СтруктураДействий, КэшированныеЗначения);
				
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ Отказ 
		     И (ОтчетОРозничныхПродажах.Товары.Количество() > 0) Тогда
			
			ТаблицаПоСериям = РезультатЗапросаПоСериям.Выгрузить();
			ОтчетОРозничныхПродажах.Серии.Загрузить(ТаблицаПоСериям);
			
			ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(Документы.ОтчетОРозничныхПродажах.ПараметрыУказанияСерий(Неопределено));
			ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьСтатусыУказанияСерий(ОтчетОРозничныхПродажах,ПараметрыУказанияСерий);
			
		КонецЕсли;
		
		// Заполняем таблицу бонусных баллов.
		ОтчетОРозничныхПродажах.БонусныеБаллыКНачислению.Очистить();
		Если НЕ Отказ Тогда
			ВыборкаПоБонусам = РезультатБонусы.Выбрать();
			Пока ВыборкаПоБонусам.Следующий() Цикл
				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.БонусныеБаллыКНачислению.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаПоБонусам);
			КонецЦикла;
		КонецЕсли;
		
		// Заполняем таблицу агентские платежи.
		ОтчетОРозничныхПродажах.ОплатаНаличнымиАгентскихПлатежей.Очистить();
		Если НЕ Отказ Тогда
			ВыборкаАгентские = РезультатАгентские.Выбрать();
			Пока ВыборкаАгентские.Следующий() Цикл
				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.ОплатаНаличнымиАгентскихПлатежей.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаАгентские);
			КонецЦикла;
		КонецЕсли;
		
		// Заполняем таблицу расчеты с клиентами.
		ОтчетОРозничныхПродажах.РасчетыСКлиентами.Очистить();
		Если НЕ Отказ Тогда
			ВыборкаПоРасчетамСКлиентами = РезультатПоРасчетамСКлиентами.Выбрать();
			Пока ВыборкаПоРасчетамСКлиентами.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(ВыборкаПоРасчетамСКлиентами.Оплачено) И НЕ ЗначениеЗаполнено(ВыборкаПоРасчетамСКлиентами.Отгружено) Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.РасчетыСКлиентами.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаПоРасчетамСКлиентами);
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Контрагент) Тогда
					СтрокаТабличнойЧасти.Контрагент = РозничныйПокупатель;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Заполняем таблицу акцизных марок
		ОтчетОРозничныхПродажах.АкцизныеМарки.Очистить();
		Если НЕ Отказ Тогда 
			ВыборкаАкцизныеМарки = РезультатПоАкцизнымМаркам.Выбрать();
			Пока ВыборкаАкцизныеМарки.Следующий() Цикл 
				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.АкцизныеМарки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаАкцизныеМарки);
			КонецЦикла;
		КонецЕсли;
		
		ЕстьПродажиВозвратыТовара = ОтчетОРозничныхПродажах.Товары.Количество() > 0 
								Или ОтчетОРозничныхПродажах.ВозвращенныеТовары.Количество() > 0;
		
		ЕстьПрочаяВыручка = ОтчетОРозничныхПродажах.ПрочаяВыручка.Количество() > 0;
		
		ЕстьРасчетыСКлиентами = ОтчетОРозничныхПродажах.РасчетыСКлиентами.Количество() > 0;
		
		ЕстьОплатаДоговоровПлатежныхАгентов = ОтчетОРозничныхПродажах.ОплатаНаличнымиАгентскихПлатежей.Количество() > 0;
		
		ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами.Очистить();
		
		Для Каждого СтрокаОплаты Из ТаблицаОплатПлатежныеКарты Цикл
			Если СтрокаОплаты.Сумма <> 0 Тогда 
				Если СтрокаОплаты.ВидОплаты <> Справочники.ВидыОплатЧекаККМ.ОплатаБонусамиКакСкидкой Тогда
					НоваяСтрока = ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОплаты);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
			
		Если ЕстьПродажиВозвратыТовара Тогда
				
			ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами.Очистить();
			
			Для Каждого Оплата Из ТаблицаОплатБанковскиеКредиты Цикл
				НоваяСтрока           = ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами.Добавить();
				НоваяСтрока.ВидОплаты = Оплата.ВидОплаты;
				НоваяСтрока.Сумма     = Оплата.Сумма;
				НоваяСтрока.БанкКредитор              = НоваяСтрока.ВидОплаты.БанкКредитор;
				НоваяСтрока.ПроцентБанковскойКомиссии = НоваяСтрока.ВидОплаты.ПроцентБанковскойКомиссии;
				НоваяСтрока.СуммаБанковскойКомиссии   = НоваяСтрока.Сумма * НоваяСтрока.ПроцентБанковскойКомиссии / 100;
				
			КонецЦикла;
				
			ОтчетОРозничныхПродажах.ОплатаПодарочнымиСертификатами = ОплатаПодарочнымиСертификатами;
			
			ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами.Очистить();
				
			Для Каждого ОплатаБонусом Из ТаблицаОплатБонусамиКакСкидкой Цикл
					
				НоваяСтрока                             = ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами.Добавить();
				НоваяСтрока.ВидОплаты                   = ОплатаБонусом.ВидОплаты;
				НоваяСтрока.ДисконтнаяКарта             = ОплатаБонусом.ДисконтнаяКарта;
				НоваяСтрока.БонуснаяПрограммаЛояльности = ОплатаБонусом.БонуснаяПрограммаЛояльности;
				НоваяСтрока.СуммаБонусовВСкидках        = ОплатаБонусом.СуммаБонусовВСкидках;
				НоваяСтрока.КоличествоБонусовВСкидках   = ОплатаБонусом.КоличествоБонусовВСкидках;
					
			КонецЦикла;
					
			ТаблицаПогашения = РезультатПодарочныеСертификаты.Выгрузить();
			ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов.Очистить();
				
			Для каждого СтрокаПогашения Из ТаблицаПогашения Цикл
				СтрокаДокумента = ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаПогашения);
			КонецЦикла;
				
		КонецЕсли;
			
		// Заполняем таблицу по прочей выручке.
		ОтчетОРозничныхПродажах.ПрочаяВыручка.Очистить();
		
		ВыборкаПоПрочейВыручке = РезультатПоПрочейВыручке.Выбрать();
		Пока ВыборкаПоПрочейВыручке.Следующий() Цикл
			СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.ПрочаяВыручка.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ВыборкаПоПрочейВыручке);
		КонецЦикла;
		
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если ОчиститьВременныеТаблицы Тогда
		МенеджерВременныхТаблиц.Закрыть();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СоздатьВТДокументыНаККМ(МенеджерВременныхТаблиц, КассоваяСмена, СсылкаНаОтчет = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КассаККМ", КассоваяСмена.КассаККМ);
	Запрос.УстановитьПараметр("НачалоКассовойСмены", КассоваяСмена.НачалоКассовойСмены);
	Запрос.УстановитьПараметр("ОкончаниеКассовойСмены", КассоваяСмена.ОкончаниеКассовойСмены);
	Запрос.УстановитьПараметр("ОтчетОРозничныхПродажах", СсылкаНаОтчет);
	
	Если ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Док.Ссылка КАК Ссылка,
		|	Док.ВидОперации КАК ВидОперации,
		|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	Док.ЧекККМПродажа КАК ЧекККМПродажа,
		|	Док.ОперацияСДенежнымиСредствами КАК ОперацияСДенежнымиСредствами,
		|	Док.ВыручкаНаличными КАК ВыручкаНаличными,
		|	ВЫБОР
		|		КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
		|				И Док.ОтчетОРозничныхПродажах <> &ОтчетОРозничныхПродажах
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоВозвратПослеЗакрытияСмены,
		|	ВЫБОР
		|		КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|			ТОГДА 1
		|		ИНАЧЕ -1
		|	КОНЕЦ КАК КоэффициентВидаОплаты,
		|	Док.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
		|ПОМЕСТИТЬ втТаблицаЧеков
		|ИЗ
		|	Документ.ЧекККМ КАК Док
		|ГДЕ
		|	Док.КассаККМ = &КассаККМ
		|	И Док.Проведен
		|	И НЕ Док.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Аннулированный)
		|	И НЕ Док.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Отложенный)
		|	И Док.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходныйКассовыйОрдер.Ссылка КАК Ссылка,
		|	ПриходныйКассовыйОрдер.Контрагент КАК Контрагент,
		|	ПриходныйКассовыйОрдер.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные) КАК ВидОплаты,
		|	ПриходныйКассовыйОрдер.СуммаДокумента КАК СуммаПоступления,
		|	0 КАК СуммаВозврата
		|ПОМЕСТИТЬ втДокументыНаККМ
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
		|ГДЕ
		|	ПриходныйКассовыйОрдер.КассаККМ = &КассаККМ
		|	И ПриходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
		|	И ПриходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
		|	И ПриходныйКассовыйОрдер.Проведен
		|	И ПриходныйКассовыйОрдер.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасходныйКассовыйОрдер.Ссылка,
		|	РасходныйКассовыйОрдер.Контрагент,
		|	РасходныйКассовыйОрдер.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные),
		|	0,
		|	РасходныйКассовыйОрдер.СуммаДокумента
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
		|ГДЕ
		|	РасходныйКассовыйОрдер.КассаККМ = &КассаККМ
		|	И РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|	И РасходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
		|	И РасходныйКассовыйОрдер.Проведен
		|	И РасходныйКассовыйОрдер.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОплатаОтПокупателяПлатежнойКартой.Ссылка,
		|	ОплатаОтПокупателяПлатежнойКартой.Контрагент,
		|	ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация,
		|	ОплатаОтПокупателяПлатежнойКартой.ВидОплаты,
		|	ВЫБОР
		|		КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
		|			ТОГДА ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|			ТОГДА 0
		|		ИНАЧЕ ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
		|	КОНЕЦ
		|ИЗ
		|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
		|ГДЕ
		|	ОплатаОтПокупателяПлатежнойКартой.КассаККМ = &КассаККМ
		|	И ОплатаОтПокупателяПлатежнойКартой.ПробиватьЧекиПоКассеККМ
		|	И ОплатаОтПокупателяПлатежнойКартой.Проведен
		|	И ОплатаОтПокупателяПлатежнойКартой.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Док.Ссылка КАК Ссылка,
		|	Док.ВидОперации КАК ВидОперации,
		|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	Док.ЧекККМПродажа КАК ЧекККМПродажа,
		|	Док.ОперацияСДенежнымиСредствами КАК ОперацияСДенежнымиСредствами,
		|	Док.ВыручкаНаличными КАК ВыручкаНаличными,
		|	ВЫБОР
		|		КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
		|				И Док.ЧекККМПродажа.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоВозвратПослеЗакрытияСмены,
		|	ВЫБОР
		|		КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
		|			ТОГДА 1
		|		ИНАЧЕ -1
		|	КОНЕЦ КАК КоэффициентВидаОплаты,
		|	Док.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
		|ПОМЕСТИТЬ втТаблицаЧеков
		|ИЗ
		|	Документ.ЧекККМ КАК Док
		|ГДЕ
		|	Док.КассаККМ = &КассаККМ
		|	И (Док.Дата МЕЖДУ &НачалоКассовойСмены И &ОкончаниеКассовойСмены
		|			ИЛИ &ОкончаниеКассовойСмены = ДАТАВРЕМЯ(1, 1, 1))
		|	И Док.Проведен
		|	И НЕ Док.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
		|	И НЕ Док.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Аннулированный)
		|	И НЕ Док.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Отложенный)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходныйКассовыйОрдер.Ссылка КАК Ссылка,
		|	ПриходныйКассовыйОрдер.Контрагент КАК Контрагент,
		|	ПриходныйКассовыйОрдер.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные) КАК ВидОплаты,
		|	ПриходныйКассовыйОрдер.СуммаДокумента КАК СуммаПоступления,
		|	0 КАК СуммаВозврата
		|ПОМЕСТИТЬ втДокументыНаККМ
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
		|ГДЕ
		|	ПриходныйКассовыйОрдер.КассаККМ = &КассаККМ
		|	И ПриходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
		|	И ПриходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
		|	И ПриходныйКассовыйОрдер.Проведен
		|	И НЕ ПриходныйКассовыйОрдер.СменаЗакрыта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасходныйКассовыйОрдер.Ссылка,
		|	РасходныйКассовыйОрдер.Контрагент,
		|	РасходныйКассовыйОрдер.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные),
		|	0,
		|	РасходныйКассовыйОрдер.СуммаДокумента
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
		|ГДЕ
		|	РасходныйКассовыйОрдер.КассаККМ = &КассаККМ
		|	И РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|	И РасходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
		|	И РасходныйКассовыйОрдер.Проведен
		|	И НЕ РасходныйКассовыйОрдер.СменаЗакрыта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОплатаОтПокупателяПлатежнойКартой.Ссылка,
		|	ОплатаОтПокупателяПлатежнойКартой.Контрагент,
		|	ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация,
		|	ОплатаОтПокупателяПлатежнойКартой.ВидОплаты,
		|	ВЫБОР
		|		КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
		|			ТОГДА ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
		|			ТОГДА 0
		|		ИНАЧЕ ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
		|	КОНЕЦ
		|ИЗ
		|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
		|ГДЕ
		|	ОплатаОтПокупателяПлатежнойКартой.КассаККМ = &КассаККМ
		|	И ОплатаОтПокупателяПлатежнойКартой.ПробиватьЧекиПоКассеККМ
		|	И ОплатаОтПокупателяПлатежнойКартой.Проведен
		|	И НЕ ОплатаОтПокупателяПлатежнойКартой.СменаЗакрыта";
		
	КонецЕсли;	
	Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыОткрытияИЗакрытияСмены

Функция ТекстЗапросаТоварыОрганизации(СсылкаНаОтчет)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОтчет) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизаций.Характеристика КАК Характеристика,
		|	ТоварыОрганизаций.Склад КАК Склад,
		|	ТоварыОрганизаций.Организация КАК Организация,
		|	ТоварыОрганизаций.Поставщик КАК Поставщик,
		|	ТоварыОрганизаций.Договор КАК Договор,
		|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
		|	ТоварыОрганизаций.Количество КАК Количество,
		|	ТоварыОрганизаций.ВидДвижения КАК ВидДвижения,
		|	ТоварыОрганизаций.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ТоварыОрганизаций.Регистратор КАК Ссылка
		|ПОМЕСТИТЬ втТоварыОрганизации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|ГДЕ
		|	ТоварыОрганизаций.Регистратор В
		|			(ВЫБРАТЬ
		|				ТаблицаЧеков.Ссылка КАК Ссылка
		|			ИЗ
		|				втТаблицаЧеков КАК ТаблицаЧеков)
		|;
		|"
		
	Иначе
		
		ТекстЗапроса= 
		"ВЫБРАТЬ
		|	ТоварыОрганизации.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизации.Характеристика КАК Характеристика,
		|	ТоварыОрганизации.Поставщик КАК Поставщик,
		|	ТоварыОрганизации.Договор КАК Договор,
		|	ТоварыОрганизации.НомерГТД КАК НомерГТД,
		|	ТоварыОрганизации.Количество КАК Количество,
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтрокиДокумента,
		|	ТаблицаТоваров.Количество КАК КоличествоТоваров,
		|	ТоварыОрганизации.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ТоварыОрганизацииПромежуточная
		|ИЗ
		|	Документ.ЧекККМ.ТоварыОрганизации КАК ТоварыОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ТаблицаЧеков
		|		ПО (ТаблицаЧеков.Ссылка = ТоварыОрганизации.Ссылка)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТоваров
		|		ПО (ТаблицаТоваров.Ссылка = ТоварыОрганизации.Ссылка)
		|			И (ТаблицаТоваров.КлючСвязи = ТоварыОрганизации.КлючСвязи)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизацииПромежуточная.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацииПромежуточная.Характеристика КАК Характеристика,
		|	ТоварыОрганизацииПромежуточная.Поставщик КАК Поставщик,
		|	ТоварыОрганизацииПромежуточная.Договор КАК Договор,
		|	ТоварыОрганизацииПромежуточная.НомерГТД КАК НомерГТД,
		|	ТоварыОрганизацииПромежуточная.Количество КАК Количество,
		|	ТоварыОрганизацииПромежуточная.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ТоварыОрганизацииПромежуточная.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втТоварыОрганизации
		|ИЗ
		|	ТоварыОрганизацииПромежуточная КАК ТоварыОрганизацииПромежуточная
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыОрганизацииПромежуточная.Номенклатура,
		|	ТоварыОрганизацииПромежуточная.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка),
		|	ТоварыОрганизацииПромежуточная.КоличествоТоваров - СУММА(ТоварыОрганизацииПромежуточная.Количество),
		|	ТоварыОрганизацииПромежуточная.НомерСтрокиДокумента,
		|	ТоварыОрганизацииПромежуточная.Ссылка
		|ИЗ
		|	ТоварыОрганизацииПромежуточная КАК ТоварыОрганизацииПромежуточная
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизацииПромежуточная.Характеристика,
		|	ТоварыОрганизацииПромежуточная.Ссылка,
		|	ТоварыОрганизацииПромежуточная.Номенклатура,
		|	ТоварыОрганизацииПромежуточная.НомерСтрокиДокумента,
		|	ТоварыОрганизацииПромежуточная.КоличествоТоваров
		|
		|ИМЕЮЩИЕ
		|	ТоварыОрганизацииПромежуточная.КоличествоТоваров > СУММА(ТоварыОрганизацииПромежуточная.Количество)"
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПромежуточнаяТаблицаТоварыОрганизацииИмпорт()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	Док.ВидОперации КАК ВидОперации,
	|	Док.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	Док.ЭтоВозвратПослеЗакрытияСмены КАК ЭтоВозвратПослеЗакрытияСмены,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьСерийныеНомера, ЛОЖЬ) КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизации.Количество, 0) = 0
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ТаблицаТовары.Цена / ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|						ИЛИ ТаблицаТовары.Упаковка.Коэффициент = 0
	|					ТОГДА 1
	|				ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаТовары.Резервировать КАК Резервировать,
	|	ЕСТЬNULL(ТоварыОрганизации.Количество, ТаблицаТовары.Количество) КАК Количество,
	|	ЕСТЬNULL(ТоварыОрганизации.Договор, ТаблицаТовары.ДоговорКонтрагента) КАК Договор,
	|	ЕСТЬNULL(ТоварыОрганизации.НомерГТД, &ПустойНомерГТД) КАК НомерГТД,
	|	ЕСТЬNULL(ТоварыОрганизации.Поставщик, ЕСТЬNULL(ДоговорыКонтрагентов.Агент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))) КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизации.Количество, 0) = 0
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТоварыОрганизации.Количество
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизации.Количество, 0) = 0
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ &ПустаяУпаковка
	|	КОНЕЦ КАК Упаковка,
	|	ТаблицаТовары.СуммаНДС * ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизации.Количество, 0) = 0
	|				ИЛИ ТаблицаТовары.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТоварыОрганизации.Количество / ТаблицаТовары.Количество
	|	КОНЕЦ КАК СуммаНДС,
	|	ТаблицаТовары.Сумма * ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыОрганизации.Количество, 0) = 0
	|				ИЛИ ТаблицаТовары.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТоварыОрганизации.Количество / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки
	|ПОМЕСТИТЬ ТаблицаПромежуточная
	|ИЗ
	|	втТаблицаЧеков КАК Док
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|		ПО Док.Ссылка = ТаблицаТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТоварыОрганизации КАК ТоварыОрганизации
	|		ПО (ТоварыОрганизации.Ссылка = ТаблицаТовары.Ссылка)
	|			И (ТоварыОрганизации.НомерСтрокиДокумента = ТаблицаТовары.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ТаблицаТовары.Номенклатура = СпрНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ТаблицаТовары.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка)
	|ГДЕ
	|	НЕ Док.ОперацияСДенежнымиСредствами";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПромежуточнаяТаблица()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	Док.ВидОперации КАК ВидОперации,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СпрНоменклатура.ИспользоватьСерийныеНомера, ЛОЖЬ) КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаТовары.Резервировать КАК Резервировать,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор,
	|	&ПустойНомерГТД КАК НомерГТД,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Агент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Поставщик,
	|	Док.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	Док.ЭтоВозвратПослеЗакрытияСмены,
	|	ТаблицаТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки
	|ПОМЕСТИТЬ ТаблицаПромежуточная
	|ИЗ
	|	втТаблицаЧеков КАК Док
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|		ПО Док.Ссылка = ТаблицаТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ТаблицаТовары.Номенклатура = СпрНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ТаблицаТовары.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка)
	|ГДЕ
	|	НЕ Док.ОперацияСДенежнымиСредствами";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстОсновногоЗапроса()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	Док.Склад КАК Склад,
	|	ВЫРАЗИТЬ(Док.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	Док.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	Док.Характеристика КАК Характеристика,
	|	Док.Продавец КАК Продавец,
	|	ВЫРАЗИТЬ(Док.Договор КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	Док.НомерГТД КАК НомерГТД,
	|	Док.Поставщик КАК Поставщик,
	|	СУММА(ВЫБОР
	|			КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА Док.Количество
	|			ИНАЧЕ -Док.Количество
	|		КОНЕЦ) КАК Количество,
	|	Док.Цена КАК Цена,
	|	Док.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА Док.СуммаНДС
	|			ИНАЧЕ -Док.СуммаНДС
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА Док.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА Док.Сумма
	|			ИНАЧЕ -Док.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	Док.Упаковка КАК Упаковка,
	|	СУММА(ВЫБОР
	|			КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА Док.КоличествоУпаковок
	|			ИНАЧЕ -Док.КоличествоУпаковок
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА Док.ИспользоватьСерийныеНомера
	|			ТОГДА Док.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|	КОНЕЦ КАК СсылкаДляСерийныхСертификатов,
	|	ВЫБОР
	|		КОГДА Док.ИспользоватьСерийныеНомера
	|			ТОГДА Док.КлючСвязиСерийныхНомеров
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючСвязиСерийныхНомеров,
	|	Док.КодСтроки КАК КодСтроки,
	|	Док.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Док.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	Док.Резервировать КАК Резервировать,
	|	ВЫБОР
	|		КОГДА Док.ЭтоВозвратПослеЗакрытияСмены
	|			ТОГДА Док.АналитикаХозяйственнойОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПустаяСсылка)
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ТаблицаПромежуточная КАК Док
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.ДисконтнаяКарта,
	|	Док.Склад,
	|	Док.Номенклатура,
	|	Док.Характеристика,
	|	Док.Продавец,
	|	Док.Поставщик,
	|	Док.Договор,
	|	Док.НомерГТД,
	|	Док.СтавкаНДС,
	|	Док.Цена,
	|	Док.ИспользоватьСерийныеНомера,
	|	Док.Упаковка,
	|	ВЫБОР
	|		КОГДА Док.ИспользоватьСерийныеНомера
	|			ТОГДА Док.Ссылка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Док.ИспользоватьСерийныеНомера
	|			ТОГДА Док.КлючСвязиСерийныхНомеров
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	Док.КодСтроки,
	|	Док.ЗаказПокупателя,
	|	Док.Резервировать,
	|	ВЫБОР
	|		КОГДА Док.ЭтоВозвратПослеЗакрытияСмены
	|			ТОГДА Док.АналитикаХозяйственнойОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПустаяСсылка)
	|	КОНЕЦ,
	|	Док.ПроцентРучнойСкидки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА Док.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА Док.Количество
	|			ИНАЧЕ -Док.Количество
	|		КОНЕЦ) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.Поставщик КАК Поставщик,
	|	ТаблицаТовары.Договор КАК Договор,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаТовары.Резервировать КАК Резервировать,
	|	ТаблицаТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Договор.ПризнакАгента = ЗНАЧЕНИЕ(Перечисление.ПризнакиАгента.Комиссионер)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ(ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|				И ТаблицаТовары.Количество < 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ДисконтнаяКарта,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Поставщик,
	|	ТаблицаТовары.Договор,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.Продавец,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя,
	|	ТаблицаТовары.Резервировать,
	|	ТаблицаТовары.ПроцентРучнойСкидки,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Договор.ПризнакАгента = ЗНАЧЕНИЕ(Перечисление.ПризнакиАгента.Комиссионер)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.ДисконтнаяКарта,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Продавец,
	|	ТаблицаТовары.Поставщик,
	|	ТаблицаТовары.Договор,
	|	ТаблицаТовары.НомерГТД,
	|	СУММА(ТаблицаТовары.Количество),
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.СтавкаНДС,
	|	СУММА(ТаблицаТовары.СуммаНДС),
	|	СУММА(ТаблицаТовары.Сумма),
	|	ТаблицаТовары.Упаковка,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок),
	|	ТаблицаТовары.КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя,
	|	ТаблицаТовары.Резервировать,
	|	ТаблицаТовары.ПроцентРучнойСкидки,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Договор.ПризнакАгента = ЗНАЧЕНИЕ(Перечисление.ПризнакиАгента.Комиссионер)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКомиссионер
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаТовары.Количество < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ДисконтнаяКарта,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Поставщик,
	|	ТаблицаТовары.Договор,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.Продавец,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.КодСтроки,
	|	ТаблицаТовары.ЗаказПокупателя,
	|	ТаблицаТовары.Резервировать,
	|	ТаблицаТовары.ПроцентРучнойСкидки,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Договор.ПризнакАгента = ЗНАЧЕНИЕ(Перечисление.ПризнакиАгента.Комиссионер)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.СсылкаДляСерийныхСертификатов КАК СсылкаДляСерийныхСертификатов,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
	|ПОМЕСТИТЬ ТаблицаСерийныхСертификатов
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ИспользоватьСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.СерийныйНомер КАК СерийныйНомер,
	|	ВложенныйЗапрос.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ВложенныйЗапрос.Склад КАК Склад,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Продавец КАК Продавец,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Упаковка КАК Упаковка,
	|	ВложенныйЗапрос.ЭтоВозврат КАК ЭтоВозврат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЧекККМСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|		ТаблицаСерийныхСертификатов.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТаблицаСерийныхСертификатов.Склад КАК Склад,
	|		ТаблицаСерийныхСертификатов.Номенклатура КАК Номенклатура,
	|		ТаблицаСерийныхСертификатов.Характеристика КАК Характеристика,
	|		ТаблицаСерийныхСертификатов.Продавец КАК Продавец,
	|		ТаблицаСерийныхСертификатов.Цена КАК Цена,
	|		ТаблицаСерийныхСертификатов.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаСерийныхСертификатов.Упаковка КАК Упаковка,
	|		ВЫБОР
	|			КОГДА ЧекККМСерийныеНомера.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЭтоВозврат
	|	ИЗ
	|		ТаблицаСерийныхСертификатов КАК ТаблицаСерийныхСертификатов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СерийныеНомера КАК ЧекККМСерийныеНомера
	|			ПО ТаблицаСерийныхСертификатов.СсылкаДляСерийныхСертификатов = ЧекККМСерийныеНомера.Ссылка
	|				И ТаблицаСерийныхСертификатов.КлючСвязиСерийныхНомеров = ЧекККМСерийныеНомера.КлючСвязиСерийныхНомеров) КАК ВложенныйЗапрос";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоВозвратам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыБезКомплектов.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТоварыБезКомплектов.Склад КАК Склад,
	|	ТоварыБезКомплектов.Номенклатура КАК Номенклатура,
	|	ТоварыБезКомплектов.Характеристика КАК Характеристика,
	|	ТоварыБезКомплектов.Продавец КАК Продавец,
	|	ТоварыБезКомплектов.Количество КАК Количество,
	|	ТоварыБезКомплектов.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТоварыБезКомплектов.Цена КАК Цена,
	|	ТоварыБезКомплектов.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыБезКомплектов.СуммаНДС КАК СуммаНДС,
	|	ТоварыБезКомплектов.Сумма КАК Сумма,
	|	ТоварыБезКомплектов.Упаковка КАК Упаковка,
	|	ТоварыБезКомплектов.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	(ВЫБРАТЬ
	|		Док.Ссылка.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		Док.Склад КАК Склад,
	|		Док.Номенклатура КАК Номенклатура,
	|		Док.Характеристика КАК Характеристика,
	|		Док.Продавец КАК Продавец,
	|		СУММА(Док.Количество) КАК Количество,
	|		Док.Ссылка.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|		Док.Цена КАК Цена,
	|		Док.СтавкаНДС КАК СтавкаНДС,
	|		СУММА(Док.СуммаНДС) КАК СуммаНДС,
	|		СУММА(Док.Сумма) КАК Сумма,
	|		Док.Упаковка КАК Упаковка,
	|		СУММА(Док.КоличествоУпаковок) КАК КоличествоУпаковок
	|	ИЗ
	|		Документ.ЧекККМ.Товары КАК Док
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ОтборЧеков
	|			ПО (ОтборЧеков.Ссылка = Док.Ссылка)
	|	ГДЕ
	|		Док.Ссылка.ВидОперации = &ВидОперацииВозврат
	|		И НЕ Док.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|		И НЕ Док.Ссылка.ОперацияСДенежнымиСредствами
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Док.Ссылка.ДисконтнаяКарта,
	|		Док.Склад,
	|		Док.Номенклатура,
	|		Док.Характеристика,
	|		Док.Продавец,
	|		Док.Ссылка.АналитикаХозяйственнойОперации,
	|		Док.СтавкаНДС,
	|		Док.Цена,
	|		Док.Упаковка) КАК ТоварыБезКомплектов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплате()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЧекККМОплата.Ссылка,
	|	ЧекККМОплата.НомерСтроки,
	|	ЧекККМОплата.ВидОплаты,
	|	ЧекККМОплата.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ЧекККМОплата.ВидОплаты.БанкКредитор КАК БанкКредитор,
	|	ЧекККМОплата.ВидОплаты.ПроцентБанковскойКомиссии КАК ПроцентБанковскойКомиссии,
	|	ЧекККМОплата.ЭквайринговыйТерминал,
	|	ЧекККМОплата.ПроцентКомиссии,
	|	ЧекККМОплата.БонуснаяПрограммаЛояльности,
	|	ЧекККМОплата.Сумма,
	|	ЧекККМОплата.СуммаКомиссии,
	|	ЧекККМОплата.СуммаБонусовВСкидках,
	|	ЧекККМОплата.КоличествоБонусов,
	|	ЧекККМОплата.КоличествоБонусовВСкидках
	|ПОМЕСТИТЬ ТаблицаОплатНаличные
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|ГДЕ
	|	НЕ ЧекККМОплата.ВидОплаты.ТипОплаты = &ТипОплатыНаличные
	|	И ЧекККМОплата.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаЧеков.Ссылка
	|			ИЗ
	|				втТаблицаЧеков КАК ТаблицаЧеков)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОплат.ВидОплаты,
	|	ТаблицаОплат.ТипОплаты,
	|	ТаблицаОплат.ЭквайринговыйТерминал,
	|	ТаблицаОплат.ПроцентКомиссии,
	|	ТаблицаОплат.БонуснаяПрограммаЛояльности,
	|	ТаблицаЧеков.КоэффициентВидаОплаты * ТаблицаОплат.Сумма КАК Сумма,
	|	ТаблицаОплат.СуммаКомиссии КАК СуммаКомиссии,
	|	ТаблицаЧеков.КоэффициентВидаОплаты * ТаблицаОплат.СуммаБонусовВСкидках КАК СуммаБонусовВСкидках,
	|	ТаблицаЧеков.КоэффициентВидаОплаты * ТаблицаОплат.КоличествоБонусов КАК КоличествоБонусов,
	|	ТаблицаЧеков.КоэффициентВидаОплаты * ТаблицаОплат.КоличествоБонусовВСкидках КАК КоличествоБонусовВСкидках,
	|	ТаблицаОплат.БанкКредитор,
	|	ТаблицаОплат.ПроцентБанковскойКомиссии,
	|	ТаблицаЧеков.ДисконтнаяКарта,
	|	ВЫБОР
	|		КОГДА ТаблицаЧеков.КоэффициентВидаОплаты * ТаблицаОплат.Сумма < 0
	|				ИЛИ ТаблицаЧеков.КоэффициентВидаОплаты * ТаблицаОплат.СуммаБонусовВСкидках < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ПодготовительнаяТаблица
	|ИЗ
	|	ТаблицаОплатНаличные КАК ТаблицаОплат
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ТаблицаЧеков
	|		ПО ТаблицаОплат.Ссылка = ТаблицаЧеков.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодготовительнаяТаблица.ВидОплаты,
	|	ПодготовительнаяТаблица.ТипОплаты,
	|	ПодготовительнаяТаблица.ЭквайринговыйТерминал,
	|	ПодготовительнаяТаблица.ПроцентКомиссии,
	|	ПодготовительнаяТаблица.БонуснаяПрограммаЛояльности,
	|	СУММА(ПодготовительнаяТаблица.Сумма) КАК Сумма,
	|	СУММА(ПодготовительнаяТаблица.СуммаКомиссии) КАК СуммаКомиссии,
	|	СУММА(ПодготовительнаяТаблица.СуммаБонусовВСкидках) КАК СуммаБонусовВСкидках,
	|	СУММА(ПодготовительнаяТаблица.КоличествоБонусов) КАК КоличествоБонусов,
	|	СУММА(ПодготовительнаяТаблица.КоличествоБонусовВСкидках) КАК КоличествоБонусовВСкидках,
	|	ПодготовительнаяТаблица.БанкКредитор,
	|	ПодготовительнаяТаблица.ПроцентБанковскойКомиссии,
	|	ПодготовительнаяТаблица.ДисконтнаяКарта,
	|	ПодготовительнаяТаблица.ЭтоВозврат
	|ИЗ
	|	ПодготовительнаяТаблица КАК ПодготовительнаяТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодготовительнаяТаблица.БанкКредитор,
	|	ПодготовительнаяТаблица.ТипОплаты,
	|	ПодготовительнаяТаблица.ЭквайринговыйТерминал,
	|	ПодготовительнаяТаблица.БонуснаяПрограммаЛояльности,
	|	ПодготовительнаяТаблица.ВидОплаты,
	|	ПодготовительнаяТаблица.ПроцентКомиссии,
	|	ПодготовительнаяТаблица.ПроцентБанковскойКомиссии,
	|	ПодготовительнаяТаблица.ДисконтнаяКарта,
	|	ПодготовительнаяТаблица.ЭтоВозврат
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ПодготовительнаяТаблица.Сумма) <> 0
	|		ИЛИ СУММА(ПодготовительнаяТаблица.СуммаБонусовВСкидках) <> 0)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоПодарочнымСертификатам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЧекККМПогашениеПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ЧекККМПогашениеПодарочныхСертификатов.СерийныйНомер КАК СерийныйНомер,
	|	1 КАК Количество,
	|	ЧекККМПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата КАК СуммаПогашенияСертификата
	|ПОМЕСТИТЬ ТаблицаПогашения
	|ИЗ
	|	Документ.ЧекККМ.ПогашениеПодарочныхСертификатов КАК ЧекККМПогашениеПодарочныхСертификатов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ОтборЧеков
	|		ПО ЧекККМПогашениеПодарочныхСертификатов.Ссылка = ОтборЧеков.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМПогашениеПодарочныхСертификатов.Ссылка,
	|	ЧекККМПогашениеПодарочныхСертификатов.НомерСтроки,
	|	ЧекККМПогашениеПодарочныхСертификатов.ПодарочныйСертификат,
	|	ЧекККМПогашениеПодарочныхСертификатов.СерийныйНомер,
	|	ЧекККМПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПогашения.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТаблицаПогашения.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаПогашения.Количество КАК Количество,
	|	СУММА(ТаблицаПогашения.СуммаПогашенияСертификата) КАК СуммаПогашенияСертификата
	|ИЗ
	|	ТаблицаПогашения КАК ТаблицаПогашения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПогашения.ПодарочныйСертификат,
	|	ТаблицаПогашения.СерийныйНомер,
	|	ТаблицаПогашения.Количество";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоСериям()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЧекККМСерии.Серия,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМСерии.Количество
	|			ИНАЧЕ -ЧекККМСерии.Количество
	|		КОНЕЦ) КАК Количество,
	|	ЧекККМСерии.Номенклатура,
	|	ЧекККМСерии.Характеристика
	|ИЗ
	|	Документ.ЧекККМ.Серии КАК ЧекККМСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ТаблицаЧеков
	|		ПО ЧекККМСерии.Ссылка = ТаблицаЧеков.Ссылка
	|ГДЕ
	|	НЕ ТаблицаЧеков.ОперацияСДенежнымиСредствами
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМСерии.Серия,
	|	ЧекККМСерии.Номенклатура,
	|	ЧекККМСерии.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМСерии.Количество
	|			ИНАЧЕ -ЧекККМСерии.Количество
	|		КОНЕЦ) <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоБонусам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаЧеков.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	БонусныеБаллыКНачислению.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	БонусныеБаллыКНачислению.ДатаНачисления КАК ДатаНачисления,
	|	БонусныеБаллыКНачислению.ДатаСписания КАК ДатаСписания,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА -БонусныеБаллыКНачислению.КоличествоБонусныхБаллов
	|			ИНАЧЕ БонусныеБаллыКНачислению.КоличествоБонусныхБаллов
	|		КОНЕЦ) КАК КоличествоБонусныхБаллов,
	|	ВЫБОР
	|		КОГДА БонусныеБаллыКНачислению.ДатаСписания = &ПустаяДата
	|			ТОГДА &ПустаяДата
	|		ИНАЧЕ БонусныеБаллыКНачислению.ДатаНачисления
	|	КОНЕЦ КАК ДатаПервоначальногоНачисления
	|ИЗ
	|	Документ.ЧекККМ.БонусныеБаллыКНачислению КАК БонусныеБаллыКНачислению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ТаблицаЧеков
	|		ПО БонусныеБаллыКНачислению.Ссылка = ТаблицаЧеков.Ссылка
	|ГДЕ
	|	НЕ ТаблицаЧеков.ОперацияСДенежнымиСредствами
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЧеков.ДисконтнаяКарта,
	|	БонусныеБаллыКНачислению.БонуснаяПрограммаЛояльности,
	|	БонусныеБаллыКНачислению.ДатаНачисления,
	|	БонусныеБаллыКНачислению.ДатаСписания
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА -БонусныеБаллыКНачислению.КоличествоБонусныхБаллов
	|			ИНАЧЕ БонусныеБаллыКНачислению.КоличествоБонусныхБаллов
	|		КОНЕЦ) <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоАгентскимПлатежам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Оплата.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА -Оплата.Сумма
	|			ИНАЧЕ Оплата.Сумма
	|		КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК Оплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК ТаблицаЧеков
	|		ПО Оплата.Ссылка = ТаблицаЧеков.Ссылка
	|ГДЕ
	|	Оплата.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	И Оплата.ВидОплаты.ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплата.ДоговорКонтрагента
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА -Оплата.Сумма
	|			ИНАЧЕ Оплата.Сумма
	|		КОНЕЦ) <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСуммаОплатыНаличных()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЧекККМСНаличными.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ЧекККМСНаличными.ВидОперации = &Возврат
	|			ТОГДА -ЧекККМСНаличными.ВыручкаНаличными
	|		ИНАЧЕ ЧекККМСНаличными.ВыручкаНаличными
	|	КОНЕЦ КАК ВыручкаНаличными,
	|	ЧекККМСНаличными.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ТаблицаЧековСОплатойНаличными
	|ИЗ
	|	втТаблицаЧеков КАК ЧекККМСНаличными
	|ГДЕ
	|	ЧекККМСНаличными.ВыручкаНаличными <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМОплата.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ТаблицаЧековСОплатойНаличными.ВидОперации = &Возврат
	|			ТОГДА -ЧекККМОплата.Сумма
	|		ИНАЧЕ ЧекККМОплата.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаЧековСОплатойНаличными.Ссылка КАК Ссылка,
	|	ТаблицаЧековСОплатойНаличными.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ТаблицаПоАгентскимДоговорам
	|ИЗ
	|	ТаблицаЧековСОплатойНаличными КАК ТаблицаЧековСОплатойНаличными
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ПО ТаблицаЧековСОплатойНаличными.Ссылка = ЧекККМОплата.Ссылка
	|			И (ЧекККМОплата.ВидОплаты = ЗНАЧЕНИЕ(Справочник.ВидыОплатЧекаККМ.Наличные))
	|ГДЕ
	|	ЧекККМОплата.ДоговорКонтрагента <> &ПустойДоговор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЧековСОплатойНаличными.Ссылка КАК Ссылка,
	|	ТаблицаЧековСОплатойНаличными.ВыручкаНаличными КАК ВыручкаНаличными,
	|	ТаблицаЧековСОплатойНаличными.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ТаблицаСумм
	|ИЗ
	|	ТаблицаЧековСОплатойНаличными КАК ТаблицаЧековСОплатойНаличными
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПоАгентскимДоговорам.Ссылка,
	|	-ТаблицаПоАгентскимДоговорам.Сумма,
	|	ТаблицаПоАгентскимДоговорам.ВидОперации
	|ИЗ
	|	ТаблицаПоАгентскимДоговорам КАК ТаблицаПоАгентскимДоговорам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСумм.Ссылка КАК Ссылка,
	|	СУММА(ТаблицаСумм.ВыручкаНаличными) КАК ВыручкаНаличными,
	|	ТаблицаСумм.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ТаблицаСобственнойВыручки
	|ИЗ
	|	ТаблицаСумм КАК ТаблицаСумм
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСумм.Ссылка,
	|	ТаблицаСумм.ВидОперации
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаСумм.ВыручкаНаличными) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТаблицаСобственнойВыручки.ВыручкаНаличными) КАК НаличныеБезСдачи
	|ИЗ
	|	ТаблицаСобственнойВыручки КАК ТаблицаСобственнойВыручки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоАгентскимДоговорам.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ТаблицаПоАгентскимДоговорам.ВидОперации = &Возврат
	|			ТОГДА -ТаблицаПоАгентскимДоговорам.Сумма
	|		ИНАЧЕ ТаблицаПоАгентскимДоговорам.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаПоАгентскимДоговорам.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаПоВсейВыручке
	|ИЗ
	|	ТаблицаПоАгентскимДоговорам КАК ТаблицаПоАгентскимДоговорам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПустойДоговор,
	|	ВЫБОР
	|		КОГДА ТаблицаСумм.ВидОперации = &Возврат
	|			ТОГДА -ТаблицаСумм.ВыручкаНаличными
	|		ИНАЧЕ ТаблицаСумм.ВыручкаНаличными
	|	КОНЕЦ,
	|	ТаблицаСумм.Ссылка
	|ИЗ
	|	ТаблицаСумм КАК ТаблицаСумм
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоВсейВыручке.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СУММА(ТаблицаПоВсейВыручке.Сумма) КАК НаличныеБезСдачи,
	|	ТаблицаПоВсейВыручке.Ссылка КАК Ссылка
	|ИЗ
	|	ТаблицаПоВсейВыручке КАК ТаблицаПоВсейВыручке
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПоВсейВыручке.Ссылка,
	|	ТаблицаПоВсейВыручке.ДоговорКонтрагента
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаПоВсейВыручке.Сумма) <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоРасчетамСКлиентами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЧекККМОплата.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаЧековСНеСворачиваемымиРасчетами
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТаблицаЧеков КАК Док
	|		ПО (Док.Ссылка = ЧекККМОплата.Ссылка)
	|ГДЕ
	|	&ИспользоватьРасчетыСКлиентами
	|	И (ЧекККМОплата.Ссылка.ОперацияСДенежнымиСредствами
	|			ИЛИ ЧекККМОплата.ВидОплаты.ТипОплаты В (&МассивТиповОплатНеВлияющийНаРасчеты))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЧеков.Ссылка КАК Ссылка,
	|	ТаблицаЧеков.Ссылка.ДокументРасчета КАК ДокументРасчета,
	|	ТаблицаЧеков.Ссылка.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозврат,
	|	ВЫБОР
	|		КОГДА ТаблицаЧековСНеСворачиваемымиРасчетами.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РазвернутыйУчет,
	|	ТаблицаЧеков.ОперацияСДенежнымиСредствами КАК ОперацияСДенежнымиСредствами,
	|	ТаблицаЧеков.Ссылка.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ПромежуточнаяТаблицаЧеков
	|ИЗ
	|	втТаблицаЧеков КАК ТаблицаЧеков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЧековСНеСворачиваемымиРасчетами КАК ТаблицаЧековСНеСворачиваемымиРасчетами
	|		ПО ТаблицаЧеков.Ссылка = ТаблицаЧековСНеСворачиваемымиРасчетами.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНаличныеБезСдачи.НаличныеБезСдачи КАК НаличныеБезСдачи,
	|	ТаблицаНаличныеБезСдачи.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаНаличныеБезСдачи
	|ИЗ
	|	&ТаблицаНаличныеБезСдачи КАК ТаблицаНаличныеБезСдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМОплата.ВидОплаты КАК ВидОплаты,
	|	СУММА(ЧекККМОплата.Сумма) КАК Сумма,
	|	ПромежуточнаяТаблицаЧеков.Ссылка КАК Ссылка,
	|	ПромежуточнаяТаблицаЧеков.ДокументРасчета КАК ДокументРасчета,
	|	ПромежуточнаяТаблицаЧеков.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ПромежуточнаяТаблицаЧеков.ЭтоВозврат КАК ЭтоВозврат,
	|	ПромежуточнаяТаблицаЧеков.ОперацияСДенежнымиСредствами КАК ОперацияСДенежнымиСредствами,
	|	ПромежуточнаяТаблицаЧеков.РазвернутыйУчет КАК РазвернутыйУчет,
	|	ПромежуточнаяТаблицаЧеков.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ТаблицаОплатБезУчетаСдачи
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПромежуточнаяТаблицаЧеков КАК ПромежуточнаяТаблицаЧеков
	|		ПО ЧекККМОплата.Ссылка = ПромежуточнаяТаблицаЧеков.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПромежуточнаяТаблицаЧеков.ЗаказПокупателя,
	|	ПромежуточнаяТаблицаЧеков.ДокументРасчета,
	|	ПромежуточнаяТаблицаЧеков.ОперацияСДенежнымиСредствами,
	|	ЧекККМОплата.ВидОплаты,
	|	ПромежуточнаяТаблицаЧеков.РазвернутыйУчет,
	|	ПромежуточнаяТаблицаЧеков.Ссылка,
	|	ПромежуточнаяТаблицаЧеков.ЭтоВозврат,
	|	ПромежуточнаяТаблицаЧеков.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОплатБезУчетаСдачи.ВидОплаты КАК ВидОплаты,
	|	ТаблицаОплатБезУчетаСдачи.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаОплатБезУчетаСдачи.ВидОплаты = &ТипОплатыНаличные
	|			ТОГДА ЕСТЬNULL(ТаблицаНаличныеБезСдачи.НаличныеБезСдачи, ТаблицаОплатБезУчетаСдачи.Сумма)
	|		ИНАЧЕ ТаблицаОплатБезУчетаСдачи.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаОплатБезУчетаСдачи.Ссылка КАК Ссылка,
	|	ТаблицаОплатБезУчетаСдачи.ДокументРасчета КАК ДокументРасчета,
	|	ТаблицаОплатБезУчетаСдачи.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаОплатБезУчетаСдачи.ЭтоВозврат КАК ЭтоВозврат,
	|	ТаблицаОплатБезУчетаСдачи.ОперацияСДенежнымиСредствами КАК ОперацияСДенежнымиСредствами,
	|	ТаблицаОплатБезУчетаСдачи.РазвернутыйУчет КАК РазвернутыйУчет,
	|	ТаблицаОплатБезУчетаСдачи.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ТаблицаОплатРасчеты
	|ИЗ
	|	ТаблицаОплатБезУчетаСдачи КАК ТаблицаОплатБезУчетаСдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНаличныеБезСдачи КАК ТаблицаНаличныеБезСдачи
	|		ПО ТаблицаОплатБезУчетаСдачи.Ссылка = ТаблицаНаличныеБезСдачи.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаОплат.ТипОплаты = &ЗачетАванса
	|			ТОГДА ТаблицаОплат.ДокументРасчета
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОплат.ДокументРасчета) = ТИП(Документ.РегистрацияБезналичнойОплаты)
	|			ТОГДА ТаблицаОплат.ДокументРасчета
	|		КОГДА НЕ ТаблицаОплат.РазвернутыйУчет
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаОплат.Ссылка
	|	КОНЕЦ КАК ДокументРасчета,
	|	0 КАК Оплачено,
	|	ВЫБОР
	|		КОГДА ТаблицаОплат.ЭтоВозврат
	|			ТОГДА -ТаблицаОплат.Сумма
	|		ИНАЧЕ ТаблицаОплат.Сумма
	|	КОНЕЦ КАК Отгружено,
	|	ТаблицаОплат.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаОплат.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ТаблицаОплатДляСворачивания
	|ИЗ
	|	ТаблицаОплатРасчеты КАК ТаблицаОплат
	|ГДЕ
	|	НЕ ТаблицаОплат.ОперацияСДенежнымиСредствами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаОплат.РазвернутыйУчет
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаОплат.ДокументРасчета В (&МассивПустыхЗначенийДокументаРасчета)
	|							ИЛИ НЕ ТаблицаОплат.ОперацияСДенежнымиСредствами
	|						ТОГДА ТаблицаОплат.Ссылка
	|					ИНАЧЕ ТаблицаОплат.ДокументРасчета
	|				КОНЕЦ
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаОплат.ДокументРасчета) = ТИП(Документ.РегистрацияБезналичнойОплаты)
	|			ТОГДА ТаблицаОплат.ДокументРасчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаОплат.ЭтоВозврат
	|			ТОГДА -ТаблицаОплат.Сумма
	|		ИНАЧЕ ТаблицаОплат.Сумма
	|	КОНЕЦ,
	|	0,
	|	ТаблицаОплат.ЗаказПокупателя,
	|	ТаблицаОплат.Контрагент
	|ИЗ
	|	ТаблицаОплатРасчеты КАК ТаблицаОплат
	|ГДЕ
	|	НЕ ТаблицаОплат.ТипОплаты В (&МассивТиповОплатНеВлияющийНаРасчеты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОплатДляСворачивания.ДокументРасчета КАК ДокументРасчета,
	|	СУММА(ТаблицаОплатДляСворачивания.Оплачено) КАК Оплачено,
	|	СУММА(ТаблицаОплатДляСворачивания.Отгружено) КАК Отгружено,
	|	ТаблицаОплатДляСворачивания.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТаблицаОплатДляСворачивания.Контрагент КАК Контрагент
	|ИЗ
	|	ТаблицаОплатДляСворачивания КАК ТаблицаОплатДляСворачивания
	|ГДЕ
	|	НЕ(ТаблицаОплатДляСворачивания.Оплачено = 0
	|				И ТаблицаОплатДляСворачивания.Отгружено = 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОплатДляСворачивания.ЗаказПокупателя,
	|	ТаблицаОплатДляСворачивания.Контрагент,
	|	ТаблицаОплатДляСворачивания.ДокументРасчета";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоАкцизнымМаркам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.АкцизнаяМарка КАК АкцизнаяМарка,
	|	ВложенныйЗапрос.Справка2 КАК Справка2,
	|	СУММА(ВложенныйЗапрос.КоличествоАкцизов) КАК КоличествоАкцизов,
	|	СУММА(ВложенныйЗапрос.КоличествоАкцизов) < 0 КАК Возврат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЧекККМАкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка,
	|		ЧекККМАкцизныеМарки.Справка2 КАК Справка2,
	|		1 КАК КоличествоАкцизов
	|	ИЗ
	|		Документ.ЧекККМ.АкцизныеМарки КАК ЧекККМАкцизныеМарки
	|	ГДЕ
	|		ЧекККМАкцизныеМарки.Ссылка В
	|				(ВЫБРАТЬ
	|					ЧекиККМ.Ссылка
	|				ИЗ
	|					втТаблицаЧеков КАК ЧекиККМ)
	|		И ЧекККМАкцизныеМарки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЧекККМАкцизныеМарки.АкцизнаяМарка,
	|		ЧекККМАкцизныеМарки.Справка2,
	|		-1
	|	ИЗ
	|		Документ.ЧекККМ.АкцизныеМарки КАК ЧекККМАкцизныеМарки
	|	ГДЕ
	|		ЧекККМАкцизныеМарки.Ссылка В
	|				(ВЫБРАТЬ
	|					ЧекиККМ.Ссылка
	|				ИЗ
	|					втТаблицаЧеков КАК ЧекиККМ)
	|		И ЧекККМАкцизныеМарки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АкцизнаяМарка,
	|	ВложенныйЗапрос.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.КоличествоАкцизов) <> 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоПрочейВыручке()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыНаККМ.Контрагент КАК Контрагент,
	|	ДокументыНаККМ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДокументыНаККМ.ВидОплаты КАК ВидОплаты,
	|	СУММА(ДокументыНаККМ.СуммаПоступления) КАК СуммаПоступления,
	|	СУММА(ДокументыНаККМ.СуммаВозврата) КАК СуммаВозврата
	|ИЗ
	|	втДокументыНаККМ КАК ДокументыНаККМ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыНаККМ.Контрагент,
	|	ДокументыНаККМ.ВидОплаты,
	|	ДокументыНаККМ.ХозяйственнаяОперация";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Функция формирует текст запроса по серийным номерам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Склад КАК Склад,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ТабТоварыВСЕ
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Количество > 0
	|	И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров,
	|	-Товары.Количество,
	|	Товары.Цена,
	|	Товары.Склад,
	|	ИСТИНА
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Количество < 0
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество КАК Количество,
	|	ТабТовары.Цена КАК Цена,
	|	ТабТовары.Склад КАК Склад,
	|	ТабТовары.ЭтоВозврат КАК ЭтоВозврат
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	ТабТоварыВСЕ КАК ТабТовары
	|ГДЕ
	|	ТабТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Склад КАК Отправитель,
	|	ТабТовары.ЭтоВозврат КАК ЭтоВозврат
	|ПОМЕСТИТЬ СертификатыСНомерами
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	ТабТовары.Номенклатура.ИспользоватьСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.СерийныйНомер КАК СерийныйНомер,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Количество КАК Количество,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата КАК СуммаПогашенияСертификата,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.ПодарочныйСертификат.ЧастичноеПогашение КАК ЧастичноеПогашение,
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.ПодарочныйСертификат.ПроизвольныйНоминал КАК ПроизвольныйНоминал,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ПогашениеПодарочныхСертификатов
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов
	|ГДЕ
	|	ОтчетОРозничныхПродажахПогашениеПодарочныхСертификатов.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СертификатыСНомерами.Номенклатура,
	|	СертификатыСНомерами.СерийныйНомер,
	|	1,
	|	0,
	|	СертификатыСНомерами.Номенклатура.ЧастичноеПогашение,
	|	СертификатыСНомерами.Номенклатура.ПроизвольныйНоминал,
	|	ИСТИНА
	|ИЗ
	|	СертификатыСНомерами КАК СертификатыСНомерами
	|ГДЕ
	|	СертификатыСНомерами.ЭтоВозврат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодарочныйСертификат,
	|	СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПогашениеПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ПогашениеПодарочныхСертификатов.СерийныйНомер КАК СерийныйНомер,
	|	ПогашениеПодарочныхСертификатов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПогашениеПодарочныхСертификатов.ЭтоВозврат
	|			ТОГДА ЕСТЬNULL(ПодарочныеСертификатыОстатки.СуммаОстаток, 0)
	|		ИНАЧЕ ПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата
	|	КОНЕЦ КАК СуммаПогашенияСертификата,
	|	ПогашениеПодарочныхСертификатов.ЧастичноеПогашение КАК ЧастичноеПогашение,
	|	ПогашениеПодарочныхСертификатов.ПроизвольныйНоминал КАК ПроизвольныйНоминал,
	|	ЕСТЬNULL(ПодарочныеСертификатыОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ПогашениеПодарочныхСертификатов.ЭтоВозврат КАК ЭтоВозврат
	|ПОМЕСТИТЬ ПогашениеПодарочныхСертификатовОстаткиКорректировкаВозвратаГашение
	|ИЗ
	|	ПогашениеПодарочныхСертификатов КАК ПогашениеПодарочныхСертификатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПодарочныеСертификаты.Остатки(
	|				&Период,
	|				(ПодарочныйСертификат, НомерСертификата) В
	|					(ВЫБРАТЬ
	|						ПогашениеПодарочныхСертификатов.ПодарочныйСертификат,
	|						ПогашениеПодарочныхСертификатов.СерийныйНомер
	|					ИЗ
	|						ПогашениеПодарочныхСертификатов КАК ПогашениеПодарочныхСертификатов)) КАК ПодарочныеСертификатыОстатки
	|		ПО ПогашениеПодарочныхСертификатов.ПодарочныйСертификат = ПодарочныеСертификатыОстатки.ПодарочныйСертификат
	|			И ПогашениеПодарочныхСертификатов.СерийныйНомер = ПодарочныеСертификатыОстатки.НомерСертификата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПогашениеПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ПогашениеПодарочныхСертификатов.СерийныйНомер КАК СерийныйНомер,
	|	ПогашениеПодарочныхСертификатов.Количество КАК Количество,
	|	ПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата КАК СуммаПогашенияСертификата,
	|	ПогашениеПодарочныхСертификатов.ЧастичноеПогашение КАК ЧастичноеПогашение,
	|	ПогашениеПодарочныхСертификатов.ПроизвольныйНоминал КАК ПроизвольныйНоминал,
	|	ПогашениеПодарочныхСертификатов.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ПогашениеПодарочныхСертификатовОстатки
	|ИЗ
	|	ПогашениеПодарочныхСертификатовОстаткиКорректировкаВозвратаГашение КАК ПогашениеПодарочныхСертификатов
	|ГДЕ
	|	НЕ ПогашениеПодарочныхСертификатов.ЭтоВозврат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ПодарочныйСертификат,
	|	ВложенныйЗапрос.СерийныйНомер,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.СуммаПогашенияСертификата - ВложенныйЗапрос.КорректировкаВозвратаНаСуммуГашения,
	|	ВложенныйЗапрос.ЧастичноеПогашение,
	|	ВложенныйЗапрос.ПроизвольныйНоминал,
	|	ВложенныйЗапрос.СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПогашениеПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|		ПогашениеПодарочныхСертификатов.СерийныйНомер КАК СерийныйНомер,
	|		ПогашениеПодарочныхСертификатов.Количество КАК Количество,
	|		ПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата КАК СуммаПогашенияСертификата,
	|		ПогашениеПодарочныхСертификатов.ЧастичноеПогашение КАК ЧастичноеПогашение,
	|		ПогашениеПодарочныхСертификатов.ПроизвольныйНоминал КАК ПроизвольныйНоминал,
	|		ПогашениеПодарочныхСертификатов.СуммаОстаток КАК СуммаОстаток,
	|		СУММА(Гашение.СуммаПогашенияСертификата) КАК КорректировкаВозвратаНаСуммуГашения
	|	ИЗ
	|		ПогашениеПодарочныхСертификатовОстаткиКорректировкаВозвратаГашение КАК ПогашениеПодарочныхСертификатов
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПогашениеПодарочныхСертификатовОстаткиКорректировкаВозвратаГашение КАК Гашение
	|			ПО (ПогашениеПодарочныхСертификатов.ЭтоВозврат = ИСТИНА)
	|				И (Гашение.ЭтоВозврат = ЛОЖЬ)
	|				И ПогашениеПодарочныхСертификатов.ПодарочныйСертификат = Гашение.ПодарочныйСертификат
	|				И ПогашениеПодарочныхСертификатов.СерийныйНомер = Гашение.СерийныйНомер
	|	ГДЕ
	|		ПогашениеПодарочныхСертификатов.ЭтоВозврат
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПогашениеПодарочныхСертификатов.ПодарочныйСертификат,
	|		ПогашениеПодарочныхСертификатов.СерийныйНомер,
	|		ПогашениеПодарочныхСертификатов.Количество,
	|		ПогашениеПодарочныхСертификатов.СуммаПогашенияСертификата,
	|		ПогашениеПодарочныхСертификатов.ЧастичноеПогашение,
	|		ПогашениеПодарочныхСертификатов.ПроизвольныйНоминал,
	|		ПогашениеПодарочныхСертификатов.СуммаОстаток) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СертификатыСНомерами.СерийныйНомер КАК СерийныйНомер,
	|	СертификатыСНомерами.Отправитель КАК Отправитель,
	|	СертификатыСНомерами.Номенклатура КАК Номенклатура,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	1 КАК Количество,
	|	&Период КАК Период,
	|	NULL КАК Получатель
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	СертификатыСНомерами КАК СертификатыСНомерами
	|ГДЕ
	|	НЕ СертификатыСНомерами.ЭтоВозврат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ТабТовары.Склад,
	|	ТабТовары.Номенклатура,
	|	&АналитикаХозяйственнойОперации,
	|	ТабТовары.Количество,
	|	&Период,
	|	NULL
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|ГДЕ
	|	НЕ ТабТовары.Номенклатура.ИспользоватьСерийныеНомера
	|	И НЕ ТабТовары.ЭтоВозврат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПогашениеПодарочныхСертификатовОстатки.СерийныйНомер,
	|	NULL,
	|	ПогашениеПодарочныхСертификатовОстатки.ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПогашениеПодарочныхСертификатов),
	|	ПогашениеПодарочныхСертификатовОстатки.Количество,
	|	&Период,
	|	&СкладПродажи
	|ИЗ
	|	ПогашениеПодарочныхСертификатовОстатки КАК ПогашениеПодарочныхСертификатовОстатки
	|ГДЕ
	|	(ПогашениеПодарочныхСертификатовОстатки.СуммаПогашенияСертификата = ПогашениеПодарочныхСертификатовОстатки.СуммаОстаток
	|			ИЛИ НЕ ПогашениеПодарочныхСертификатовОстатки.ЧастичноеПогашение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	ТабТовары.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПогашениеПодарочныхСертификатов),
	|	ТабТовары.Количество,
	|	&Период,
	|	&СкладПродажи
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|ГДЕ
	|	НЕ ТабТовары.Номенклатура.ИспользоватьСерийныеНомера
	|	И ТабТовары.ЭтоВозврат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвижений.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаДвижений.Отправитель КАК Отправитель,
	|	ТаблицаДвижений.Номенклатура КАК Номенклатура,
	|	ТаблицаДвижений.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Организация КАК Организация,
	|	СУММА(ТаблицаДвижений.Количество) КАК Количество,
	|	ТаблицаДвижений.Период КАК Период,
	|	ТаблицаДвижений.Получатель КАК Получатель
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДвижений.СерийныйНомер,
	|	ТаблицаДвижений.Отправитель,
	|	ТаблицаДвижений.Номенклатура,
	|	ТаблицаДвижений.АналитикаХозяйственнойОперации,
	|	ТаблицаДвижений.Период,
	|	ТаблицаДвижений.Получатель";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по подарочным сертификатам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаПодарочныхСертификатов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК ПодарочныйСертификат,
	|	ТабСерийныеНомера.СерийныйНомер КАК НомерСертификата,
	|	ТабТовары.Номенклатура.Номинал КАК Номинал,
	|	ТабТовары.Цена КАК Цена,
	|	ТабТовары.Номенклатура.ЧастичноеПогашение КАК ЧастичноеПогашение,
	|	ТабТовары.Номенклатура.ПроизвольныйНоминал КАК ПроизвольныйНоминал,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.ЭтоВозврат КАК ЭтоВозврат
	|ПОМЕСТИТЬ ТаблицаСведенийОПодарочныхСертификатах
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	(ТабТовары.Номенклатура.ЧастичноеПогашение
	|			ИЛИ ТабТовары.Номенклатура.ПроизвольныйНоминал)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаСведенийОПодарочныхСертификатах.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТаблицаСведенийОПодарочныхСертификатах.НомерСертификата КАК НомерСертификата,
	|	ВЫБОР
	|		КОГДА ТаблицаСведенийОПодарочныхСертификатах.ПроизвольныйНоминал
	|			ТОГДА ЕСТЬNULL(ТаблицаСведенийОПодарочныхСертификатах.Цена, 0)
	|		ИНАЧЕ ТаблицаСведенийОПодарочныхСертификатах.Номинал
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ТаблицаДвиженийПодарочныхСертификатовБезВозвратов
	|ИЗ
	|	ТаблицаСведенийОПодарочныхСертификатах КАК ТаблицаСведенийОПодарочныхСертификатах
	|ГДЕ
	|	НЕ ТаблицаСведенийОПодарочныхСертификатах.ЭтоВозврат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ПогашениеПодарочныхСертификатовОстатки.ПодарочныйСертификат,
	|	ПогашениеПодарочныхСертификатовОстатки.СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ПогашениеПодарочныхСертификатовОстатки.ЧастичноеПогашение
	|			ТОГДА ПогашениеПодарочныхСертификатовОстатки.СуммаПогашенияСертификата
	|		КОГДА НЕ ПогашениеПодарочныхСертификатовОстатки.ЧастичноеПогашение
	|				И ТаблицаСведенийОПодарочныхСертификатах.Цена ЕСТЬ НЕ NULL 
	|			ТОГДА ТаблицаСведенийОПодарочныхСертификатах.Цена
	|		ИНАЧЕ ЕСТЬNULL(ПогашениеПодарочныхСертификатовОстатки.СуммаОстаток, 0)
	|	КОНЕЦ
	|ИЗ
	|	ПогашениеПодарочныхСертификатовОстатки КАК ПогашениеПодарочныхСертификатовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСведенийОПодарочныхСертификатах КАК ТаблицаСведенийОПодарочныхСертификатах
	|		ПО ПогашениеПодарочныхСертификатовОстатки.ПодарочныйСертификат = ТаблицаСведенийОПодарочныхСертификатах.ПодарочныйСертификат
	|			И ПогашениеПодарочныхСертификатовОстатки.СерийныйНомер = ТаблицаСведенийОПодарочныхСертификатах.НомерСертификата
	|			И (НЕ ПогашениеПодарочныхСертификатовОстатки.ЧастичноеПогашение)
	|ГДЕ
	|	(ПогашениеПодарочныхСертификатовОстатки.ЧастичноеПогашение
	|			ИЛИ ПогашениеПодарочныхСертификатовОстатки.ПроизвольныйНоминал)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаСведенийОПодарочныхСертификатах.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТаблицаСведенийОПодарочныхСертификатах.НомерСертификата КАК НомерСертификата,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.Сумма
	|			ИНАЧЕ -ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.Сумма
	|		КОНЕЦ) КАК Сумма
	|ПОМЕСТИТЬ ВТТаблицаДвиженийПодарочныхСертификатовВозвраты
	|ИЗ
	|	ТаблицаСведенийОПодарочныхСертификатах КАК ТаблицаСведенийОПодарочныхСертификатах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДвиженийПодарочныхСертификатовБезВозвратов КАК ТаблицаДвиженийПодарочныхСертификатовБезВозвратов
	|		ПО ТаблицаСведенийОПодарочныхСертификатах.ПодарочныйСертификат = ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.ПодарочныйСертификат
	|			И ТаблицаСведенийОПодарочныхСертификатах.НомерСертификата = ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.НомерСертификата
	|ГДЕ
	|	ТаблицаСведенийОПодарочныхСертификатах.ЭтоВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСведенийОПодарочныхСертификатах.ПодарочныйСертификат,
	|	ТаблицаСведенийОПодарочныхСертификатах.НомерСертификата
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.Сумма
	|			ИНАЧЕ -ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.Сумма
	|		КОНЕЦ) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвиженийПодарочныхСертификатов.Период КАК Период,
	|	ТаблицаДвиженийПодарочныхСертификатов.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДвиженийПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТаблицаДвиженийПодарочныхСертификатов.НомерСертификата КАК НомерСертификата,
	|	СУММА(ТаблицаДвиженийПодарочныхСертификатов.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.Период КАК Период,
	|		ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.ВидДвижения КАК ВидДвижения,
	|		ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|		ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.НомерСертификата КАК НомерСертификата,
	|		ТаблицаДвиженийПодарочныхСертификатовБезВозвратов.Сумма КАК Сумма
	|	ИЗ
	|		ТаблицаДвиженийПодарочныхСертификатовБезВозвратов КАК ТаблицаДвиженийПодарочныхСертификатовБезВозвратов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТТаблицаДвиженийПодарочныхСертификатовВозвраты.Период,
	|		ВТТаблицаДвиженийПодарочныхСертификатовВозвраты.ВидДвижения,
	|		ВТТаблицаДвиженийПодарочныхСертификатовВозвраты.ПодарочныйСертификат,
	|		ВТТаблицаДвиженийПодарочныхСертификатовВозвраты.НомерСертификата,
	|		ВТТаблицаДвиженийПодарочныхСертификатовВозвраты.Сумма
	|	ИЗ
	|		ВТТаблицаДвиженийПодарочныхСертификатовВозвраты КАК ВТТаблицаДвиженийПодарочныхСертификатовВозвраты) КАК ТаблицаДвиженийПодарочныхСертификатов
	|ГДЕ
	|	&ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДвиженийПодарочныхСертификатов.Период,
	|	ТаблицаДвиженийПодарочныхСертификатов.ВидДвижения,
	|	ТаблицаДвиженийПодарочныхСертификатов.ПодарочныйСертификат,
	|	ТаблицаДвиженийПодарочныхСертификатов.НомерСертификата";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по бонусам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаБонусы()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	&ПериодБонусов КАК Период,
	|	&Расход КАК ВидДвижения,
	|	Оплаты.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА Оплаты.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА Оплаты.ДисконтнаяКарта
	|		ИНАЧЕ Оплаты.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ КАК ДисконтнаяКарта,
	|	СУММА(Оплаты.КоличествоБонусовВСкидках) КАК Начислено,
	|	0 КАК КСписанию,
	|	&ПустаяДата КАК ДатаПервоначальногоНачисления
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК Оплаты
	|ГДЕ
	|	Оплаты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплаты.БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА Оплаты.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА Оплаты.ДисконтнаяКарта
	|		ИНАЧЕ Оплаты.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Оплаты.КоличествоБонусовВСкидках) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БонусныеБаллы.ДатаНачисления КАК Период,
	|	&Приход КАК ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	БонусныеБаллы.КоличествоБонусныхБаллов КАК Начислено,
	|	0 КАК КСписанию,
	|	&ПустаяДата КАК ДатаПервоначальногоНачисления
	|ПОМЕСТИТЬ БонусныеБаллы
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.БонусныеБаллыКНачислению КАК БонусныеБаллы
	|ГДЕ
	|	БонусныеБаллы.Ссылка = &Ссылка
	|	И БонусныеБаллы.ДатаНачисления <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БонусныеБаллы.ДатаСписания,
	|	&Приход,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.ДисконтнаяКарта,
	|	0,
	|	БонусныеБаллы.КоличествоБонусныхБаллов,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.БонусныеБаллыКНачислению КАК БонусныеБаллы
	|ГДЕ
	|	БонусныеБаллы.Ссылка = &Ссылка
	|	И БонусныеБаллы.ДатаСписания <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодБонусов,
	|	&Расход,
	|	Оплаты.БонуснаяПрограммаЛояльности,
	|	Оплаты.ДисконтнаяКарта,
	|	СУММА(Оплаты.КоличествоБонусовВСкидках),
	|	0,
	|	&ПустаяДата
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК Оплаты
	|ГДЕ
	|	Оплаты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплаты.БонуснаяПрограммаЛояльности,
	|	Оплаты.ДисконтнаяКарта
	|
	|ИМЕЮЩИЕ
	|	СУММА(Оплаты.КоличествоБонусовВСкидках) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БонусныеБаллы.Период КАК Период,
	|	БонусныеБаллы.ВидДвижения КАК ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА БонусныеБаллы.ДисконтнаяКарта
	|		ИНАЧЕ БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ КАК ДисконтнаяКарта,
	|	СУММА(БонусныеБаллы.Начислено) КАК Начислено,
	|	СУММА(БонусныеБаллы.КСписанию) КАК КСписанию,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления КАК ДатаПервоначальногоНачисления
	|ИЗ
	|	БонусныеБаллы КАК БонусныеБаллы
	|
	|СГРУППИРОВАТЬ ПО
	|	БонусныеБаллы.Период,
	|	БонусныеБаллы.ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА БонусныеБаллы.ДисконтнаяКарта
	|		ИНАЧЕ БонусныеБаллы.ДисконтнаяКарта.КартаДляНакоплений
	|	КОНЕЦ,
	|	БонусныеБаллы.ДатаПервоначальногоНачисления
	|
	|ИМЕЮЩИЕ
	|	(СУММА(БонусныеБаллы.Начислено) <> 0
	|		ИЛИ СУММА(БонусныеБаллы.КСписанию) <> 0)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по расчетам с клиентами.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаТаблицаРасчетыСКлиентами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Магазин КАК Магазин,
	|	&Организация КАК Организация,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета = НЕОПРЕДЕЛЕНО
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|					ТОГДА ВЫБОР
	|							КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета.ЧекККМПродажа = ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|								ТОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета
	|							ИНАЧЕ ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета.ЧекККМПродажа
	|						КОНЕЦ
	|				ИНАЧЕ ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета
	|			КОНЕЦ
	|	КОНЕЦ КАК ДокументРасчета,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Отгружено КАК Сумма
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.РасчетыСКлиентами КАК ОтчетОРозничныхПродажахРасчетыСКлиентами
	|ГДЕ
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахРасчетыСКлиентами.Отгружено <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Ссылка,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Магазин,
	|	&Организация,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Контрагент,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета = НЕОПРЕДЕЛЕНО
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|					ТОГДА ВЫБОР
	|							КОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета.ЧекККМПродажа = ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|								ТОГДА ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета
	|							ИНАЧЕ ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета.ЧекККМПродажа
	|						КОНЕЦ
	|				ИНАЧЕ ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.ЗаказПокупателя,
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Оплачено
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.РасчетыСКлиентами КАК ОтчетОРозничныхПродажахРасчетыСКлиентами
	|ГДЕ
	|	ОтчетОРозничныхПродажахРасчетыСКлиентами.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахРасчетыСКлиентами.Оплачено <> 0
	|	И НЕ ТИПЗНАЧЕНИЯ(ОтчетОРозничныхПродажахРасчетыСКлиентами.ДокументРасчета) = ТИП(Документ.РегистрацияБезналичнойОплаты)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует текст запроса по акцизным маркам.
// Возвращаемое значение: ТекстЗапроса - Строка.
Функция ТекстЗапросаАкцизныеМарки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЧекККМТовары.Ссылка КАК Ссылка,
	|	ЧекККМТовары.КлючСвязи КАК КлючСвязи,
	|	ЧекККМТовары.Номенклатура КАК Номенклатура,
	|	ЧекККМТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаТоварыЧекККМ
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	|ГДЕ
	|	ЧекККМТовары.Ссылка.ОтчетОРозничныхПродажах = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАкцизныеМаркиЧекККМ.Ссылка КАК Ссылка,
	|	ТаблицаАкцизныеМаркиЧекККМ.КлючСвязи КАК КлючСвязи,
	|	ТаблицаАкцизныеМаркиЧекККМ.АкцизнаяМарка КАК АкцизнаяМарка,
	|	ТаблицаАкцизныеМаркиЧекККМ.Справка2 КАК Справка2,
	|	ТаблицаАкцизныеМаркиЧекККМ.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ ТаблицаАкцизныеМаркиЧекККМ
	|ИЗ
	|	Документ.ЧекККМ.АкцизныеМарки КАК ТаблицаАкцизныеМаркиЧекККМ
	|ГДЕ
	|	ТаблицаАкцизныеМаркиЧекККМ.Ссылка.ОтчетОРозничныхПродажах = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	КлючСвязи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК Количество,
	|	АкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка,
	|	АкцизныеМарки.Справка2 КАК Справка2,
	|	АкцизныеМарки.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ ТаблицаВсеАкцизныеМарки
	|ИЗ
	|	ТаблицаТоварыЧекККМ КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаАкцизныеМаркиЧекККМ КАК АкцизныеМарки
	|		ПО Товары.Ссылка = АкцизныеМарки.Ссылка
	|			И Товары.КлючСвязи = АкцизныеМарки.КлючСвязи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	НЕ АкцизныеМарки.АкцизнаяМарка = ЗНАЧЕНИЕ(Справочник.ШтрихкодыУпаковокТоваров.ПустаяСсылка)
	|	И СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И НЕ АкцизныеМарки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	АкцизныеМарки.АкцизнаяМарка,
	|	АкцизныеМарки.Справка2,
	|	АкцизныеМарки.ШтрихкодУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТаблицаТовары.АкцизнаяМарка КАК АкцизнаяМарка,
	|	ТаблицаТовары.Справка2 КАК Справка2,
	|	ТаблицаТовары.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ПОМЕСТИТЬ ТаблицаАлкоголь
	|ИЗ
	|	ТаблицаВсеАкцизныеМарки КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.АкцизнаяМарка,
	|	ТаблицаТовары.Справка2,
	|	ТаблицаТовары.ШтрихкодУпаковки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАлкоголь.ВидДвижения КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ТаблицаАлкоголь.Справка2 КАК Справка2,
	|	ЕСТЬNULL(Справки2ЕГАИС.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАлкоголь.АкцизнаяМарка) КАК Количество,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаАлкоголь.АкцизнаяМарка) КАК СвободныйОстаток
	|ИЗ
	|	ТаблицаАлкоголь КАК ТаблицаАлкоголь
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО ТаблицаАлкоголь.Справка2 = Справки2ЕГАИС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАлкоголь.ВидДвижения,
	|	ТаблицаАлкоголь.Справка2,
	|	Справки2ЕГАИС.АлкогольнаяПродукция";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьРазделитьЗапросов()

	СтрокаРазделителя = 
	"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат СтрокаРазделителя

КонецФункции // ПолучитьРазделитьЗапросов()

///////////////////////////////////////////////////////////////////////////////
// Печать

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьОтчетаОПродажахККМ(МассивОбъектов, ОбъектыПечати, СРасшифровкой = Ложь)
	
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Возврат товаров от покупателя'");

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОРозничныхПродажах_КМ6";
	
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтчетОРозничныхПродажах.Номер КАК Номер,
	|	ОтчетОРозничныхПродажах.Дата КАК ДатаДокумента,
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(ОтчетОРозничныхПродажах.Магазин) КАК ПредставлениеМагазина,
	|	ОтчетОРозничныхПродажах.КассаККМ КАК КассаККМ,
	|	ОтчетОРозничныхПродажах.КассаККМ.СерийныйНомер КАК СерийныйНомерККМ,
	|	ОтчетОРозничныхПродажах.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомерККМ,
	|	ОтчетОРозничныхПродажах.КассаККМ.Представление КАК ККМПредставление,
	|	ОтчетОРозничныхПродажах.Ответственный КАК Ответственный,
	|	ОтчетОРозничныхПродажах.СуммаДокумента КАК Итого,
	|	ОтчетОРозничныхПродажах.СуммаДокумента + ОтчетОРозничныхПродажах.СуммаВозвратов КАК ИтогоПоСчетчику,
	|	ОтчетОРозничныхПродажах.СуммаВозвратов КАК ИтогоВозврат,
	|	ОтчетОРозничныхПродажах.СуммаОплатыНаличных КАК СуммаОплатыНаличных,
	|	ОтчетОРозничныхПродажах.ОплатаПодарочнымиСертификатами КАК ОплатаПодарочнымиСертификатами,
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка,
	|	ОтчетОРозничныхПродажах.КассаККМ.ПодключаемоеОборудование.Наименование КАК ПредставлениеККМ,
	|	ОтчетОРозничныхПродажах.Ответственный.ФизическоеЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ОтчетыОПродажах
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
	|	И ОтчетОРозничныхПродажах.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетыОПродажах.Номер КАК Номер,
	|	ОтчетыОПродажах.ДатаДокумента КАК ДатаДокумента,
	|	ОтчетыОПродажах.Организация КАК Организация,
	|	ОтчетыОПродажах.ПредставлениеМагазина КАК ПредставлениеМагазина,
	|	ОтчетыОПродажах.КассаККМ КАК КассаККМ,
	|	ОтчетыОПродажах.СерийныйНомерККМ КАК СерийныйНомерККМ,
	|	ОтчетыОПродажах.РегистрационныйНомерККМ КАК РегистрационныйНомерККМ,
	|	ОтчетыОПродажах.ККМПредставление КАК ККМПредставление,
	|	ОтчетыОПродажах.Ответственный КАК Ответственный,
	|	ОтчетыОПродажах.Итого КАК Итого,
	|	ОтчетыОПродажах.ИтогоПоСчетчику КАК ИтогоПоСчетчику,
	|	ОтчетыОПродажах.ИтогоВозврат КАК ИтогоВозврат,
	|	ОтчетыОПродажах.СуммаОплатыНаличных КАК СуммаОплатыНаличных,
	|	ОтчетыОПродажах.ОплатаПодарочнымиСертификатами КАК ОплатаПодарочнымиСертификатами,
	|	ОтчетыОПродажах.Ссылка КАК Ссылка,
	|	ОтчетыОПродажах.ПредставлениеККМ КАК ПредставлениеККМ,
	|	ОтчетыОПродажах.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	ОтчетыОПродажах КАК ОтчетыОПродажах";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВидОплатыНаличные", Справочники.ВидыОплатЧекаККМ.Наличные);
	Запрос.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_КМ6");
	
	ВыборкаПоДокументам = Результаты[1].Выбрать();
	
	Если СРасшифровкой Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРозничныхПродажах,
		|	""Собственные наличные средства"" КАК ВидОплаты,
		|	&ТипОплатыНаличные КАК ТипОплаты,
		|	ОтчетОРозничныхПродажах.СуммаОплатыНаличных КАК СуммаПродаж
		|ПОМЕСТИТЬ ТаблицаВЗапросе
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|ГДЕ
		|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОбъектов)
		|	И ОтчетОРозничныхПродажах.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетОРозничныхПродажахОплатаНаличнымиАгентскихПлатежей.Ссылка,
		|	ОтчетОРозничныхПродажахОплатаНаличнымиАгентскихПлатежей.ДоговорКонтрагента,
		|	&ТипОплатыНаличные,
		|	ОтчетОРозничныхПродажахОплатаНаличнымиАгентскихПлатежей.Сумма
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах.ОплатаНаличнымиАгентскихПлатежей КАК ОтчетОРозничныхПродажахОплатаНаличнымиАгентскихПлатежей
		|ГДЕ
		|	ОтчетОРозничныхПродажахОплатаНаличнымиАгентскихПлатежей.Ссылка В(&МассивОбъектов)
		|	И ОтчетОРозничныхПродажахОплатаНаличнымиАгентскихПлатежей.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка,
		|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ВидОплаты,
		|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.ВидОплаты.ТипОплаты,
		|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОтчетОРозничныхПродажахОплатаПлатежнымиКартами
		|ГДЕ
		|	ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка В(&МассивОбъектов)
		|	И ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Ссылка,
		|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.ВидОплаты,
		|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.ВидОплаты.ТипОплаты,
		|	ОтчетОРозничныхПродажахОплатаБанковскимиКредитами.Сумма
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами КАК ОтчетОРозничныхПродажахОплатаБанковскимиКредитами
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетОРозничныхПродажахПрочаяВыручка.Ссылка,
		|	ВЫБОР
		|		КОГДА ОтчетОРозничныхПродажахПрочаяВыручка.ВидОплаты = &ВидОплатыНаличные
		|			ТОГДА ""Собственные наличные средства""
		|		ИНАЧЕ ОтчетОРозничныхПродажахПрочаяВыручка.ВидОплаты
		|	КОНЕЦ,
		|	ОтчетОРозничныхПродажахПрочаяВыручка.ВидОплаты.ТипОплаты,
		|	ОтчетОРозничныхПродажахПрочаяВыручка.СуммаПоступления - ОтчетОРозничныхПродажахПрочаяВыручка.СуммаВозврата
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах.ПрочаяВыручка КАК ОтчетОРозничныхПродажахПрочаяВыручка
		|ГДЕ
		|	ОтчетОРозничныхПродажахПрочаяВыручка.Ссылка В(&МассивОбъектов)
		|	И ОтчетОРозничныхПродажахПрочаяВыручка.Ссылка.Проведен
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаВЗапросе.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах,
		|	ТаблицаВЗапросе.ВидОплаты КАК ВидОплаты,
		|	ТаблицаВЗапросе.ТипОплаты КАК ТипОплаты,
		|	ТаблицаВЗапросе.СуммаПродаж КАК СуммаПродаж
		|ИЗ
		|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
		|ИТОГИ
		|	СУММА(СуммаПродаж)
		|ПО
		|	ОтчетОРозничныхПродажах,
		|	ТипОплаты,
		|	ВидОплаты";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		Запрос.УстановитьПараметр("ВидОплатыНаличные", Справочники.ВидыОплатЧекаККМ.Наличные);
		Запрос.УстановитьПараметр("ТипОплатыНаличные", Перечисления.ТипыОплатЧекаККМ.Наличные);
		
		Результаты = Запрос.ВыполнитьПакет();
		ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли; 
	
	ПервыйДокумент = Истина;
	
	ОбластьЗаголовок   = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока      = Макет.ПолучитьОбласть("СтрокаТаблицыСекция");
	ОбластьИтогТаблицы = Макет.ПолучитьОбласть("ИтогТаблицы");
	ОбластьПодвал      = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьШапкаОплаты            	 = Макет.ПолучитьОбласть("ШапкаОплаты");
	ОбластьСтрокаПодытогПоТипамОплат = Макет.ПолучитьОбласть("СтрокаПодытогПоТипамОплат");
	ОбластьСтрокаТаблицыВидОплаты    = Макет.ПолучитьОбласть("СтрокаТаблицыВидОплаты");
	
	ОбластьИтогОплаты    = Макет.ПолучитьОбласть("ИтогОплаты");
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны");
		ОбластьЗаголовок.Параметры.Дата                     = ВыборкаПоДокументам.ДатаДокумента;
		ОбластьЗаголовок.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьЗаголовок.Параметры.ОрганизацияИНН           = СведенияОбОрганизации.ИНН;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Ложь, Истина);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		ТабличныйДокумент.Вывести(ОбластьШапка);

		ОбластьСтрока.Параметры.ВыручкаПоСчетчику = ВыборкаПоДокументам.ИтогоПоСчетчику;
		ОбластьСтрока.Параметры.СуммаВозвратов    = ВыборкаПоДокументам.ИтогоВозврат;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
		ВыручкаВсего      = ВыборкаПоДокументам.Итого;
		ОбластьИтогТаблицы.Параметры.ВыручкаПоСчетчику = ВыборкаПоДокументам.ИтогоПоСчетчику;
		ОбластьИтогТаблицы.Параметры.СуммаВозвратов    = ВыборкаПоДокументам.ИтогоВозврат;
		ТабличныйДокумент.Вывести(ОбластьИтогТаблицы);
		
		// Выводит информацию по дисконтным картам.
		Если СРасшифровкой Тогда
			Если ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("ОтчетОРозничныхПродажах",ВыборкаПоДокументам.Ссылка)) Тогда
				ТабличныйДокумент.Вывести(ОбластьШапкаОплаты);
				
				ВыборкаТипОплат = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаТипОплат.Следующий() Цикл
					Если ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Наличные Тогда
						Заголовок = НСтр("ru = 'Итого наличными'");
					ИначеЕсли ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта Тогда
						Заголовок = НСтр("ru = 'Итого платежной картой'");
					ИначеЕсли ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.БанковскийКредит Тогда
						Заголовок = НСтр("ru = 'Итого банковским кредитом'");
					ИначеЕсли ВыборкаТипОплат.ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПодарочныйСертификат Тогда
						Заголовок = НСтр("ru = 'Итого по погашению подарочных сертификатов'");
					Иначе
						Заголовок = НСтр("ru = 'Итого прочее'");
					КонецЕсли;
					
					ОбластьСтрокаПодытогПоТипамОплат.Параметры.ПодытогПоТипамОплат = Заголовок;
					ОбластьСтрокаПодытогПоТипамОплат.Параметры.СуммаВыручки        = ВыборкаТипОплат.СуммаПродаж;
					
					ВыборкаВидОплат = ВыборкаТипОплат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаВидОплат.Следующий() Цикл
						ОбластьСтрокаТаблицыВидОплаты.Параметры.ВидОплаты      = ВыборкаВидОплат.ВидОплаты;
						ОбластьСтрокаТаблицыВидОплаты.Параметры.СуммаВыручки   = ВыборкаВидОплат.СуммаПродаж;
						
						ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыВидОплаты);
					КонецЦикла;
					ТабличныйДокумент.Вывести(ОбластьСтрокаПодытогПоТипамОплат);
				КонецЦикла;
				ОбластьИтогОплаты.Параметры.СуммаВыручки = ВыборкаПоТабличнымЧастям.СуммаПродаж;
				ТабличныйДокумент.Вывести(ОбластьИтогОплаты);
			КонецЕсли;
		КонецЕсли; 
		
		Руководители            = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		ФИОТекущегоПользователя = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ВыборкаПоДокументам.ФизЛицо, ВыборкаПоДокументам.ДатаДокумента);
		Руководитель            = Руководители.Руководитель;
		СтаршийКассир           = Руководители.Кассир;
		ДолжностьРуководителя   = Руководители.РуководительДолжность;
		
		ОбластьПодвал.Параметры.ФИОКассираОрганизации    = СтаршийКассир;
		ОбластьПодвал.Параметры.ФИОРуководителя          = Руководитель;
		ОбластьПодвал.Параметры.ФИОКассираОперациониста  = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено, ФИОТекущегоПользователя.Фамилия, ФИОТекущегоПользователя.Имя, ФИОТекущегоПользователя.Отчество);
		Если НЕ ВыручкаВсего = 0 Тогда
			ОбластьПодвал.Параметры.СуммаПрописью = Формат(ВыручкаВсего,"ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧРГ=' '; ЧГ=3,0" ) + " (" + ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ВыручкаВсего) + ")";
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Отчет о розничных продажах'");
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОРозничныхПродажах_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Поставщик,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПредставлениеПоставщика,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.УчитыватьНДС,
	|	Документ.ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ПредварительныеДанные
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПредварительныеДанные.НомерСтроки КАК НомерСтроки,
	|	ПредварительныеДанные.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ПредварительныеДанные.КолонкаКодов," , "") + "
	|	ПредварительныеДанные.Товар КАК Товар,
	|	ПредварительныеДанные.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ПредварительныеДанные.ХарактеристикаПредставление КАК ХарактеристикаПредставление,
	|	ПредварительныеДанные.ПредставлениеБазовойЕдиницыИзмерения КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ПредварительныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПредварительныеДанные.Количество КАК Количество,
	|	ПредварительныеДанные.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ПредварительныеДанные.Цена КАК Цена,
	|	ПредварительныеДанные.Сумма КАК Сумма,
	|	ПредварительныеДанные.Ссылка КАК Ссылка,
	|	ПредварительныеДанные.СуммаНДС КАК СуммаНДС,
	|	ПредварительныеДанные.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ПредварительныеДанные.Количество <> ПредварительныеДанные.КоличествоУпаковок
	|			ТОГДА ПредварительныеДанные.КоличествоУпаковок * ПредварительныеДанные.Цена
	|		ИНАЧЕ ПредварительныеДанные.Количество * ПредварительныеДанные.Цена
	|	КОНЕЦ КАК СуммаБезСкидки,
	|	ВЫБОР
	|		КОГДА ПредварительныеДанные.Количество <> ПредварительныеДанные.КоличествоУпаковок
	|			ТОГДА ПредварительныеДанные.Цена * ПредварительныеДанные.КоличествоУпаковок - ПредварительныеДанные.Сумма
	|		ИНАЧЕ ПредварительныеДанные.Цена * ПредварительныеДанные.Количество - ПредварительныеДанные.Сумма
	|	КОНЕЦ КАК Скидка
	|ИЗ
	|	ПредварительныеДанные КАК ПредварительныеДанные
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ПредварительныеДанные.НомерСтроки,
	|	ПредварительныеДанные.Ссылка
	|ИТОГИ ПО
	|	Ссылка");	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетОРозничныхПродажах.ПФ_MXL_Накладная");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаНомера         = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов          = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных         = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьШапкаСкидок         = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьШапкаСуммы          = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
		                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьСтрокаНомера         = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов          = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных         = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСтрокаСкидок         = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСтрокаСуммы          = Макет.ПолучитьОбласть("Строка|Сумма");
	
	ОбластьИтогоНДСНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьИтогоНДСКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьИтогоНДСДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьИтогоНДССкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
	ОбластьИтогоНДССуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	// Вывести Итого.
	ОбластьИтогоНомера         = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов          = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных         = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьИтогоСкидок         = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьИтогоСуммы          = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Шапка
		
		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		Если ВыводитьКоды Тогда
			ОбластьШапкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСкидок);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);
		
		
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		
		// СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);
				
			КонецЕсли;

			Если ВыборкаПоСтрокамТЧ.Количество <> ВыборкаПоСтрокамТЧ.КоличествоУпаковок Тогда
				//Нужно заполнить данные по проданным упаковкам без пересчета в меньшую единицу 
				ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ОбластьСтрокаДанных.Параметры.Количество = ВыборкаПоСтрокамТЧ.КоличествоУпаковок;
			Иначе
				ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			КонецЕсли;
			
			ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);
			
			ОбластьСтрокаСкидок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидок);

			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		ОбластьИтогоСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
		ОбластьИтогоСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСкидок);
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);
		
		
		// Вывести ИтогоНДС
		ТабличныйДокумент.Вывести(ОбластьИтогоНДСНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДСКодов);
		КонецЕсли;
		
		ОбластьИтогоНДСДанных.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС:'"), НСтр("ru = 'Сумма НДС:'"));
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСДанных);
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССкидок);
		
		Если НЕ ВыборкаПоДокументам.УчитыватьНДС Тогда
			СуммаНДССтрока = НСтр("ru = 'Без НДС'");
		Иначе
			СуммаНДССтрока = Строка(СуммаНДС);
		КонецЕсли;
		
		ОбластьИтогоНДССуммы.Параметры.ВсегоНДС = СуммаНДССтрока;
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССуммы);
		
		
		// Вывести Сумму прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		// ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ПечатьОписиНоменклатуры(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Организация КАК Организация,
	|	ТаблицаДокументов.КассаККМ,
	|	ТаблицаДокументов.Магазин,
	|	ТаблицаДокументов.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтруктураПечати = Новый Структура;
	СтруктураПечати.Вставить("ИмяРеквизита1", "Организация");
	СтруктураПечати.Вставить("ИмяРеквизита2", "Магазин");
	СтруктураПечати.Вставить("ИмяРеквизита3", "Касса ККМ");
	СтруктураПечати.Вставить("КоличествоРеквизитов", 3);
	СтруктураПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	СтруктураПечати.Вставить("КолонкаКодов", КолонкаКодов);
	
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПечати.Вставить("Документ", Выборка.Ссылка);
		СтруктураПечати.Вставить("Реквизит1", Выборка.Организация);
		СтруктураПечати.Вставить("Реквизит2", Выборка.Магазин);
		СтруктураПечати.Вставить("Реквизит3", Выборка.КассаККМ);
		
		УправлениеПечатьюРТ.ПечатьОписиНоменклатуры(ТабличныйДокумент, ОбъектыПечати, СтруктураПечати, ПервыйДокумент);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли
