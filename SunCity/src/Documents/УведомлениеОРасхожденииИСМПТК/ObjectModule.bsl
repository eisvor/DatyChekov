#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДокументОснованиеДляЗаполнения = ДанныеЗаполнения.ДокументОснование;
		Иначе
	        ДокументОснованиеДляЗаполнения = Неопределено;
		КонецЕсли;
	Иначе
		ДокументОснованиеДляЗаполнения = ДанныеЗаполнения;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДокументОснованиеДляЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	МассивДокументов = Новый Массив();
	МассивДокументов.Добавить(ДокументОснованиеДляЗаполнения);
	
	ПараметрыЗаполнения = РаботаСДокументамиИСМПТК.ПолучитьПараметрыЗаполненияДокументовИСМПТПоУмолчанию();
	ПараметрыЗаполнения.Вставить("МассивДокументов", МассивДокументов);
		
	ТипДокументаИСМПТ = Документы.УведомлениеОРасхожденииИСМПТК.ПустаяСсылка();
	МассивДанныхДляЗаполнения = РаботаСДокументамиИСМПТК.ПодготовитьДанныеДляЗаполненияДокументаИСМПТ(ПараметрыЗаполнения, ТипДокументаИСМПТ);
	
	Если ТипЗнч(МассивДанныхДляЗаполнения) = Тип("Массив") И МассивДанныхДляЗаполнения.Количество() > 0 Тогда
		
		Для Каждого СтруктураДокумента Из МассивДанныхДляЗаполнения Цикл
			
			Если МассивДанныхДляЗаполнения.Найти(СтруктураДокумента) > 0 Тогда
				НовыйДокументУОР = Документы.УведомлениеОРасхожденииИСМПТК.СоздатьДокумент();
			Иначе
				НовыйДокументУОР = ЭтотОбъект;
			КонецЕсли; 
		
			//Заполняем шапку документа
			ЗаполнитьЗначенияСвойств(НовыйДокументУОР, СтруктураДокумента.Реквизиты[0]);
			
			//Заполняем шапку документа дополнительными сведениями
			СтруктураПереопределяемыхРеквизитов = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьЗначенияПоУмолчаниюДляСозданияУведомленияОРасхожденияхИСМПТ(МассивДокументов);
			ЗаполнитьЗначенияСвойств(НовыйДокументУОР, СтруктураПереопределяемыхРеквизитов);
			
			НовыйДокументУОР.Состояние = Перечисления.СостоянияДокументовИСМПТК.Сформирован;
			НовыйДокументУОР.Статус    = Перечисления.СтатусыДокументовИСМПТК.Черновик;  
			
			// Нужно заполнить сведения о связанных АПП
			НовыйДокументУОР.ИдентификаторАПППервичный = ДокументОснованиеДляЗаполнения.Идентификатор;
			НовыйДокументУОР.РегистрационныйНомерСвязанногоАкта = ДокументОснованиеДляЗаполнения.НомерИСМПТ;
						
			//Заполняем табличную часть "Марки"
			Если СтруктураДокумента.Свойство("Марки")
				И Не СтруктураДокумента.Марки = Неопределено Тогда
				Для Каждого СтрокаТЧ Из СтруктураДокумента.Марки Цикл
					НоваяСтрокаТЧ = НовыйДокументУОР.Марки.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, СтрокаТЧ);
					Если НоваяСтрокаТЧ.СтатусСверкиКода = ПредопределенноеЗначение("Перечисление.СтатусыСверкиКодаИСМПТК.Добавлен") Тогда
						НоваяСтрокаТЧ.Количество = 1;
						НоваяСтрокаТЧ.КоличествоИсточник = 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Состояние = РаботаСДокументамиИСМПТК.СостояниеДокументаИСМПТ(ЭтотОбъект);
		
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Автор) Тогда
		ЭтотОбъект.Автор = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ТекущийПользователь();
	КонецЕсли;
	
	Если ЭтотОбъект.Направление = Перечисления.НаправленияДокументовИСМПТК.Входящий Тогда
		ЭтотОбъект.Контрагент = ЭтотОбъект.Получатель;
	Иначе
		ЭтотОбъект.Контрагент = ЭтотОбъект.Поставщик;
	КонецЕсли;
		
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Статус) Тогда
		ЭтотОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДокументовИСМПТК.Черновик"); 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Номер)
		И ЭтотОбъект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
		ЭтотОбъект.Номер = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьНомерНаПечать(ЭтотОбъект);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторАПППервичный)
		И ЗначениеЗаполнено(ЭтотОбъект.РегистрационныйНомерСвязанногоАкта) Тогда
		
		ЭтотОбъект.ИдентификаторАПППервичный = ЭтотОбъект.РегистрационныйНомерСвязанногоАкта;
		СтруктураПоиска = Новый Структура("ИмяДокумента,ИмяПараметра,ВидДокумента", 
						ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК(),
						"НомерИСМПТ",
						ПредопределенноеЗначение("Перечисление.ВидыДокументаИСМПТК.Исправленный"));
		СсылкаАППИсправленный = РаботаСДокументамиИСМПТК.НайтиДокументИСПоНомеру(ЭтотОбъект.РегистрационныйНомерСвязанногоАкта, СтруктураПоиска);
		Если Не СсылкаАППИсправленный = Неопределено Тогда 
			ЭтотОбъект.ИдентификаторАППИсправленный = ИнтеграцияИСМПТКПереопределяемый.ЗначениеРеквизитаОбъекта(СсылкаАППИсправленный, "Идентификатор");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЭтотОбъект.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Идентификатор) Тогда
		
		Если ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторАПППервичный) Тогда
			СсылкаАПППервичный = РаботаСДокументамиИСМПТК.ПолучитьДокументДляОбновленияСвязи(
								 ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК(),
								 ЭтотОбъект.ИдентификаторАПППервичный,
								 "ИдентификаторУведОРасхождениях");
			Если Не СсылкаАПППервичный = Неопределено Тогда
				Попытка 
					ПервичныйАкт = СсылкаАПППервичный.ПолучитьОбъект();
					ПервичныйАкт.ИдентификаторУведОРасхождениях = ЭтотОбъект.Идентификатор;
					ПервичныйАкт.Записать();
				Исключение
					ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПроизошлаОшибкаПриЗаписиДокументаОснования()
								   + Символы.ПС 
								   + ОписаниеОшибки()
								   + Символы.ПС
								   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации();
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", СсылкаАПППервичный);
					ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
					
					ТекстОшибки = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаПриЗаписиДокументаСПараметром()
								+ Символы.ПС
								+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, СсылкаАПППервичный);								 
					ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияЗаписьДокумента();
					ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ЗаписываемыйДокумент%", Метаданные.Документы.УведомлениеОРасхожденииИСМПТК.Представление()); 
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭтотОбъект.ИдентификаторАППИсправленный) Тогда
			СсылкаАППИсправленный = РаботаСДокументамиИСМПТК.ПолучитьДокументДляОбновленияСвязи(
								 ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАктПриемаПередачиИСМПТК(),
								 ЭтотОбъект.ИдентификаторАППИсправленный,
								 "ИдентификаторУведОРасхождениях");
			Если Не СсылкаАППИсправленный = Неопределено Тогда
				Попытка 
					ИсправленныйАкт = СсылкаАППИсправленный.ПолучитьОбъект();
					ИсправленныйАкт.ИдентификаторУведОРасхождениях = ЭтотОбъект.Идентификатор;
					ИсправленныйАкт.Записать();
				Исключение
					ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПроизошлаОшибкаПриЗаписиДокументаОснования()
								   + Символы.ПС 
								   + ОписаниеОшибки()
								   + Символы.ПС
								   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияПодробностиВЖурналеРегистрации();
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументОснование%", СсылкаАППИсправленный);
					ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
					
					ТекстОшибки = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОшибкаПриЗаписиДокументаСПараметром()
								+ Символы.ПС
								+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					ТекстОшибки = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, СсылкаАППИсправленный);								 
					ИмяСобытия  = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИмяСобытияЗаписьДокумента();
					ИмяСобытия  = СтрЗаменить(ИмяСобытия, "%ЗаписываемыйДокумент%", Метаданные.Документы.УведомлениеОРасхожденииИСМПТК.Представление()); 
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.ДокументОснование = Неопределено; 
	ЭтотОбъект.Идентификатор 	 = Неопределено;
	ЭтотОбъект.НомерИСМПТ = Неопределено;
	ЭтотОбъект.ДатаВИСМПТ = Неопределено;
	ЭтотОбъект.Контрагент = Неопределено;
	ЭтотОбъект.Статус	  = Перечисления.СтатусыДокументовИСМПТК.Черновик;
	ЭтотОбъект.Состояние  = Неопределено;
	ЭтотОбъект.РегистрационныйНомерСвязанногоАкта = Неопределено;
	ЭтотОбъект.Автор = Неопределено;
	ЭтотОбъект.Номер = Неопределено;
	ЭтотОбъект.РегНомерНаБумажномНосителе 	 = Неопределено;
	ЭтотОбъект.ДатаВыпискиНаБумажномНосителе = Неопределено;
	ЭтотОбъект.ИдентификаторАПППервичный  	 = Неопределено;
	ЭтотОбъект.ИдентификаторАППИсправленный  = Неопределено;
	
	ЭтотОбъект.Марки.Очистить();
	ЭтотОбъект.Ошибки.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//В общем случае не проверяем заполненность реквизитов при записи
	//проверка необходимых реквизитов проходит при отправке документа
	//в случае необходимости можно указать реквизиты проверки отдельно
	//в процедуре ДокументУОР_ОбработкаПроверкиЗаполнения
	ПроверяемыеРеквизиты.Очистить();
	МассивНепроверяемыхРеквизитов = Новый Массив();
	РаботаСДокументамиИСМПТКПереопределяемый.ДокументУОР_ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	РаботаСДокументамиИСМПТКПереопределяемый.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Если ЭтотОбъект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Входящий") Тогда
		Префикс = "В";
	ИначеЕсли ЭтотОбъект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияДокументовИСМПТК.Исходящий") Тогда
		Префикс = "И";
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли
