#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Представление = НСтр("ru='Агрегация кодов маркировки (вне производства)(ИС ЦЭДМ) №%1 от %2'");
	Представление = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(Представление, Данные.Номер, Формат(Данные.Дата, "ДЛФ=DT")); 
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#Область СтандартныеПодсистемы

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	РаботаСДокументамиИСМПТКПереопределяемый.ПриЗаполненииОграниченияДоступа(Ограничение, ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаАгрегацияВнеПроизводстваИСЦЭДМ());
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АгрегацияКМ";
	КомандаПечати.Представление = Метаданные.Документы.АгрегацияВнеПроизводстваИСЦЭДМ.Представление();
	КомандаПечати.Порядок = 50;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если ПечатьКодовМаркировкиИСМПТКПереопределяемый.НужноПечататьМакет(КоллекцияПечатныхФорм, "АгрегацияКМ") Тогда
		
		ПечатнаяФорма = СформироватьПечатнуюФормуАгрегацияКМ(МассивОбъектов, ОбъектыПечати, ПараметрыВывода.КодЯзыка);
		
		ПечатьКодовМаркировкиИСМПТКПереопределяемый.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АгрегацияКМ",
			Метаданные.Документы.АгрегацияВнеПроизводстваИСЦЭДМ.Представление(),
			ПечатнаяФорма,
			,
			"Документ.АгрегацияВнеПроизводстваИСЦЭДМ.ПФ_MXL_АгрегированныеТовары");
			
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("АгрегацияКМ"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьПечатнуюФормуАгрегацияКМ(МассивОбъектов, ОбъектыПечати, КодЯзыка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ТекстЗапросаПоТоварам = ПечатьКодовМаркировкиИСМПТКПереопределяемый.ТекстЗапросаПечатьАгрегацияВнеПроизводстваЦЭДМ();
	Запрос.Текст = ТекстЗапросаПоТоварам;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизиты  = РезультатыЗапроса[0].Выбрать();
	ВыборкаКоды 	  = РезультатыЗапроса[1].Выбрать();
	
	Макет = ПечатьКодовМаркировкиИСМПТКПереопределяемый.МакетПечатнойФормы("Документ.АгрегацияВнеПроизводстваИСЦЭДМ.ПФ_MXL_АгрегированныеТовары", КодЯзыка);
	Эталон = Обработки.ПечатьКодовМаркировкиИСМПТК.ПолучитьМакет("Эталон");
	КоличествоМиллиметровВПикселе = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	УровеньЧеткости = 1;
		
	Пока ВыборкаРеквизиты.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		Если ВыборкаРеквизиты.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИСМПТК.Логистическая") Тогда
			//Для кода SSCC
			ИмяОбласти  = "ОбластьКодАгрегатаSSCC";
			ТипКода 	= 2;
			ИмяКартинки = "КартинкаШтрихкодаSSCC";
		Иначе
			//Для кода GS1 DataMatrix
			ИмяОбласти  = "ОбластьКодАгрегатаDataMatrix";
			ТипКода 	= 24;
			ИмяКартинки = "КартинкаШтрихкодаDataMatrix";
		КонецЕсли;
		
		//Штрихкод агрегата
		ОбластьКартинка = Макет.ПолучитьОбласть(ИмяОбласти);
		ЗначениеШтрихкодаДляКомпоненты = РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.КодGS1ДляКомпонентыПечати(ВыборкаРеквизиты.КодАгрегата, ТипКода);
		Высота = ОбластьКартинка.Рисунки[ИмяКартинки].Высота;
		Ширина = ОбластьКартинка.Рисунки[ИмяКартинки].Ширина;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",   Окр(Ширина / КоличествоМиллиметровВПикселе) * УровеньЧеткости);
		ПараметрыШтрихкода.Вставить("Высота",   (Окр(Высота / КоличествоМиллиметровВПикселе) * УровеньЧеткости) + 2);
		ПараметрыШтрихкода.Вставить("Штрихкод", ЗначениеШтрихкодаДляКомпоненты);
		ПараметрыШтрихкода.Вставить("ТипКода",  ТипКода);
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("НеGS1", 	Ложь); //"Истина" только при генерации штрихкода табачной потребительской упаковки. В коде агрегата ее не может оказаться
		
		ОбластьКартинка.Рисунки[ИмяКартинки].Картинка = ПечатьКодовМаркировкиИСМПТКВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
		
		//Вывод дополнительного поля значения КМ агрегата
		Если НЕ ВыборкаРеквизиты.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИСМПТК.Логистическая") Тогда
			ОбластьКартинка.Параметры.КодАгрегата = ВыборкаРеквизиты.КодАгрегата;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьКартинка);
		
		//Заголовок
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.Заполнить(ВыборкаРеквизиты);
		ТабличныйДокумент.Вывести(Область);
		
		//Данные шапки
		Область = Макет.ПолучитьОбласть("Шапка");
		СведенияОрганизации = ИнтеграцияИСМПТКПереопределяемый.ПолучитьРеквизитыОрганизацииКонтрагента(ВыборкаРеквизиты.Организация, "Поставщик");
		Область.Параметры.ОрганизацияИдентификационныйНомер = СведенияОрганизации.ПоставщикИдентификационныйНомер;
		Область.Параметры.ПредставлениеОрганизации = СведенияОрганизации.ПоставщикНаименование;
		Область.Параметры.ПоставщикИдентификационныйНомер = ВыборкаРеквизиты.ПоставщикИдентификационныйНомер;
		Область.Параметры.Автор = ВыборкаРеквизиты.Автор;
		ТабличныйДокумент.Вывести(Область);
		
		//Данные упаковки
		Область = Макет.ПолучитьОбласть("ДанныеУпаковки");
		Область.Параметры.ВидПродукции = ВыборкаРеквизиты.ВидПродукции;
		Область.Параметры.ВидУпаковки  = ВыборкаРеквизиты.ВидУпаковки;
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла;
	
	Пока ВыборкаКоды.Следующий() Цикл
		
		//Данные строки
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
		Область.Параметры.НомерСтроки  = ВыборкаКоды.НомерСтроки;
		Область.Параметры.GTIN  	   = ВыборкаКоды.GTIN;
		
		ПредставлениеНоменклатуры = "";
		Если ЗначениеЗаполнено(ВыборкаКоды.ПредставлениеНоменклатуры) Тогда
			ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + ВыборкаКоды.ПредставлениеНоменклатуры;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаКоды.ПредставлениеХарактеристики) Тогда
			ПредставлениеНоменклатуры = ПредставлениеНоменклатуры + " (" + ВыборкаКоды.ПредставлениеХарактеристики + ")";
		КонецЕсли;
		Область.Параметры.Номенклатура = ПредставлениеНоменклатуры;
		
		Область.Параметры.КодИдентификации = ВыборкаКоды.КодИдентификации;
		Если РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.ЭтоКодSSCC(ВыборкаКоды.КодИдентификации) Тогда
			//Это транспортный код
			ТипКода = 2;
		Иначе 
			ТипКода = 24; //GS1 DataMatrix для всех остальных кодов
		КонецЕсли;
				
		//Штрихкод кода маркировки
		ЗначениеШтрихкодаДляКомпоненты = РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.КодGS1ДляКомпонентыПечати(РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.Base64ВШтрихкод(ВыборкаКоды.КодМаркировки), ТипКода);
		Высота = Область.Рисунки.ШтрихкодКМ.Высота;
		Ширина = Область.Рисунки.ШтрихкодКМ.Ширина;
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          Окр(Ширина / КоличествоМиллиметровВПикселе) * УровеньЧеткости);
		ПараметрыШтрихкода.Вставить("Высота",          Окр(Высота / КоличествоМиллиметровВПикселе) * УровеньЧеткости);
		ПараметрыШтрихкода.Вставить("Штрихкод",        ЗначениеШтрихкодаДляКомпоненты);
		ПараметрыШтрихкода.Вставить("ТипКода",         ТипКода);
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("НеGS1", 		   Ложь); //для ТипКода = 2 это значение игнорируется, для ТипКода = 24 - Ложь. 
				
		Область.Рисунки.ШтрихкодКМ.Картинка = ПечатьКодовМаркировкиИСМПТКВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ТабличныйДокумент.Вывести(Область);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецЕсли