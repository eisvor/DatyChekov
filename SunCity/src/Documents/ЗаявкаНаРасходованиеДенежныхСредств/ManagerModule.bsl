#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.АктОРасхожденияхПриПриемкеТоваров - документ для инициализации данных.
//  ДополнительныеСвойства - Структура - структура дополнительных свойств.
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                КАК Ссылка,
	|	ДанныеДокумента.Дата                  КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Магазин               КАК Магазин,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Утверждена)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                 КАК Утверждена
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";

	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	СтатьяДвиженияДенежныхСредств = ЗначениеНастроекПовтИсп.СтатьяДвиженияДенежныхСредств(Реквизиты.ХозяйственнаяОперация);
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредств);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Ссылка                                КАК РаспоряжениеНаРасходованиеДенежныхСредств,
	|	РасшифровкаПлатежа.ДокументРасчетовСКонтрагентом     КАК ДокументРасчета,
	|	ВЫБОР
	|		КОГДА РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|			ТОГДА &СтатьяДвиженияДенежныхСредств
	|		ИНАЧЕ РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ                                  КАК СтатьяДвиженияДенежныхСредств,
	|	РасшифровкаПлатежа.Сумма               КАК Сумма,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	&Магазин                               КАК Магазин
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка И &Утверждена";
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваКВыплате", Результат[0].Выгрузить());
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ПерезаполнитьБанковскийСчетОрганизации(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		
		Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
		МодульОбновлениеИнформационнойБазыРТ = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыРТ");
		МодульОбновлениеИнформационнойБазыРТ.ЗаполнитьБанковскийСчетОрганизацииОбъектов(ПолноеИмяОбъекта, "БанковскийСчет", Выборка, Параметры);
		
	#КонецЕсли
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКЗаполнениюБСО(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		
		МодульОбновлениеИнформационнойБазыРТ = ОбщегоНазначения.ОбщийМодуль("ОбновлениеИнформационнойБазыРТ");
		ДокументыДляОбработки = МодульОбновлениеИнформационнойБазыРТ.ОбъектыДляЗаполненияБанковскогоСчетаОрганизации(ПолноеИмяОбъекта, "БанковскийСчет");
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДокументыДляОбработки);
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
