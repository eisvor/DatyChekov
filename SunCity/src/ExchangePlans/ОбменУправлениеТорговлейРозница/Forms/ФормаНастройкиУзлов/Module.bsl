#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачалаВыгрузкиДокументовРТ) Тогда
		ДатаНачалаВыгрузкиДокументовРТ = НачалоГода(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачалаВыгрузкиДокументовУТ) Тогда
		ДатаНачалаВыгрузкиДокументовУТ = НачалоГода(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РежимВыгрузкиПриНеобходимости) Тогда
		РежимВыгрузкиПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрыПодключения") Тогда
		ПараметрыСоединения = Параметры.ПараметрыПодключения;
	КонецЕсли;
	
	ИменаРеквизитов = СтруктураСоответствияНастройкиОтборовРеквизитамФормы();
	ИменаРеквизитовБазыКорреспондента = СтруктураСоответствияНастройкиОтборовКорреспондентаРеквизитамФормы();
	
	ОбновитьНаименованиеКомандФормы();
	
	УстановитьВидимостьНаСервере();
	
	ПолучитьОписаниеКонтекста();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект, ЗавершениеРаботы);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ОбновитьДанныеОбъекта(ВыбранноеЗначение);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Не ЗаписатьИЗакрытьНаСервере() Тогда
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиКлиент.ФормаНастройкиУзловКомандаЗакрытьФорму(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокМагазиновНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИмяЭлементаФормыДляЗаполнения",          "Магазины");
	ПараметрыФормы.Вставить("ИмяРеквизитаЭлементаФормыДляЗаполнения", "УникальныйИдентификаторСсылки");
	ПараметрыФормы.Вставить("ПараметрыВнешнегоСоединения",            ПараметрыСоединения);
	ПараметрыФормы.Вставить("КоллекцияФильтров",                      Неопределено);
	ПараметрыФормы.Вставить("ИмяТаблицыВыбора",                       "Справочник.Склады");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",                   НСтр("ru = 'Выберите розничные магазины:'"));
	ПараметрыФормы.Вставить("МассивВыбранныхЗначений",                СформироватьМассивВыбранныхЗначений(ПараметрыФормы));
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораДополнительныхУсловий",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокВыбранныхОрганизацийНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИмяЭлементаФормыДляЗаполнения",          "Организации");
	ПараметрыФормы.Вставить("ИмяРеквизитаЭлементаФормыДляЗаполнения", "УникальныйИдентификаторСсылки");
	ПараметрыФормы.Вставить("ПараметрыВнешнегоСоединения",            ПараметрыСоединения);
	ПараметрыФормы.Вставить("КоллекцияФильтров",                      Неопределено);
	ПараметрыФормы.Вставить("ИмяТаблицыВыбора",                       "Справочник.Организации");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",                   НСтр("ru = 'Выберите организации для отбора:'"));
	ПараметрыФормы.Вставить("МассивВыбранныхЗначений",                СформироватьМассивВыбранныхЗначений(ПараметрыФормы));
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораДополнительныхУсловий",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокВыбранныхКассНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИмяЭлементаФормыДляЗаполнения",          "Кассы");
	ПараметрыФормы.Вставить("ИмяРеквизитаЭлементаФормыДляЗаполнения", "УникальныйИдентификаторСсылки");
	ПараметрыФормы.Вставить("ПараметрыВнешнегоСоединения",            ПараметрыСоединения);
	ПараметрыФормы.Вставить("КоллекцияФильтров",                      Неопределено);
	ПараметрыФормы.Вставить("ИмяТаблицыВыбора",                       "Справочник.Касса");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",                   НСтр("ru = 'Выберите кассы для отбора:'"));
	ПараметрыФормы.Вставить("МассивВыбранныхЗначений",                СформироватьМассивВыбранныхЗначений(ПараметрыФормы));
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораДополнительныхУсловий",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокВыбранныхВидовЦенНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИмяЭлементаФормыДляЗаполнения",          "ВидыЦен");
	ПараметрыФормы.Вставить("ИмяРеквизитаЭлементаФормыДляЗаполнения", "УникальныйИдентификаторСсылки");
	ПараметрыФормы.Вставить("ПараметрыВнешнегоСоединения",            ПараметрыСоединения);
	ПараметрыФормы.Вставить("КоллекцияФильтров",                      Неопределено);
	ПараметрыФормы.Вставить("ИмяТаблицыВыбора",                       "Справочник.ВидыЦен");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",                   НСтр("ru = 'Выберите виды цен для отбора:'"));
	ПараметрыФормы.Вставить("МассивВыбранныхЗначений",                СформироватьМассивВыбранныхЗначений(ПараметрыФормы));
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораДополнительныхУсловий",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеОбъекта(СтруктураПараметров)
	
	ЭтаФорма[СтруктураПараметров.ИмяТаблицыДляЗаполнения].Очистить();
	
	СписокВыбранныхЗначений = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресТаблицыВоВременномХранилище);
	
	Если СписокВыбранныхЗначений.Количество() > 0 Тогда
		СписокВыбранныхЗначений.Колонки.Идентификатор.Имя = "УникальныйИдентификаторСсылки";
		СписокВыбранныхЗначений.Колонки.Добавить("Использовать");
		СписокВыбранныхЗначений.ЗаполнитьЗначения( Истина, "Использовать");
		ЭтаФорма[СтруктураПараметров.ИмяТаблицыДляЗаполнения].Загрузить(СписокВыбранныхЗначений);
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеКомандФормы()
	
	УстановитьЗаголовокЭлемента(Магазины , "Магазин", Элементы.ОткрытьСписокМагазинов, НСтр("ru = 'Выбрать магазины'"));
	
	УстановитьЗаголовокЭлемента(Организации, "Организация", Элементы.ОткрытьСписокВыбранныхОрганизаций, НСтр("ru = 'Выбрать организации'"));
	
	УстановитьЗаголовокЭлемента(Кассы, "Касса", Элементы.ОткрытьСписокВыбранныхКасс, НСтр("ru = 'Выбрать кассы'"));
	
	УстановитьЗаголовокЭлемента(ВидыЦен, "ВидЦен", Элементы.ОткрытьСписокВыбранныхВидовЦен, НСтр("ru = 'Выбрать виды цен'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокЭлемента(Таблица , ИмяКолонки, Элемент, ЗаголовокПоУмолчанию)
	
	Если Таблица.Количество() > 0 Тогда
		ВыбранныеЭлементы = Таблица.Выгрузить().ВыгрузитьКолонку(ИмяКолонки);
		НовыйЗаголовок = СтрСоединить(ВыбранныеЭлементы);
	Иначе
		НовыйЗаголовок = ЗаголовокПоУмолчанию;
	КонецЕсли;
	Элемент.Заголовок = НовыйЗаголовок;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы,
	"ОткрытьОрганизации",
	"Доступность",
	ИспользоватьОтборПоОрганизациям);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы,
	"ОткрытьКассы",
	"Доступность",
	ИспользоватьОтборПоКассам);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
	Элементы,
	"ОткрытьВидыЦен",
	"Доступность",
	ИспользоватьОтборПоВидамЦен);
КонецПроцедуры

&НаСервере
Функция СтруктураСоответствияНастройкиОтборовРеквизитамФормы()
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов","ДатаНачалаВыгрузкиДокументовРТ");
	СтруктураНастроек.Вставить("ВыгружатьИзображенияНоменклатуры","ВыгружатьИзображенияНоменклатуры");
	СтруктураНастроек.Вставить("РежимВыгрузкиПриНеобходимости","РежимВыгрузкиПриНеобходимости");
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаСервере
Функция СтруктураСоответствияНастройкиОтборовКорреспондентаРеквизитамФормы()
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов","ДатаНачалаВыгрузкиДокументовУТ");
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям","ИспользоватьОтборПоОрганизациям");
	СтруктураНастроек.Вставить("ИспользоватьОтборПоКассам","ИспользоватьОтборПоКассам");
	СтруктураНастроек.Вставить("ИспользоватьОтборПоВидамЦен","ИспользоватьОтборПоВидамЦен");
	СтруктураНастроек.Вставить("Организации","Организации");
	СтруктураНастроек.Вставить("Кассы","Кассы");
	СтруктураНастроек.Вставить("ВидыЦен","ВидыЦен");
	СтруктураНастроек.Вставить("Магазины", "Магазины");
	СтруктураНастроек.Вставить("РежимВыгрузкиПриНеобходимости","РежимВыгрузкиПриНеобходимости");
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаСервере
Функция ЗаписатьИЗакрытьНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НастройкаОтборовПриЗаписи(ИспользоватьОтборПоОрганизациям, Организации);
	НастройкаОтборовПриЗаписи(ИспользоватьОтборПоКассам, Кассы);
	НастройкаОтборовПриЗаписи(ИспользоватьОтборПоВидамЦен, ВидыЦен);
	
	ПолучитьОписаниеКонтекста();

	Возврат Истина;

КонецФункции

&НаСервере
Процедура НастройкаОтборовПриЗаписи(Отбор,Таблица)
	
	Если Не Отбор И Таблица.Количество() <> 0 Тогда
		Таблица.Очистить();
	ИначеЕсли Отбор И Таблица.Количество() = 0 Тогда
		Отбор = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьОписаниеКонтекста()
	// Дата начала выгрузки документов.
	Если ЗначениеЗаполнено(ДатаНачалаВыгрузкиДокументовРТ) Тогда
		ДатаНачалаВыгрузкиДокументовОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Данные будут синхронизироваться, начиная с %1'"),
			Формат(ДатаНачалаВыгрузкиДокументовРТ, "ДЛФ=DD"));
	Иначе
		ДатаНачалаВыгрузкиДокументовОписание = НСтр("ru = 'Данные будут синхронизироваться за весь период ведения учета в программах'");
	КонецЕсли;
	
	Если ВыгружатьСебестоимость Тогда
		ВыгружатьСебестоимостьОписание = НСтр("ru = 'Выгрузка себестоимости: включено'");
	Иначе
		ВыгружатьСебестоимостьОписание = НСтр("ru = 'Выгрузка себестоимости: выключено'");
	КонецЕсли;	
	
	// отбор по Организациям
	Если ИспользоватьОтборПоОрганизациям Тогда
		ОрганизацииОписание = НСтр("ru = 'Только по организациям:'") + Символы.ПС + ИспользуемыеЭлементы("Организации");
	Иначе
		ОрганизацииОписание = НСтр("ru = 'По всем организациям.'");
	КонецЕсли;
	
	// отбор по Кассам
	Если ИспользоватьОтборПоКассам Тогда
		КассыОписание = НСтр("ru = 'Только по кассам:'") + Символы.ПС + ИспользуемыеЭлементы("Кассы");
	Иначе
		КассыОписание = НСтр("ru = 'По всем кассам.'");
	КонецЕсли;
	
	// отбор по Видам цен
	Если ИспользоватьОтборПоВидамЦен Тогда
		ВидыЦенОписание = НСтр("ru = 'Только по видам цен:'") + Символы.ПС + ИспользуемыеЭлементы("ВидыЦен");
	Иначе
		ВидыЦенОписание = НСтр("ru = 'По всем видам цен.'");
	КонецЕсли;
	
	ОписаниеКонтекста = (""
		+ ДатаНачалаВыгрузкиДокументовОписание
		+ Символы.ПС
		+ Символы.ПС
		+ ОрганизацииОписание
		+ Символы.ПС
		+ Символы.ПС
		+ КассыОписание
		+ Символы.ПС
		+ Символы.ПС
		+ ВидыЦенОписание
		+ Символы.ПС
		+ Символы.ПС);
КонецПроцедуры


&НаСервере
Функция ИспользуемыеЭлементы(ИмяТаблицы)
	
	Возврат СтрСоединить(
			ЭтаФорма[ИмяТаблицы].Выгрузить(Новый Структура("Использовать", Истина)).ВыгрузитьКолонку("Представление"),
			Символы.ПС);
	
КонецФункции
	
&НаСервере
Функция СформироватьМассивВыбранныхЗначений(ПараметрыФормы)
	
	ТабличнаяЧасть           = ЭтаФорма[ПараметрыФормы.ИмяЭлементаФормыДляЗаполнения];
	ТаблицаВыбранныхЗначений = ТабличнаяЧасть.Выгрузить(,ПараметрыФормы.ИмяРеквизитаЭлементаФормыДляЗаполнения);
	МассивВыбранныхЗначений  = ТаблицаВыбранныхЗначений.ВыгрузитьКолонку(ПараметрыФормы.ИмяРеквизитаЭлементаФормыДляЗаполнения);
	
	Возврат МассивВыбранныхЗначений;
	
КонецФункции

#КонецОбласти