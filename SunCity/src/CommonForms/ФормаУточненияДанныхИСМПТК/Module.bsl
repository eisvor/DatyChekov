
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("Операция") Тогда
		//Вызов происходит из формы ПоискНоменклатурыПоШтрихкоду командой ЗаполнитьДанныеВНесколькихСтроках,
		//данная форма работает по упрощенному сценарию.
		Операция = Параметры.Операция;
		ИспользоватьХарактеристикиНоменклатуры = ИнтеграцияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик();
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Характеристика", "Видимость", ИспользоватьХарактеристикиНоменклатуры);
	КонецЕсли;
	
	Если Параметры.Свойство("ИнФСистема")  Тогда
		ИнФСистема = Параметры.ИнФСистема;
	Иначе
		ИнФСистема = "ИСМПТ";
	КонецЕсли;
	
	ЗаполнитьДанныеФормыПриСозданииНаСервере();
	Если Не ЗначениеЗаполнено(Операция) Тогда
		ВывестиПоясняющийТекст();
	КонецЕсли;

	//Работа с двойным форматом
	УстановитьПризнакиДвойногоФорматаТранспортногоКода();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Штрихкоды = ЗаполнитьGTINПоНоменклатуре(Номенклатура);
		ЗаполнитьШтрихкодыВСтроке(Штрихкоды);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()

	Если ЗначениеЗаполнено(Операция) Тогда
		
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаИнформацияПоКоду",  "Видимость", 	Ложь);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УдалятьAID", 			 "Видимость", 	Ложь);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗавершитьРедактирование", "Доступность", Истина);
			
	Иначе	
		
		МожноПеренестиВДокумент = (Не Количество = 0) И ЗначениеЗаполнено(GTIN);
		ПоддержкаДвойногоФорматаТранспортногоКода = Константы.ПоддержкаДвойногоФорматаТранспортныхКодовИСМПТК.Получить();
		
		Если ПоддержкаДвойногоФорматаТранспортногоКода Тогда
			ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УдалятьAID", "Видимость", ВидУпаковки = Перечисления.ВидыУпаковокИСМПТК.Логистическая);
		Иначе
			ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УдалятьAID", "Видимость", Ложь);
		КонецЕсли;
		
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗапроситьДанныеОбАгрегацииКодовМаркировки", "Видимость", ИнФСистема = "ИСМПТ"); 
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗапроситьДанныеОКодеИСЦЭДМ", "Видимость", ИнФСистема = "ИСЦЭДМ"); 
		
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗавершитьРедактирование", "Доступность", МожноПеренестиВДокумент);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Характеристика", 		 "Видимость", 	Ложь);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиПоясняющийТекст()
	
	МассивСтрок = Новый Массив;	
	Элементы.ПоясняющийТекст.Высота = 1;
	Если Не ПустаяСтрока(КодИдентификации) Тогда
		ТекстСообщения = НСтр("ru = 'Обработка кода маркировки %КодИдентификации%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КодИдентификации%", КодИдентификации);  
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ТекстСообщения, Новый Шрифт(,,,,Истина), ЦветаСтиля.ЦветГиперссылкиИСМПТК));
	КонецЕсли;
	ПоясняющийТекст = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПриСозданииНаСервере()

	Если ЗначениеЗаполнено(Операция) Тогда
		
		Заголовок = НСтр("ru = 'Групповое редактирование строк'");
		
	Иначе
		
		Заголовок = НСтр("ru = 'Уточнение данных'");
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураКодовМаркировки);
		
		Если Параметры.СтруктураКодовМаркировки.ВидУпаковки = Перечисления.ВидыУпаковокИСМПТК.Групповая Тогда
			EANВерхнегоУровня	 = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(Параметры.СтруктураКодовМаркировки.GTINВерхнегоУровня);
			НоменклатураУпаковки = ПолучитьНоменклатуруПоШтрихкоду(EANВерхнегоУровня);
			Если ТипЗнч(НоменклатураУпаковки) = Тип("Структура") Тогда
				НоменклатураВерхнегоУровня = НоменклатураУпаковки.Номенклатура;
			Иначе
				НоменклатураВерхнегоУровня = НоменклатураУпаковки;
			КонецЕсли;
			
			ДанныеВложеннойНоменклатуры = ПолучитьНоменклатуруПоШтрихкоду(Параметры.СтруктураКодовМаркировки.EAN);
			Если ТипЗнч(ДанныеВложеннойНоменклатуры) = Тип("Структура") Тогда
				Номенклатура = ДанныеВложеннойНоменклатуры.Номенклатура;
			Иначе
				Номенклатура = ДанныеВложеннойНоменклатуры;
			КонецЕсли;
		Иначе
			Номенклатура = Параметры.Номенклатура;
		КонецЕсли;
		
		Организация	= Параметры.Организация;
		GTIN		= "";
		Количество  = 0;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Операция) Тогда
		СтруктурыДанных = Новый Структура("EAN, GTIN, GTINВерхнегоУровня, ВидУпаковки, КодИдентификации, КодМаркировки, Количество, Номенклатура, Характеристика, ВидПродукции");
		ЗаполнитьЗначенияСвойств(СтруктурыДанных, ЭтотОбъект,, "Номенклатура");
		Если Не ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИСМПТК.Групповая") Тогда
			СтруктурыДанных.Номенклатура = Номенклатура; //Вложенная номенклатура
		Иначе
			СтруктурыДанных.Номенклатура = ?(ЗначениеЗаполнено(НоменклатураВерхнегоУровня), НоменклатураВерхнегоУровня, Номенклатура);
		КонецЕсли;
	Иначе
		СтруктурыДанных = Новый Структура("GTIN, Количество, Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктурыДанных, ЭтотОбъект);
	КонецЕсли;
	
	Закрыть(СтруктурыДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКлючАвторизации(СобытиеПослеАвторизации) Экспорт
	
	ИнтерфейсИСМПТККлиент.ПолучитьКлючАвторизацииОбщая(СобытиеПослеАвторизации, Организация);
	
КонецПроцедуры

&НаСервере
Процедура ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки(РезультатВыполнения, Параметры) Экспорт
	
	ТокенАвторизации = ?(ЗначениеЗаполнено(РезультатВыполнения), РезультатВыполнения, Неопределено);
	//Уточним данные по групповому коду
	ВидУпаковки = ИнтеграцияИСМПТК.ЗапроситьУровеньАгрегированногоКода(КодМаркировки, Организация, ТокенАвторизации);
	
	Если ВидУпаковки = Перечисления.ВидыУпаковокИСМПТК.Логистическая Тогда
		СтруктураЗапрос = Новый Структура("Штрихкод, ВидУпаковки, ВидПродукции, ФорматBase64", КодМаркировки, ВидУпаковки, ВидПродукции, Истина);
	Иначе 
		СтруктураЗапрос = Новый Структура("Штрихкод, ВидУпаковки, ВидПродукции, ФорматBase64", КодИдентификации, ВидУпаковки, ВидПродукции, Ложь);
	КонецЕсли;
	
	ДанныеПоГрупповомуКоду = ИнтеграцияИСМПТК.ЗапроситьДанныеОбАгрегацииКМ(СтруктураЗапрос, Организация, ТокенАвторизации);
	
	Если Не ЗначениеЗаполнено(ДанныеПоГрупповомуКоду.ТекстОшибки) Тогда
		
		СтруктураКода = ИнтеграцияИСМПТКВызовСервера.ПолучитьИнформациюПоГрупповомуКоду(ДанныеПоГрупповомуКоду, СтруктураЗапрос.Штрихкод, ВидУпаковки, СтруктураЗапрос.ФорматBase64);
		
		//Подменим для группового кода GTIN на значение вложенной продукции и количествов соответствии с вложением
		GTIN 		   = СтруктураКода.GTIN;
		EAN 		   = СтруктураКода.EAN;
		Количество 	   = СтруктураКода.Количество;
		Номенклатура   = СтруктураКода.Номенклатура;
		Характеристика = СтруктураКода.Характеристика;
		
		Штрихкоды = ЗаполнитьGTINПоНоменклатуре(Номенклатура);
		ЗаполнитьШтрихкодыВСтроке(Штрихкоды);
		УправлениеФормой();
		
	Иначе 
		
		ТекстОшибки = НСтр("ru = 'Не удалось получить информацию по коду маркировки со стороны сервера.'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьGTINПоНоменклатуре(Номенклатура)
	
	ДанныеШтрихкодов = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьСписокВсехGTINНоменклатуры(Номенклатура);
	Возврат ДанныеШтрихкодов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьШтрихкодыВСтроке(Штрихкоды)
	
	Если ЗначениеЗаполнено(GTIN) И ЗначениеЗаполнено(Операция) Тогда 
		//Вызов из формы подбора и регистрации, позволяем заполнить новый GTIN без привязки к имеющимся у ном-ры
		Возврат;
	КонецЕсли;
	
	Элементы.GTIN.СписокВыбора.Очистить();
	
	Если Штрихкоды.Количество() = 0 Тогда
		
		Элементы.GTIN.РежимВыбораИзСписка = Ложь;
		Элементы.GTIN.СписокВыбора.Очистить();
		
	ИначеЕсли Штрихкоды.Количество() = 1 Тогда
		
		Элементы.GTIN.РежимВыбораИзСписка = Ложь;
		GTIN = Штрихкоды[0].Значение;
		
	ИначеЕсли Штрихкоды.Количество() > 1 Тогда
		
		Элементы.GTIN.РежимВыбораИзСписка = Истина;
		Для Каждого НайднныйКод Из Штрихкоды Цикл 
			Элементы.GTIN.СписокВыбора.Добавить(НайднныйКод.Значение, НайднныйКод.Представление);
		КонецЦикла;
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНоменклатуруПоШтрихкоду(EAN, СообщенияОбОшибках = Неопределено)

	Если СообщенияОбОшибках = Неопределено Тогда
		//Не во всех местах вызова функции нужно выводить пользователю сообщения, поэтому заменяеям на коллекцию-пустышку
		СообщенияОбОшибках = Новый Соответствие();
	КонецЕсли;
	
	Возврат ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьДанныеНоменклатурыИзРегистраШтрихкодовПоШтрихкоду(, EAN,, СообщенияОбОшибках);
	
КонецФункции

&НаКлиенте
Функция ПроверкаКорректностиПройденаУспешно()
	
	GTINКорректногоФормата = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ПроверитьКорректностьGTIN(GTIN);
	Если СтрДлина(GTIN) <> 14 Или Не GTINКорректногоФормата Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьПризнакиДвойногоФорматаТранспортногоКода()
	
	Если Константы.ПоддержкаДвойногоФорматаТранспортныхКодовИСМПТК.Получить()
		И СтрДлина(ЭтотОбъект.КодИдентификации) = 18 Тогда
		
		УдалятьAID = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДополнительныеСведенияПоКодамВИСЦЭДМНаСервере()
	
	МассивДляЗапросаИнформации = Новый Массив();
	МассивДляЗапросаИнформации.Добавить(КодИдентификации);
		
	ИнформацияОКодах = ИнтеграцияИСМПТК.ПолучитьДополнительныеСведенияОКодахМаркировки(МассивДляЗапросаИнформации, Организация);
	Если Не ИнформацияОКодах = Неопределено Тогда
		
		НайденныйОтвет = ИнформацияОКодах.Получить(КодИдентификации);
		Если НайденныйОтвет = Неопределено Тогда
			ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияИнформацияОКодеНеНайденаНаСервереСПараметром();
			ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, КодИдентификации);
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Иначе
			Количество = НайденныйОтвет.КоличествоВложенных;
			GTIN 	   = НайденныйОтвет.GTINВложенных;
			
			ДанныеВложеннойНоменклатуры = ПолучитьНоменклатуруПоШтрихкоду(РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(GTIN));
			Если ТипЗнч(ДанныеВложеннойНоменклатуры) = Тип("Структура") Тогда
				Номенклатура   = ДанныеВложеннойНоменклатуры.Номенклатура;
				Характеристика = ДанныеВложеннойНоменклатуры.Характеристика ;
			Иначе
				Номенклатура   = ДанныеВложеннойНоменклатуры;
				Характеристика = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	// Перед закрытием формы проверяем, что выбранная ном-ра соответствует товарным группам, допустимым в документе, откуда она была вызвана.
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ВидПродукции = ОбщегоНазначенияИСМПТКПереопределяемый.ПолучитьВидПродукцииПоНоменклатуре(Номенклатура);
		Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ПустаяСсылка") Тогда 
			ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияВнимание() + " " 
						   + РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияНоменклатураНеИмеетОсобенностейУчета()
						   + Символы.ПС
						   + НСтр("ru = 'Документы сервиса 1С:Маркировка для Казахстана не предназначены для работы с такой номенклатурой.'");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		Если ИнФСистема = "ИСМПТ" Тогда
			//выдаем ошибку, если товар - фарм.продукция
			Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты") Тогда
				ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияТГУНоменклатурыНеДолжнаУказыватьсяВЭтомДокументе() + " "
							   + НСтр("ru = 'Для работы с лекарственной продукцией следует использовать документы модуля ИС ЦЭДМ.'");
				ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ВидПродукции); 
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				Возврат;
			КонецЕсли;
		Иначе
			//выдаем ошибку, если товар - не фарм.продукция, т.к. это контур ЦЭДМ
			Если Не ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты") Тогда
				ТекстСообщения = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияТГУНоменклатурыНеДолжнаУказыватьсяВЭтомДокументе() + " "
							   + НСтр("ru = 'Для работы с продукцией этой товарной группы следует использовать документы модуля ИС МПТ.'");
				ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ВидПродукции);
				ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ПроверкаКорректностиПройденаУспешно() Тогда
		ЗакрытьФорму();
	Иначе
		ТекстСообщения = НСтр("ru = 'Указанный GTIN не соответствует формату!'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьДанныеОбАгрегацииКодовМаркировки(Команда)
	
	ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки = Новый ОписаниеОповещения("ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки", ЭтаФорма);
	ПолучитьКлючАвторизации(ЗавершениеПолучитьДанныеПоГрупповымКодамМаркировки);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалятьAIDПриИзменении(Элемент)
	
 	Если УдалятьAID Тогда 
		КодИдентификации = Прав(КодИдентификации, 18);
	Иначе 
		КодИдентификации = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.Base64ВШтрихкод(КодМаркировки);
		
		//Если форма открывается с уже установленным признаком, преобразование выполняется иначе
		Если СтрДлина(КодИдентификации) = 18 Тогда
			КодИдентификации = "00" + КодИдентификации;
			КодМаркировки = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ШтрихкодВBase64(КодИдентификации);
		КонецЕсли;
	КонецЕсли;
	
	ВывестиПоясняющийТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)	
	
	Штрихкоды = ЗаполнитьGTINПоНоменклатуре(Номенклатура);
	ЗаполнитьШтрихкодыВСтроке(Штрихкоды);
	
	Если ЗначениеЗаполнено(Операция) Тогда
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Характеристика", "Доступность", 
										   ОбщегоНазначенияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоХарактеристикамУНоменклатуры(Номенклатура));
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура GTINПриИзменении(Элемент)
	
	EAN = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.EANПоGTIN(GTIN);
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьДанныеОКодеИСЦЭДМ(Команда)
	
	ПолучитьДополнительныеСведенияПоКодамВИСЦЭДМНаСервере();
	
КонецПроцедуры

#КонецОбласти
