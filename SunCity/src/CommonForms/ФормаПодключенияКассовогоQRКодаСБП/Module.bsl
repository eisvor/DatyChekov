#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Интеграция 						 = Параметры.Интеграция;
	КассаККМ 						 = Параметры.КассаККМ;
	Организация 					 = Параметры.Организация;
	ТорговыйОбъект 					 = Параметры.ТорговыйОбъект;
	
	Элементы.КассаККМ.ТолькоПросмотр = Не Параметры.РазрешитьВыборКассыККМ;
	
	ИнициализироватьПанельФормированияКода();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ОбработатьВыполненияКоманды(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КассовыйQRКодПриИзменении(Элемент)
	
	ОбновлятьДанныеФормы = Истина;
	
	Если Не ПроверитьЗаполнениеНастроек(Неопределено) Тогда
		КассовыйQRКод = "";
	ИначеЕсли Не ЗначениеЗаполнено(КассовыйQRКод) Тогда
		ОбработатьВыполненияКоманды("УдалитьКассовыйQRКод");
	Иначе
		
		РезультатПроверки = ПереводыСБПc2bКлиентСервер.ПроверкаURLКассовойСсылки(КассовыйQRКод, Истина);
		
		Если Не РезультатПроверки.URLВалиден Тогда

			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Неверный формат кассовой ссылки.'"),
				,
				,
				"КассовыйQRКод");
				
			ОбновлятьДанныеФормы = Ложь;	
				
		Иначе
			ОбновитьКассовыеСсылки(КассовыйQRКод, Лев(РезультатПроверки.СтруктураURI.ПутьНаСервере, 32));
		КонецЕсли;

	КонецЕсли;
	
	Если ОбновлятьДанныеФормы Тогда
		НастроитьФорму(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	ИнициализироватьПанельФормированияКода();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьКассовыеСсылки(Команда)
	
	ОбработатьВыполненияКоманды(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьQRКода(Команда)

	ОбработатьВыполненияКоманды(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключить(Команда)
	
	ОбработатьВыполненияКоманды(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКассовыйQRКод(Команда)
	
	ОбработатьВыполненияКоманды(Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьПанельФормированияКода()
	
	НастройкиКассовыхСсылокСБП = Новый Структура;

	РеквизитыКассы			   = Новый Структура;
	РеквизитыКассы.Вставить("ТорговыйОбъект", 		ТорговыйОбъект);
	РеквизитыКассы.Вставить("Организация", 			Организация);
	РеквизитыКассы.Вставить("КассаККМ", 			КассаККМ);
	
	ПоПлатежнойСистеме		   = Новый Структура();
	ПоПлатежнойСистеме.Вставить("ПлатежнаяСистема", Перечисления.ТипыПлатежнойСистемыККТ.СистемаБыстрыхПлатежей);
	
	Если ЗначениеЗаполнено(Интеграция) Тогда
		ПоПлатежнойСистеме.Вставить("Интеграция", 	Интеграция);
	КонецЕсли;
	
	НастройкиПодключения       = ИнтеграцияСПлатежнымиСистемамиРТСервер.НастройкиИнтеграции(Организация, ТорговыйОбъект);
	СписокСпособовОплаты	   = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(НастройкиПодключения) Тогда
		
		НастройкиПодключения = НастройкиПодключения.Скопировать(ПоПлатежнойСистеме);
		НастройкиПодключения.Колонки.Добавить("НастройкиТорговойТочки");
		
		Для Каждого НастройкаПодключения Из НастройкиПодключения Цикл   

			НастройкиТорговойТочки = СистемаБыстрыхПлатежей.НастройкиПодключения(НастройкаПодключения.Интеграция);
			НастройкаПодключения.НастройкиТорговойТочки = НастройкиТорговойТочки;
			
			Если НастройкиТорговойТочки.НастройкиСБПc2b.КассовыеСсылки Тогда // АПК:216 слово содержит и русские и английские символы
				СписокСпособовОплаты.Добавить(НастройкаПодключения.СпособОплаты);
			КонецЕсли;
			
		КонецЦикла;

		НастройкиПодключенияМассив = ОбщегоНазначения.ТаблицаЗначенийВМассив(НастройкиПодключения);
		
	КонецЕсли;			
	
	СпособыОплаты					= Новый Соответствие;	
	КассовыеСсылкиСБП 				= Новый Структура;
	ИспользоватьКассовыйQRКодСБП	= Истина;	
	
	Если ЗначениеЗаполнено(КассаККМ) Тогда
		
		ИнтеграцияСПлатежнымиСистемамиРТСервер.ПолучитьНастройкиКассовогоQRКода(
			КассаККМ,
			ИспользоватьКассовыйQRКодСБП,
			СпособыОплаты);
			
		Если СпособыОплаты.Количество() Тогда
			
			Для Каждого СпособОплатыПараметры Из СпособыОплаты Цикл
				СпособОплатыКассовойСсылкиСБП = СпособОплатыПараметры.Ключ;
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЕсли;
	
	Если СписокСпособовОплаты.НайтиПоЗначению(СпособОплатыКассовойСсылкиСБП) = Неопределено Тогда
		СпособОплатыКассовойСсылкиСБП = ?(СписокСпособовОплаты.Количество(), СписокСпособовОплаты[0].Значение, Неопределено);
	КонецЕсли;
	
	Элементы.СпособОплатыКассовойСсылкиСБП.СписокВыбора.ЗагрузитьЗначения(СписокСпособовОплаты.ВыгрузитьЗначения());
	
	КассовыеСсылкиСБП.Вставить("ИспользоватьКассовыйQRКодСБП", 	 ИспользоватьКассовыйQRКодСБП);
	КассовыеСсылкиСБП.Вставить("СпособыОплаты", 				 СпособыОплаты);
	КассовыеСсылкиСБП.Вставить("СпособОплатыДляПечати", 		 СпособОплатыКассовойСсылкиСБП);
		
	НастройкиКассовыхСсылокСБП.Вставить("РеквизитыКассы", 		 РеквизитыКассы);      
	НастройкиКассовыхСсылокСБП.Вставить("НастройкиПодключения",  НастройкиПодключенияМассив);
	НастройкиКассовыхСсылокСБП.Вставить("СписокСпособовОплаты",  СписокСпособовОплаты);
	НастройкиКассовыхСсылокСБП.Вставить("КассовыеСсылки", 		 КассовыеСсылкиСБП);

	НастроитьФорму(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыполненияКоманды(ВидДействия, СтандартнаяОбработка = Ложь, Отказ = Ложь)
	
	Перем ОписаниеОшибки;
	
	Если ВидДействия = "ПерейтиНаИнструкциюNFC" Тогда

		СтандартнаяОбработка = Ложь;
		ПереводыСБПc2bКлиент.ОткрытьИнструкциюПоПрограммированиюNFCМетки();
			
	ИначеЕсли ВидДействия = "ПерейтиНаИнструкциюКассовыйQRКод"  Тогда

		СтандартнаяОбработка = Ложь;
		ПереводыСБПc2bКлиент.ОткрытьОписаниеКассовыхСсылок();
		
	ИначеЕсли ВидДействия = "УдалитьКассовыйQRКод" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОбновитьКассовыеСсылки("");
		
		НастроитьФорму(ЭтотОбъект);
		
	ИначеЕсли ВидДействия = "ПодключитьСБП"	 Тогда
		
		СтандартнаяОбработка 	= Ложь;
		ОписаниеОповещения 		= Новый ОписаниеОповещения("ПодключитьСБПЗавершение", ЭтотОбъект);

		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Организация", 	Организация);
		ДополнительныеПараметры.Вставить("ТорговыйОбъект", 	ТорговыйОбъект);
	
		ПараметрыПодключения 	= Новый Структура("ОтборУчастников, БИК", "КассовыеСсылки");
	
		СистемаБыстрыхПлатежейКлиент.ПодключитьСистемуБыстрыхПлатежей(ПараметрыПодключения, , ДополнительныеПараметры);
		
	ИначеЕсли ВидДействия = "Подключить" Тогда
		
		Если ПроверитьЗаполнениеНастроек(ВидДействия) 
			И НастройкиКассовыхСсылокСБП  <> Неопределено Тогда
		
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ПодключитьКассовуюСсылкуЗавершение",
				ЭтотОбъект,
				Новый Структура("Форма", ЭтотОбъект));

			Для Каждого НастройкаПодключения Из НастройкиКассовыхСсылокСБП.НастройкиПодключения Цикл
		
				Если НастройкаПодключения.СпособОплаты = СпособОплатыКассовойСсылкиСБП Тогда
			
					ПереводыСБПc2bКлиент.ПодключитьКассовуюСсылку(
						НастройкаПодключения.Интеграция,
						ОписаниеОповещения,
						ЭтотОбъект);

				КонецЕсли;
				
			КонецЦикла;			
				
		КонецЕсли;
	
	ИначеЕсли ВидДействия = "СпособОплатыКассовойСсылкиСБП"  Тогда

		РеквизитыКассы			= НастройкиКассовыхСсылокСБП.РеквизитыКассы;
		КассовыеСсылки 			= НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
		КассовыеСсылки.СпособОплатыДляПечати = СпособОплатыКассовойСсылкиСБП;
				
		ЗаписатьДанныеКассовойСсылки(РеквизитыКассы.КассаККМ, КассовыеСсылки);
			
		НастроитьФорму(ЭтотОбъект);
		
	ИначеЕсли ВидДействия = "СформироватьКассовыеСсылки"  Тогда
		
		Отказ = Ложь;
		
		Если ПроверитьЗаполнениеНастроек(ВидДействия) Тогда

			СформироватьКассовыеСсылкиЗавершение(Отказ, ОписаниеОшибки);
			
			Если Не Отказ Тогда
				ОбработатьВыполненияКоманды("КассоваяСсылкаА5Широкий");
			КонецЕсли;
			
		Иначе
			Отказ = Истина;
		КонецЕсли;		
	
	ИначеЕсли СтрНачинаетсяС(ВидДействия, "КассоваяСсылкаА") Тогда
		
		РеквизитыКассы			= НастройкиКассовыхСсылокСБП.РеквизитыКассы;
		КассовыеСсылки 			= НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
		НастройкиСпособаОплаты  = КассовыеСсылки.СпособыОплаты.Получить(СпособОплатыКассовойСсылкиСБП);

		Если НастройкиСпособаОплаты = Неопределено Тогда
			СформироватьКассовыеСсылкиЗавершение(Отказ, ОписаниеОшибки);
		КонецЕсли;			

		Если Не Отказ Тогда  

			КассовыеСсылки 			= НастройкиКассовыхСсылокСБП.КассовыеСсылки;
			НастройкиСпособаОплаты  = КассовыеСсылки.СпособыОплаты.Получить(СпособОплатыКассовойСсылкиСБП);
			
			СписокПечатныхФорм 					= Новый СписокЗначений;
			СписокПечатныхФорм.Добавить("КассоваяСсылкаА5Широкий", 				НСтр("ru = 'Кассовая ссылка (А5 широкий)'"));
		    СписокПечатныхФорм.Добавить("КассоваяСсылкаА5ТолькоЛого", 			НСтр("ru = 'Кассовая ссылка (А5 только логотипы)'"));
			СписокПечатныхФорм.Добавить("КассоваяСсылкаА5Узкий", 				НСтр("ru = 'Кассовая ссылка (А5 узкий)'"));
		    СписокПечатныхФорм.Добавить("КассоваяСсылкаА5УзкийГоризонтальный", 	
				НСтр("ru = 'Кассовая ссылка (А5 узкий горизонтальный)'"));
				
		    СписокПечатныхФорм.Добавить("КассоваяСсылкаА6Квадратный", 			НСтр("ru = 'Кассовая ссылка (А6 квадратный)'"));
			СписокПечатныхФорм.Добавить("КассоваяСсылкаА6Круглый",				НСтр("ru = 'Кассовая ссылка (А6 круглый)'"));
			
			ТипПечати 							= СписокПечатныхФорм.Индекс(СписокПечатныхФорм.НайтиПоЗначению(ВидДействия)) + 1;
			
			ИдентификаторПечатнойФормы 			= ВидДействия;
			НазваниеПечатнойФормы 				= СписокПечатныхФорм.НайтиПоЗначению(ВидДействия).Представление;

			МакетКарточкиКассовойСсылки 		= СформироватьКарточкуКассовойСсылки(НастройкиСпособаОплаты, ТипПечати);
			
			КоллекцияПечатныхФорм               = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
			ПечатнаяФорма                       = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
			ПечатнаяФорма.СинонимМакета         = НазваниеПечатнойФормы;
			ПечатнаяФорма.ТабличныйДокумент     = МакетКарточкиКассовойСсылки;
			ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
	
			УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьКарточкуКассовойСсылки(ДанныеСсылки, ТипПечати)
	
	Возврат ПереводыСБПc2b.КарточкаКассовойСсылки(ДанныеСсылки, Новый Структура("ТипПечати", ТипПечати));
		
КонецФункции 

&НаСервереБезКонтекста
Функция СформироватьКассовыеСсылкиСервер(СпособОплаты, НастройкиКассовыхСсылокСБП, Отказ) Экспорт

	Для Каждого НастройкаПодключения Из НастройкиКассовыхСсылокСБП.НастройкиПодключения Цикл
		
		Если НастройкаПодключения.СпособОплаты = СпособОплаты Тогда
			
			РезультатСоздания = ПереводыСБПc2b.КассоваяСсылка(НастройкаПодключения.Интеграция);
			
			Если ЗначениеЗаполнено(РезультатСоздания.КодОшибки) Тогда
				
				Отказ 				= Истина;
				РезультатСоздания 	= РезультатСоздания.СообщениеОбОшибке;
				
			КонецЕсли;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
    Возврат РезультатСоздания;
	
КонецФункции

&НаКлиенте
Функция ПроверитьЗаполнениеНастроек(ВидДействия)

	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(СпособОплатыКассовойСсылкиСБП) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не заполнено поле ""Способ оплаты""'"));
		Отказ = Истина;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(КассаККМ) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не заполнено поле ""Касса ККМ""'"));
		Отказ = Истина;
	КонецЕсли;

	Если ВидДействия = "ЗаписатьНастройкиКассовойСсылки"  Тогда	

		Если Не ЗначениеЗаполнено(КассовыйQRКод) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Необходимо сформировать кассовую ссылку'"));
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

&НаКлиенте
Процедура ПодключитьСБПЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИнициализироватьПанельФормированияКода();

	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКассовойСсылки Тогда
		ОбработатьВыполненияКоманды("СформироватьКассовыеСсылки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьКассовуюСсылкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РеквизитыКассы					= ДополнительныеПараметры.Форма.НастройкиКассовыхСсылокСБП.РеквизитыКассы;
	КассовыеСсылки 					= ДополнительныеПараметры.Форма.НастройкиКассовыхСсылокСБП.КассовыеСсылки;
	
	КассовыеСсылки.СпособыОплаты.Вставить(КассовыеСсылки.СпособОплатыДляПечати, Результат);

	ЗаписатьДанныеКассовойСсылки(РеквизитыКассы.КассаККМ, КассовыеСсылки);
	
	НастроитьФорму(ДополнительныеПараметры.Форма);
	ОбработатьВыполненияКоманды("КассоваяСсылкаА5Широкий");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКассовыеСсылкиЗавершение(Отказ, ОписаниеОшибки = "")

	КассоваяСсылка = СформироватьКассовыеСсылкиСервер(СпособОплатыКассовойСсылкиСБП, НастройкиКассовыхСсылокСБП, Отказ);
				
	Если Не ЗначениеЗаполнено(КассоваяСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
			
	Если Не Отказ Тогда
		
		ОбновитьКассовыеСсылки(КассоваяСсылка.КассоваяСсылка, КассоваяСсылка.ИдентификаторОплаты, Отказ);

	ИначеЕсли ЗначениеЗаполнено(КассоваяСсылка) Тогда
		ОписаниеОшибки = КассоваяСсылка;
	КонецЕсли;			

	НастроитьФорму(ЭтотОбъект, ОписаниеОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКассовыеСсылки(КассоваяСсылка, ИдентификаторОплаты = Неопределено, Отказ = Ложь)

	РеквизитыКассы			= НастройкиКассовыхСсылокСБП.РеквизитыКассы;
	КассовыеСсылки 			= НастройкиКассовыхСсылокСБП.КассовыеСсылки;
					
	НастройкиСпособаОплаты  = Новый Структура;
	НастройкиСпособаОплаты.Вставить("КассоваяСсылка", 		КассоваяСсылка);
	НастройкиСпособаОплаты.Вставить("ИдентификаторОплаты",	ИдентификаторОплаты);

	Если ЗначениеЗаполнено(КассоваяСсылка) Тогда

		КассовыеСсылки.СпособыОплаты.Вставить(СпособОплатыКассовойСсылкиСБП, НастройкиСпособаОплаты);
		КассовыеСсылки.СпособОплатыДляПечати = СпособОплатыКассовойСсылкиСБП;
		
	ИначеЕсли КассовыеСсылки.СпособыОплаты.Получить(СпособОплатыКассовойСсылкиСБП) <> Неопределено Тогда
		КассовыеСсылки.СпособыОплаты.Удалить(СпособОплатыКассовойСсылкиСБП);
	КонецЕсли;
	
	ЗаписатьДанныеКассовойСсылки(РеквизитыКассы.КассаККМ, КассовыеСсылки, Отказ);	
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФорму(Форма, ОписаниеОшибки = "") Экспорт

	НастройкиКассовыхСсылокСБП 	= Форма.НастройкиКассовыхСсылокСБП;
	КассовыеСсылки				= НастройкиКассовыхСсылокСБП.КассовыеСсылки;
	КассоваяСсылка				= КассовыеСсылки.СпособыОплаты.Получить(Форма.СпособОплатыКассовойСсылкиСБП);
	СписокСпособовОплаты		= НастройкиКассовыхСсылокСБП.СписокСпособовОплаты;
	
	ПодключениеКассовойСсылки = Ложь;
	
	Если НастройкиКассовыхСсылокСБП.НастройкиПодключения <> Неопределено Тогда
	
		Для Каждого НастройкаПодключения Из НастройкиКассовыхСсылокСБП.НастройкиПодключения Цикл
			
			Если НастройкаПодключения.СпособОплаты = Форма.СпособОплатыКассовойСсылкиСБП Тогда
				ПодключениеКассовойСсылки = НастройкаПодключения.НастройкиТорговойТочки.НастройкиСБПc2b.КассовыеСсылки; // АПК:216 слово содержит и русские и английские символы
			КонецЕсли;
			
		КонецЦикла;

	КонецЕсли;
	
	Если СписокСпособовОплаты.Количество() Тогда
	
		ТекущаяСтраница = Форма.Элементы.ГруппаПодключениеКассовойСсылки;
		
		Форма.Элементы.ФормаГруппаПанельДействий.Видимость				= Истина;
		Форма.Элементы.СпособОплатыКассовойСсылкиСБП.Видимость 			= СписокСпособовОплаты.Количество() > 0;
		Форма.Элементы.СпособОплатыКассовойСсылкиСБП.ТолькоПросмотр		= СписокСпособовОплаты.Количество() = 1;

		Если КассоваяСсылка <> Неопределено Тогда
		
			Форма.КассовыйQRКод	= КассоваяСсылка.КассоваяСсылка;
			Форма.NFCСсылкаСБП 	= ?(ЗначениеЗаполнено(КассоваяСсылка.КассоваяСсылка),
				ПереводыСБПc2bКлиентСервер.ФункциональнаяСсылкаNFC(КассоваяСсылка.КассоваяСсылка),
				"");

		Иначе
		
			Форма.КассовыйQRКод	= "";
			Форма.NFCСсылкаСБП  = "";
		
		КонецЕсли;
	
		Форма.Элементы.Подключить.Видимость = ПодключениеКассовойСсылки;
	
		Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		
			Форма.Элементы.ДекорацияПояснениеКФорме.Заголовок 	= ОписаниеОшибки;
			Форма.Элементы.ДекорацияПояснениеКФорме.ЦветТекста	= WebЦвета.Красный;
				
		Иначе
		
			Форма.Элементы.ДекорацияПояснениеКФорме.Заголовок  	= "";
			Форма.Элементы.ДекорацияПояснениеКФорме.ЦветТекста	= WebЦвета.Черный;
					
		КонецЕсли;	
		
	Иначе

		ТекущаяСтраница = Форма.Элементы.ГруппаПодключениеСБП;
		Форма.Элементы.ФормаГруппаПанельДействий.Видимость		= Ложь;
		
	КонецЕсли;
	
	Форма.Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьДанныеКассовойСсылки(КассаККМ, КассовыеСсылки, Отказ = Ложь) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(КассовыеСсылки) 
		ИЛИ Не ЗначениеЗаполнено(КассовыеСсылки.СпособыОплаты) Тогда
		ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(КассаККМ, "КассовыеСсылкиСБП");
	Иначе
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(КассаККМ, КассовыеСсылки, "КассовыеСсылкиСБП");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

