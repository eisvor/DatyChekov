#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьПараметрыВРеквизитыФормы();
	
	ОграничитьТипДокументовРасчета();
	УстановитьПараметрыВыбораДокументаРасчетов();
	
	Элементы.РасшифровкаПлатежаПризнакСпособаРасчета.Видимость  = ЭтоФискальнаяОперация;
	Элементы.РасшифровкаПлатежаСистемаНалогообложения.Видимость = ЭтоФискальнаяОперация;
	Элементы.ПодобратьНеоплаченные.Видимость                    = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика;
	Элементы.ПодобратьНеоплаченные.Доступность                  = НЕ ТолькоПросмотр;
	Элементы.ЗаказПокупателя.Видимость                          = ЗначениеЗаполнено(ЗаказПокупателя);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы Тогда
		Элементы.РасшифровкаПлатежаДокументРасчетовСКонтрагентом.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПроверитьСНО();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНеоплаченныхДокументов.Форма.Форма" Тогда
		
		ВыборНеоплаченныхДокументов(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И (Модифицированность ИЛИ ПеренестиВДокумент) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		Отказ = Истина;
		
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		
	ИначеЕсли ПеренестиВДокумент Тогда
		
		Отказ = НЕ ПроверитьЗаполнение();
		
		Если Отказ Тогда
			Модифицированность = Истина;
			ПеренестиВДокумент = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		ИсходящиеПараметры = Новый Структура();
		ИсходящиеПараметры.Вставить("СистемаНалогообложения", 			СистемаНалогообложения);
		ИсходящиеПараметры.Вставить("ЕстьНеСоответствиеСНО", 			ЕстьНеСоответствиеСНО);
		ИсходящиеПараметры.Вставить("СтатьяДвиженияДенежныхСредств", 	СтатьяДвиженияДенежныхСредств);
		АдресХранилищаРасшифровкаПлатежа = ПоместитьВХранилищеРасшифровкуПлатежа();
		ИсходящиеПараметры.Вставить("АдресХранилищаРасшифровкаПлатежа", АдресХранилищаРасшифровкаПлатежа);
		Модифицированность = Ложь;
		ОповеститьОВыборе(ИсходящиеПараметры);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыРасшифровкаПлатежа

&НаКлиенте
Процедура РасшифровкаПлатежаДокументРасчетовСКонтрагентомПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		РасшифровкаПлатежаДокументРасчетовСКонтрагентомПриИзмененииСервер(СтрокаТаблицы.ПолучитьИдентификатор());
		
		ПроверитьСНО(СтрокаТаблицы, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РасшифровкаПлатежаДокументРасчетовСКонтрагентомПриИзмененииСервер(ИдентификаторСтроки)
	
	ТекущаяСтрока = РасшифровкаПлатежа.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ДенежныеСредстваСервер.ЗаполнитьСистемуНалогообложенияЭлементаФормы(ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДокументРасчетовСКонтрагентом) Тогда
		ТипДокументаРасчетов = ТипЗнч(ТекущаяСтрока.ДокументРасчетовСКонтрагентом);
		Если ТипДокументаРасчетов = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
			ТекущаяСтрока.Сумма = ДенежныеСредстваВызовСервера.ПолучитьСуммаВознаграждения(ТекущаяСтрока.ДокументРасчетовСКонтрагентом);
		ИначеЕсли НЕ ТипДокументаРасчетов = Тип("ДокументСсылка.ВводОстатковРасчетовСКлиентами") Тогда
			ТекущаяСтрока.Сумма = ДенежныеСредстваВызовСервера.ПолучитьСуммуДокумента(ТекущаяСтрока.ДокументРасчетовСКонтрагентом);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоФискальнаяОперация Тогда
		Если ТекущаяСтрока = РасшифровкаПлатежа[0] Тогда
			ЗаполнитьСистемуНалогообложения();
		КонецЕсли;
	Иначе
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ Копирование Тогда
		СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
		Если НЕ СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтатьяДвиженияДенежныхСредств = СтрокаТаблицы.СтатьяДвиженияДенежныхСредств;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПризнакСпособаРасчетаПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтрокаТаблицы.СпособРасчетаИзмененВРучную = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Элемент.ТекущиеДанные.НомерСтроки = РасшифровкаПлатежа.Количество();
		
		Если НЕ Копирование Тогда
			Элемент.ТекущиеДанные.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено И НЕ СтрокаТаблицы.СпособРасчетаИзмененВРучную Тогда
		РасшифровкаПлатежаПриОкончанииРедактированияНаСервере(СтрокаТаблицы.ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РасшифровкаПлатежаПриОкончанииРедактированияНаСервере(ИдентификаторСтроки)
	СтрокаТаблицы = РасшифровкаПлатежа.НайтиПоИдентификатору(ИдентификаторСтроки);
	ДенежныеСредстваСервер.ЗаполнитьПризнакСпособаРасчета(ЭтотОбъект, СтрокаТаблицы);
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПередУдалением(Элемент, Отказ)
	
	ПерезаполнитьСистемуНалогообложения = ЭтоФискальнаяОперация
		И Элементы.РасшифровкаПлатежа.ТекущиеДанные = РасшифровкаПлатежа[0];
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПослеУдаления(Элемент)
	
	Если ПерезаполнитьСистемуНалогообложения Тогда
		ЗаполнитьСистемуНалогообложения();
		ПерезаполнитьСистемуНалогообложения = Ложь;
	КонецЕсли;
	
	ПроверитьСНО();
	ПеренумероватьСтроки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьНеоплаченные(Команда)
	
	Если РасшифровкаПлатежа.Количество() > 0 Тогда
		АдресХранилищаРасшифровкаПлатежа = ПоместитьВХранилищеРасшифровкуПлатежа();
	Иначе
		АдресХранилищаРасшифровкаПлатежа = "";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Магазин",     Магазин);
	ПараметрыФормы.Вставить("Контрагент",  Контрагент);
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("ФормаОплаты", ФормаОплаты);
	ПараметрыФормы.Вставить("Операция",    ХозяйственнаяОперация);
	ПараметрыФормы.Вставить("Заказ",       ЗаказПокупателя);
	ПараметрыФормы.Вставить("Ссылка",      Ссылка);
	
	ПараметрыФормы.Вставить("АдресХранилищаРасшифровкаПлатежа", АдресХранилищаРасшифровкаПлатежа);
	
	ОткрытьФорму("Обработка.ПодборНеоплаченныхДокументов.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиВДокумент = Модифицированность;
	Закрыть();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

&НаСервере
Функция ПоместитьВХранилищеРасшифровкуПлатежа()
	
	Адрес = ПоместитьВоВременноеХранилище(РасшифровкаПлатежа.Выгрузить(), УникальныйИдентификатор);
	
	Возврат Адрес;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПараметрыВРеквизитыФормы()
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ПараметрыФормы);
	
	ДокументОснование = ЗаказПокупателя;
	
	Если ЗначениеЗаполнено(Параметры.ПараметрыФормы.АдресХранилищаРасшифровкаПлатежа) Тогда
		РасшифровкаПлатежа.Загрузить(ПолучитьИзВременногоХранилища(Параметры.ПараметрыФормы.АдресХранилищаРасшифровкаПлатежа));
	КонецЕсли;
	
	Если РасшифровкаПлатежа.Количество() = 0 Тогда
		РасшифровкаПлатежа.Добавить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыборНеоплаченныхДокументов(ВыбранноеЗначение)
	
	РасшифровкаПлатежа.Загрузить(ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресКорзиныВХранилище));
	
	Для каждого СтрокаТаблицы Из РасшифровкаПлатежа Цикл
		Если НЕ СтрокаТаблицы = Неопределено Тогда
			Если НЕ СтрокаТаблицы.СпособРасчетаИзмененВРучную Тогда
				ДенежныеСредстваСервер.ЗаполнитьПризнакСпособаРасчета(ЭтотОбъект, СтрокаТаблицы);
			КонецЕсли;
			
			ДенежныеСредстваСервер.ЗаполнитьСистемуНалогообложенияЭлементаФормы(СтрокаТаблицы);
			
			СтрокаТаблицы.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
			
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренумероватьСтроки()
	
	Для Счетчик = 0 По РасшифровкаПлатежа.Количество() - 1 Цикл
		РасшифровкаПлатежа[Счетчик].НомерСтроки = Счетчик + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСистемуНалогообложения()
	
	ДенежныеСредстваСервер.ЗаполнитьСистемуНалогообложения(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСНО(ТекущаяСтрока = Неопределено, ВыводитьСообщения = Ложь)
	
	ЕстьНеСоответствиеСНО = Ложь;
	
	Если ЭтоФискальнаяОперация Тогда
		
		ШаблонСообщений = НСтр("ru='В строке №%1 в документе расчетов с контрагентом система налогообложения отличается от системы налогообложения документа.'");
		
		Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
			
			Если ЗначениеЗаполнено(СтрокаРасшифровки.СистемаНалогообложения) И 
				СистемаНалогообложения <> СтрокаРасшифровки.СистемаНалогообложения Тогда
				
				ЕстьНеСоответствиеСНО = Истина;
				
				Если ВыводитьСообщения И 
					(ТекущаяСтрока = Неопределено ИЛИ ТекущаяСтрока = СтрокаРасшифровки) Тогда
					
					ОбщегоНазначенияКлиент.СообщитьПользователю(
						СтрШаблон(ШаблонСообщений, СтрокаРасшифровки.НомерСтроки),
						,
						СтрШаблон("РасшифровкаПлатежа[%1].СистемаНалогообложения", СтрокаРасшифровки.НомерСтроки-1));
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьТипДокументовРасчета()
	
	ДоступныеТипы = ДенежныеСредстваКлиентСервер.ДоступныеТипыДокументовРасчета(ХозяйственнаяОперация, ТипЗнч(Ссылка));
	
	Если ДоступныеТипы.Количество() > 0 Тогда
		Элементы.РасшифровкаПлатежаДокументРасчетовСКонтрагентом.ВыбиратьТип = ДоступныеТипы.Количество() > 1;
		Элементы.РасшифровкаПлатежаДокументРасчетовСКонтрагентом.ОграничениеТипа = Новый ОписаниеТипов(ДоступныеТипы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораДокументаРасчетов()
	
	// Установим параметры выбора документа расчетов.
	ПараметрыВыбораДокументРасчетов = Новый Массив;
	Если ЗначениеЗаполнено(ЗаказПокупателя) Тогда
		ПараметрыВыбораДокументРасчетов.Добавить(Новый ПараметрВыбора("Отбор.ЗаказПокупателя", ЗаказПокупателя));
	КонецЕсли;
	Элементы.РасшифровкаПлатежаДокументРасчетовСКонтрагентом.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораДокументРасчетов);
	
КонецПроцедуры

#КонецОбласти
