
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);
	
	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	времАвтоматическаяПечатьЧека  = Неопределено;
	времШиринаЛенты               = Неопределено;
	ЯзыкПоУмолчанию               = Неопределено;
	времИспользоватьПринтерЧеков  = Неопределено;
	времПринтерЧеков              = Неопределено;
	
	Параметры.ПараметрыОборудования.Свойство("АвтоматическаяПечатьЧека", времАвтоматическаяПечатьЧека);
	Параметры.ПараметрыОборудования.Свойство("ШиринаЛенты"             , времШиринаЛенты);
	Параметры.ПараметрыОборудования.Свойство("ЯзыкПоУмолчанию"             , ЯзыкПоУмолчанию);
	Параметры.ПараметрыОборудования.Свойство("ИспользоватьПринтерЧеков", времИспользоватьПринтерЧеков);
	Параметры.ПараметрыОборудования.Свойство("ПринтерЧеков"            , времПринтерЧеков);
	
	АвтоматическаяПечатьЧека = ?(времАвтоматическаяПечатьЧека  = Неопределено, Ложь, времАвтоматическаяПечатьЧека);
	ИспользоватьПринтерЧеков = ?(времИспользоватьПринтерЧеков  = Неопределено, Ложь, времИспользоватьПринтерЧеков);
	ПринтерЧеков             = ?(времПринтерЧеков              = Неопределено, Справочники.ПодключаемоеОборудование.ПустаяСсылка(), времПринтерЧеков);
	ШиринаЛенты = ?(времШиринаЛенты = Неопределено, "24", времШиринаЛенты);
	ШиринаЛенты = ?(АвтоматическаяПечатьЧека, ШиринаЛенты, "24");
	
	Элементы.ШиринаЛенты.СписокВыбора.Добавить("24");
	Элементы.ШиринаЛенты.СписокВыбора.Добавить("32");
	Элементы.ШиринаЛенты.СписокВыбора.Добавить("36");
	Элементы.ШиринаЛенты.СписокВыбора.Добавить("40");
	Элементы.ШиринаЛенты.СписокВыбора.Добавить("48");
	
	Элементы.ШиринаЛенты.Доступность = АвтоматическаяПечатьЧека;
	Элементы.ЯзыкПоУмолчанию.Доступность = АвтоматическаяПечатьЧека;
	Элементы.ГруппаПараметровПечати.Доступность = АвтоматическаяПечатьЧека;
	Элементы.ПринтерЧеков.Доступность = ИспользоватьПринтерЧеков;
	
	Элементы.ТестУстройства.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	Элементы.ТестКомпоненты.Видимость = (ПараметрыСеанса.РабочееМестоКлиента = Идентификатор.РабочееМесто);
	
	//принтер чеков
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков));
	Элементы.ПринтерЧеков.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	Если НЕ АвтоматическаяПечатьЧека Тогда
		ШиринаЛенты = "";
		ЯзыкПоУмолчанию = Неопределено;
	КонецЕсли;
	
	Закрыть(ПолучитьНастройки());
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	РезультатТеста = Неопределено;
	ДемонстрационныйРежим = "";
	
	ЭтаФорма.ТолькоПросмотр = Истина;
	ЭтаФорма.КоманднаяПанель.Доступность = Ложь;
	
	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	ПараметрыУстройства = ПолучитьНастройки().ПараметрыОборудования;
	ПараметрыУстройства.Вставить("Идентификатор", Идентификатор);
	
	Оповещение = Новый ОписаниеОповещения("ТестУстройстваЗавершение", ЭтотОбъект);
	ИнтеграцияWebKassaКлиентПереопределяемый.НачатьВыполнениеДополнительнойКоманды(Оповещение, "CheckHealth", ВходныеПараметры, Идентификатор, ПараметрыУстройства);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройстваЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтаФорма.ТолькоПросмотр = Ложь;
	ЭтаФорма.КоманднаяПанель.Доступность = Истина;
	
	ДополнительноеОписание = "";
	ВыходныеПараметры = РезультатВыполнения.ВыходныеПараметры;
	
	Если ТипЗнч(ВыходныеПараметры) = Тип("Массив") Тогда
		
		Если ВыходныеПараметры.Количество() >= 2 Тогда
			ДополнительноеОписание = ВыходныеПараметры[1];
		КонецЕсли;
		
	КонецЕсли;
		
	ТекстСообщения = ?(РезультатВыполнения.Результат,  НСтр("ru = 'Тест успешно выполнен. %ДополнительноеОписание%'"),
	                               НСтр("ru = 'Тест не пройден. %ДополнительноеОписание%'"));
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание), "", ДополнительноеОписание));
	ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура АвтоматическаяПечатьЧекаПриИзменении(Элемент)
	Элементы.ШиринаЛенты.Доступность = АвтоматическаяПечатьЧека;
	Элементы.ЯзыкПоУмолчанию.Доступность = АвтоматическаяПечатьЧека;
	Элементы.ГруппаПараметровПечати.Доступность = АвтоматическаяПечатьЧека;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПринтерЧековПриИзменении(Элемент)
	Элементы.ПринтерЧеков.Доступность = ИспользоватьПринтерЧеков;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНастройки()
	
	НовыеЗначениеПараметров = Новый Структура;
	НовыеЗначениеПараметров.Вставить("АвтоматическаяПечатьЧека", АвтоматическаяПечатьЧека);
	НовыеЗначениеПараметров.Вставить("ШиринаЛенты"             , ШиринаЛенты);
	НовыеЗначениеПараметров.Вставить("ЯзыкПоУмолчанию"         , ЯзыкПоУмолчанию);
	//принтеры чеков
	НовыеЗначениеПараметров.Вставить("ПринтерЧеков"            , ПринтерЧеков);
	НовыеЗначениеПараметров.Вставить("ИспользоватьПринтерЧеков", ИспользоватьПринтерЧеков);
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ТестКомпоненты(Команда)
	
	Результат = ТестКомпонентыНаСервере();
	ТекстСообщения = ?(Результат,  НСтр("ru = 'Тест внешней компоненты успешно выполнен. %ДополнительноеОписание%'"),
	                               НСтр("ru = 'Тест внешней компоненты не пройден. %ДополнительноеОписание%'"));
	Если Результат Тогда
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", "");
	Иначе
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", "Подробности см. в журнале регистрации.");
	КонецЕсли;
	ИнтеграцияWebKassaКлиентПереопределяемый.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаСервереБезКонтекста
// Проверка работы компоненты формирования QR кода.
//
Функция ТестКомпонентыНаСервере()
	
	Результат = Ложь;
	Попытка
		ДанныеQRКода = ИнтеграцияWebKassaВызовСервераПереопределяемый.ПолучитьQRКод("1C:Webkassa", 1, 200);
		Результат = Истина;
	Исключение
		//ОписаниеОшибки()
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
