
////////////////////////////////////////////////////////////////////////////////
// Форма предназначена для выбора ТРП в форме синхронизации документов с сервером ИС ЦЭДМ. 
// Форма должна использоваться при включенной ФО "ВестиУчетПоСкладамИСЦЭДМ"
// Параметры формы:
//  Организация - СправочникСсылка.Организации - Выбранная пользователем организация 
//  ТРП - СправочникСсылка.СкладыИСЦЭДМ - Выбранное пользователем ТРП
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Организация, ТРП");
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьОрганизациюДляПользователяПриСинхронизации();
	КонецЕсли;
	
	Элементы.ДеревоТРП.ТолькоПросмотр = Истина;
	Элементы.ДеревоТРП.РежимВыбора = Истина;
	ЗаполнитьДеревоТРП();
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПриОткрытии(ЭтаФорма, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
	Для Каждого ТекЭлементДерева Из ДеревоТРП.ПолучитьЭлементы() Цикл
		Элементы.ДеревоТРП.Развернуть(ТекЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры  

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура ДеревоТРПВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьТРП(Элемент.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбратьТРП(Элементы.ДеревоТРП.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьТРП(ВыбраннаяСтрока)
	
	Если ВыбраннаяСтрока = Неопределено И ДеревоТРП.ПолучитьЭлементы().Количество() <> 0 Тогда 
		Возврат;
	КонецЕсли;

	Результат = Новый Структура("Организация", ВыбраннаяСтрока.Ссылка); 
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗаполнитьДеревоТРП();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоТРП()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СкладыИСЦЭДМ.Ссылка КАК Ссылка,
	               |	СкладыИСЦЭДМ.Представление КАК Представление,
	               |	СкладыИСЦЭДМ.ИИНБИНСклада КАК Идентификатор,
	               |	СкладыИСЦЭДМ.Наименование КАК Наименование,
	               |	СкладыИСЦЭДМ.Организация КАК Владелец
	               |ИЗ
	               |	Справочник.СкладыИСЦЭДМ КАК СкладыИСЦЭДМ
	               |ГДЕ
	               |	СкладыИСЦЭДМ.Организация = &Владелец
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Владелец", Организация);						  
	Результат = Запрос.Выполнить();	
	
	ДеревоТРП.ПолучитьЭлементы().Очистить();
	
	// Добавляем строку корневого уровня	
	КорневаяСтрока = ДеревоТРП.ПолучитьЭлементы().Добавить();
	КорневаяСтрока.Идентификатор = Организация[ИнтеграцияИСМПТКПереопределяемый.ПолучитьРеквизитИИНОрганизации()];
	Если ОбщегоНазначенияИСМПТК.ЕстьРеквизитОбъекта(Организация, "Наименование") Тогда
		КорневаяСтрока.Наименование = Организация.Наименование;
	Иначе
		КорневаяСтрока.Наименование = "";
	КонецЕсли;
	КорневаяСтрока.Ссылка = Организация;
			
	НоваяВыборка = Результат.Выбрать();
		
	АктивныйТРПИдентификатор = Неопределено;
	ВыдатьРекурсивноДеревоТРП(КорневаяСтрока, НоваяВыборка, АктивныйТРПИдентификатор); 
	
	// Позиционирование на строке с выбранным структурным подразделением
	Если ЗначениеЗаполнено(АктивныйТРПИдентификатор) Тогда		
		Элементы.ДеревоТРП.ТекущаяСтрока = АктивныйТРПИдентификатор;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ВыдатьРекурсивноДеревоТРП(КорневаяСтрока, Выборка, АктивныйТРПИдентификатор) 	
	
	Перем НоваяВыборка;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) ИЛИ Выборка.Ссылка = КорневаяСтрока.Ссылка Тогда 
			Продолжить;
		КонецЕсли;
		
		КорневаяСтрока.ЕстьПодчиненные = Истина;
		НоваяСтрока = КорневаяСтрока.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			НоваяВыборка  = Выборка.Выбрать(СпособВыборки, Выборка.Группировка());
		Иначе
			НоваяВыборка  = Выборка.Выбрать(СпособВыборки);
		КонецЕсли;
		
		Если Выборка.Ссылка = ТРП Тогда 
			АктивныйТРПИдентификатор = НоваяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
		ВыдатьРекурсивноДеревоТРП(НоваяСтрока, НоваяВыборка, АктивныйТРПИдентификатор);
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти