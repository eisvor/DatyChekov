#Область ПрограммныйИнтерфейс

// Обрабатывает событие создание и выбора новой характеристики
//
// Параметры:
//  Результат - СправочникСсылка.ХарактеристикиНоменклатуры - результат обработки.
//  ДополнительныеПараметры - Структура - дополнительные параметры выполнения операции.
//
&НаКлиенте
Процедура ОбработатьСозданиеИВыборНовойХарактеристики(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Товары.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторТекущейСтроки);
	ТекущаяСтрока.Характеристика = Результат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	Если Параметры.Свойство("Штрихкоды") Тогда
		Для каждого ТекСтрока Из Параметры.Штрихкоды Цикл
			Строка = Товары.Добавить();
			Строка.Штрихкод = ТекСтрока.Штрихкод;
			Строка.НомерСтрокиЗагрузки = ТекСтрока.НомерСтрокиЗагрузки;
			Если текСтрока.Свойство("Количество") Тогда
				Строка.Количество = ТекСтрока.Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПеренестиВДокумент(Команда)
	
	ОчиститьСообщения();
	
	РезультатПроверки = ВыполнитьПроверку();
	Если НЕ РезультатПроверки Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНоменклатура = Новый Массив();
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			
			Товар = Новый Структура;
			Товар.Вставить("Штрихкод", СтрокаТЧ.Штрихкод);
			Товар.Вставить("ДанныеПО", СтрокаТЧ.Штрихкод);
			Товар.Вставить("МагнитныйКод", "");
			Товар.Вставить("Количество", СтрокаТЧ.Количество);
			Товар.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
			Товар.Вставить("Характеристика", СтрокаТЧ.Характеристика);
			Товар.Вставить("Упаковка", СтрокаТЧ.Упаковка);
			Товар.Вставить("НомерСтрокиЗагрузки", СтрокаТЧ.НомерСтрокиЗагрузки);
			
			ТаблицаНоменклатура.Добавить(Товар);
				
			ОписаниеОшибки = "";
			
			Если Не УстановитьШтрихкод(СтрокаТЧ.Штрихкод, СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика, 
					СтрокаТЧ.Упаковка, ОписаниеОшибки) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
				Возврат;
			КонецЕсли;
			
		КонецЕсли
	КонецЦикла;   

	Закрыть(ТаблицаНоменклатура);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
                   
&НаКлиенте
Функция ВыполнитьПроверку()
	
	ОшибокНет      = Истина;
	ВыбраныСтроки = Ложь;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			
			ВыбраныСтроки = Истина;
			
			Если СтрокаТЧ.ХарактеристикиИспользуются И НЕ ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
			
				ОбщегоНазначенияКлиент.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не указана характеристика для номенклатуры ""%1""'"), СтрокаТЧ.Номенклатура));
				ОшибокНет = Ложь;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	Если ОшибокНет И НЕ ВыбраныСтроки Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрана номенклатура для переноса'"));
		ОшибокНет = Ложь;
	КонецЕсли;
		
	Возврат ОшибокНет;
	
КонецФункции

#КонецОбласти

&НаСервере
Функция УстановитьШтрихкод(Штрихкод, Номенклатура, Характеристика, Упаковка, ОписаниеОшибки)
	
	Возврат ПодключаемоеОборудованиеРТ.УстановитьШтрихкод(Штрихкод, Номенклатура, Характеристика, Упаковка, ОписаниеОшибки);
	
КонецФункции

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу"      , ТекущаяСтрока.Упаковка);
	
	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Товары, ТекущаяСтрока, СтруктураДействий, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
  
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(ЭтаФорма, Элемент, СтандартнаяОбработка, Элементы.Товары.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаСоздание(Элемент, СтандартнаяОбработка)
	
	ОбработкаТабличнойЧастиТоварыКлиент.СоздатьХарактеристикуНоменклатуры(ЭтотОбъект, Элемент, СтандартнаяОбработка, Элементы.Товары.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьУпаковкуНоменклатуры(ДанныеВыбора, СтандартнаяОбработка, Элементы.Товары.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти