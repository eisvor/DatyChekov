
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("НомерЛицевогоСчета") Тогда
		НомерЛицевогоСчета = Параметры.НомерЛицевогоСчета;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура Заказать(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ТокенАвторизации = Ждать ИнтеграцияИСМПТККлиент.ПолучитьТокенАвторизации(Организация);
	
	Если ТокенАвторизации = Неопределено Тогда
		
		ТекстСообщенияТокенНеПолучен = РаботаСТекстамиИСМПТККлиентСервер.ТекстСообщенияОперацияПрерванаНеПолученыДанныеЭЦП();
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияТокенНеПолучен);
		Возврат;
		
	КонецЕсли;
	
	ЗаказатьНаСервере(ТокенАвторизации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаказатьНаСервере(ТокенАвторизации)
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("НомерЛицевогоСчета", НомерЛицевогоСчета);
	ПараметрыСчета.Вставить("АдресПочты", АдресПочты);
	ПараметрыСчета.Вставить("Сумма", Сумма);
	
	РезультатЗапроса = ИнтеграцияИСМПТК.СоздатьСчетНаОплату(ПараметрыСчета, ТокенАвторизации);
	Если Не ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки) Тогда
		ТекстСообщенияУспешно = нСтр("ru='Запрос успешно обработан. Счет будет отправлен в ближайшее время'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияУспешно);
	Иначе
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(РезультатЗапроса.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
