#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьНесколькоОрганизаций 	= ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	ИспользуетсяНесколькоСкладов 		= Справочники.Склады.ИспользуетсяНесколькоСкладов();
	
	Если НЕ ИспользоватьНесколькоОрганизаций И НЕ ИспользуетсяНесколькоСкладов Тогда
	
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'При использовании одной организации и одного склада данные настройки недоступны.'"),,,,Отказ);
	
	КонецЕсли;
	
	Элементы.Организация.Видимость 								= ИспользоватьНесколькоОрганизаций;
	Элементы.ДетализацияПоРабочимМестамОрганизация.Видимость 	= ИспользоватьНесколькоОрганизаций;
	
	Если Параметры.Свойство("Отбор") Тогда 
		
		Если Параметры.Отбор.Свойство("Магазин", МагазинОтбор) Тогда
			
			Элементы.МагазинОтбор.Доступность = Ложь;
			МагазинОтборПриИзмененииСервер(Ложь);
			
		Иначе
			
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
				Список,
				"Магазин",
				Справочники.Магазины.ПустаяСсылка(),
				ЗначениеЗаполнено(МагазинОтбор));
			
		КонецЕсли;
		
	КонецЕсли;
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ДетализацияПоРабочимМестам,
		"Магазин",
		МагазинОтбор, 
		ЗначениеЗаполнено(МагазинОтбор));
		
	Если ЗначениеЗаполнено(МагазинОтбор) Тогда 	
		РазныеСкладыПродажиПоступления = РазныеСклады(МагазинОтбор);
		ОбновитьСвойстваЭлементовСклады(ЭтотОбъект);
		Элементы.РазныеСкладыПродажиПоступления.Доступность = НЕ РазныеСкладыПродажиПоступления;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РаспределениеНоменклатурыИзменениеЗаписи" И Параметр = МагазинОтбор Тогда
	
		ОбработатьОповещениеИзменениеЗаписиНаСервере();
		ПодключитьОбработчикОжидания("УстановитьОтборДетализацияПоРабочимМестам", 0.1, Истина);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьТекстОписания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МагазинОтборПриИзменении(Элемент)
	
	МагазинОтборПриИзмененииСервер();
	
	ОбновитьСвойстваЭлементовСклады(ЭтотОбъект);
	Элементы.РазныеСкладыПродажиПоступления.Доступность = НЕ РазныеСкладыПродажиПоступления;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазныеСклады(Магазин)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаспределениеНоменклатуры.Магазин КАК Магазин
		|ИЗ
		|	РегистрСведений.РаспределениеНоменклатуры КАК РаспределениеНоменклатуры
		|ГДЕ
		|	РаспределениеНоменклатуры.СкладПродажи <> РаспределениеНоменклатуры.СкладПоступления
		|	И РаспределениеНоменклатуры.Магазин = &Магазин
		|	И РаспределениеНоменклатуры.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
			
КонецФункции

&НаКлиенте
Процедура РасшифровкаНажатие(Элемент)
	
	Элементы.Описание.Видимость = НЕ Элементы.Описание.Видимость;
	
	Если Элементы.Описание.Видимость Тогда
		Элементы.Расшифровка.Заголовок = НСтр("ru = 'Скрыть расшифровку'");
	Иначе
		Элементы.Расшифровка.Заголовок = НСтр("ru = 'Показать расшифровку'");
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	ОбновитьТекстОписания();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("УстановитьОтборДетализацияПоРабочимМестам", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	
	Если Копирование Тогда
		
		ТекущаяСтрока = Элемент.ТекущиеДанные;
			
		ПараметрыФормы.Вставить("Магазин", 			ТекущаяСтрока.Магазин);
		ПараметрыФормы.Вставить("Организация", 		ТекущаяСтрока.Организация);
		ПараметрыФормы.Вставить("СкладПоступления", ТекущаяСтрока.СкладПоступления);	
		ПараметрыФормы.Вставить("СкладПродажи", 	ТекущаяСтрока.СкладПродажи);	
		
	Иначе
			
		ПараметрыФормы.Вставить("Магазин", МагазинОтбор);
		
	КонецЕсли;	

	ПараметрыФормы.Вставить("РазныеСкладыПродажиПоступления", 	РазныеСкладыПродажиПоступления);
	ПараметрыФормы.Вставить("СкрытьРабочееМесто", 				Истина);
	
	// &ЗамерПроизводительности 	
        ОценкаПроизводительностиРТКлиент.НачатьЗамер(
                 Истина, "РегистрСведений.РаспределениеНоменклатуры.ФормаЗаписи");		

	ОткрытьФорму("РегистрСведений.РаспределениеНоменклатуры.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", 							ВыбраннаяСтрока);
	ПараметрыФормы.Вставить("РазныеСкладыПродажиПоступления", 	РазныеСкладыПродажиПоступления);
	ПараметрыФормы.Вставить("СкрытьРабочееМесто", 				Истина);

	// &ЗамерПроизводительности 	
        ОценкаПроизводительностиРТКлиент.НачатьЗамер(
                 Истина, "РегистрСведений.РаспределениеНоменклатуры.ФормаЗаписи");		

	ОткрытьФорму("РегистрСведений.РаспределениеНоменклатуры.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДетализацияПоРабочимМестам

&НаКлиенте
Процедура ДетализацияПоРабочимМестамПриИзменении(Элемент)
	ОбновитьТекстОписания();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборДетализацияПоРабочимМестам()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			ДетализацияПоРабочимМестам,
			"ТоварнаяГруппа",
			ТекущиеДанные.ТоварнаяГруппа, 
			Истина);
			
			Если ТекущиеДанные.КоличествоДетализацияПоРабочемуМесту > 0 Тогда
				ЗаголовокГруппы = СтрШаблон(НСтр("ru = 'Рабочие места (%1)'"), ТекущиеДанные.КоличествоДетализацияПоРабочемуМесту);
			Иначе
				ЗаголовокГруппы = НСтр("ru = 'Рабочие места'");
		КонецЕсли;
		
	Иначе
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			ДетализацияПоРабочимМестам,
			"ТоварнаяГруппа",
			ПредопределенноеЗначение("Справочник.ТоварныеГруппы.ПустаяСсылка"), Истина);
			
		ЗаголовокГруппы = НСтр("ru = 'Рабочие места'");
		
	КонецЕсли;
	
	Элементы.ГруппаДетализацияПоРабочимМестам.Заголовок 					 = ЗаголовокГруппы;
	Элементы.ГруппаДетализацияПоРабочимМестам.ЗаголовокСвернутогоОтображения = ЗаголовокГруппы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСвойстваЭлементовСклады(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.РазныеСкладыПродажиПоступления Тогда
		Элементы.СкладПоступления.Видимость = Истина;
		Элементы.СкладПродажи.Заголовок 	= НСтр("ru = 'Склад продажи'");
	Иначе
		Элементы.СкладПоступления.Видимость = Ложь;
		Элементы.СкладПродажи.Заголовок 	= НСтр("ru = 'Склад'");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура РазныеСкладыПродажиПоступленияПриИзменении(Элемент)
	
	ОбновитьСвойстваЭлементовСклады(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура МагазинОтборПриИзмененииСервер(УстанавливатьОтборы = Истина)
	
	Если УстанавливатьОтборы Тогда
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			Список,
			"Магазин",
			МагазинОтбор,
			ЗначениеЗаполнено(МагазинОтбор));
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			ДетализацияПоРабочимМестам,
			"Магазин",
			МагазинОтбор,
			ЗначениеЗаполнено(МагазинОтбор));
		
	КонецЕсли;
	
	Описание = "";
	
	Если ЗначениеЗаполнено(МагазинОтбор) Тогда
		РазныеСкладыПродажиПоступления = РазныеСклады(МагазинОтбор);
		ОбновитьТекстОписанияНаСервере();
	Иначе
		РазныеСкладыПродажиПоступления = Ложь;
	КонецЕсли;
	
	ИспользуетсяНесколькоСкладов = Справочники.Склады.ИспользуетсяНесколькоСкладов(МагазинОтбор);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"РазныеСкладыПродажиПоступления", 
		"Видимость", 
		ИспользуетсяНесколькоСкладов);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"СкладПродажи", 
		"Видимость", 
		ИспользуетсяНесколькоСкладов);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"ДетализацияПоРабочимМестамСкладПродажи", 
		"Видимость", 
		ИспользуетсяНесколькоСкладов);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекстОписания()
	
	Описание = "";
		
	Если ЗначениеЗаполнено(МагазинОтбор) Тогда
		ОбновитьТекстОписанияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстОписанияНаСервере()
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаспределениеНоменклатуры.Магазин КАК Магазин,
		|	РаспределениеНоменклатуры.ТоварнаяГруппа.Наименование КАК ТоварнаяГруппа,
		|	ПРЕДСТАВЛЕНИЕ(РаспределениеНоменклатуры.РабочееМесто) КАК РабочееМесто,
		|	ПРЕДСТАВЛЕНИЕ(РаспределениеНоменклатуры.Организация) КАК Организация,
		|	ПРЕДСТАВЛЕНИЕ(РаспределениеНоменклатуры.СкладПродажи) КАК СкладПродажи,
		|	ПРЕДСТАВЛЕНИЕ(РаспределениеНоменклатуры.СкладПоступления) КАК СкладПоступления,
		|	РаспределениеНоменклатуры.Магазин.СкладПоступления.Наименование КАК СкладПоступленияПоУмолчанию,
		|	РаспределениеНоменклатуры.Магазин.СкладПродажи.Наименование КАК СкладПродажиПоУмолчанию,
		|	РаспределениеНоменклатуры.Магазин.Наименование КАК МагазинПредставление,
		|	РаспределениеНоменклатуры.Магазин.СкладПродажи.Организация.Наименование КАК ОрганизацияСкладаПродажи,
		|	РаспределениеНоменклатуры.Магазин.СкладПоступления.Организация.Наименование КАК ОрганизацияСкладаПоступления
		|ИЗ
		|	РегистрСведений.РаспределениеНоменклатуры КАК РаспределениеНоменклатуры
		|ГДЕ
		|	РаспределениеНоменклатуры.Магазин = &Магазин
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварнаяГруппа
		|ИТОГИ
		|	МАКСИМУМ(СкладПоступленияПоУмолчанию),
		|	МАКСИМУМ(СкладПродажиПоУмолчанию),
		|	МАКСИМУМ(МагазинПредставление),
		|	МАКСИМУМ(ОрганизацияСкладаПродажи),
		|	МАКСИМУМ(ОрганизацияСкладаПоступления)
		|ПО
		|	Магазин";
		
		Запрос.УстановитьПараметр("Магазин", МагазинОтбор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаМагазин = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаМагазин.Следующий() Тогда
			
			МассивСтрок = Новый Массив;
			
			Если ЗначениеЗаполнено(ВыборкаМагазин.СкладПродажиПоУмолчанию) Тогда
				
				ОписаниеРаспределенияПоСкладу = НСтр("ru = 'Распределять продажи по умолчанию со склада ""%1""(""%2"").'");
				ОписаниеРаспределенияПоСкладу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеРаспределенияПоСкладу, 
																										ВыборкаМагазин.СкладПродажиПоУмолчанию,
																									 	ВыборкаМагазин.ОрганизацияСкладаПродажи);
				
			Иначе
				
				ОписаниеРаспределенияПоСкладу = НСтр("ru = 'Не задан склад продажи для магазина ""%1"". 
															|Заполните склад продажи.'");
				ОписаниеРаспределенияПоСкладу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеРаспределенияПоСкладу, 
																										ВыборкаМагазин.МагазинПредставление);
				
			КонецЕсли;
			
			МассивСтрок.Добавить(ОписаниеРаспределенияПоСкладу);
			
			Если ЗначениеЗаполнено(ВыборкаМагазин.СкладПоступленияПоУмолчанию) Тогда
				
				ОписаниеРаспределенияПоСкладу = НСтр("ru = 'Распределять поступления по умолчанию на склад ""%1"".'");
				ОписаниеРаспределенияПоСкладу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеРаспределенияПоСкладу, 
																										ВыборкаМагазин.СкладПоступленияПоУмолчанию);
				
			Иначе
				
				ОписаниеРаспределенияПоСкладу = НСтр("ru = 'Не задан склад приемки для магазина ""%1"". 
															|Заполните склад поступления.'");
				ОписаниеРаспределенияПоСкладу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОписаниеРаспределенияПоСкладу, 
																										ВыборкаМагазин.МагазинПредставление);
				
			КонецЕсли;
			
			МассивСтрок.Добавить(ОписаниеРаспределенияПоСкладу);
			
			ШаблонУточнения 		= НСтр("ru = 'Номенклатуру с товарной группой ""%1""%2 продавать от организации ""%3""%4%5.'");
			ШаблонРабочееМесто 		= НСтр("ru = ' с рабочего места ""%1""'");
			ШаблонСкладПродажи 		= НСтр("ru = ' со склада ""%1""'");
			ШаблонСкладПоступления 	= НСтр("ru = ', приходовать на склад ""%1""'");
			
			Выборка = ВыборкаМагазин.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.РабочееМесто) Тогда
					ТекстРабочееМесто = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонРабочееМесто, Выборка.РабочееМесто);
				Иначе
					ТекстРабочееМесто = "";
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.СкладПродажи) Тогда
					ТекстСкладПродажи = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСкладПродажи, Выборка.СкладПродажи);
				Иначе
					ТекстСкладПродажи = "";
				КонецЕсли;	
				
				Если ЗначениеЗаполнено(Выборка.СкладПоступления) Тогда
					ТекстСкладПоступления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСкладПоступления, Выборка.СкладПоступления);
				Иначе
					ТекстСкладПоступления = "";
				КонецЕсли;	
				
				Уточнение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУточнения, 
																					Выборка.ТоварнаяГруппа, 
																					ТекстРабочееМесто,
																					Выборка.Организация,
																					ТекстСкладПродажи,
																					ТекстСкладПоступления);
				
				МассивСтрок.Добавить(Уточнение);
				
			КонецЦикла;
			
			Описание = СтрСоединить(МассивСтрок, Символы.ПС);
			
		КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ОбработатьОповещениеИзменениеЗаписиНаСервере()
	
	ОбновитьТекстОписанияНаСервере();
	
КонецПроцедуры

#КонецОбласти