
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	//Выставляем значение по умолчанию из общих настроек ИС МПТ
	ОтображатьДанныеПоНоменклатуре = Константы.ОтображатьДанныеПоНоменклатуреВДокументахСУЗИСМПТК.Получить();
	РазрешенаПовторнаяПечать 	   = ОбщегоНазначенияИСМПТКПереопределяемый.РазрешенаПовторнаяПечатьКодовМаркировки();
	
	ВосстановитьНастройкиФормы();
	ОбновитьСпискиДокументов();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДоступностьюКомандСписка();
	СформироватьСпискиИУстановитьОформление();
		
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокКодовОрганизацииПриИзменении(Элемент)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организации, Ложь, "СписокКодов");
	ОбновитьСпискиДокументов();
	УправлениеДоступностьюКомандСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "СписокКодов");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Ложь, "СписокКодов");
	ОбновитьСпискиДокументов();
	УправлениеДоступностьюКомандСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Ложь, "СписокКодов");
	ОбновитьСпискиДокументов();
	УправлениеДоступностьюКомандСписка();
	
	СохранитьНастройкиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацияПриИзменении(Элемент)
	
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Организация, Ложь, "СписокКодов");
	ОбновитьСпискиДокументов();
	УправлениеДоступностьюКомандСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОткрытьФормуВыбораОрганизаций(ЭтотОбъект, "СписокКодов");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, Неопределено, Ложь, "СписокКодов");
	ОбновитьСпискиДокументов();
	УправлениеДоступностьюКомандСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКодовОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСДокументамиИСМПТККлиент.ОбработатьВыборОрганизаций(ЭтотОбъект, ВыбранноеЗначение, Ложь, "СписокКодов");
	ОбновитьСпискиДокументов();
	УправлениеДоступностьюКомандСписка();
	
	СохранитьНастройкиФормы();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	УправлениеДоступностьюКомандСписка();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	Документ 		= Новый СписокЗначений(); //Основной параметр для передачи в печать, список выбранных для печати Заказов
	ПредыдущийЗаказ = Неопределено;
	ВыбранныеШК 	= Новый Массив(); //Дополнительный параметр для передачи при выкл. опции ПечатьВсегоЗаказа
	МассивШК 		= Новый Массив(); //Список GTIN из Заказа, которые выбрали для печати
	
	Для Каждого Строка Из Элементы.Список.ВыделенныеСтроки Цикл
		//Заполняем список заказов для печати
		ЗаказКМ = Элементы.Список.ДанныеСтроки(Строка).ЗаказНаЭмиссию;
		Документ.Добавить(ЗаказКМ);
		Если Не ПечатьВсегоЗаказа Тогда
			//Отдельно требуется список выбранных для печати ШК
			//При режиме ПечатьВсегоЗаказа ТЧ Список схлапывается до Заказов без расшифровки по входящим в них GTIN, количество - общее кол-во КМ по этому Заказу в Пуле,  
			//на печать передаются все возможные КМ по выбранному документу - в форме печати пользователь может отредактировать кол-во в разрезе ШК самостоятельно.
			//При режиме с выкл. опцией, в Список выводятся строки Заказ+GTIN, кол-во это доступное кол-во по каждому ШК отдельно.
			//На печать при этом выводим только строки, которые выбрал пользователь. Поэтому формируем дополнительный параметр для передачи:
			ЗаказКМ  = Элементы.Список.ДанныеСтроки(Строка).ЗаказНаЭмиссию;
			Штрихкод = Элементы.Список.ДанныеСтроки(Строка).GTIN;
			Если НЕ ЗаказКМ = ПредыдущийЗаказ 
				И Не ПредыдущийЗаказ = Неопределено Тогда
				//Заканчиваем формирование структуры
				ДанныеОдногоШК = Новый Структура();
				ДанныеОдногоШК.Вставить("ЗаказКМ",  ПредыдущийЗаказ);
				ДанныеОдногоШК.Вставить("МассивШК", МассивШК);
				ВыбранныеШК.Добавить(ДанныеОдногоШК);
				МассивШК = Новый Массив();
			КонецЕсли;
			МассивШК.Добавить(Штрихкод);
			ПредыдущийЗаказ = ЗаказКМ;
		КонецЕсли;
	КонецЦикла;
	
	Если Не МассивШК.Количество() = 0 Тогда
		ДанныеОдногоШК = Новый Структура();
		ДанныеОдногоШК.Вставить("ЗаказКМ",  ПредыдущийЗаказ);
		ДанныеОдногоШК.Вставить("МассивШК", МассивШК);
		ВыбранныеШК.Добавить(ДанныеОдногоШК);
	КонецЕсли;
	
	Если ПечатьВсегоЗаказа Тогда
		РежимВыбораПечати = "ВсеДоступныеПоЗаказу";
	Иначе
		РежимВыбораПечати = "ТолькоВыбранные";
	КонецЕсли;
	
	ПараметрыФормыПечати = Новый Структура();
	ПараметрыФормыПечати.Вставить("Документ", 		   Документ);    //Список ЗаказКМ, по которым отобраны какие-то данные для печати.
	ПараметрыФормыПечати.Вставить("ВыбранныеШК", 	   ВыбранныеШК); //Структура данных с набором "ЗаказКМ + Список GTIN, которые по нему нужно распечатать". Если режим печати "все по заказу", то этот параметр пустой.
	ПараметрыФормыПечати.Вставить("РежимВыбораПечати", РежимВыбораПечати);
	ОповещениеПриЗакрытии = Новый ОписаниеОповещения("ПриЗакрытииФормыПечати", ЭтотОбъект);
	
	ПечатьКодовМаркировкиИСМПТККлиент.ОтрытьФормуПечатиКодовМаркировок(ЭтотОбъект, ПараметрыФормыПечати, ОповещениеПриЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьДанныеПоНоменклатуреПриИзменении(Элемент)
	
	УправлениеФормой();
				
КонецПроцедуры

&НаСервере
Процедура ОбнулитьДатуПечатиИСтатусКодовПоЗаказу(ЗаказКодов, ОперацияВыполненаУспешно) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка 
		
		НаборДанныхДляОбновления = РегистрыСведений.ПулКодовМаркировкиСУЗИСМПТК.СоздатьНаборЗаписей();
		НаборДанныхДляОбновления.Отбор.ЗаказНаЭмиссию.Установить(ЗаказКодов);
		НаборДанныхДляОбновления.Прочитать();
		
		ДатаПечатиОбнуленная = Дата("00010101000000");
		
		Для Каждого СтрокаТаблицы Из НаборДанныхДляОбновления Цикл
			
			СтрокаТаблицы.ДатаПечати = ДатаПечатиОбнуленная;
			СтрокаТаблицы.Статус = ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован");
			
		КонецЦикла;
		
		НаборДанныхДляОбновления.Записать();	
		ОперацияВыполненаУспешно = Истина;
		
	Исключение
		
		ТекстСообщения = НСтр("ru='Не удалось сбросить дату печати!'");
		ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти 

#Область Прочее

&НаКлиенте
Процедура УправлениеДоступностьюКомандСписка()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено 
		Или Не ПроверитьДоступность("ПечатьКодовМаркировкиИСМПТК") Тогда
		Элементы.СписокПечать.Доступность = Ложь;
	Иначе 
		Элементы.СписокПечать.Доступность = ТекущиеДанные.ЕстьНераспечатанные;
	КонецЕсли;
	
	Если ПроверитьДоступность("СброситьФлагПечатиПоЗаказу") Тогда
		Элементы.СписокСброситьФлагПечатиПоЗаказу.Доступность = РазрешенаПовторнаяПечать;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПроверитьДоступность(Параметр)
	
	Если Параметр = "ПечатьКодовМаркировкиИСМПТК" Тогда
		Возврат ПравоДоступа("Просмотр", Метаданные.Обработки.ПечатьКодовМаркировкиИСМПТК);
	ИначеЕсли Параметр = "СброситьФлагПечатиПоЗаказу" Тогда
		Возврат ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ПулКодовМаркировкиСУЗИСМПТК.Команды.СброситьФлагПечатиПоЗаказу);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытииФормыПечати(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьСписокКодовМаркировки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокКодовМаркировки() Экспорт
	
	Элементы.Список.Обновить();
	Элементы.СписокЗакрытые.Обновить();
	
	УправлениеДоступностьюКомандСписка();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	//Если ПечатьВсегоЗаказа, то ном-ру не выводим всегда, опцию отображения не учитываем
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтображатьДанныеПоНоменклатуре", "Доступность", Не ПечатьВсегоЗаказа);
	
	//Если ПечатьВсегоЗаказа, то выводятся схлопнутые данные без расшифровки по GTIN
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокGTIN", 		"Видимость", НЕ ПечатьВсегоЗаказа);
	ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокЗакрытыеGTIN", "Видимость", НЕ ПечатьВсегоЗаказа);
		
	Если Не ПечатьВсегоЗаказа Тогда
		//Видимость групп сведений номенклатуры
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДанныеНоменклатуры", 		  "Видимость", ОтображатьДанныеПоНоменклатуре);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокЗакрытыеДанныеНоменклатуры", "Видимость", ОтображатьДанныеПоНоменклатуре);
		
		//Видимость поля характеристика - дополнительная проверка ФО
		Если ОтображатьДанныеПоНоменклатуре Тогда
			ПоказыватьХарактеристику = ИнтеграцияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик();
		Иначе
			ПоказыватьХарактеристику = Ложь;
		КонецЕсли;
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокХарактеристика",      	  "Видимость", ПоказыватьХарактеристику);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокЗакрытыеХарактеристика", "Видимость", ПоказыватьХарактеристику);
	Иначе
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДанныеНоменклатуры", 		  "Видимость", Ложь);
		ОбщегоНазначенияИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокЗакрытыеДанныеНоменклатуры", "Видимость", Ложь);
	КонецЕсли;	
			
КонецПроцедуры

&НаСервере
Процедура ОбновитьСпискиДокументов()
	
	СохранитьНастройкиФормы();
	Если ЗначениеЗаполнено(Организация) Тогда
		УстановитьБыстрыйОтбор(Список, 		   "Организация", Организация);
		УстановитьБыстрыйОтбор(СписокЗакрытые, "Организация", Организация);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиФормы()
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекСохранить("ПанельОбменИСМПТК", "Организация", Организация);
	ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекСохранить("ПанельОбменИСМПТК", "ОрганизацииПредставление", ОрганизацииПредставление);
	ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекСохранить("ПанельОбменИСМПТК", "Организации", Организации);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиФормы()
	
	Организации = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "Организации");
	Организация = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "Организация", Организация);
	ОрганизацииПредставление = ОбщегоНазначенияИСМПТКПереопределяемый.ХранилищеОбщихНастроекЗагрузить("ПанельОбменИСМПТК", "ОрганизацииПредставление", ОрганизацииПредставление);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьБыстрыйОтбор(ИмяСписка, ВидЭлемента, ЗначениеЭлемента)
	
	ОбщегоНазначенияИСМПТККлиентСервер.ИзменитьЭлементОтбораСписка(ИмяСписка, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

#Область СпискиЗаказов

&НаСервере
Процедура СформироватьСпискиИУстановитьОформление()
	
	//Формируем тексты запросов в зависимости от выбранного режима
	Список.ТекстЗапроса			= ТекстЗапросаСписокАктивныеЗаказы();
	СписокЗакрытые.ТекстЗапроса = ТекстЗапросаСписокЗакрытыеЗаказы();
	
	//Устанавливаем оформление
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаСписокАктивныеЗаказы()
	
	Если ПечатьВсегоЗаказа Тогда
		//Выводим данные по Заказам без расшифровки до GTIN (и номенклатуре), 
		//количество - обзее кол-во доступных (полученных и не распечатанных) кодов по документу 
		ТекстЗапроса = "ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация КАК Организация,
		|	ПулКодовМаркировкиСУЗ.Статус КАК Статус,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции КАК ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации) КАК Количество,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот КАК СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон КАК Шаблон,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьНераспечатанные,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
		|	НЕОПРЕДЕЛЕНО КАК GTIN
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации),
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|				И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	НЕ ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказНаЭмиссию";
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация КАК Организация,
		|	ПулКодовМаркировкиСУЗ.Статус КАК Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура КАК Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика КАК Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции КАК ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации) КАК Количество,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот КАК СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон КАК Шаблон,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьНераспечатанные,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN КАК GTIN
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации),
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|				И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	НЕ ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказНаЭмиссию";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаСписокЗакрытыеЗаказы()
	
	Если ПечатьВсегоЗаказа Тогда
		//Выводим данные по Заказам без расшифровки до GTIN (и номенклатуре), 
		//количество - обзее кол-во доступных (полученных и не распечатанных) кодов по документу 
		ТекстЗапроса = "ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация КАК Организация,
		|	ПулКодовМаркировкиСУЗ.Статус КАК Статус,
		|	Неопределено КАК Номенклатура,
		|	Неопределено КАК Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции КАК ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации) КАК Количество,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьНераспечатанные,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот КАК СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон КАК Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
		|	Неопределено КАК GTIN
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Использован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	Неопределено,
		|	Неопределено,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации),
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|				И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	Неопределено
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	НЕ ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Использован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию";
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация КАК Организация,
		|	ПулКодовМаркировкиСУЗ.Статус КАК Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура КАК Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика КАК Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции КАК ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации) КАК Количество,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьНераспечатанные,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот КАК СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон КАК Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию КАК ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN КАК GTIN
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Использован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	КОЛИЧЕСТВО(ПулКодовМаркировкиСУЗ.КодИдентификации),
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ПулКодовМаркировкиСУЗ.ДатаПечати) = ДАТАВРЕМЯ(1, 1, 1)
		|				И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Сгенерирован)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN
		|ИЗ
		|	РегистрСведений.ПулКодовМаркировкиСУЗИСМПТК КАК ПулКодовМаркировкиСУЗ
		|ГДЕ
		|	НЕ ПулКодовМаркировкиСУЗ.ВидПродукции = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИСМПТК.Обувная)
		|	И ПулКодовМаркировкиСУЗ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКодовМаркировкиСУЗИСМПТК.Использован)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПулКодовМаркировкиСУЗ.Организация,
		|	ПулКодовМаркировкиСУЗ.Статус,
		|	ПулКодовМаркировкиСУЗ.Номенклатура,
		|	ПулКодовМаркировкиСУЗ.Характеристика,
		|	ПулКодовМаркировкиСУЗ.ВидПродукции,
		|	ПулКодовМаркировкиСУЗ.СпособВводаВОборот,
		|	ПулКодовМаркировкиСУЗ.Шаблон,
		|	ПулКодовМаркировкиСУЗ.ЗаказНаЭмиссию,
		|	ПулКодовМаркировкиСУЗ.GTIN";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура ПечатьВсегоЗаказаПриИзменении(Элемент)
	
	СформироватьСпискиИУстановитьОформление(); 
	
	Элементы.Список.Обновить();
	Элементы.СписокЗакрытые.Обновить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ОбщегоНазначенияИСМПТККлиентПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ОбщегоНазначенияИСМПТКПереопределяемый.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
