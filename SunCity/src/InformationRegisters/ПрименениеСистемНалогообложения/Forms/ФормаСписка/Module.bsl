#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.Отбор.Свойство("Организация", ОрганизацияОтбор) Тогда
		Элементы.ОрганизацияОтбор.Доступность = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Магазин", МагазинОтбор) Тогда
		Элементы.МагазинОтбор.Доступность = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Склад", СкладОтбор) Тогда
		Элементы.СкладОтбор.Доступность = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ТоварнаяГруппа", ТоварнаяГруппаОтбор) Тогда
		Элементы.ТоварнаяГруппаОтбор.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"Организация",
		ОрганизацияОтбор, 
		ЗначениеЗаполнено(ОрганизацияОтбор));
		
	// Склад зависимый реквизит
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"Склад",
		СкладОтбор, 
		ЗначениеЗаполнено(СкладОтбор));
		
	УстановитьСвязиВыбораСклада()
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинОтборПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"Магазин",
		МагазинОтбор, 
		ЗначениеЗаполнено(МагазинОтбор));

	// Склад зависимый реквизит
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"Склад",
		СкладОтбор, 
		ЗначениеЗаполнено(СкладОтбор));
		
	УстановитьСвязиВыбораСклада();

КонецПроцедуры

&НаКлиенте
Процедура СкладОтборПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"Склад",
		СкладОтбор, 
		ЗначениеЗаполнено(СкладОтбор));

КонецПроцедуры

&НаКлиенте
Процедура ТоварнаяГруппаОтборПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		"ТоварнаяГруппа",
		ТоварнаяГруппаОтбор, 
		ЗначениеЗаполнено(ТоварнаяГруппаОтбор));

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	
	Если Истина Или (НЕ ЗначениеЗаполнено(ТекущаяСтрока.Магазин) 
		И НЕ ЗначениеЗаполнено(ТекущаяСтрока.Склад)
		И НЕ ЗначениеЗаполнено(ТекущаяСтрока.ТоварнаяГруппа)) Тогда 
		// Это запись СНО Организации
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", 				ВыбраннаяСтрока);
		ПараметрыФормы.Вставить("ВводСНООрганизации", 	Истина);
		
		// &ЗамерПроизводительности 	
		ОценкаПроизводительностиРТКлиент.НачатьЗамер(
				Истина, "РегистрСведений.ПрименениеСистемНалогообложения.ФормаЗаписи");	
		
		ОткрытьФорму("РегистрСведений.ПрименениеСистемНалогообложения.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
	// &ЗамерПроизводительности 	
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
			Истина, "РегистрСведений.ПрименениеСистемНалогообложения.ФормаЗаписи");	
			
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	
	РазрешеноУдалять = РазрешеноУдалятьЗапись(ТекущаяСтрока.Период, ТекущаяСтрока.Организация);
	
	Если НЕ РазрешеноУдалять Тогда	
		ОбщегоНазначенияКлиент.СообщитьПользователю(
		НСтр("ru = 'Невозможно удалить запись. Должна быть хотя бы одна запись для определения системы налогообложения для организации.'"));
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция РазрешеноУдалятьЗапись(Период, Организация)
		
	Возврат РегистрыСведений.ПрименениеСистемНалогообложения.РазрешеноУдалятьЗапись(Период, Организация);
		
КонецФункции

&НаСервере
Процедура УстановитьСвязиВыбораСклада()
	
	МассивСвязей = Новый Массив();
	
	Если ЗначениеЗаполнено(ОрганизацияОтбор) Тогда
		Связь = Новый СвязьПараметраВыбора("Отбор.Организация", "ОрганизацияОтбор");
		МассивСвязей.Добавить(Связь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МагазинОтбор) Тогда
		Связь = Новый СвязьПараметраВыбора("Отбор.Магазин", "МагазинОтбор");
		МассивСвязей.Добавить(Связь);
	КонецЕсли;
 
	Элементы.СкладОтбор.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
	
КонецПроцедуры

#КонецОбласти