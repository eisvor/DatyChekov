#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин) ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// ЭлектронноеВзаимодействие.РаботаСНоменклатурой

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.НоменклатураПоставщиков;
	ПолноеИмяРегистра = МетаданныеОбъекта.ПолноеИмя();
	ПараметрыОтметкиВыполнения = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ОбработанныхОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ПараметрыВыборки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураПоставщиков.Поставщик КАК Владелец,
	|	НоменклатураПоставщиков.Идентификатор КАК Идентификатор,
	|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
	|	НоменклатураПоставщиков.Характеристика КАК Характеристика,
	|	НоменклатураПоставщиков.Упаковка КАК Упаковка
	|ИЗ
	|	РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|ГДЕ
	|	НоменклатураПоставщиков.Идентификатор <> """"
	|	И НоменклатураПоставщиков.Поставщик ССЫЛКА Справочник.Контрагенты
	|	И НоменклатураПоставщиков.Поставщик <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	ТаблицаОтбора = Запрос.Выполнить().Выгрузить();
	МенеджерТаблиц = Новый МенеджерВременныхТаблиц;
	
	СопоставлениеНоменклатурыКонтрагентов.СоздатьВременнуюТаблицуСоответствияНоменклатуры(ТаблицаОтбора, "втНоменклатураКонтрагентов", МенеджерТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураПоставщиков.Поставщик КАК Владелец,
	|	НоменклатураПоставщиков.Идентификатор КАК Идентификатор,
	|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
	|	НоменклатураПоставщиков.Характеристика КАК Характеристика,
	|	НоменклатураПоставщиков.Упаковка КАК Упаковка,
	|	НоменклатураПоставщиков.Артикул КАК Артикул,
	|	НоменклатураПоставщиков.Номенклатура.Наименование КАК Наименование,
	|	НоменклатураПоставщиков.Номенклатура.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНоменклатураКонтрагентов КАК втНоменклатураКонтрагентов
	|		ПО НоменклатураПоставщиков.Поставщик = втНоменклатураКонтрагентов.Владелец
	|			И НоменклатураПоставщиков.Идентификатор = втНоменклатураКонтрагентов.Идентификатор
	|ГДЕ
	|	втНоменклатураКонтрагентов.Идентификатор ЕСТЬ NULL
	|	И НоменклатураПоставщиков.Идентификатор <> """"
	|	И НоменклатураПоставщиков.Поставщик ССЫЛКА Справочник.Контрагенты
	|	И НоменклатураПоставщиков.Поставщик <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Параметры.ПрогрессВыполнения.ВсегоОбъектов = 0 Тогда
		Параметры.ПрогрессВыполнения.ВсегоОбъектов = Выборка.Количество();
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Если Не (ЗначениеЗаполнено(Выборка.Владелец) И ЗначениеЗаполнено(Выборка.Идентификатор)) Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("Поставщик", Выборка.Владелец);
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", Выборка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Выборка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Упаковка", Выборка.Упаковка);
			ЭлементБлокировки.УстановитьЗначение("Идентификатор", Выборка.Идентификатор);
			
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.НоменклатураПоставщиков.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Поставщик.Установить(Выборка.Владелец);
			НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
			НаборЗаписей.Отбор.Упаковка.Установить(Выборка.Упаковка);
			НаборЗаписей.Отбор.Идентификатор.Установить(Выборка.Идентификатор);
			
			НаборЗаписей.Прочитать();
			
			Для каждого СтрокаЗаписи Из НаборЗаписей Цикл
				
				Набор = РегистрыСведений.НоменклатураКонтрагентовБЭД.СоздатьНаборЗаписей();
				Набор.Отбор.Владелец.Установить(Выборка.Владелец);
				Набор.Отбор.Идентификатор.Установить(Выборка.Идентификатор);
				Набор.Прочитать();
				
				Если ЗначениеЗаполнено(Набор) Тогда
					Прервать;
				КонецЕсли;
				
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				Запись.Наименование = ?(ЗначениеЗаполнено(Выборка.НаименованиеПолное),
											Выборка.НаименованиеПолное, Выборка.Наименование);
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ШаблонСообщения = НСтр("ru = 'Не удалось обработать номенклатуру поставщика: %1 %2 по причине:'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.Владелец, Выборка.Номенклатура) + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,, ТекстСообщения);
				
			Продолжить;
		КонецПопытки;
			
		ОбработанныхОбъектов = ОбработанныхОбъектов + 1;
		
	КонецЦикла;
	
	Если ОбработанныхОбъектов = 0 И ПроблемныхОбъектов <> 0 Тогда
		ШаблонСообщения = НСтр("ru = 'Не удалось обработать некоторую номенклатуру поставщиков (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ШаблонСообщения = НСтр("ru = 'Обработана очередная порция номенклатуры поставщиков: %1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ОбработанныхОбъектов);
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			МетаданныеОбъекта,, ТекстСообщения);
	КонецЕсли;
	
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов  = Параметры.ПрогрессВыполнения.ОбработаноОбъектов  + ОбработанныхОбъектов;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь, ПолноеИмяРегистра);
	
	КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
#КонецОбласти

#КонецЕсли
