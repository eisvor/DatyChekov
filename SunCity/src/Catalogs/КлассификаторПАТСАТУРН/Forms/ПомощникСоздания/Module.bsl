
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПАТ             = Параметры.ПАТ;
	ЦветГиперссылки = ЦветаСтиля.ЦветГиперссылкиГосИС;
	ЦветПроблема    = ЦветаСтиля.ЦветТекстаПроблемаГосИС;
	ЖирныйШрифт     = Новый Шрифт(,, Истина);
	
	Если ЗначениеЗаполнено(ПАТ) Тогда
		
		РежимИзменения = Истина;
		ПродукцияПАТПриИзмененииНаСервере();
		
	Иначе
		РежимИзменения = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗначенияЗаполнения")
		И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения) Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);
		
	КонецЕсли;
	
	ВидПродукции    = Перечисления.ВидыПродукцииСАТУРН.Тукосмесь;
	
	ОбновитьДоступныеСтатусыДляПерехода();
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого СтрокаСоставаТукосмеси Из СоставТукосмеси Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСоставаТукосмеси.ПА) Тогда
			
			ШаблонСтроки = НСтр("ru = 'Не заполнен ПАТ в строке №%1.'");
			НомерСтроки  = СоставТукосмеси.Индекс(СтрокаСоставаТукосмеси);
			
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСтроки, НомерСтроки + 1),,
				"СоставТукосмеси[" + НомерСтроки + "].ПА",,
				Отказ);
				
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "ОткрытьРезультат") Тогда
		
		ПоказатьЗначение(, ПАТ);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПродукцииПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПД2ПриИзменении(Элемент)
	
	СобытияФормСАТУРНКлиент.ПриИзмененииОКПД2(ЭтотОбъект, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ОКПД2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СобытияФормСАТУРНКлиент.ПриНачалеВыбораОКПД2(ЭтотОбъект, Элемент, ДанныеВыбора, ОКПД2, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОКПД2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СобытияФормСАТУРНКлиент.ПриОбработкеВыбораОКПД2(ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОКПД2АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СобытияФормСАТУРНКлиент.ПриАвтоподбореОКПД2(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоставТукосмеси
	
&НаКлиенте
Процедура СоставТукосмесиПАПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СоставТукосмеси.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ИдентификаторПА = ИдентификаторПАТ(ТекущиеДанные.ПА);

КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	ОчиститьСообщения();
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПАТ 
		И ПроверитьЗаполнение() Тогда
		
		ДанныеПАТ = ИнтеграцияСАТУРНКлиентСервер.СтруктураДанныхПАТ();
		
		ДанныеПАТ.Ссылка                          = ПАТ;
		ДанныеПАТ.Идентификатор                   = Идентификатор;
		ДанныеПАТ.Статус                          = Статус;
		ДанныеПАТ.Производитель                   = Производитель;
		ДанныеПАТ.ВидПродукции                    = ВидПродукции;
		ДанныеПАТ.ОКПД2                           = ОКПД2;
		ДанныеПАТ.Наименование                    = Наименование;
		
		МассивСтруктурИзменения   = СформироватьТаблицуРазличийПоСоставуТукосмеси();
		ДанныеПАТ.СоставТукосмеси = МассивСтруктурИзменения;
		
		ПараметрыОбработкиКлассификаторов = ИнтеграцияСАТУРНСлужебныйКлиентСервер.ПараметрыПередачиДанныхКлассификаторов();
		ПараметрыОбработкиКлассификаторов.Ссылка             = ПАТ;
		ПараметрыОбработкиКлассификаторов.ДальнейшееДействие = ПредопределенноеЗначение("Перечисление.ДальнейшиеДействияПоВзаимодействиюСАТУРН.ПередайтеДанные");
		
		ПараметрыОбработкиКлассификаторов.ДополнительныеПараметры = Новый Структура();
		ПараметрыОбработкиКлассификаторов.ДополнительныеПараметры.Вставить("ДанныеПАТ", ДанныеПАТ);
		
		Если Статус <> ИсходныйСтатус Тогда
			
			ПараметрыОбработкиКлассификаторов.ДополнительныеПараметры.Вставить("НовыйСтатус", Статус);
		
		КонецЕсли;
		
		ОписаниеПриЗавершении = Новый ОписаниеОповещения(
			"Подключаемый_ПриЗавершенииОперации", ЭтотОбъект, ПараметрыОбработкиКлассификаторов);
		
		ОжиданиеРезультата = Истина;
		ИнтеграцияСАТУРНКлиент.ПодготовитьКПередаче(
			ЭтотОбъект,
			ПараметрыОбработкиКлассификаторов,
			ОписаниеПриЗавершении);

		ОбработатьРезультатОбменаСАТУРН();
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПАТ;
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПриЗавершенииОперации(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ТипЗнч(Результат) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ОжиданиеРезультата = Ложь;
	
	Если Результат.Количество() = 0 Тогда
		
		УправлениеЭлементамиФормы(ЭтотОбъект);
		Возврат;

	КонецЕсли;
	
	Для Каждого ЭлементОбработки Из Результат Цикл
		
		Если ЗначениеЗаполнено(ЭлементОбработки.ТекстОшибки) Тогда
			
			ВывестиИнформациюОбОшибке(ЭлементОбработки.ТекстОшибки);
			УправлениеЭлементамиФормы(ЭтотОбъект);
			
			Возврат;
			
		КонецЕсли;
		
		Если ЭлементОбработки.Объект.Количество() Тогда
			
			ПАТ = ЭлементОбработки.Объект[0];
			
		КонецЕсли;
		
	КонецЦикла;
	
	ВывестиИнформациюОУспешномРезультатеОбмена();
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
	ОповеститьОбЗаписиОбъектов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатОбменаСАТУРН()
	
	УправлениеЭлементамиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступныеСтатусыДляПерехода()
	
	СписокНовыхДоступныхЗначений = Элементы.Статус.СписокВыбора;
	СписокНовыхДоступныхЗначений.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ПАТ) Тогда
		
		СписокНовыхДоступныхЗначений.Добавить(Перечисления.СтатусыОбъектовСАТУРН.Черновик);
		СписокНовыхДоступныхЗначений.Добавить(Перечисления.СтатусыОбъектовСАТУРН.Актуально);
		
		Статус = Перечисления.СтатусыОбъектовСАТУРН.Черновик;
		
	Иначе
		
		ШаблонПредставленияТекущегоВарианта = НСтр("ru = '%1 (текущий)'");
		ПредставлениеТекущегоВарианта       = СтрШаблон(ШаблонПредставленияТекущегоВарианта, Статус);
		
		Строки = Новый Массив;
		Строки.Добавить(Новый ФорматированнаяСтрока(ПредставлениеТекущегоВарианта, ЖирныйШрифт));
		
		СписокНовыхДоступныхЗначений.Добавить(Статус, Новый ФорматированнаяСтрока(Строки));
		
		Если Статус = Перечисления.СтатусыОбъектовСАТУРН.Черновик Тогда
		
			СписокНовыхДоступныхЗначений.Добавить(Перечисления.СтатусыОбъектовСАТУРН.Актуально);
			СписокНовыхДоступныхЗначений.Добавить(Перечисления.СтатусыОбъектовСАТУРН.Отменен);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИнформациюОбОшибке(ТекстОшибки)
	
	Строки = Новый Массив;
	Строки.Добавить(
		Новый ФорматированнаяСтрока(
			НСтр("ru = 'Ошибка:'")));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(ТекстОшибки,, ЦветПроблема));
		
	ТекстОшибка = Новый ФорматированнаяСтрока(Строки);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИнформациюОУспешномРезультатеОбмена()
	
	Строки = Новый Массив;
	Строки.Добавить(
		Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'На запрос о %1 ПАТ %2 получен ответ.'"), СтрокаТипОперации("Получение"), Наименование)));

	Строки.Добавить(" ");
	Строки.Добавить(
		Новый ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = '%1 ПАТ'"), СтрокаТипОперации("Завершено"))));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(Строка(ПАТ),, ЦветГиперссылки,, "ОткрытьРезультат"));
	Строки.Добавить(".");
	
	ТекстРезультат = Новый ФорматированнаяСтрока(Строки);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат;
	
КонецПроцедуры

&НаКлиенте
Функция СтрокаТипОперации(СтадияОперации)

	ТипОперацииСтрокой = "";
	Если РежимИзменения Тогда
		Если СтадияОперации = "Завершено" Тогда
			ТипОперацииСтрокой = НСтр("ru = 'Изменена'");
		ИначеЕсли СтадияОперации = "Получение" Тогда
			ТипОперацииСтрокой = НСтр("ru = 'изменении'");
		КонецЕсли;
	Иначе
		Если СтадияОперации = "Завершено" Тогда
			ТипОперацииСтрокой = НСтр("ru = 'Добавлена'");
		ИначеЕсли СтадияОперации = "Получение" Тогда
			ТипОперацииСтрокой = НСтр("ru = 'добавлении'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТипОперацииСтрокой;

КонецФункции

&НаКлиенте
Процедура ОповеститьОбЗаписиОбъектов()
	
	ПараметрОповещения = ПАТ;
	ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(ПАТ, ПараметрОповещения);
	
КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуРазличийПоСоставуТукосмеси()
	
	МассивСтруктур = Новый Массив;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СтараяТаблица.ПА,
		|	СтараяТаблица.ИдентификаторПА,
		|	СтараяТаблица.ИдентификаторСтроки,
		|	СтараяТаблица.Количество
		|ПОМЕСТИТЬ ВТ_СтараяТаблица
		|ИЗ
		|	&СтараяТаблица КАК СтараяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоваяТаблица.ПА,
		|	НоваяТаблица.ИдентификаторПА,
		|	НоваяТаблица.ИдентификаторСтроки,
		|	НоваяТаблица.Количество
		|ПОМЕСТИТЬ ВТ_НоваяТаблица
		|ИЗ
		|	&НоваяТаблица КАК НоваяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НоваяТаблица.ПА ЕСТЬ NULL                             КАК Удалить,
		|	ВТ_СтараяТаблица.ПА                                      КАК ПА,
		|	ВТ_СтараяТаблица.ИдентификаторПА                         КАК ИдентификаторПА,
		|	ВТ_СтараяТаблица.ИдентификаторСтроки                     КАК ИдентификаторСтроки,
		|	ЕСТЬNULL(ВТ_НоваяТаблица.Количество, 0)                  КАК Количество,
		|	ВТ_СтараяТаблица.Количество = ЕСТЬNULL(ВТ_НоваяТаблица.Количество, 0) КАК БезИзменений
		|ИЗ
		|	ВТ_СтараяТаблица КАК ВТ_СтараяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоваяТаблица КАК ВТ_НоваяТаблица
		|		ПО ВТ_СтараяТаблица.ПА = ВТ_НоваяТаблица.ПА
		|		И ВТ_СтараяТаблица.ИдентификаторПА = ВТ_НоваяТаблица.ИдентификаторПА
		|		И ВТ_СтараяТаблица.ИдентификаторСтроки = ВТ_НоваяТаблица.ИдентификаторСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ                                КАК Удалить,
		|	ВТ_НоваяТаблица.ПА                  КАК ПА,
		|	ВТ_НоваяТаблица.ИдентификаторПА     КАК ИдентификаторПА,
		|	ВТ_НоваяТаблица.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВТ_НоваяТаблица.Количество          КАК Количество,
		|	ЛОЖЬ                                КАК БезИзменений
		|ИЗ
		|	ВТ_НоваяТаблица КАК ВТ_НоваяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтараяТаблица КАК ВТ_СтараяТаблица
		|		ПО ВТ_НоваяТаблица.ПА = ВТ_СтараяТаблица.ПА
		|		И ВТ_НоваяТаблица.ИдентификаторПА = ВТ_СтараяТаблица.ИдентификаторПА
		|		И ВТ_НоваяТаблица.ИдентификаторСтроки = ВТ_СтараяТаблица.ИдентификаторСтроки
		|ГДЕ
		|	ВТ_СтараяТаблица.ПА ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("СтараяТаблица", ИсходныйСоставТукосмеси.Выгрузить());
	Запрос.УстановитьПараметр("НоваяТаблица",  СоставТукосмеси.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураСостава = Новый Структура();
		
		СтруктураСостава.Вставить("ПА",                  ВыборкаДетальныеЗаписи.ПА);
		СтруктураСостава.Вставить("ИдентификаторПА",     ВыборкаДетальныеЗаписи.ИдентификаторПА);
		СтруктураСостава.Вставить("Количество",          ВыборкаДетальныеЗаписи.Количество);
		СтруктураСостава.Вставить("ИдентификаторСтроки", ВыборкаДетальныеЗаписи.ИдентификаторСтроки);
		СтруктураСостава.Вставить("Удалить",             ВыборкаДетальныеЗаписи.Удалить);
		СтруктураСостава.Вставить("БезИзменений",        ВыборкаДетальныеЗаписи.БезИзменений);
		
		МассивСтруктур.Добавить(СтруктураСостава);
		
	КонецЦикла;

	Возврат МассивСтруктур;
	
КонецФункции

&НаСервере
Процедура ПродукцияПАТПриИзмененииНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторПАТСАТУРН.Идентификатор КАК Идентификатор
	|ИЗ
	|	Справочник.КлассификаторПАТСАТУРН КАК КлассификаторПАТСАТУРН
	|ГДЕ
	|	КлассификаторПАТСАТУРН.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", ПАТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		РезультатВыполненияЗапроса = ИнтерфейсСАТУРНВызовСервера.ПАТПоИдентификатору(Выборка.Идентификатор);
		Если Не ПустаяСтрока(РезультатВыполненияЗапроса.ТекстОшибки) Тогда
			
			Строки = Новый Массив;
			Строки.Добавить(
				Новый ФорматированнаяСтрока(
					НСтр("ru = 'Ошибка:'")));
			Строки.Добавить(" ");
			Строки.Добавить(Новый ФорматированнаяСтрока(РезультатВыполненияЗапроса.ТекстОшибки,, ЦветПроблема));
			
			ТекстОшибка = Новый ФорматированнаяСтрока(Строки);
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка;
			
		Иначе
			
			ЭлементДанных = РезультатВыполненияЗапроса.Элемент;
			ДанныеПАТ = ИнтерфейсСАТУРН.ДанныеПАТ(ЭлементДанных);

			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПАТ,, "СоставТукосмеси");
			
			СоставТукосмеси.Очистить();
			
			Для Каждого СтрокаТукосмеси Из ДанныеПАТ.СоставТукосмеси Цикл
				
				НоваяСтрокаСостава = СоставТукосмеси.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава, СтрокаТукосмеси);
				
			КонецЦикла;
			
			ИсходныйСтатус = Статус;
			
			Если Не ВидПродукции = Перечисления.ВидыПродукцииСАТУРН.Тукосмесь Тогда
				
				ШаблонИнформации = НСтр("ru = 'Вид продукции ПАТ - %1.
					|Во ФГИС Сатурн можно создавать/изменять только тукосмеси.'");
					
				ОписаниеОшибки = СтрШаблон(ШаблонИнформации, ВидПродукции);
				
				Строки = Новый Массив;
				Строки.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru = 'Информация:'")));
				Строки.Добавить(" ");
				Строки.Добавить(Новый ФорматированнаяСтрока(ОписаниеОшибки,, ЦветГиперссылки));
				
				ТекстИнформация = Новый ФорматированнаяСтрока(Строки);
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаИнформация;
			
			ИначеЕсли Не Статус = Перечисления.СтатусыОбъектовСАТУРН.Черновик Тогда
				
				ШаблонИнформации = НСтр("ru = 'Редактирование ПАТ возможно только в статусе Черновик.
					|ПАТ переведен в статус %1, редактирование невозможно.'");
					
				ОписаниеОшибки = СтрШаблон(ШаблонИнформации, Статус);
				
				Строки = Новый Массив;
				Строки.Добавить(
					Новый ФорматированнаяСтрока(
						НСтр("ru = 'Информация:'")));
				Строки.Добавить(" ");
				Строки.Добавить(Новый ФорматированнаяСтрока(ОписаниеОшибки,, ЦветГиперссылки));
				
				ТекстИнформация = Новый ФорматированнаяСтрока(Строки);
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаИнформация;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийСАТУРН.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийСАТУРН КАК КлассификаторОрганизацийСАТУРН
	|ГДЕ
	|	КлассификаторОрганизацийСАТУРН.Идентификатор = &Идентификатор
	|	И КлассификаторОрганизацийСАТУРН.Идентификатор <> """"");
	
	Запрос.УстановитьПараметр("Идентификатор", ИдентификаторПроизводителя);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Производитель = Выборка.Ссылка;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторПАТСАТУРН.Ссылка        КАК Ссылка,
	|	КлассификаторПАТСАТУРН.Идентификатор КАК Идентификатор
	|ИЗ
	|	Справочник.КлассификаторПАТСАТУРН КАК КлассификаторПАТСАТУРН
	|ГДЕ
	|	КлассификаторПАТСАТУРН.Идентификатор В (&МассивИдентификаторов)
	|	И КлассификаторПАТСАТУРН.Идентификатор <> """"";
	
	Запрос.УстановитьПараметр("МассивИдентификаторов", ОбщегоНазначения.ВыгрузитьКолонку(СоставТукосмеси, "ИдентификаторПА", Истина));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("ИдентификаторПА", Выборка.Идентификатор);
		СтрокиВСоставе = СоставТукосмеси.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаВСоставе Из СтрокиВСоставе Цикл
			
			СтрокаВСоставе.ПА = Выборка.Ссылка;
			
		КонецЦикла;
	
	КонецЦикла;
	
	ИсходныйСоставТукосмеси.Очистить();
	
	Для Каждого СтрокаТукосмеси Из СоставТукосмеси Цикл
		
		НоваяСтрокаСостава = ИсходныйСоставТукосмеси.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСостава, СтрокаТукосмеси);
		
	КонецЦикла;

КонецПроцедуры

#Область УправлениеЭлементамиФормы

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
	
	Если Форма.РежимИзменения Тогда
		
		Форма.Заголовок = НСтр("ru = 'Изменение ПАТ'");
		
	Иначе
		
		Форма.Заголовок = НСтр("ru = 'Создание ПАТ'");
		
	КонецЕсли;
	
	УправлениеЭлементамиНавигацииПомощника(Форма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИдентификаторПАТ(ПАТ)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПАТ, "Идентификатор");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиНавигацииПомощника(Форма)

	Элементы = Форма.Элементы;
	Элементы.Закрыть.Заголовок = НСтр("ru = 'Закрыть'");
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПАТ Тогда
		
		Если Форма.ОжиданиеРезультата Тогда
			
			Форма.Доступность = Ложь;
			
		Иначе
		
			Форма.Доступность = Истина;
		
			Элементы.Назад.Видимость   = Ложь;
			Элементы.Далее.Видимость   = Истина;
			Элементы.Закрыть.Видимость = Истина;
			Элементы.Далее.Заголовок   = НСтр("ru = 'Далее'");
			
			Элементы.ПАТ.Видимость = Форма.РежимИзменения;
			
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросОшибка Тогда
		
		Форма.Доступность = Истина;
		
		Элементы.Назад.Видимость = Истина;
		Элементы.Далее.Видимость = Ложь;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗапросРезультат Тогда
		
		Форма.Доступность = Истина;
		
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
		Элементы.Далее.Заголовок = НСтр("ru = 'Готово'");
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаИнформация Тогда
		
		Форма.Доступность = Истина;
		
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти