#Область ОписаниеПеременных

// Таблица клиентская (массив структур) с иерархией построения плитки для текущего типа построения.
&НаКлиенте
Перем ДанныеДляПлитки Экспорт;

// Структура с возможными вариантами типов построения плитки: 0 - по палитре, 1 - весовой товар,
// 3 - распознанный весовой товар.
&НаКлиенте
Перем ТипыПостроенияПлитки Экспорт;

// Текущий тип построения плитки.
&НаКлиенте
Перем ТипПостроенияПлитки Экспорт;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЦветаФормы = ОбщегоНазначенияРМК.ЦветаФормыРМК();
	ПредставлениеВалюты = ОбщегоНазначенияРМК.ПредставлениеВалюты();
	
	Параметры.Свойство("ТекущийТорговыйОбъект", ТекущийТорговыйОбъект);
	
	Если Не ЗначениеЗаполнено(ТекущийТорговыйОбъект) Тогда
		ТекущийТорговыйОбъект = ОбщегоНазначенияРМК.ТекущийТорговыйОбъект();
	КонецЕсли;
	
	Параметры.Свойство("СтруктураПлиточногоИнтерфейса", СтруктураПлиточногоИнтерфейсаПодбора);
	
	ПодготовитьПлиточныйИнтерфейсПодбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнтерфейсРМКСлужебныйКлиент.ИнициализироватьТипыПостроенияПлитки(ЭтотОбъект);
	ДанныеДляПлитки = Новый Массив;
	ТипПостроенияПлитки = ТипыПостроенияПлитки.ПоПалитре;
	ИнтерфейсРМКСлужебныйКлиент.ПодготовитьДанныеДляПлитки(ЭтотОбъект);
	ЗаполнитьКнопкиПлиток();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПлиткаДомой(Команда)
	ПерейтиНаСтраницуДомой();
КонецПроцедуры

&НаКлиенте
Процедура ПлиткаНазад(Команда)
	ПерейтиНаСтраницуВлево();
КонецПроцедуры

&НаКлиенте
Процедура ПлиткаВперед(Команда)
	ПерейтиНаСтраницуВправо();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПлиткаВыбор(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяЭлементаБезИндекса = Лев(Элемент.Имя, 16);
	НомерНажатой = Сред(Элемент.Имя, 18);
	
	Если ИмяЭлементаБезИндекса = "Плитка_Элемент25" Тогда
		Элементы["Плитка_Элемент20_"+НомерНажатой].ТекущаяСтраница = Элементы["Плитка_Элемент22_"+НомерНажатой];
	ИначеЕсли ИмяЭлементаБезИндекса = "Плитка_Элемент26" Тогда
		Элементы["Плитка_Элемент20_"+НомерНажатой].ТекущаяСтраница = Элементы["Плитка_Элемент21_"+НомерНажатой];
	ИначеЕсли ИмяЭлементаБезИндекса = "Плитка_Элемент35" Тогда
		Элементы["Плитка_Элемент30_"+НомерНажатой].ТекущаяСтраница = Элементы["Плитка_Элемент32_"+НомерНажатой];
	ИначеЕсли ИмяЭлементаБезИндекса = "Плитка_Элемент36" Тогда;
		Элементы["Плитка_Элемент30_"+НомерНажатой].ТекущаяСтраница = Элементы["Плитка_Элемент31_"+НомерНажатой];
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.ЗавершитьПодборТоваров;
	НомерНажатой = Число(НомерНажатой);
	СтрокаНажатойКнопки = ДанныеКнопокПлиток.Получить(НомерНажатой);
	СтраницаПрежняя = Не СтрокаНажатойКнопки.ИмеетсяВложенность;
	
	Если СтрокаНажатойКнопки.ЭтоКатегория ИЛИ СтрокаНажатойКнопки.ЭтоТекущаяКатегория
			ИЛИ СтрокаНажатойКнопки.ИмеетсяВложенность Тогда
		ТекущийПервыйИндексПлитки = СтрокаНажатойКнопки.ПервыйИндексПлитки;
		ЗаполнитьКнопкиПлиток();
		ПересчитатьКоличествоВПлитках();
	КонецЕсли;
	
	Если СтраницаПрежняя Тогда
		ТекущийЭлемент = Элементы["Плитка_Элемент09_"+НомерНажатой];
	Иначе
		Если ДанныеКнопокПлиток[0].ЭтоКатегория Тогда
			ТекущийЭлемент = Элементы["Плитка_Элемент69_0"];
		Иначе
			ТекущийЭлемент = Элементы["Плитка_Элемент09_0"];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьПлиточныйИнтерфейсПодбора()
	
	ЗагрузитьИсходныеДанные();
	Если ОпорныеДанные.Количество() > 0 Тогда
		ИнтерфейсРМКСлужебный.СформироватьЭлементыПлиток(ЭтотОбъект);
	Иначе
		Элементы.ГруппаУведомленияОПустойСтруктуре.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСтраницуВправо()
	
	КоличествоПлиток = КоличествоЭлементовВРяду * КоличествоРядовНаСтранице;
	ТекущийПервыйИндексПлитки = ТекущийПервыйИндексПлитки + КоличествоПлиток;
	ЗаполнитьКнопкиПлиток();
	ПересчитатьКоличествоВПлитках();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСтраницуВлево()
	
	КоличествоПлиток = КоличествоЭлементовВРяду * КоличествоРядовНаСтранице;
	ТекущийПервыйИндексПлитки = ТекущийПервыйИндексПлитки - КоличествоПлиток;
	ЗаполнитьКнопкиПлиток();
	ПересчитатьКоличествоВПлитках();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСтраницуДомой()
	
	ТекущийПервыйИндексПлитки = 0;
	ЗаполнитьКнопкиПлиток();
	ПересчитатьКоличествоВПлитках();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИсходныеДанные()
	
	Если ЗначениеЗаполнено(СтруктураПлиточногоИнтерфейсаПодбора) Тогда
		
		ИнтерфейсРМКСлужебный.ЗаполнитьОпорныеДанныеПанелиПлиточногоИнтерфейса(ЭтотОбъект);
		ОбщегоНазначенияРМК.ДополнитьОпорныеДанныеПанелиДляПостроенияПлиточногоИнтерфейса(ЭтотОбъект);
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКнопкиПлиток();
	
	ИнтерфейсРМКСлужебныйКлиент.ЗаполнитьКнопкиПлиток(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоВПлитках()
	
	Если ОпорныеДанные.Количество() = 0 Или ДанныеКнопокПлиток.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Индекс = 0;
	Для Каждого ДанныеПлитки Из ДанныеКнопокПлиток Цикл
		
		Если ДанныеПлитки.ЭтоТекущаяКатегория Тогда
			СтраницаЛинии = Элементы["Плитка_Элемент05_" + Индекс];
		Иначе
			СтраницаЛинии = Элементы["Плитка_Элемент03_" + Индекс];
		КонецЕсли;
		
		Если Не Элементы["Плитка_Элемент02_" + Индекс].ТекущаяСтраница = СтраницаЛинии Тогда
			Элементы["Плитка_Элемент02_" + Индекс].ТекущаяСтраница = СтраницаЛинии;
		КонецЕсли;
		
		Прервать;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти



