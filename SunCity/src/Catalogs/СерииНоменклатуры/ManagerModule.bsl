#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ЗаполнитьВидНоменклатуры(ВладелецСерии) Экспорт
	Если ЗначениеЗаполнено(ВладелецСерии) Тогда
		Если ТипЗнч(ВладелецСерии) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
			ВидНоменклатуры = ВладелецСерии;
		ИначеЕсли ТипЗнч(ВладелецСерии) = Тип("СправочникСсылка.Номенклатура") Тогда
			ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецСерии,"ВидНоменклатуры");
		Иначе
			ВидНоменклатуры = Справочники.ВидыНоменклатуры.ПустаяСсылка();
		КонецЕсли;
	Иначе
		ВидНоменклатуры = Справочники.ВидыНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ВидНоменклатуры;
КонецФункции

Процедура УстановитьВладельцаСерий(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Ссылка,
	|	СерииНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры <> &ПустойВидНоменклатуры
	|	И СерииНоменклатуры.ВидНоменклатуры <> СерииНоменклатуры.ВладелецСерии
	|	И СерииНоменклатуры.ВидНоменклатуры.ИспользованиеСерий <> &ИспользованиеСерий";
	
	Запрос.УстановитьПараметр("ПустойВидНоменклатуры", Справочники.ВидыНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ИспользованиеСерий"   , Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СерияНоменклатурыОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СерияНоменклатурыОбъект.ВладелецСерии = Выборка.ВидНоменклатуры;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СерияНоменклатурыОбъект);
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, "Справочник.СерииНоменклатуры");
	
КонецПроцедуры

Процедура ЗарегистрироватьСерииНоменклатуры_ВладелецСерии(Параметры) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры <> &ПустойВидНоменклатуры
	|	И СерииНоменклатуры.ВидНоменклатуры <> СерииНоменклатуры.ВладелецСерии
	|	И СерииНоменклатуры.ВидНоменклатуры.ИспользованиеСерий <> &ИспользованиеСерий";
	
	Запрос.УстановитьПараметр("ПустойВидНоменклатуры", Справочники.ВидыНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ИспользованиеСерий"   , Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры);
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивСсылок);
	
КонецПроцедуры

// Определяется массив Видов номенклатуры, у которых установлено использование серий индивидуально для номенклатуры
// Параметры:
//  Нет.
// Возвращаемое значение:
//  Массив из Справочник.ВидыНоменклатуры
//
Функция ВидыНоменклатурыИндивидуальныеДляНоменклатуры() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.ИспользованиеСерий = &ИспользованиеСерий";
	
	Запрос.УстановитьПараметр("ИспользованиеСерий", Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции // ПолучитьВидыНоменклатуры()

// Определяет владельца серий по номенклатуре
// Параметры:
//  Номенклатура - Справочник.Номенклатура
// Возвращаемое значение:
//  ВладелецСерии - Составной тип, Справочник.Номенклатуры, Справочник.ВидыНоменклатуры
Функция ВладелецСерииПоНоменклатуре(Номенклатура) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Номенклатура;
	КонецЕсли;
	
	ВидНоменклатуры    = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура   , "ВидНоменклатуры");
	ИспользованиеСерий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "ИспользованиеСерий");
	
	Если ИспользованиеСерий = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
		Возврат Номенклатура;
	ИначеЕсли ИспользованиеСерий = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры Тогда
		Возврат ВидНоменклатуры;
	// Далее идут не правильно переданные параметры
	ИначеЕсли ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		Возврат ВидНоменклатуры;
	Иначе
		Возврат Номенклатура;
	КонецЕсли;
	
КонецФункции // ВладелецСерииПоНоменклатуре()
 
#КонецОбласти

	
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Параметры.Свойство("ВладелецСерии") Тогда
		ВидНоменклатуры = ЗаполнитьВидНоменклатуры(Параметры.ВладелецСерии);
		
		МассивВидаНоменклатуры = Новый Массив;
		МассивВидаНоменклатуры.Добавить("ИспользоватьНомерСерии");
		МассивВидаНоменклатуры.Добавить("ИспользоватьСрокГодностиСерии");
		МассивВидаНоменклатуры.Добавить("ИспользоватьНомерКИЗГИСМСерии");
		
		РеквизитыВидаНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, МассивВидаНоменклатуры);
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ 
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	СерииНоменклатуры.Наименование,
		|	СерииНоменклатуры.ГоденДо КАК ГоденДо,
		|	СерииНоменклатуры.Номер КАК Номер,
		|	СерииНоменклатуры.НомерКиЗГИСМ КАК НомерКиЗГИСМ,
		|	СерииНоменклатуры.RFIDTID КАК RFIDTID,
		|	СерииНоменклатуры.RFIDUser КАК RFIDUser,
		|	СерииНоменклатуры.RFIDEPC КАК RFIDEPC,
		|	СерииНоменклатуры.EPCGTIN КАК EPCGTIN
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.ВладелецСерии = &ВладелецСерии
		|	И ВЫБОР
		|			КОГДА &ИспользоватьНомерСерии
		|				ТОГДА &НомерНеУказан
		|						ИЛИ СерииНоменклатуры.Номер = &Номер
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ИспользоватьСрокГодностиСерии
		|				ТОГДА &ГоденДоНеУказан
		|						ИЛИ СерииНоменклатуры.ГоденДо = &ГоденДо
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ИспользоватьНомерКИЗГИСМСерии
		|				ТОГДА &НомерКиЗГИСМНеУказан
		|						ИЛИ СерииНоменклатуры.НомерКиЗГИСМ ПОДОБНО &НомерКиЗГИСМ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	ГоденДо";
		
		Запрос.УстановитьПараметр("ВладелецСерии"                , Параметры.ВладелецСерии);
		Запрос.УстановитьПараметр("ГоденДоНеУказан"              , Не ЗначениеЗаполнено(Параметры.ГоденДо));
		Запрос.УстановитьПараметр("ГоденДо"                      , Параметры.ГоденДо);
		Запрос.УстановитьПараметр("НомерНеУказан"                , Не ЗначениеЗаполнено(Параметры.Номер));
		Запрос.УстановитьПараметр("Номер"                        , СокрЛП(Параметры.Номер));
		Запрос.УстановитьПараметр("НомерКиЗГИСМ"                 , "%" + СокрЛП(Параметры.НомерКиЗГИСМ) + "%");
		Запрос.УстановитьПараметр("НомерКиЗГИСМНеУказан"         , Не ЗначениеЗаполнено(Параметры.НомерКиЗГИСМ));
		Запрос.УстановитьПараметр("ИспользоватьНомерСерии"       , РеквизитыВидаНоменклатуры.ИспользоватьНомерСерии); 
		Запрос.УстановитьПараметр("ИспользоватьСрокГодностиСерии", РеквизитыВидаНоменклатуры.ИспользоватьСрокГодностиСерии); 
		Запрос.УстановитьПараметр("ИспользоватьНомерКИЗГИСМСерии", РеквизитыВидаНоменклатуры.ИспользоватьНомерКИЗГИСМСерии); 
		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Пока Выборка.Следующий() Цикл
			Значение = Новый Структура("Серия,Номер,ГоденДо,НомерКиЗГИСМ,RFIDTID,RFIDUser,RFIDEPC,EPCGTIN");
			ЗаполнитьЗначенияСвойств(Значение,Выборка);
			
			ДанныеВыбора.Добавить(Значение,Выборка.Наименование);
			
		КонецЦикла;
	ИначеЕсли Параметры.Свойство("Номенклатура") Тогда 	
		СтрокаПоиска = Параметры.СтрокаПоиска;
		
		ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Номенклатура,"ВидНоменклатуры");
		
		РеквизитыВидыНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Номенклатура,"ИспользованиеСерии, ИспользоватьСерии");
		
		ПоВидуНоменклатуры = РеквизитыВидыНоменклатуры.ИспользованиеСерии = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СпрСерии.Ссылка КАК Серия,
		|	СпрСерии.Наименование КАК СерияПредставление
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|	Справочник.СерииНоменклатуры КАК СпрСерии
		|ПО
		|	СпрСерии.ВладелецСерии = СпрНоменклатура." + ?(ПоВидуНоменклатуры, "ВидНоменклатуры", "Ссылка") + "
		|ГДЕ
		|	СпрНоменклатура.Ссылка = &Номенклатура
		|	" + ?(СтрокаПоиска = Неопределено, "", "И СпрСерии.Наименование ПОДОБНО &СтрокаПоиска") + "
		|УПОРЯДОЧИТЬ ПО
		|	СерияПредставление
		|");
		
		Запрос.УстановитьПараметр("Номенклатура", Параметры.Номенклатура);
		
		Если СтрокаПоиска <> Неопределено Тогда
			Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
		КонецЕсли;
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеВыбора.Добавить(Выборка.Серия, Выборка.СерияПредставление);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли