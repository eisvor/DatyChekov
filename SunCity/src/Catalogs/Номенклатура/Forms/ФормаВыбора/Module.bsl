
#Область ОбработчикиСобытийПодключаемогоОборудования

&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкоду(Штрихкод, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Штрихкод) Тогда
		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПоискаПоМагнитномуКоду(ТекКод, ДополнительныеПараметры) Экспорт
	
	Если Не ПустаяСтрока(ТекКод) Тогда
		СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
		ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораДанныхПоиска(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбработатьДанныеПоКодуСервер(Результат);
		ОбработатьДанныеПоКодуКлиент(Результат)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолученМагнитныйКод(МагнитныйКод) Экспорт 
	
	СтруктураРезультат = ДанныеПоискаПоМагнитномуКодуСервер(МагнитныйКод);
	Возврат ПодключаемоеОборудованиеРТКлиент.ПолученМагнитныйКод(ЭтотОбъект, СтруктураРезультат);
	
КонецФункции

&НаКлиенте
Функция ПолученШтрихкодИзСШК(Штрихкод) Экспорт
	
	СтруктураРезультат = ДанныеПоискаПоШтрихкодуСервер(Штрихкод);
	Возврат ПодключаемоеОборудованиеРТКлиент.ПолученШтрихкодИзСШК(ЭтотОбъект, СтруктураРезультат);
	
КонецФункции

// Обрабатывает данные по коду на сервере.
//
// Параметры:
//  СтруктураРезультат - Структура - структура обработанных данных.
//
&НаСервере
Процедура ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	
	Если СтрокаРезультата.Свойство("Карта") Тогда
		
		ПодключаемоеОборудованиеРТ.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		
	Иначе
		
		ЭтотОбъект.ТекущийЭлемент = Элементы.Список;
		Элементы.Список.ТекущаяСтрока = СтрокаРезультата.Номенклатура;
		
	КонецЕсли;
	
	Если СтрокаРезультата.Свойство("ТекстПредупреждения") Тогда
		СтруктураРезультат.Вставить("ТекстПредупреждения", СтрокаРезультата.ТекстПредупреждения);
	КонецЕсли;
		
КонецПроцедуры

// Обрабатывает данные по коду на клиенте.
//
// Параметры:
//  СтруктураПараметровКлиента - Структура - структура обработанных данных.
//
&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента) Экспорт
	
	ОткрытаБлокирующаяФорма = Ложь;
	
	ПодключаемоеОборудованиеРТКлиент.ОбработатьДанныеПоКоду(ЭтотОбъект, СтруктураПараметровКлиента, ОткрытаБлокирующаяФорма);
	
КонецПроцедуры

&НаСервере
Функция ДанныеПоискаПоМагнитномуКодуСервер(МагнитныйКод)
	
	Возврат ПодключаемоеОборудованиеРТ.ДанныеПоискаПоМагнитномуКоду(МагнитныйКод, ЭтотОбъект);
	
КонецФункции

&НаСервере
Функция ДанныеПоискаПоШтрихкодуСервер(Штрихкод)
	
	Возврат ПодключаемоеОборудованиеРТ.ДанныеПоискаПоШтрихкоду(Штрихкод, ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура ОповещениеОбработатьДанныеПоКоду(СтруктураРезультат, ДополнительныеПараметры) Экспорт
	
	ОбработатьДанныеПоКодуСервер(СтруктураРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Перем ПараметрыОтбора;
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = ЭтотОбъект.КоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	УстановитьДополнительныеКолонкиНоменклатуры();
	
	Если Параметры.Свойство("СтруктураПараметрыОтбора", ПараметрыОтбора)  Тогда
		
		ЗначениеПараметра = Неопределено;
		
		Если ПараметрыОтбора.Свойство("ИспользоватьСерийныеНомера", ЗначениеПараметра) Тогда
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список,
				"ИспользоватьСерийныеНомера",
				ЗначениеПараметра,
				Истина,
				ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
		
		Если ПараметрыОтбора.Свойство("МассивТиповНоменклатуры", ЗначениеПараметра) Тогда
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список,
				"ТипНоменклатуры",
				ЗначениеПараметра,
				Истина,
				ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
		Если ПараметрыОтбора.Свойство("ДоговорКонтрагента", ЗначениеПараметра) Тогда
			Элементы.ГруппаФильтрПоДоговоруПлатежногоАгента.Видимость = Истина;
			ДоговорКонтрагента = ЗначениеПараметра;
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список,
				"ДоговорКонтрагента",
				ЗначениеПараметра,
				Истина,
				ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
		
		Если ПараметрыОтбора.Свойство("ВидыНоменклатур", ЗначениеПараметра) Тогда
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список,
				"ВидНоменклатуры",
				ЗначениеПараметра,
				Истина,
				ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ВидАлкогольнойПродукцииЕГАИС)
		Или ЗначениеЗаполнено(Параметры.ИмпортерЕГАИС)
		Или ЗначениеЗаполнено(Параметры.НаименованиеНоменклатурыЕГАИС)
		Или ЗначениеЗаполнено(Параметры.ОбъемЕГАИС)
		Или ЗначениеЗаполнено(Параметры.ПолноеНаименованиеНоменклатурыЕГАИС)
		Или ЗначениеЗаполнено(Параметры.ПроизводительЕГАИС)
		Или ЗначениеЗаполнено(Параметры.КрепостьЕГАИС) Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ВидАлкогольнойПродукцииЕГАИС, ИмпортерЕГАИС, НаименованиеНоменклатурыЕГАИС," 
														+ "ОбъемЕГАИС, ПолноеНаименованиеНоменклатурыЕГАИС, ПроизводительЕГАИС, КрепостьЕГАИС");
	ИначеЕсли ЗначениеЗаполнено(Параметры.АлкогольнаяПродукция) Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.АлкогольнаяПродукция, "ВидПродукции, Импортер, Наименование," 
														+ "Объем, НаименованиеПолное, Производитель, Крепость");
														
		ВидАлкогольнойПродукцииЕГАИС        = ЗначенияРеквизитов.ВидПродукции;
		ИмпортерЕГАИС                       = ЗначенияРеквизитов.Импортер;
		НаименованиеНоменклатурыЕГАИС       = ЗначенияРеквизитов.Наименование;
		ОбъемЕГАИС                          = ЗначенияРеквизитов.Объем;
		ПолноеНаименованиеНоменклатурыЕГАИС = ЗначенияРеквизитов.НаименованиеПолное;
		ПроизводительЕГАИС                  = ЗначенияРеквизитов.Производитель;
		КрепостьЕГАИС                       = ЗначенияРеквизитов.Крепость;
		
		АлкогольнаяПродукция = Параметры.АлкогольнаяПродукция;
	КонецЕсли;
	
	Для Каждого Элемент Из Параметры.Отбор Цикл
		СписокОбязательныхОтборов.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	СтрокаОтображение = "";
	Если Параметры.Свойство("СтрокаОтображение", СтрокаОтображение) Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы[СтрокаОтображение]
	КонецЕсли;

	ВидПоиска = "Наименование";
	
	Если Параметры.Свойство("ВидПоиска") Тогда
		ВидПоиска = Параметры.ВидПоиска;
		ТекущийЭлемент = Элементы.ЗначениеПоиска;
	КонецЕсли;
	
	// Если вызов из РМК, позиционируемся в списке выбора на перевыбираемой номенклатуре
	Если Параметры.Свойство("Номенклатура") Тогда
		Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			Элементы.Список.ТекущаяСтрока = Параметры.Номенклатура;
		КонецЕсли;
	КонецЕсли;
	
	// ПодключаемоеОборудование
	ПараметрыСобытийПО = Новый Структура;
	ПараметрыСобытийПО.Вставить("РегистрацияНовойНоменклатуры", Истина);
	ПодключаемоеОборудованиеРТ.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	РаботаСНоменклатурой.ПриСозданииНаСервереФормаСпискаНоменклатуры(
		ЭтотОбъект, 
		Элементы.ФормаКоманднаяПанель, 
		Элементы.Список, 
		Истина);
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Для Каждого ИмяОтбора Из СписокОбязательныхОтборов Цикл
		ЭлементыОтбора = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы;
		
		Для Каждого Элемент Из ЭлементыОтбора Цикл
			Если Элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяОтбора) Тогда
				Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода, СчитывательМагнитныхКарт");
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗначениеПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗначениеПоиска = Текст;
	
	ПоискНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьПоследнийПоиск();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПоискаПриИзменении(Элемент)
	
	ПоискНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьПоследнийПоиск();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    
    // &ЗамерПроизводительности
	ОценкаПроизводительностиРТКлиент.НачатьЗамер(
		     Истина, "Справочник.Номенклатура.Форма.ФормаЭлемента.СозданиеНового");

	Если Не Копирование И Не Группа Тогда
		
		Отказ = Истина;
		
		СтруктураПараметров = Новый Структура("ВидАлкогольнойПродукцииЕГАИС, ИмпортерЕГАИС, НаименованиеНоменклатурыЕГАИС, КрепостьЕГАИС," 
												+ "ОбъемЕГАИС, ПолноеНаименованиеНоменклатурыЕГАИС, ПроизводительЕГАИС, Родитель");
		
		СтруктураПараметров.ВидАлкогольнойПродукцииЕГАИС        = ВидАлкогольнойПродукцииЕГАИС;
		СтруктураПараметров.ИмпортерЕГАИС                       = ИмпортерЕГАИС;
		СтруктураПараметров.НаименованиеНоменклатурыЕГАИС       = НаименованиеНоменклатурыЕГАИС;
		СтруктураПараметров.ОбъемЕГАИС                          = ОбъемЕГАИС;
		СтруктураПараметров.ПолноеНаименованиеНоменклатурыЕГАИС = ПолноеНаименованиеНоменклатурыЕГАИС;
		СтруктураПараметров.ПроизводительЕГАИС                  = ПроизводительЕГАИС;
		СтруктураПараметров.КрепостьЕГАИС                       = КрепостьЕГАИС;
		СтруктураПараметров.Родитель                            = Родитель;
		
		ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиКомандПодключаемогоОборудования

&НаКлиенте
Процедура ПоискПоМагнитномуКоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиМагнитныйКод(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПоискВезде(Команда)
	
	ВидПоиска = "Везде";
	ПоискНоменклатуры();
	
	ТекущийЭлемент = Элементы.ЗначениеПоиска;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНаименование(Команда)
	
	ВидПоиска = "Наименование";
	ПоискНоменклатуры();
	
	ТекущийЭлемент = Элементы.ЗначениеПоиска;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискКод(Команда)
	
	ВидПоиска = "Код";
	ПоискНоменклатуры();
	
	ТекущийЭлемент = Элементы.ЗначениеПоиска;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискШтрихкод(Команда)
	
	ВидПоиска = "Штрихкод";
	ПоискНоменклатуры();
	
	ТекущийЭлемент = Элементы.ЗначениеПоиска;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискАртикул(Команда)
	
	ВидПоиска = "Артикул";
	ПоискНоменклатуры();
	
	ТекущийЭлемент = Элементы.ЗначениеПоиска;
	
КонецПроцедуры

// ЭлектронноеВзаимодействие.РаботаСНоменклатурой

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуРаботаСНоменклатурой(Команда)
	
	РаботаСНоменклатуройКлиент.ВыполнитьПодключаемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборРаботаСНоменклатурой(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ВыборВТаблицеФормы(ЭтотОбъект, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьДополнительныеКолонкиНоменклатуры()
	
	Элементы.Код.Видимость = ДополнительныеКолонкиНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код
							ИЛИ ДополнительныеКолонкиНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул;
	Элементы.Артикул.Видимость = ДополнительныеКолонкиНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул
							ИЛИ ДополнительныеКолонкиНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПростойРежимПоиска(ВидПоиска, Текст)
	
	ОчиститьПоследнийПоиск();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор,
		ВидПоиска,
		Текст,
		ВидСравненияКомпоновкиДанных.Содержит,
		,
		ЗначениеЗаполнено(Текст));
	ПоследнийВидПоиска = ВидПоиска;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПоискПоЧастиШтрихкода(Текст)
	
	ОчиститьПоследнийПоиск();
	
	СписокНоменклатуры = ПодборТоваровВызовСервера.СписокНоменклатурыПоЧастиШтрихкода(Текст);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор,
		"Ссылка",
		СписокНоменклатуры,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		ЗначениеЗаполнено(Текст));
	
	ПоследнийВидПоиска = "Ссылка";
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПоискПоВсемДанным(Текст)
	
	ОчиститьПоследнийПоиск();
	
	СписокНоменклатуры = ПодборТоваровВызовСервера.СписокНоменклатурыПоискВезде(Текст);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор,
		"Ссылка",
		СписокНоменклатуры,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		ЗначениеЗаполнено(Текст));
	
	ПоследнийВидПоиска = "Ссылка";
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоследнийПоиск()
	
	Если ЗначениеЗаполнено(ПоследнийВидПоиска) Тогда
		
		ПолеПоследнегоПоиска = Новый ПолеКомпоновкиДанных(ПоследнийВидПоиска);
		
		ЭлементыОтборы = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы;
				
		Для каждого ЭлементОтбора Из ЭлементыОтборы Цикл
			
			Если ЭлементОтбора.ЛевоеЗначение = ПолеПоследнегоПоиска Тогда
				
				Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Удалить(ЭлементОтбора);
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПолеПоследнегоПоиска = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНоменклатуры()
	
	Если ВидПоиска = "Везде" ИЛИ ВидПоиска = "" Тогда
		
		УстановитьПоискПоВсемДанным(ЗначениеПоиска);
		
	ИначеЕсли ВидПоиска = "Штрихкод" Тогда
		
		УстановитьПоискПоЧастиШтрихкода(ЗначениеПоиска);
		
	Иначе
		
		УстановитьПростойРежимПоиска(ВидПоиска, ЗначениеПоиска);
		
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.Список;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти