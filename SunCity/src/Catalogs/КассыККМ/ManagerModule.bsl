#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция получает реквизиты кассы.
//
// Параметры:
//  КассаККМ - СправочникСсылка.КассыККМ - Ссылка на кассу ККМ.
//
// Возвращаемое значение:
//	Структура - Организация и Валюта выбранной кассы ККМ.
//
Функция РеквизитыКассыККМ(КассаККМ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Владелец КАК Организация,
	|	КассыККМ.РабочееМесто КАК РабочееМесто,
	|	КассыККМ.Магазин КАК Магазин,
	|	КассыККМ.Ссылка КАК КассаККМ
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ";
	
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураРеквизитов = Новый Структура("Организация, РабочееМесто, Магазин, КассаККМ");
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка);
		
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Получает кассу по организации и магазину.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация кассы.
//  Магазин - СправочникСсылка.Магазины - магазин кассы.
//
// Возвращаемое значение:
//  СправочникСсылка.КассыККМ - касса ккм по организации и магазину.
//
Функция КассаПоУмолчанию(Организация, Магазин = Неопределено) Экспорт
	Перем КассаПоУмолчанию;
	КассаПоУмолчанию = Справочники.КассыККМ.ПустаяСсылка();
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка КАК Касса
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Владелец = &Организация
	|" + ?(ЗначениеЗаполнено(Магазин), " И КассыККМ.Магазин = &Магазин", "") + "
	|	И НЕ КассыККМ.ПометкаУдаления
	|";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Количество() = 1.00 Тогда
			Выборка.Следующий();
			КассаПоУмолчанию = Выборка.Касса;
		КонецЕсли;
	КонецЕсли;
	Возврат КассаПоУмолчанию;
КонецФункции

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	

	Результат.Добавить("Владелец");
	Результат.Добавить("Магазин");
	Если (ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование") 
		И ПолучитьФункциональнуюОпцию("ИспользоватьОбменСПодключаемымОборудованием")) Тогда
		Результат.Добавить("ТипКассы");
	КонецЕсли;
	
	Результат.Добавить("РабочееМесто");
	Результат.Добавить("ПодключаемоеОборудование");
	Результат.Добавить("ОфлайнОборудование");
	Результат.Добавить("СерийныйНомер");
	Результат.Добавить("РегистрационныйНомер");
	Результат.Добавить("ШаблонЧекаККМ");
	Результат.Добавить("ШаблонЧекаККМВозврат");
	Результат.Добавить("ШиринаЛенты");
	Результат.Добавить("НастройкаРаспределенияВыручкиПоСекциям");
	Результат.Добавить("НеПечататьБумажныйЧек");
	Результат.Добавить("ЭлектронныйЧекEmailПередаютсяПрограммой1С");
	Результат.Добавить("ЭлектронныйЧекSMSПередаютсяПрограммой1С");
	
	Возврат Результат;
КонецФункции

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
// Возвращаемое значение:
//  Массив - массив реквизитов.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	
	РедактируемыеРеквизиты.Добавить("ШиринаЛенты");
	
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

// Процедура получает массивы реквизитов, зависимых от реквизита КассаУправляющейСистемы.
// Параметры:
//           Объект - СправочникСсылка.Кассы или ДинамическийСписок- Элемент справочника для которого устанавливаем
//                    доступные реквизиты.
//           МассивВсехРеквизитов - Массив - Выходной параметр с типом Массив в который будут помещены имена всех
//                                                 реквизитов справочника.
//           МассивВидимыхРеквизитов - Массив - Выходной параметр с типом Массив в который будут помещены имена
//                                                     реквизитов справочника.
//           ДополнительныеСкрываемыеЭлементы - Массив - массив дополнительных элементов.
//
Процедура ПолучитьМассивыРеквизитовЗависимыхОтКассыУправляющейСистемы(Объект, МассивВсехРеквизитов, МассивВидимыхРеквизитов, ДополнительныеСкрываемыеЭлементы = Неопределено) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	Если ДополнительныеСкрываемыеЭлементы = Неопределено Тогда
		ДополнительныеСкрываемыеЭлементы = Новый Структура("Организация");
	КонецЕсли;
	
	МассивВидимыхРеквизитов = Новый Массив;
	Если ТипЗнч(Объект) = Тип("ДинамическийСписок") Тогда
		// Процедура вызвана для формы списка.
		МассивВсехРеквизитов.Добавить("Наименование");
		МассивВсехРеквизитов.Добавить("Магазин");
		МассивВсехРеквизитов.Добавить("РабочееМесто");
		МассивВсехРеквизитов.Добавить("Организация");
		МассивВсехРеквизитов.Добавить("ОтборМагазин");
		МассивВсехРеквизитов.Добавить("ОтборОрганизация");
		МассивВсехРеквизитов.Добавить("Владелец");
		МассивВсехРеквизитов.Добавить("ИспользоватьБезПодключенияОборудования");
		
		МассивВидимыхРеквизитов.Добавить("Наименование");
		МассивВидимыхРеквизитов.Добавить("Магазин");
		МассивВидимыхРеквизитов.Добавить("РабочееМесто");
		МассивВидимыхРеквизитов.Добавить("Организация");
		МассивВидимыхРеквизитов.Добавить("ОтборМагазин");
		Для Каждого СкрываемоеПоле Из ДополнительныеСкрываемыеЭлементы Цикл
			Если МассивВидимыхРеквизитов.Найти(СкрываемоеПоле.Ключ) <> Неопределено Тогда
				МассивВидимыхРеквизитов.Удалить(МассивВидимыхРеквизитов.Найти(СкрываемоеПоле.Ключ));
			КонецЕсли;
		КонецЦикла;
	Иначе
		// Процедура вызвана для формы элемента.
		МассивВсехРеквизитов.Добавить("Организация");
		МассивВсехРеквизитов.Добавить("Магазин");
		МассивВсехРеквизитов.Добавить("РабочееМесто");
		МассивВсехРеквизитов.Добавить("Наименование");
		МассивВсехРеквизитов.Добавить("ВнешнееОборудование");
		МассивВсехРеквизитов.Добавить("РегистрационныйНомер");
		МассивВсехРеквизитов.Добавить("СерийныйНомер");
		МассивВсехРеквизитов.Добавить("ШиринаЛенты");
		МассивВсехРеквизитов.Добавить("ШаблонЧекаККМ");
		МассивВсехРеквизитов.Добавить("ШаблонЧекаККМВозврат");
		МассивВсехРеквизитов.Добавить("ИспользоватьБезПодключенияОборудования");
		
		МассивВидимыхРеквизитов.Добавить("Организация");
		МассивВидимыхРеквизитов.Добавить("Магазин");
		МассивВидимыхРеквизитов.Добавить("РабочееМесто");
		МассивВидимыхРеквизитов.Добавить("Наименование");
		МассивВидимыхРеквизитов.Добавить("ВнешнееОборудование");
		МассивВидимыхРеквизитов.Добавить("РегистрационныйНомер");
		МассивВидимыхРеквизитов.Добавить("СерийныйНомер");
		МассивВидимыхРеквизитов.Добавить("ШиринаЛенты");
		МассивВидимыхРеквизитов.Добавить("ШаблонЧекаККМ");
		МассивВидимыхРеквизитов.Добавить("ШаблонЧекаККМВозврат");
	КонецЕсли;
	
КонецПроцедуры

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Получает кассу ККМ по экземпляру оборудования.
//
// Параметры:
//  Оборудование - СправочникСсылка.ПодключаемоеОборудование - оборудование кассы ККМ.
//
// Возвращаемое значение:
//  СправочникСсылка.КассыККМ - касса ккм по подключаемому оборудованию.
//
Функция ПолучитьКассуККМПоЭкземпляруОборудования(Оборудование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КассыККМ.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|ГДЕ
		|	КассыККМ.ОфлайнОборудование = &Оборудование
		|	И НЕ КассыККМ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Оборудование", Оборудование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.КассыККМ.ПустаяСсылка();
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли
