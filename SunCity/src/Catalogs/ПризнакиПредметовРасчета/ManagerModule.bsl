#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет предопределенные элементы.
//
Процедура ЗаполнитьПреопределенныеЭлементы() Экспорт
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.Товар.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о реализуемом товаре, за исключением подакцизного товара (наименование и иные сведения, описывающие товар)'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Товар;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ПодакцизныйТовар.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о реализуемом подакцизном товаре (наименование и иные сведения, описывающие товар)'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТовар;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.Работа.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о выполняемой работе (наименование и иные сведения, описывающие работу)'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Работа;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.Услуга.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения об оказываемой услуге (наименование и иные сведения, описывающие услугу)'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.Услуга;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.СтавкаАзартнойИгры.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о приеме ставок при осуществлении деятельности по организации и проведению азартных игр'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.СтавкаАзартнойИгры;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ВыигрышАзартнойИгры.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о выплате денежных средств в виде выигрыша при осуществлении деятельности по организации и проведению азартных игр'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ВыигрышАзартнойИгры;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ЛотерейныйБилет.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о приеме денежных средств при реализации лотерейных билетов, электронных лотерейных билетов, приеме лотерейных ставок при осуществлении деятельности по организации и проведению лотерей'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ЛотерейныйБилет;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ВыигрышЛотереи.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о выплате денежных средств в виде выигрыша при осуществлении деятельности по организации и проведению лотерей'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ВыигрышЛотереи;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ПредставлениеРИД.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о предоставлении прав на использование результатов интеллектуальной деятельности или средств индивидуализации'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПредоставлениеРИД;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.Платеж.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения об авансе, задатке, предоплате, кредите, взносе в счет оплаты, пени, штрафе, вознаграждении, бонусе и ином аналогичном предмете расчета'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.СоставнойПредметРасчета.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о предмете расчета, состоящем из предметов, каждому из которых может быть присвоено значение от «0» до «10»'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.СоставнойПредметРасчета;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ИнойПредметРасчета.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о предмете расчета, не относящемуся к предметам расчета, которым может быть присвоено значение от «0» до «11»'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ИнойПредметРасчета;
	ЭлементСправочникаОбъект.Записать();
	
	Если ПолучитьФункциональнуюОпцию("ОтключенныйФункционал") Тогда
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ПодакцизныйТоварМаркируемыйСИНеИмеющийКМ.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о реализуемом подакцизном товаре, подлежащем маркировке средством идентификации, не имеющим кода маркировки'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТоварМаркируемыйСИНеИмеющийКМ;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ПодакцизныйТоварМаркируемыйСИИмеющийКМ.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о реализуемом подакцизном товаре, подлежащем маркировке средством идентификации, имеющим код маркировки'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТоварМаркируемыйСИИмеющийКМ;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ТоварМаркируемыйСИНеИмеющийКМ.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о реализуемом подакцизном товаре, подлежащем маркировке средством идентификации, не имеющим кода маркировки, за исключением подакцизного товара'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ТоварМаркируемыйСИНеИмеющийКМ;
	ЭлементСправочникаОбъект.Записать();
	
	ЭлементСправочникаОбъект = Справочники.ПризнакиПредметовРасчета.ТоварМаркируемыйСИИмеющийКМ.ПолучитьОбъект();
	ЭлементСправочникаОбъект.Заблокировать();
	ЭлементСправочникаОбъект.ФорматПФ = ВРЕГ(ЭлементСправочникаОбъект.Наименование);
	ЭлементСправочникаОбъект.Комментарий = НСтр("ru = 'Сведения о реализуемом подакцизном товаре, подлежащем маркировке средством идентификации, имеющим код маркировки, за исключением подакцизного товара'");
	ЭлементСправочникаОбъект.ТипПризнакаПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ТоварМаркируемыйСИИмеющийКМ;
	ЭлементСправочникаОбъект.Записать();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли