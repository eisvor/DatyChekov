
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Сотрудник") Тогда
		НеПроверятьСотрудника = Ложь;
		УсловиеСотрудника     = Параметры.Сотрудник;
	ИначеЕсли Параметры.Свойство("НеПроверятьСотрудника") Тогда
		НеПроверятьСотрудника = Параметры.НеПроверятьСотрудника;
	Иначе
		НеПроверятьСотрудника = Истина
	КонецЕсли;
	
	ЗаполнитьСписокВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеПоискаПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПолеПоиска = Текст;
	ЗаполнитьСписокВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВниз(Команда)
	
	ПередвинутьПозицию(1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВверх(Команда)
	
	ПередвинутьПозицию(-1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Передвинуть позицию в списке.
//
// Параметры:
// Движение = 1 (вниз) или -1 (вверх).
// 
&НаКлиенте
Процедура ПередвинутьПозицию(Движение)
	// Вставить содержимое обработчика.
	Если Список.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено  Тогда
		ИндексСтроки = 0;
	Иначе
		ИндексСтроки = Список.Индекс(ТекущиеДанные);
	КонецЕсли;
	
	ИндексСтроки = ИндексСтроки + Движение;
	
	Если ИндексСтроки > (Список.Количество() - 1) Тогда
		ИндексСтроки = 0;
	ИначеЕсли ИндексСтроки < 0 Тогда
		ИндексСтроки = Список.Количество() - 1;
	КонецЕсли;
	
	ТекущиеДанные = Список[ИндексСтроки];
	Элементы.Список.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьВыборСтроки()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Закрыть();
	Иначе
		Закрыть(ТекущиеДанные.ФИО)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК ФИО
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыДляСкрытияПерсональныхДанных КАК СубъектыДляСкрытияПерсональныхДанных
	|		ПО ФизическиеЛица.Ссылка = СубъектыДляСкрытияПерсональныхДанных.Субъект
	|			И (СубъектыДляСкрытияПерсональныхДанных.Состояние = &СостояниеСкрытиеВыполнено)
	|ГДЕ
	|	НЕ ФизическиеЛица.ПометкаУдаления
	|	И НЕ ФизическиеЛица.ЭтоГруппа
	|	И (&НеПроверятьСотрудника
	|			ИЛИ ФизическиеЛица.Сотрудник = &УсловиеСотрудника)
	|	И ФизическиеЛица.Наименование ПОДОБНО &ПолеПоиска
	|	И СубъектыДляСкрытияПерсональныхДанных.Субъект ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование";
	
	Запрос.УстановитьПараметр("НеПроверятьСотрудника", НеПроверятьСотрудника);
	Запрос.УстановитьПараметр("СостояниеСкрытиеВыполнено", Перечисления.СостоянияСубъектовДляСкрытия.СкрытиеВыполнено);
	Запрос.УстановитьПараметр("УсловиеСотрудника"    , УсловиеСотрудника);
	Запрос.УстановитьПараметр("ПолеПоиска", "%" + ПолеПоиска + "%");
	
	Список.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти
