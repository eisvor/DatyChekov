#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Локальный = Истина;
	КонецЕсли;
	Доступность = Объект.Локальный Или Объект.Предопределенный;
	Если Объект.Ссылка = Справочники.ВидыКонтроля.ЗапретОплатыБонусами Тогда
		Элементы.ТипКонтроля.Доступность = Ложь;
	КонецЕсли;
	
	ОбщегоНазначенияРМК.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДоступныеПараметрыПоТипуКонтроля();
	ОбработатьИзменениеТипаКонтроля();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверитьСообщитьПроЧужиеПараметрыВТекстеШаблона(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипКонтроляПриИзменении(Элемент)
	
	НачатьИзменениеТипаКонтроля();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПараметрыконтроля

&НаКлиенте
Процедура ПараметрыКонтроляПараметрПриИзменении(Элемент)
	
	НастроитьПолеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыКонтроляПриАктивизацииСтроки(Элемент)
	
	НастроитьПолеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьПолеЗначения()
	
	КвалификаторЧисла = Новый КвалификаторыЧисла(3, 0, ДопустимыйЗнак.Неотрицательный);
	
	Элементы.ПараметрыКонтроляЗначение.РежимВыбораИзСписка = Ложь;
	Элементы.ПараметрыКонтроляЗначение.КнопкаСпискаВыбора = Ложь;
	Элементы.ПараметрыКонтроляЗначение.СписокВыбора.Очистить();
	ТекущиеДанные = Элементы.ПараметрыКонтроля.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		Если ТекущиеДанные.Параметр = ПредопределенноеЗначение("Перечисление.ПараметрыКонтроляПродаж.Возраст") Тогда
			Элементы.ПараметрыКонтроляЗначение.ОграничениеТипа = Новый ОписаниеТипов("Число",,,КвалификаторЧисла);
		ИначеЕсли ТекущиеДанные.Параметр
				= ПредопределенноеЗначение("Перечисление.ПараметрыКонтроляПродаж.НеВыводитьСообщение") Тогда
			Элементы.ПараметрыКонтроляЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы.ПараметрыКонтроляЗначение.РежимВыбораИзСписка = Истина;
			Элементы.ПараметрыКонтроляЗначение.КнопкаСпискаВыбора = Истина;
			Элементы.ПараметрыКонтроляЗначение.СписокВыбора.Добавить("Ложь", "Ложь");
			Элементы.ПараметрыКонтроляЗначение.СписокВыбора.Добавить("Истина", "Истина");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСообщитьПроЧужиеПараметрыВТекстеШаблона(Отказ)
	
	ПараметрыИзШаблона
		= ИнтерфейсРМКСлужебныйКлиент.ПолучитьПараметрыИзТекстаШаблонаПредупреждения(Объект.ТекстШаблонаПредупреждения);
	КоличествоПараметровШаблона = ПараметрыИзШаблона.Количество();
	ИндексПараметраШаблона = 0;
	Пока ИндексПараметраШаблона < КоличествоПараметровШаблона И Не Отказ Цикл
		ПараметрШаблона = ПараметрыИзШаблона.Получить(ИндексПараметраШаблона);
		Если СписокДоступныхПараметровШаблона.НайтиПоЗначению(ПараметрШаблона) = Неопределено Тогда
			ТекстСообщения = НСтр("ru='Для типа контроля ""[ТипКонтроля]"" не предусмотрен параметр ""[ИмяПараметра]"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "[ТипКонтроля]", Строка(Объект.ТипКонтроля));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "[ИмяПараметра]", ПараметрШаблона);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ТекстШаблонаПредупреждения", , Отказ);
		КонецЕсли;
		ИндексПараметраШаблона = ИндексПараметраШаблона + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьИзменениеТипаКонтроля()
	
	ОбновитьДоступныеПараметрыПоТипуКонтроля();
	Если ЕстьЧужиеПараметры() Тогда
		
		ТекстВопроса = НСтр("ru='Не используемые для типа контроля ""[ТипКонтроля]"" параметры будут очищены. Продолжить?'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "[ТипКонтроля]", Строка(Объект.ТипКонтроля));
		
		ОповещениеОтветаОбИзмененииТипаКонтроля
			= Новый ОписаниеОповещения("ОбработатьОтветОбИзмененииТипаКонтроля", ЭтотОбъект);
		
		ПоказатьВопрос(ОповещениеОтветаОбИзмененииТипаКонтроля, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ОбработатьИзменениеТипаКонтроля();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветОбИзмененииТипаКонтроля(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОбработатьИзменениеТипаКонтроля();
		УдалитьЧужиеПараметры();
	Иначе
		Объект.ТипКонтроля = ПредыдущийТипКонтроля;
		ОбновитьДоступныеПараметрыПоТипуКонтроля();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЧужиеПараметры()
	
	КоличествоПараметров = Объект.ПараметрыКонтроля.Количество();
	ИндексПараметра = 0;
	Пока ИндексПараметра < КоличествоПараметров Цикл
		ТекущийИндекс = КоличествоПараметров - ИндексПараметра - 1;
		СтрокаПараметра = Объект.ПараметрыКонтроля.Получить(ТекущийИндекс);
		Если СписокДоступныхПараметров.НайтиПоЗначению(СтрокаПараметра.Параметр) = Неопределено Тогда
			Объект.ПараметрыКонтроля.Удалить(ТекущийИндекс);
		КонецЕсли;
		ИндексПараметра = ИндексПараметра + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьЧужиеПараметры()
	
	РезультатФункции = Ложь;
	
	КоличествоПараметров = Объект.ПараметрыКонтроля.Количество();
	ИндексПараметра = 0;
	Пока ИндексПараметра < КоличествоПараметров И Не РезультатФункции Цикл
		СтрокаПараметра = Объект.ПараметрыКонтроля.Получить(ИндексПараметра);
		Если СписокДоступныхПараметров.НайтиПоЗначению(СтрокаПараметра.Параметр) = Неопределено Тогда
			РезультатФункции = Истина;
		КонецЕсли;
		ИндексПараметра = ИндексПараметра + 1;
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьИзменениеТипаКонтроля()
	
	ПредыдущийТипКонтроля = Объект.ТипКонтроля;
	ТекстПодсказки = НСтр("ru='Значения параметров:
		|[ГруппаТоваров] - значение реквизита ""Группа товаров"" из справочника ""Контроль продаж"".
		|[ОписаниеПериода] - формируется по значениям в строке контроля справочника ""Контроль продаж"".'");
	
	ЧастьПодсказкиВозраст = НСтр("ru='[Возраст] - значение параметра вида контроля ""Возраст"".
		|[ДатаРождения] - формируется дата, от текущей даты минус значение параметра вида контроля ""Возраст"".'");
	
	ЧастьПодсказкиТовар
		= НСтр("ru='[ПредставлениеТовара] - представление проверяемого товара, как указано в списке товаров.'");
	
	СписокДоступныхПараметровШаблона.Очистить();
	СписокДоступныхПараметровШаблона.Добавить(НСтр("ru='ГруппаТоваров'"));
	СписокДоступныхПараметровШаблона.Добавить(НСтр("ru='ОписаниеПериода'"));
	
	Если Объект.ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.ПроверкаПокупателя") Тогда
		ТекстПодсказки = СтрШаблон("%1%2", ТекстПодсказки, ЧастьПодсказкиВозраст);
		СписокДоступныхПараметровШаблона.Добавить(НСтр("ru='Возраст'"));
		СписокДоступныхПараметровШаблона.Добавить(НСтр("ru='ДатаРождения'"));
	КонецЕсли;
	
	Если Объект.ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.ЗапретПодбора")
			Или Объект.ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.ПроверкаПокупателя")
			Или Объект.ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.КонтрольСотрудникомНаКСО") Тогда
		ТекстПодсказки = СтрШаблон("%1%2", ТекстПодсказки, ЧастьПодсказкиТовар);
		СписокДоступныхПараметровШаблона.Добавить(НСтр("ru='ПредставлениеТовара'"));
	КонецЕсли;
	Элементы.ТекстШаблонаПредупреждения.РасширеннаяПодсказка.Заголовок = ТекстПодсказки;
	Элементы.ПараметрыКонтроляПараметр.СписокВыбора.ЗагрузитьЗначения(СписокДоступныхПараметров.ВыгрузитьЗначения());
	Элементы.ПараметрыКонтроля.Доступность = (СписокДоступныхПараметров.Количество() > 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступныеПараметрыПоТипуКонтроля()
	
	СписокДоступныхПараметров.Очистить();
	Если Объект.ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.ПроверкаПокупателя") Тогда
		СписокДоступныхПараметров.Добавить(ПредопределенноеЗначение("Перечисление.ПараметрыКонтроляПродаж.Возраст"));
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Справочник.ВидыКонтроля.ЗапретОплатыБонусами") Тогда
		ПараметрНеВыводитьСообщение = ПредопределенноеЗначение("Перечисление.ПараметрыКонтроляПродаж.НеВыводитьСообщение");
		СписокДоступныхПараметров.Добавить(ПараметрНеВыводитьСообщение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти