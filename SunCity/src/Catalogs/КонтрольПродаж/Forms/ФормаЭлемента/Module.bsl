#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Локальный = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияРМК.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	ПрочитатьЗначениеИспользования();
	НастроитьДоступностьФормы();
	ЗаполнитьТипыКонтроля();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если КонтрольПродажЗаполненКорректно() Тогда
		Если Объект.Локальный Тогда
			ТекущийОбъект.Использование = ИспользованиеЛокально;
		ИначеЕсли Объект.Использование Тогда
			ТекущийОбъект.ВключенВРМК = ИспользованиеЛокально;
		КонецЕсли;
		АктуализироватьСписокПалитр(ТекущийОбъект);
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДляВсехТорговыхОбъектовПриИзменении(Элемент)
	
	Если Объект.ДляВсехТорговыхОбъектов И Объект.ТорговыеОбъекты.Количество() > 0 Тогда
		ПодтвердитьОчисткуМагазиновПриВключенииПризнака();
	Иначе
		НастроитьДоступностьТаблицыМагазинов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДляВсейНоменклатурыПриИзменении(Элемент)
	
	Если Объект.ДляВсейНоменклатуры И (Объект.Номенклатура.Количество() > 0 Или ЗначениеЗаполнено(Объект.Палитра)) Тогда
		ПодтвердитьОчисткуСпискаТоваровПриВключенииПризнака();
	Иначе
		НастроитьДоступностьТаблицыНоменклатуры();
		НастроитьДоступностьПалитры();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПалитраПриИзменении(Элемент)
	НастроитьДоступностьТаблицыНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НастроитьДоступностьПалитры();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыКонтрольПродаж

&НаКлиенте
Процедура КонтрольПродажПриАктивизацииСтроки(Элемент)
	
	НастроитьДоступностьПолейВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПродажВидКонтроляПриИзменении(Элемент)
	
	УстановитьТипКонтроляВСтроке();
	НастроитьДоступностьПолейВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПродажПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		НастроитьДоступностьПолейВремени();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФормуПодбораНоменклатуры(Команда)
	
	ЗаголовокФормыПодбора = СтрШаблон(НСтр("ru = 'Подбор товаров в контроль продаж %1'"),
			?(ЗначениеЗаполнено(Объект.Ссылка),
				Объект.Ссылка,
				НСтр("ru = ''")));
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("Заголовок", ЗаголовокФормыПодбора);
	ПараметрыОткрытия.Вставить("КлючУникальности", УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);

	ОбщегоНазначенияРМККлиент.ОткрытьИнтерфейсПодбораНоменклатуры(ЭтотОбъект, ПараметрыОткрытия, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьЗначениеИспользования()
	
	Если АвтономнаяЛогикаИспользования Тогда
		ИспользованиеЛокально = (Объект.Использование И (Объект.ВключенВРМК Или Объект.Локальный));
		Элементы.ИспользованиеЛокально.Доступность = (Объект.Использование Или Объект.Локальный);
	Иначе
		ИспользованиеЛокально = Объект.Использование;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДоступностьЭлементовФормы()
	
	НастроитьДоступностьТаблицыМагазинов();
	НастроитьДоступностьТаблицыНоменклатуры();
	НастроитьДоступностьПалитры();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДоступностьТаблицыМагазинов()
	
	Элементы.СтраницаМагазины.Доступность = Не Объект.ДляВсехТорговыхОбъектов;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДоступностьТаблицыНоменклатуры()
	
	Элементы.Номенклатура.Доступность = Не (Объект.ДляВсейНоменклатуры Или ЗначениеЗаполнено(Объект.Палитра));
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДоступностьПалитры()
	
	Элементы.Палитра.Доступность = Не (Объект.ДляВсейНоменклатуры Или Объект.Номенклатура.Количество() > 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьОчисткуМагазиновПриВключенииПризнака()
	
	ПараметрыОповещения = Новый Структура("УстановкаПризнака", Истина);
	ОповещениеОтвета = Новый ОписаниеОповещения("ОбработкаОтветаОчисткиМагазинов", ЭтотОбъект, ПараметрыОповещения);
	ТекстВопроса = НСтр("ru = 'Список магазинов будет очищен. Продолжить?'");
	ПоказатьВопрос(ОповещениеОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОчисткиМагазинов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ТорговыеОбъекты.Очистить();
		НастроитьДоступностьТаблицыМагазинов();
	ИначеЕсли ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("УстановкаПризнака")
			И ДополнительныеПараметры.УстановкаПризнака Тогда
		Объект.ДляВсехТорговыхОбъектов = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьОчисткуСпискаТоваровПриВключенииПризнака()
	
	ПараметрыОповещения = Новый Структура("УстановкаПризнака", Истина);
	ОповещениеОтвета = Новый ОписаниеОповещения("ОбработкаОтветаОчисткиСпискаТоваров", ЭтотОбъект, ПараметрыОповещения);
	ТекстВопроса = НСтр("ru = 'Список товаров будет очищен. Продолжить?'");
	ПоказатьВопрос(ОповещениеОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОчисткиСпискаТоваров(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Объект.Номенклатура.Количество() > 0 Тогда
			Объект.Номенклатура.Очистить();
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Палитра) Тогда
			Объект.Палитра = Неопределено;
		КонецЕсли;
		НастроитьДоступностьТаблицыНоменклатуры();
		НастроитьДоступностьПалитры();
	ИначеЕсли ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("УстановкаПризнака")
			И ДополнительныеПараметры.УстановкаПризнака Тогда
		Объект.ДляВсейНоменклатуры = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьСписокПалитр(ТекущийОбъект)
	
	ТекущийОбъект.ПалитрыКонтроляПродаж.Очистить();
	Если ЗначениеЗаполнено(Объект.Палитра) Тогда
		ИсходныйМассив = Новый Массив;
		ИсходныйМассив.Добавить(Объект.Палитра);
		ПодчиненныеПалитры = ИнтерфейсРМКСлужебный.ПолучитьВложенныеПалитры(ИсходныйМассив);
		НоваяСтрока = ТекущийОбъект.ПалитрыКонтроляПродаж.Добавить();
		НоваяСтрока.Палитра = Объект.Палитра;
		Для Каждого ЭлементПалитра Из ПодчиненныеПалитры Цикл
			НоваяСтрока = ТекущийОбъект.ПалитрыКонтроляПродаж.Добавить();
			НоваяСтрока.Палитра = ЭлементПалитра;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КонтрольПродажЗаполненКорректно()
	
	РезультатФункции = Истина;
	
	КоличествоСтрокКонтроля = Объект.КонтрольПродаж.Количество();
	ИндексКонтроля = 0;
	Пока ИндексКонтроля < КоличествоСтрокКонтроля И РезультатФункции Цикл
		СтрокаКонтроля = Объект.КонтрольПродаж.Получить(ИндексКонтроля);
		ТекстОшибки = "";
		ИмяКолонки = "";
		Если ЗначениеЗаполнено(СтрокаКонтроля.КонецПериода)
				И СтрокаКонтроля.НачалоПериода > СтрокаКонтроля.КонецПериода Тогда
				
			ТекстОшибки = НСтр("ru = 'Конец периода не может быть меньше начала периода.'");
			ИмяКолонки = "КонецПериода";
			РезультатФункции = Ложь;
			
		ИначеЕсли СтрокаКонтроля.ВремяНачала > СтрокаКонтроля.ВремяОкончания Тогда
			
			ТекстОшибки = НСтр("ru = 'Время начала не может быть больше времени окончания.'");
			ИмяКолонки = "ВремяНачала";
			РезультатФункции = Ложь;
			
		КонецЕсли;
		Если Не РезультатФункции Тогда
			ЧастьТекстаНомерСтроки = НСтр("ru = 'Неверно заполнена строка №'");
			ТекстНомераСтроки = СтрШаблон("%1 %2.", ЧастьТекстаНомерСтроки, Формат(ИндексКонтроля + 1, "ЧГ="));
			ТекстСообщения = СтрШаблон("%1%2%3", ТекстНомераСтроки, Символы.ПС, ТекстОшибки);
			ПолеОтображенияОшибки = СтрШаблон("Объект.КонтрольПродаж[%1].%2", Формат(ИндексКонтроля, "ЧГ="), ИмяКолонки);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , ПолеОтображенияОшибки);
		КонецЕсли;
		
		ИндексКонтроля = ИндексКонтроля + 1;
	КонецЦикла;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаСервере
Процедура НастроитьДоступностьФормы()
	
	ТолькоДляПросмотра = Не Объект.Локальный;
	Элементы.Наименование.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.Описание.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.ДляВсехТорговыхОбъектов.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.ДляВсейНоменклатуры.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.Палитра.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.КонтрольПродаж.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.ТорговыеОбъекты.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.Номенклатура.ТолькоПросмотр = ТолькоДляПросмотра;
	Элементы.НаименованиеГруппыТоваров.ТолькоПросмотр = ТолькоДляПросмотра;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Для Каждого ЗначениеНоменклатуры Из ВыбранноеЗначение Цикл
		
		ОтборНоменклатуры = Новый Структура("Номенклатура", ЗначениеНоменклатуры);
		СуществующиеСтроки = Объект.Номенклатура.НайтиСтроки(ОтборНоменклатуры);
		Если СуществующиеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Объект.Номенклатура.Добавить();
			НоваяСтрока.номенклатура = ЗначениеНоменклатуры;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыКонтроля()
	
	ИспользуемыеВидыКонтроля = Новый Массив;
	Для Каждого СтрокаКонтроля Из Объект.КонтрольПродаж Цикл
		
		Если ЗначениеЗаполнено(СтрокаКонтроля.ВидКонтроля)
				И ИспользуемыеВидыКонтроля.Найти(СтрокаКонтроля.ВидКонтроля) = Неопределено Тогда
				
			ИспользуемыеВидыКонтроля.Добавить(СтрокаКонтроля.ВидКонтроля);
			
		КонецЕсли;
		
	КонецЦикла;
	ТипыВидовКонтроля = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ИспользуемыеВидыКонтроля, "ТипКонтроля");
	Для Каждого СтрокаКонтроля Из Объект.КонтрольПродаж Цикл
		Если ЗначениеЗаполнено(СтрокаКонтроля.ВидКонтроля) Тогда
			СтрокаКонтроля.ТипКонтроля = ТипыВидовКонтроля[СтрокаКонтроля.ВидКонтроля];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТипКонтроляВСтроке()
	
	ТекущиеДанные = Элементы.КонтрольПродаж.ТекущиеДанные;
	ТипКонтроляСтроки = Неопределено;
	Если ЗначениеЗаполнено(ТекущиеДанные.ВидКонтроля) Тогда
		ТипКонтроляСтроки = ПолучитьТипКонтроляПоВидуКонтроля(ТекущиеДанные.ВидКонтроля);
	КонецЕсли;
	ТекущиеДанные.ТипКонтроля = ТипКонтроляСтроки;
	Если Не ТипКонтроляПоддерживаетВремя(ТипКонтроляСтроки) Тогда
		ТекущиеДанные.ВремяНачала = Дата(1, 1, 1, 0, 0, 0);
		ТекущиеДанные.ВремяОкончания = Дата(1, 1, 1, 0, 0, 0);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКонтроляПоВидуКонтроля(ВидКонтроля)
	
	РезультатФункции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидКонтроля, "ТипКонтроля");
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Функция ТипКонтроляПоддерживаетВремя(ТипКонтроля)
	
	РезультатФункции = Ложь;
	
	Если ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.ЗапретПодбора")
			Или ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.ПроверкаПокупателя")
			Или ТипКонтроля = ПредопределенноеЗначение("Перечисление.ТипыКонтроля.КонтрольСотрудникомНаКСО") Тогда
			
		РезультатФункции = Истина;
			
	КонецЕсли;
	
	Возврат РезультатФункции;
	
КонецФункции

&НаКлиенте
Процедура НастроитьДоступностьПолейВремени()
	
	ТекущиеДанные = Элементы.КонтрольПродаж.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		ТолькоПросмотрВремени = Истина;
		Если ТипКонтроляПоддерживаетВремя(ТекущиеДанные.ТипКонтроля) Тогда
			
			ТолькоПросмотрВремени = Ложь;
			
		КонецЕсли;
		Элементы.КонтрольПродажВремяНачала.ТолькоПросмотр = ТолькоПросмотрВремени;
		Элементы.КонтрольПродажВремяОкончания.ТолькоПросмотр = ТолькоПросмотрВремени;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти