
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектИсточник = ?(ЗначениеЗаполнено(Параметры.ЗначениеКопирования),
		Параметры.ЗначениеКопирования.ПолучитьОбъект(),
		РеквизитФормыВЗначение("Объект", Тип("СправочникОбъект.ХранилищеШаблоновРМК")));
	
	СтруктураШаблона = ОбъектИсточник.Шаблон.Получить();
	СКД = ОбъектИсточник.СхемаКомпоновкиДанных.Получить();
	
	Если ТипЗнч(СтруктураШаблона) = Тип("Структура") Тогда
		СтруктураШаблона.Свойство("XMLОписаниеМакета", XMLОписаниеМакета);
	КонецЕсли;
	
	АдресШаблона = ПоместитьВоВременноеХранилище(СтруктураШаблона, УникальныйИдентификатор);
	
	Если СКД <> Неопределено Тогда
		АдресСКД = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
	КонецЕсли;
	
	Если ОбщегоНазначения.ЭтоМобильныйКлиент() Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ФормаРедактироватьМакет", "Видимость", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(АдресШаблона) Тогда
		
		СтруктураШаблона = ПолучитьИзВременногоХранилища(АдресШаблона);
		
		Если СтруктураШаблона <> Неопределено Тогда
			
			ТекущийОбъект.Шаблон = Новый ХранилищеЗначения(СтруктураШаблона);
			Если СтруктураШаблона.Свойство("АдресСКДВХранилище") Тогда
				АдресСКД = СтруктураШаблона.АдресСКДВХранилище;
			КонецЕсли;
			
			ТаблицаУсловий = Неопределено;
			Если СтруктураШаблона.Свойство("ТаблицаУсловий", ТаблицаУсловий) Тогда
				ТекущийОбъект.Условия.Загрузить(ТаблицаУсловий);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресСКД) Тогда
		
		СКД = ПолучитьИзВременногоХранилища(АдресСКД);
		ТекущийОбъект.СхемаКомпоновкиДанных = Новый ХранилищеЗначения(СКД);
		
		Если НЕ Отказ Тогда
			
			Если НЕ ОбщегоНазначенияРМК.ОбязательныеПараметрыСКДЗаполнены(ТекущийОбъект) Тогда
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененШаблонЧекаРМК" Тогда
		
		АдресШаблона = Параметр;
		Модифицированность = Истина;
		
		Если ИмяСобытия = "ИзмененШаблон"
			И ЗначениеЗаполнено(АдресШаблона) Тогда
			
			СтруктураШаблона = ПолучитьИзВременногоХранилища(АдресШаблона);
			Если СтруктураШаблона <> Неопределено Тогда
				
				Если СтруктураШаблона.Свойство("АдресСКДВХранилище")
					И ЗначениеЗаполнено(СтруктураШаблона.АдресСКДВХранилище) Тогда
						АдресСКД = СтруктураШаблона.АдресСКДВХранилище;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФормуРедактированияМакета(Команда)

	Если Объект.Ссылка.Пустая() Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПерейтиКРедактированиюМакетаЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Для редактирования шаблона необходимо записать элемент. Записать?'"),
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
	Иначе
		ПерейтиКРедактированиюМакета();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// АПК:78-выкл. обработчики оповещений
 
&НаКлиенте
Процедура НачатьРедактированиеМакетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		
		XMLОписаниеМакета = ДополнительныеПараметры.XMLОписаниеМакета;
		Поля.Очистить();
		
		Для Каждого ТекПоле Из ДополнительныеПараметры.Поля Цикл
			
			НовоеПоле = Поля.Добавить();
			ЗаполнитьЗначенияСвойств(НовоеПоле, ТекПоле);
			
		КонецЦикла;
		
		СтруктураМакета = СтруктураМакетаШаблона();
		АдресШаблона = СохранитьЗакрытьСервер(СтруктураМакета);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКРедактированиюМакетаЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			ЭтотОбъект.Записать();
			ПерейтиКРедактированиюМакета();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// АПК:78-вкл.

&НаКлиенте
Процедура ПерейтиКРедактированиюМакета()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("АдресШаблона", АдресШаблона);
	ПараметрыОткрытия.Вставить("АдресСКД", АдресСКД);
	ПараметрыОткрытия.Вставить("ТаблицаУсловий", Объект.Условия);
	
	ОткрытьФорму("Справочник.ХранилищеШаблоновРМК.Форма.ФормаРедактированияШаблонаЧекаККТ",
					ПараметрыОткрытия, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СохранитьЗакрытьСервер(СтруктураМакетаШаблона)
	Возврат ПоместитьВоВременноеХранилище(СтруктураМакетаШаблона, Новый УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция СтруктураМакетаШаблона()
	
	СтруктураМакетаШаблона = Новый Структура;
	
	СтруктураМакетаШаблона.Вставить("XMLОписаниеМакета", XMLОписаниеМакета);
	СтруктураМакетаШаблона.Вставить("АдресСКДВХранилище", АдресСКД);
	
	ПоляМакета = Новый Массив;
	
	Для Каждого ТекПоле Из Поля Цикл
		
		НовоеПоле = Новый Структура;
		НовоеПоле.Вставить("Наименование", ТекПоле.Наименование);
		НовоеПоле.Вставить("ТипЗаполнения", ТекПоле.ТипЗаполнения);
		НовоеПоле.Вставить("Значение", ТекПоле.Значение);
		НовоеПоле.Вставить("ЗначениеПоУмолчанию", ТекПоле.ЗначениеПоУмолчанию);
		НовоеПоле.Вставить("Тип", ТекПоле.Тип);
		
		ПоляМакета.Добавить(НовоеПоле);
		
	КонецЦикла;
	
	СтруктураМакетаШаблона.Вставить("ПоляМакета", ПоляМакета);
	
	Возврат СтруктураМакетаШаблона;
	
КонецФункции

#КонецОбласти

