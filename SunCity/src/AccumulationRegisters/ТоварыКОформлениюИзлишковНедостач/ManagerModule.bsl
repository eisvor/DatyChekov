#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура очищает помещение из записей по ресурсу "КОформлениюАктов".
//
Процедура ОчиститьПомещениеТоварыКОформлениюАктов() Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("РегистрНакопления.ТоварыКОформлениюИзлишковНедостач");
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТоварыКОформлениюИзлишковНедостач.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ТаблицаРегистраторов
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач КАК ТоварыКОформлениюИзлишковНедостач
		|ГДЕ
		|	ТоварыКОформлениюИзлишковНедостач.Помещение <> ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
		|	И ТоварыКОформлениюИзлишковНедостач.КОформлениюАктов <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКОформлениюИзлишковНедостач.Период,
		|	ТоварыКОформлениюИзлишковНедостач.Регистратор,
		|	ТоварыКОформлениюИзлишковНедостач.Активность,
		|	ТоварыКОформлениюИзлишковНедостач.ВидДвижения,
		|	ТоварыКОформлениюИзлишковНедостач.ДокументОснование,
		|	ТоварыКОформлениюИзлишковНедостач.Склад,
		|	ТоварыКОформлениюИзлишковНедостач.Помещение,
		|	ТоварыКОформлениюИзлишковНедостач.Номенклатура,
		|	ТоварыКОформлениюИзлишковНедостач.Характеристика,
		|	ТоварыКОформлениюИзлишковНедостач.Серия,
		|	ТоварыКОформлениюИзлишковНедостач.КОформлениюАктов,
		|	ТоварыКОформлениюИзлишковНедостач.КОформлениюОрдеров
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач КАК ТоварыКОформлениюИзлишковНедостач
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРегистраторов КАК ТаблицаРегистраторов
		|		ПО ТоварыКОформлениюИзлишковНедостач.Регистратор = ТаблицаРегистраторов.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварыКОформлениюИзлишковНедостач.НомерСтроки
		|ИТОГИ ПО
		|	ТоварыКОформлениюИзлишковНедостач.Регистратор
		|");
		
		ВыборкаПоРегистраторам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоРегистраторам.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистраторам.Регистратор);
			
			ВыборкаПоЗаписям = ВыборкаПоРегистраторам.Выбрать();
			Пока ВыборкаПоЗаписям.Следующий() Цикл
				
				НоваяЗапись = НаборЗаписей.Добавить();
				
				Если ВыборкаПоЗаписям.КОформлениюАктов <> 0 Тогда
					
					ЗаполнитьЗначенияСвойств(НоваяЗапись, ВыборкаПоЗаписям, , "Помещение, КОформлениюОрдеров");
					
					Если ВыборкаПоЗаписям.КОформлениюОрдеров <> 0 Тогда
						ДополнительнаяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(ДополнительнаяЗапись, ВыборкаПоЗаписям, , "КОформлениюАктов");
					КонецЕсли;
					
				Иначе
					
					ЗаполнитьЗначенияСвойств(НоваяЗапись, ВыборкаПоЗаписям);
					
				КонецЕсли;
				
			КонецЦикла;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
	КонецПопытки;
	
КонецПроцедуры

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад.Магазин)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецЕсли